{"version":3,"file":null,"sources":["../src/util.js","../src/defer.js","../src/event.js","../src/ajax.js","../src/jsonp.js","../src/plugin.loop.js","../src/plugin.soon.js","../src/natty-fetch.js"],"sourcesContent":["/**\n * src/util.js\n *\n * @license MIT License\n * @author jias (https://github.com/jias/natty-fetch)\n */\nexport const hasWindow = 'undefined' !== typeof window;\nexport const doc = hasWindow ? document : null;\nexport const escape = encodeURIComponent;\nexport const NULL = null;\nexport const TRUE = true;\nexport const FALSE = !TRUE;\nexport const UNDEFINED = 'undefined';\nexport const EMPTY = '';\n\nconst toString = Object.prototype.toString;\nconst ARRAY_TYPE = '[object Array]';\nconst OBJECT_TYPE = '[object Object]';\n\n/**\n * 伪造的`promise`对象\n * NOTE 伪造的promise对象要支持链式调用 保证和`new Promise`返回的对象行为一致\n *      dummyPromise.then().catch().finally()\n */\nexport const dummyPromise = {\n    dummy: TRUE\n};\n\ndummyPromise.then = dummyPromise['catch'] = () => {\n    // NOTE 这里用了剪头函数 不能用`return this`\n    return dummyPromise;\n};\n\n/**\n * 判断是否是IE8~11, 不包含Edge\n * @returns {boolean}\n * @note IE11下 window.ActiveXObject的值很怪异, 所以需要追加 'ActiveXObject' in window 来判断\n */\nexport const isIE = hasWindow && (!!window.ActiveXObject || 'ActiveXObject' in window);\n\nexport function noop(v) {\n    return v;\n}\n\n/**\n * 变换两个参数的函数到多个参数\n * @param  {Function} fn 基函数\n * @return {Function} 变换后的函数\n * @demo\n *      function add(x, y) { return x+y; }\n *      add = redo(add);\n *      add(1,2,3) => 6\n */\nexport function redo(fn) {\n    return function () {\n        var args = arguments;\n        var ret = fn(args[0], args[1]);\n        for (var i = 2, l = args.length; i < l; i++) {\n            ret = fn(ret, args[i]);\n        }\n        return ret;\n    }\n};\n\nconst random = Math.random;\nconst floor = Math.floor;\nexport function makeRandom() {\n    return floor(random() * 9e9);\n};\n\nconst absoluteUrlReg = /^(https?:)?\\/\\//;\nexport function isAbsoluteUrl(url) {\n    return !!url.match(absoluteUrlReg);\n};\n\nconst relativeUrlReg = /^[\\.\\/]/;\nexport function isRelativeUrl(url) {\n    return !!url.match(relativeUrlReg);\n};\n\nconst BOOLEAN = 'boolean';\nexport function isBoolean(v) {\n    return typeof v === BOOLEAN;\n};\n\nconst STRING = 'string';\nexport function isString(v) {\n    return typeof v === STRING;\n};\n\nconst FUNCTION = 'function';\nexport function isFunction(v) {\n    return typeof v === FUNCTION;\n};\n\nexport function runAsFn(v) {\n    return isFunction(v) ? v() : v;\n};\n\nconst NUMBER = 'number';\nexport function isNumber(v) {\n    return !isNaN(v) && typeof v === NUMBER;\n};\n\nconst OBJECT = 'object';\nexport function isObject(v) {\n    return typeof v === OBJECT && v !== NULL;\n};\n\nexport function isWindow(v) {\n    return v !== NULL && v === v.window;\n};\n\n// 参考了zepto\nexport function isPlainObject(v) {\n    return v !== NULL && isObject(v) && !isWindow(v) && Object.getPrototypeOf(v) === Object.prototype;\n}\n\nexport function isEmptyObject(v) {\n    let count = 0;\n    for (let i in v) {\n        if (v.hasOwnProperty(i)) {\n            count++;\n        }\n    }\n    return count === 0;\n}\n\nexport function isArray(v) {\n    return toString.call(v) === ARRAY_TYPE;\n}\n\n/**\n * 判断是否跨域\n * @type {Element}\n * @note 需要特别关注IE8~11的行为是不一样的!!!\n */\nlet originA;\nif(doc) {\n    originA = doc.createElement('a');\n    originA.href = location.href;\n}\nexport function isCrossDomain(url) {\n\n    let requestA = doc.createElement('a');\n    requestA.href = url;\n\n    // 如果`url`的值不包含`protocol`和`host`(比如相对路径), 在标准浏览器下, 会自定补全`requestA`对象的`protocal`和`host`属性.\n    // 但在IE8~11下, 不会自动补全. 即`requestA.protocol`和`requestA.host`的值都是空的.\n    // 在IE11的不同小版本下, requestA.protocol的值有的是`:`, 有的是空字符串, 太奇葩啦!\n    if (__FALLBACK__) {\n        if (isIE && (requestA.protocol === ':' || requestA.protocol === '')) {\n            if (requestA.hostname === '') {\n                //alert(0)\n                return false;\n            } else {\n                //alert('1:'+(originA.hostname !== requestA.hostname || originA.port !== requestA.port))\n                return originA.hostname !== requestA.hostname || originA.port !== requestA.port;\n            }\n        }\n    }\n\n    // 标准浏览器\n    return originA.hostname !== requestA.hostname || originA.port !== requestA.port || originA.protocol !== requestA.protocol;\n};\n\n/**\n * 对象扩展\n * @param  {Object} receiver\n * @param  {Object} supplier\n * @return {Object} 扩展后的receiver对象\n * @note 这个extend方法是定制的, 不要拷贝到其他地方用!!!\n * @note 这个extend方法是深拷贝方式的!!!\n */\nfunction _extend(receiver = {}, supplier = {}, deepCopy = FALSE) {\n    for (let key in supplier) {\n        // `supplier`中不是未定义的键 都可以执行扩展\n        if (supplier.hasOwnProperty(key) && supplier[key] !== undefined) {\n            if (deepCopy === TRUE) {\n                if (isArray(supplier[key])) {\n                    receiver[key] = [].concat(supplier[key]);\n                } else if (isPlainObject(supplier[key])) {\n                    receiver[key] = extend({}, supplier[key]);\n                } else {\n                    receiver[key] = supplier[key];\n                }\n            } else {\n                receiver[key] = supplier[key];\n            }\n        }\n    }\n    return receiver;\n};\n\nconst extend = redo(_extend)\nexport {extend}\n\nexport function likeArray(v) {\n    if (!v) {\n        return false;\n    }\n    return typeof v.length === NUMBER;\n};\n\n/**\n *\n * @param v {Array|Object} 遍历目标对象\n * @param fn {Function} 遍历器 会被传入两个参数, 分别是`value`和`key`\n */\nexport function each(v, fn) {\n    let i, l;\n    if (likeArray(v)) {\n        for (i = 0, l = v.length; i < l; i++) {\n            if (fn.call(v[i], v[i], i) === false) return;\n        }\n    } else {\n        for (i in v) {\n            if (fn.call(v[i], v[i], i) === false) return;\n        }\n    }\n};\n\n/**\n * 将对象的`键`排序后 返回一个新对象\n *\n * @param obj {Object} 被操作的对象\n * @returns {Object} 返回的新对象\n * @case 这个函数用于对比两次请求的参数是否一致\n */\nexport function sortPlainObjectKey(obj) {\n    let clone = {};\n    let key;\n    let keyArray = [];\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            keyArray.push(key);\n            if (isPlainObject(obj[key])) {\n                obj[key] = sortPlainObjectKey(obj[key]);\n            }\n        }\n    }\n    keyArray.sort();\n    for (let i=0, l=keyArray.length; i<l; i++) {\n        clone[keyArray[i]] = obj[keyArray[i]];\n    }\n    return clone;\n};\n\nexport function serialize(params, obj, traditional, scope) {\n    let type, array = isArray(obj), hash = isPlainObject(obj);\n    each(obj, function(value, key) {\n        type = toString.call(value);\n        if (scope) {\n            key = traditional ? scope : scope + '[' + (hash || type == OBJECT_TYPE || type == ARRAY_TYPE ? key : '') + ']';\n        }\n\n        // 递归\n        if (!scope && array) {\n            params.add(value.name, value.value);\n        }\n        // recurse into nested objects\n        else if (type == ARRAY_TYPE || (!traditional && type == OBJECT_TYPE)) {\n            serialize(params, value, traditional, key);\n        } else {\n            params.add(key, value);\n        }\n    });\n};\n\n/**\n * 功能和`Zepto.param`一样\n * @param obj {Object}\n * @param traditional {Boolean}\n * @returns {string}\n * $.param({ foo: { one: 1, two: 2 }}) // \"foo[one]=1&foo[two]=2)\"\n * $.param({ ids: [1,2,3] })           // \"ids[]=1&ids[]=2&ids[]=3\"\n * $.param({ ids: [1,2,3] }, true)     // \"ids=1&ids=2&ids=3\"\n * $.param({ foo: 'bar', nested: { will: 'not be ignored' }})    // \"foo=bar&nested[will]=not+be+ignored\"\n * $.param({ foo: 'bar', nested: { will: 'be ignored' }}, true)  // \"foo=bar&nested=[object+Object]\"\n * $.param({ id: function(){ return 1 + 2 } })  // \"id=3\"\n */\nexport function param(obj, traditional) {\n    var params = [];\n    params.add = (key, value) => {\n        if (isFunction(value)) value = value();\n        if (value == NULL) value = '';\n        params.push(escape(key) + '=' + escape(value));\n    };\n    serialize(params, obj, traditional);\n    return params.join('&').replace(/%20/g, '+');\n};\n\nexport function decodeParam(str) {\n    return decodeURIComponent(str.replace(/\\+/g, ' '));\n};\n\n// 给URL追加查询字符串\nexport function appendQueryString(url, obj, urlStamp, traditional) {\n    // 是否添加时间戳\n    if (urlStamp) {\n        obj[isBoolean(urlStamp) ? '_stamp' : urlStamp] = +new Date()\n    }\n    let queryString = param(obj, traditional);\n\n    if (queryString) {\n        return url + (~url.indexOf('?') ? '&' : '?') + queryString;\n    } else {\n        return url;\n    }\n};","/**\n * src/defer.js\n *\n * @license MIT License\n * @author jias (https://github.com/jias/natty-fetch)\n */\nexport default class Defer {\n  constructor(Promise) {\n    const t = this\n    t.promise = new Promise(function (resolve, reject) {\n      t._resolve = resolve\n      t._reject = reject\n    })\n  }\n\n  resolve(value) {\n    this._resolve.call(this.promise, value)\n  }\n\n  reject(reason) {\n    this._reject.call(this.promise, reason)\n  }\n}","/**\n * src/event.js\n *\n * @license MIT License\n * @author jias (https://github.com/jias/natty-fetch)\n */\nconst PREFIX = '_';\nfunction rename (type) { return PREFIX + type; }\n\nexport default {\n    on : function () {\n        var t    = this;\n        var args = arguments;\n        if (typeof args[0] === 'string' && typeof args[1] === 'function') {\n            var type = rename(args[0]);\n            t[type]  = t[type] || [];\n            t[type].push(args[1]);\n        } else if (typeof args[0] === 'object') {\n            var hash = args[0];\n            for (var i in hash) {\n                t.on(i, hash[i]);\n            }\n        }\n    },\n    off : function (type, fn) {\n        var t = this;\n        var type = rename(type);\n        if (!fn) {\n            delete t[type];\n        } else {\n            var fns = t[type];\n            fns.splice(fns.indexOf(fn), 1);\n            if (!t[type].length) delete t[type];\n        }\n    },\n    // @param {array} args\n    fire : function (type, args, context) {\n        var t = this;\n        var fns = t[rename(type)];\n        if (!fns) return 'NO_EVENT';\n        for (var i=0, fn; fn = fns[i]; i++) {\n            fn.apply(context || t, [].concat(args));\n        }\n    },\n    hasEvent : function (type) {\n        return !!this[rename(type)];\n    }\n}","/**\n * src/ajax.js\n *\n * @license MIT License\n * @author jias (https://github.com/jias/natty-fetch)\n */\nimport {\n    extend, appendQueryString, noop, isCrossDomain, isBoolean, param,\n    FALSE, NULL, UNDEFINED\n} from './util';\n\nconst supportCORS = UNDEFINED !== typeof XMLHttpRequest && 'withCredentials' in (new XMLHttpRequest());\nconst GET = 'GET';\nconst POST = 'POST';\nconst SCRIPT = 'script';\nconst XML = 'xml';\nconst JS0N = 'json'; // NOTE 不能使用`JSON`，这里用数字零`0`代替了字母`O`\n\n// minetype的简写映射\n// TODO 考虑是否优化\nconst acceptToRequestHeader = {\n    // IIS returns `application/x-javascript` 但应该不需要支持\n    '*':    '*/' + '*',\n    script: 'text/javascript, application/javascript, application/ecmascript, application/x-ecmascript',\n    json:   'application/json, text/json',\n    xml:    'application/xml, text/xml',\n    html:   'text/html',\n    text:   'text/plain'\n};\n\n// 设置请求头\n// 没有处理的事情：跨域时使用者传入的多余的Header没有屏蔽 没必要\nconst setHeaders = (xhr, options) => {\n\n    let header = {\n        Accept: acceptToRequestHeader[options.accept]\n    };\n    // 如果没有跨域 则打该标识 业界通用做法\n    // TODO 如果是跨域的 只有有限的requestHeader是可以使用的 待补充注释\n    if (!isCrossDomain(options.url)) {\n        header['X-Requested-With'] = 'XMLHttpRequest';\n    }\n\n    extend(header, options.header);\n\n    // 如果是`POST`请求，根据options.postDataFormat设置对应的Content-Type\n    // FORM和JSON都强制使用对应的Content-Type，RAW则不改动Content-Type的值，由调用者指定\n    if (options.method === 'POST') {\n        let pdf = options.postDataFormat;\n        let contentType = (pdf === 'FORM')\n            ? 'application/x-www-form-urlencoded; charset=UTF-8'\n            : (pdf === 'JSON')\n                ? 'application/json; charset=UTF-8'\n                : NULL;\n        if (contentType !== NULL)\n            header['Content-Type'] = contentType;\n    }\n\n    for (let key in header) {\n        xhr.setRequestHeader(key, header[key]);\n    }\n};\n\n// 绑定事件\n// NOTE 还得继续使用readystatechange事件\n//      比较遗憾 到现在了依然不能安全的使用load和error等事件 就连PC端的chrome都有下面的问题\n//      500: 触发load loadend 不触发error\n//      404: 触发load loadend 不触发error\nconst setEvents = (xhr, options) => {\n\n    // 再高级的浏览器都有低级错误! 已经不能在相信了!\n    // MAC OSX Yosemite Safari上的低级错误: 一次`ajax`请求的`loadend`事件完成之后,\n    // 如果执行`xhr.abort()`, 居然还能触发一遍`abort`和`loadend`事件!!!\n    // `_finished`标识一次完整的请求是否结束, 如果已结束, 则不再触发任何事件\n    xhr._finished = FALSE;\n\n    const readyStateChangeFn = () => {\n        if (xhr._finished) {\n            return;\n        }\n        //console.log('xhr.readyState', xhr.readyState, 'xhr.status', xhr.status, xhr);\n        if (xhr.readyState === 4) {\n            // 如果请求被取消(aborted) 则`xhr.status`会是0 所以不会进入`success`回调\n            if ((xhr.status >= 200 && xhr.status < 300) || xhr.status === 304) {\n                //let mime = xhr.getResponseHeader('Content-Type');\n                let data = xhr.responseText;\n                switch (options.accept) {\n                    case JS0N:\n                        try {\n                            data = JSON.parse(data)\n                        } catch (e) {\n                            console.warn('The response can NOT be parsed to JSON object.', data);\n                        }\n                        break;\n                    case SCRIPT:\n                        (1, eval)(data);\n                        break;\n                    case XML:\n                        data = xhr.responseXML;\n                        break;\n                    //case HTML:\n                    //case TEXT:\n                    default:\n                        break;\n                }\n                options.success(data, xhr);\n            } else {\n                // 因为取消时会先触发原生的`onreadystatechange`响应，后触发`onAbort`回调，所以\n                // 如果请求被取消(aborted) 则`xhr.status`会是0 程序走到这里的时候，`xhr._aborted`状态是false，\n                // 需要排除，不应该触发`error`回调\n                !xhr._aborted && options.error(xhr.status, xhr);\n            }\n        }\n    };\n\n\n    // readyState value:\n    //   0: UNSET 未初始化\n    //   1: OPENED\n    //   2: HEADERS_RECEIVED\n    //   3: LOADING\n    //   4: DONE 此时触发load事件\n    xhr.addEventListener(\"readystatechange\", readyStateChangeFn);\n\n    //xhr.addEventListener('error', function () {\n    //    console.log('xhr event: error');\n    //});\n\n    //xhr.addEventListener('load', function () {\n    //    console.log('xhr event: load');\n    //});\n\n    const abortFn = () => {\n        if (xhr._finished) {\n            return;\n        }\n        //options.log && console.info('~abort');\n        options.abort(xhr.status, xhr);\n    };\n\n    xhr.addEventListener('abort', abortFn);\n\n    const loadedFn = () => {\n        if (xhr._finished) {\n            return;\n        }\n        xhr._finished = true;\n        //options.log && console.info('~loadend');\n        options.complete(xhr.status, xhr);\n        delete xhr._aborted;\n    }\n\n    xhr.addEventListener('loadend', loadedFn);\n};\n\nconst defaultOptions = {\n    url: '',\n    mark: {},\n    useMark: true,\n    method: GET,\n    accept: '*',\n    data: null,\n    header: {},\n    withCredentials: NULL, // 根据`url`是否跨域决定默认值. 如果显式配置该值(必须是布尔值), 则个使用配置值\n    urlStamp: true,\n    success: noop,\n    error: noop,\n    complete: noop,\n    abort: noop,\n    log: FALSE,\n    traditional: FALSE,\n    postDataFormat: 'FORM'\n};\n\nexport default function ajax(options) {\n\n    options = extend({}, defaultOptions, options);\n\n    // 是否跨域\n    let isCD = isCrossDomain(options.url);\n\n    let xhr = new XMLHttpRequest();\n\n    setEvents(xhr, options);\n\n    xhr.open(options.method, appendQueryString(\n        options.url,\n        extend({}, options.useMark ? options.mark : {}, options.method === GET ? options.data : {}),\n        options.urlStamp,\n        options.traditional\n    ));\n\n    // NOTE 生产环境的Server端, `Access-Control-Allow-Origin`的值一定不要配置成`*`!!! 而且`Access-Control-Allow-Credentials`应该是true!!!\n    // NOTE 如果Server端的`responseHeader`配置了`Access-Control-Allow-Origin`的值是通配符`*` 则前端`withCredentials`是不能使用true值的\n    // NOTE 如果Client端`withCredentials`使用了true值 则后端`responseHeader`中必须配置`Access-Control-Allow-Credentials`是true\n        xhr.withCredentials = isBoolean(options.withCredentials) ? options.withCredentials : isCD;\n\n    // 设置requestHeader\n    setHeaders(xhr, options);\n\n    // 根据postDataFormat来格式化要发送的数据\n    let pdf = options.postDataFormat;\n    let sendData;\n    if (options.method === GET || options.data === NULL)\n        sendData = NULL;\n    else\n        sendData = (pdf === 'FORM')\n            ? param(options.data, options.traditional)\n            : (pdf === 'JSON')\n                ? JSON.stringify(options.data)\n                : options.data;\n\n    // 文档建议说 send方法如果不发送请求体数据 则null参数在某些浏览器上是必须的\n    xhr.send(sendData);\n\n    let originAbort = xhr.abort;\n\n    // 重写`abort`方法\n    xhr.abort = () => {\n        xhr._aborted = true;\n        // NOTE 直接调用`originAbort()`时 浏览器会报 `Illegal invocation` 错误\n        originAbort.call(xhr);\n    };\n\n    return xhr;\n};\n\n// 移动端不需要fallback\najax.fallback = false;\najax.supportCORS = supportCORS;\n\n/**\n * file: ajax.js\n * ref https://xhr.spec.whatwg.org\n * ref https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n * ref https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest\n * ref https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS\n * ref https://hacks.mozilla.org/2009/07/cross-site-xmlhttprequest-with-cors/\n * ref http://www.html5rocks.com/en/tutorials/cors/\n * @link http://enable-cors.org/index.html\n */\n","/**\n * src/jsonp.js\n *\n * @license MIT License\n * @author jias (https://github.com/jias/natty-fetch)\n */\nimport {appendQueryString, noop, extend, makeRandom, hasWindow, NULL, FALSE} from './util';\nconst win = hasWindow ? window : NULL;\nconst doc = hasWindow ? document : NULL;\nconst SCRIPT = 'script';\n\nconst removeScript = (script) => {\n    script.onerror = NULL;\n    script.parentNode.removeChild(script);\n    script = NULL;\n};\nlet head = NULL;\nconst insertScript = (url, options) => {\n    let script = doc.createElement(SCRIPT);\n    script.src = url;\n    script.async = true;\n\n    script.onerror = (e) => {\n        win[options.callbackName] = NULL;\n        options.error(e);\n        options.complete();\n    };\n\n    head = head || doc.getElementsByTagName('head')[0];\n    head.insertBefore(script, head.firstChild);\n    return script;\n}\n\nconst defaultOptions = {\n    url: '',\n    mark: {},\n    useMark: true,\n    data: {},\n    urlStamp: true,\n    success: noop,\n    error: noop,\n    complete: noop,\n    log: false,\n    flag: 'callback',\n    callbackName: 'jsonp{id}',\n    traditional: FALSE\n};\n\nexport default function jsonp(options) {\n\n    options = extend({}, defaultOptions, options);\n\n    let callbackName = options.callbackName = options.callbackName.replace(/\\{id\\}/, makeRandom());\n\n    let originComplete = options.complete;\n\n    let script;\n\n    // 二次包装的`complete`回调\n    options.complete = () => {\n        // 删除脚本\n        removeScript(script);\n        originComplete();\n    }\n\n    // 成功回调\n    win[callbackName] = (data) => {\n        // JSONP函数需要立即删除 用于`IE8`判断是否触发`onerror`\n        win[callbackName] = NULL;\n        options.success(data);\n        options.complete();\n    };\n\n    // 生成`url`\n    let url = appendQueryString(\n        options.url,\n        extend({[options.flag]: callbackName}, options.useMark ? options.mark : {}, options.data),\n        options.urlStamp,\n        options.traditional\n    );\n\n    // 插入脚本\n    script = insertScript(url, options);\n    \n    return {\n        abort() {\n            // 覆盖成功回调为无数据处理版本\n            win[callbackName] = () => {\n                win[callbackName] = NULL;\n            };\n            removeScript(script);\n        }\n    };\n}\n","\n/**\n * src/plugin.loop.js\n * 创建轮询支持\n *\n * @license MIT License\n * @author jias (https://github.com/jias/natty-fetch)\n */\nimport {isNumber, noop, TRUE, FALSE, NULL} from './util'\n\n/**\n * 创建轮询支持\n * @param api {Function} 需要轮询的函数\n */\nexport default function(apiInstance) {\n    let api = apiInstance.api;\n    api.loop = (options, resolveFn = noop, rejectFn = noop) => {\n        if (!options.duration || !isNumber(options.duration)) {\n            throw new Error('Illegal `duration` value for `startLoop` method.')\n        }\n\n        let loopTimer = NULL\n\n        let stop = () => {\n            clearTimeout(loopTimer)\n            loopTimer = NULL\n            stop.looping = FALSE\n        }\n\n        let sleepAndRequest = () => {\n            stop.looping = TRUE\n            loopTimer = setTimeout(() => {\n                api(options.data).then(resolveFn, rejectFn)\n                sleepAndRequest()\n            }, options.duration)\n        }\n\n        // NOTE 轮询过程中是不响应服务器端错误的 所以第二个参数是`noop`\n        api(options.data).then(resolveFn, rejectFn)\n        sleepAndRequest()\n        \n        return stop\n    }\n}\n","/**\n * src/plugin.soon.js\n *\n * @license MIT License\n * @author jias (https://github.com/jias/natty-fetch)\n */\nimport {noop, isEmptyObject, sortPlainObjectKey, FALSE, TRUE} from './util';\n\nexport default function(apiInstance) {\n    let t = this;\n    let api = apiInstance.api;\n    let {config} = api;\n    api.soon = function(data, successFn = noop, errorFn = noop) {\n\n        // 是否忽略自身的并发请求\n        // NOTE 这个地方和内置的api方法不一致\n        if (config.ignoreSelfConcurrent && config.pending) {\n            return;\n        }\n\n        if (config.overrideSelfConcurrent && config._lastRequester) {\n            config._lastRequester.abort();\n            delete config._lastRequester;\n        }\n\n        // 一次请求的私有相关数据\n        let vars = t.makeVars(data);\n\n        let remoteRequest = function () {\n            t.remoteRequest(vars, config).then(function (content) {\n                successFn({\n                    fromStorage: FALSE,\n                    content\n                });\n            })['catch'](function (e) {\n                errorFn(e);\n            });\n        }\n\n        if (api.storageUseable) {\n\n            // 只有GET和JSONP才会有storage生效\n            vars.queryString = isEmptyObject(vars.data) ? 'no-query-string' : JSON.stringify(sortPlainObjectKey(vars.data));\n\n            api.storage.has(vars.queryString).then(function (result) {\n\n                // console.warn('has cached: ', hasValue);\n                if (result.has) {\n                    successFn({\n                        fromStorage: TRUE,\n                        content: result.value\n                    });\n                }\n\n                // 在`storage`可用的情况下, 远程请求返回的数据会同步到`storage`\n                remoteRequest();\n            });\n        } else {\n            remoteRequest();\n        }\n    };\n};","/**\n * src/natty-fetch.js\n *\n * @license MIT License\n * @author jias (https://github.com/jias/natty-fetch)\n */\n\nimport nattyStorage from 'natty-storage';\n\nif (nattyStorage === undefined) {\n    console.warn('Please install the `natty-storage` script which is required by `natty-fetch`, go on with' +\n        ' https://www.npmjs.com/package/natty-storage');\n}\n\nimport * as util from './util';\nconst {\n    extend, runAsFn, isAbsoluteUrl,\n    isRelativeUrl, noop, isBoolean,\n    isArray, isFunction,\n    sortPlainObjectKey, isEmptyObject,\n    isPlainObject, dummyPromise,\n    isString, NULL, TRUE, FALSE, EMPTY, hasWindow\n} = util;\n\nimport Defer from './defer';\nimport event from './event';\n\nimport ajax from './__AJAX__';\nimport jsonp from './__JSONP__';\n\n// 内置插件\nimport pluginLoop from './plugin.loop';\nimport pluginSoon from './plugin.soon';\n\n// 全局默认配置\nconst defaultGlobalConfig = {\n\n    // 默认参数\n    data: {},\n\n    // 请求完成钩子函数\n    didFetch: noop,\n\n    // 预处理回调\n    fit: noop,\n\n    // 自定义header, 只针对非跨域的ajax有效, 跨域时将忽略自定义header\n    header: {},\n\n    // 是否忽律接口自身的并发请求\n    ignoreSelfConcurrent: FALSE,\n\n    // 有两种格式配置`jsonp`的值\n    // {Boolean}\n    // {Array} eg: [TRUE, 'cb', 'j{id}']\n    jsonp: FALSE,\n\n    // 是否开启log信息\n    log: FALSE,\n\n    // 非GET方式对JSONP无效\n    method: 'GET',\n\n    // 是否开启mock模式\n    mock: FALSE,\n\n    mockUrl: EMPTY,\n\n    // 全局`mockUrl`前缀\n    mockUrlPrefix: EMPTY,\n\n    // 全局`mockUrl`后缀\n    mockUrlSuffix: EMPTY,\n\n    // 成功回调\n    process: noop,\n\n    // 私有Promise对象, 如果不想用浏览器原生的Promise对象的话\n    Promise: hasWindow ? window.Promise : NULL,\n\n    // 默认不执行重试\n    retry: 0,\n\n    // 使用已有的request方法\n    customRequest: NULL,\n\n    // 0表示不启动超时处理\n    timeout: 0,\n\n    // http://zeptojs.com/#$.param\n    traditional: FALSE,\n\n    url: EMPTY,\n\n    // 全局`url`前缀\n    urlPrefix: EMPTY,\n\n    // 是否在`url`上添加时间戳, 用于避免浏览器的304缓存\n    urlStamp: TRUE,\n\n    // 全局`url`后缀\n    urlSuffix: EMPTY,\n\n    // TODO 文档中没有暴露\n    withCredentials: NULL,\n\n    // 请求之前调用的钩子函数\n    willFetch: noop,\n\n    // 扩展: storage\n    storage: false,\n\n    // 插件\n    // 目前只支持两种插件\n    // plugins: [\n    //     nattyFetch.plugin.loop\n    //     nattyFetch.plugin.soon\n    // ]\n    plugins: false,\n\n    // POST的data格式，有以下三种，值严格区分大小写：\n    // 1. FORM\n    // 2. JSON\n    // 3. RAW\n    // 4. (其他任何值都将被视为RAW)\n    // 默认为FORM，跟Natty-Fetch原始逻辑兼容\n    postDataFormat: 'FORM'\n};\n\nlet runtimeGlobalConfig = extend({}, defaultGlobalConfig);\n\nclass API {\n    constructor(path, options, contextConfig, contextId) {\n        let t = this;\n        t.contextConfig = contextConfig;\n        t._path = path;\n\n        let config = t.config = t.processAPIOptions(options);\n\n        /**\n         * `api`的实现\n         * @param data {Object|Function}\n         * @returns {Object} Promise Object\n         */\n        t.api = function (data) {\n            data = data || {};\n            // 是否忽略自身的并发请求\n            if (config.ignoreSelfConcurrent && t.api.pending) {\n                return dummyPromise;\n            }\n\n            if (config.overrideSelfConcurrent && t.api._requester) {\n                t.api.abort();\n            }\n\n            let vars = t.makeVars(data);\n\n            if (config.retry === 0) {\n                return t.request(vars, config);\n            } else {\n                return t.tryRequest(vars, config);\n            }\n        };\n\n        t.api.contextId = contextId;\n        t.api._path = path;\n\n        // 标记是否正在等待请求返回\n        t.api.pending = FALSE;\n        t.api._requester = NULL;\n\n        // 取消响应\n        t.api.abort = function () {\n            if (t.api.pending && t.api._requester) {\n                t.api._requester.abort();\n            }\n        };\n\n        t.api.config = config;\n\n        t.initStorage();\n\n        // 启动插件\n        let plugins = isArray(config.plugins) ? config.plugins : [];\n        for (let i = 0, l = plugins.length; i<l; i++) {\n            isFunction(plugins[i]) && plugins[i].call(t, t);\n        }\n    }\n\n    makeVars(data) {\n        let t = this;\n        let config = t.config;\n\n        // 一次请求的私有相关数据\n        let vars = {\n            mark: {\n                _api: t._path\n            }\n        };\n\n        if (config.mock) {\n            vars.mark._mock = TRUE;\n        }\n\n        // if (config.urlStamp) {\n        //     vars.mark._stamp = +new Date();\n        // }\n\n        // `data`必须在请求发生时实时创建\n        // 如果postDataFormat是非FORM/JSON值时，不对data进行处理，因为这种情况下调用者意图直接向服务端传递RAW数据，\n        // 这时传入的data极有可能是字符串\n        // 当config.data是{}的情况下，如果调用者传入的data是字符串，经过extend()处理以后就会变成字符串数组\n        // 字符串数组被后续传递给xhr.send()时会被默认调用toString()，结果就变成'[object object]'这种不合法数据\n        if (config.postDataFormat === 'FORM' || config.postDataFormat === 'JSON')\n            data = extend({}, runAsFn(config.data), runAsFn(data));\n\n        // 将数据参数存在私有标记中, 方便API的`process`方法内部使用\n        vars.data = data;\n\n        return vars;\n    }\n\n    /**\n     * 处理API的配置\n     * @param options {Object}\n     */\n    processAPIOptions(options) {\n\n        let t = this;\n\n        // 插件是不能覆盖的, 应该追加\n        let plugins = [].concat(t.contextConfig.plugins || [], options.plugins || []);\n\n        let config = extend({}, t.contextConfig, options, {\n            plugins\n        });\n\n        if (config.mock) {\n            config.mockUrl = t.getFullUrl(config);\n        }\n\n        config.url = t.getFullUrl(config);\n\n        // 按照[boolean, callbackKeyWord, callbackFunctionName]格式处理\n        if (isArray(options.jsonp)) {\n            config.jsonp = isBoolean(options.jsonp[0]) ? options.jsonp[0] : FALSE;\n            // 这个参数只用于jsonp\n            if (config.jsonp) {\n                config.jsonpFlag = options.jsonp[1];\n                config.jsonpCallbackName = options.jsonp[2];\n            }\n        }\n\n        // 配置自动增强 如果`url`的值有`.jsonp`结尾 则认为是`jsonp`请求\n        // NOTE jsonp是描述正式接口的 不影响mock接口!!!\n        if (!config.mock && !!config.url.match(/\\.jsonp(\\?.*)?$/)) {\n            config.jsonp = TRUE;\n        }\n\n        return config;\n    }\n\n    initStorage() {\n        let t = this;\n        let config = t.config;\n\n        // 开启`storage`的前提条件\n        let storagePrecondition = config.method === 'GET' || config.jsonp;\n\n        // 不满足`storage`使用条件的情况下, 开启`storage`将抛出错误\n        if (!storagePrecondition && config.storage === TRUE) {\n            throw new Error('A `' + config.method + '` request CAN NOT use `storage` which is only for `GET/jsonp`' +\n                ' request! Please check the options for `' + t._path + '`');\n        }\n\n        // 简易开启缓存的写法\n        if (config.storage === TRUE) {\n            config.storage = {\n                type: 'variable'\n            };\n        }\n\n        // 决定什么情况下缓存可以开启\n        t.api.storageUseable = isPlainObject(config.storage)\n            && (config.method === 'GET' || config.jsonp)\n            && nattyStorage.support[config.storage.type];\n        // 创建缓存实例\n        if (t.api.storageUseable) {\n            // 当使用`localStorage`时, 强制指定`key`值。如果没指定, 抛错!\n            // 当使用`variable`或`sessionStorage`时, 如果没指定`key`, 则自动生成内部`key`\n            // !!!为什么在使用`localStorage`时必须指定`key`值???\n            // !!!因为当key发生变化时, `localStorage`很容易产生死数据, 必须强制开发者有意识的去维护`key`值\n            if (config.storage.type === 'localStorage') {\n                if (!config.storage.hasOwnProperty('key') || !config.storage.key) {\n                    throw new Error('`key` is required when `storage.type` is `localStorage`.');\n                }\n            } else {\n                config.storage.key = config.storage.key || [t.api.contextId, t._path].join('_');\n            }\n\n            // `key`和`tag`的选择原则:\n            // `key`只选用相对稳定的值, 减少因为`key`的改变而增加的残留缓存\n            // 经常变化的值用于`tag`, 如一个接口在开发过程中可能使用方式不一样, 会在`jsonp`和`get`之间切换。\n            t.api.storage = nattyStorage(extend({}, config.storage, {\n                async: TRUE,\n                tag: [\n                    config.storage.tag,\n                    config.jsonp ? 'jsonp' : config.method,\n                    config.url\n                ].join('_') // 使用者的`tag`和内部的`tag`, 要同时生效\n            }));\n        }\n    }\n\n    /**\n     * 请求数据(从storage或者从网络)\n     * @param vars {Object} 发送的数据\n     * @param config {Object} 已经处理完善的请求配置\n     * @returns {Object} defer对象\n     */\n    request(vars, config) {\n        let t = this;\n\n        if (t.api.storageUseable) {\n\n            // 只有GET和JSONP才会有storage生效\n            vars.queryString = isEmptyObject(vars.data) ? 'no-query-string' : JSON.stringify(sortPlainObjectKey(vars.data));\n\n            return t.api.storage.has(vars.queryString).then(function (data) {\n                // alert(JSON.stringify(data, null, 4) + JSON.stringify(sessionStorage, null, 4));\n                // console.warn('has cached: ', hasValue);\n                if (data.has) {\n                    return data.value;\n                } else {\n                    return t.remoteRequest(vars, config);\n                }\n            });\n        } else {\n            return t.remoteRequest(vars, config);\n        }\n    }\n\n    /**\n     * 获取正式接口的完整`url`\n     * @param config {Object}\n     */\n    getFullUrl(config) {\n        let url = config.mock ? config.mockUrl : config.url;\n        if (!url) return EMPTY;\n        let prefixKey = config.mock ? 'mockUrlPrefix' : 'urlPrefix';\n        let suffixKey = config.mock ? 'mockUrlSuffix' : 'urlSuffix';\n        let prefix = config[prefixKey] && !isAbsoluteUrl(url) && !isRelativeUrl(url) ? config[prefixKey] : EMPTY;\n        let suffix = config[suffixKey] ? config[suffixKey]: EMPTY;\n        return prefix + url + suffix;\n    }\n\n    /**\n     * 发起网络请求\n     * @param vars\n     * @param config\n     * @returns {Promise}\n     */\n    remoteRequest(vars, config) {\n        let t = this;\n\n        // 调用 willFetch 钩子\n        config.willFetch(vars, config, 'remote');\n\n        // 等待状态在此处开启 在相应的`requester`的`complete`回调中关闭\n        t.api.pending = TRUE;\n\n        let defer = new Defer(config.Promise);\n\n        // 创建请求实例requester\n        if (config.customRequest) {\n            // 使用已有的request方法\n            t.api._requester = config.customRequest(vars, config, defer);\n        } else if (config.jsonp) {\n            t.api._requester = t.sendJSONP(vars, config, defer);\n        } else {\n            t.api._requester = t.sendAjax(vars, config, defer);\n        }\n\n        // 超时处理\n        if (0 !== config.timeout) {\n            setTimeout(() => {\n                if (t.api.pending && t.api._requester) {\n                    // 取消请求\n                    t.api.abort();\n\n                    let error = {\n                        timeout: TRUE,\n                        message: 'Timeout By ' + config.timeout + 'ms.'\n                    };\n\n                    defer.reject(error);\n                    event.fire('g.reject', [error, config]);\n                    event.fire(t.api.contextId + '.reject', [error, config]);\n                }\n            }, config.timeout);\n        }\n\n        return defer.promise;\n    }\n\n    /**\n     * 重试功能的实现\n     * @param vars {Object} 发送的数据\n     * @param config\n     * @returns {Object} defer对象\n     */\n    tryRequest(vars, config) {\n        let t = this;\n\n        return new config.Promise(function (resolve, reject) {\n            let retryTime = 0;\n            let request = () => {\n                // 更新的重试次数\n                vars.mark._retryTime = retryTime;\n                t.request(vars, config).then((content) => {\n                    resolve(content);\n                    event.fire('g.resolve', [content, config], config);\n                    event.fire(t.api.contextId + '.resolve', [content, config], config);\n                }, (error) => {\n                    if (retryTime === config.retry) {\n                        reject(error);\n                    } else {\n                        retryTime++;\n                        request();\n                    }\n                });\n            };\n\n            request();\n        });\n    }\n\n    /**\n     * 处理结构化的响应数据\n     * @param config\n     * @param response\n     * @param defer\n     */\n    processResponse(vars, config, defer, response) {\n        let t = this;\n\n        // 调用 didFetch 钩子函数\n        config.didFetch(vars, config);\n\n        // 非标准格式数据的预处理\n        response = config.fit(response, vars);\n\n\n\n        if (response.success) {\n            // 数据处理\n            let content = config.process(response.content, vars);\n\n            let resolveDefer = function () {\n                defer.resolve(content);\n                event.fire('g.resolve', [content, config], config);\n                event.fire(t.api.contextId + '.resolve', [content, config], config);\n            }\n\n            if (t.api.storageUseable) {\n                t.api.storage.set(vars.queryString, content).then(function () {\n                    resolveDefer();\n                })['catch'](function () {\n                    resolveDefer();\n                });\n            } else {\n                resolveDefer();\n            }\n        } else {\n            let error = extend({\n                message: '`success` is false, ' + t._path\n            }, response.error);\n            // NOTE response是只读的对象!!!\n            defer.reject(error);\n            event.fire('g.reject', [error, config]);\n            event.fire(t.api.contextId + '.reject', [error, config]);\n        }\n    }\n\n    /**\n     * 发起Ajax请求\n     * @param config {Object} 请求配置\n     * @param defer {Object} defer对象\n     * @param retryTime {undefined|Number} 如果没有重试 将是undefined值 见`createAPI`方法\n     *                                     如果有重试 将是重试的当前次数 见`tryRequest`方法\n     * @returns {Object} xhr对象实例\n     */\n    sendAjax(vars, config, defer) {\n        const t = this;\n        const url = config.mock ? config.mockUrl : config.url;\n\n        return ajax({\n            traditional: config.traditional,\n            urlStamp: config.urlStamp,\n            mark: vars.mark,\n            useMark: config.mark,\n            log: config.log,\n            url: url,\n            method: config.method,\n            data: vars.data,\n            header: config.header,\n            withCredentials: config.withCredentials,\n            // 强制约定json\n            accept: 'json',\n            success(response/*, xhr*/) {\n                t.processResponse(vars, config, defer, response);\n            },\n            error(status) {\n                // 如果跨域使用了自定义的header，且服务端没有配置允许对应的header，此处status为0，目前无法处理。\n                const error = {\n                    status,\n                    message: `Error(status ${status}) in request for ${vars.mark._api}(${url})`\n                };\n\n                defer.reject(error);\n                event.fire('g.reject', [error, config]);\n                event.fire(t.api.contextId + '.reject', [error, config]);\n            },\n            complete(/*status, xhr*/) {\n                if (vars.retryTime === undefined || vars.retryTime === config.retry) {\n                    //C.log('ajax complete');\n\n                    t.api.pending = FALSE;\n                    t.api._requester = NULL;\n                }\n                //console.log('__complete: pending:', config.pending, 'retryTime:', retryTime, Math.random());\n            },\n            postDataFormat: config.postDataFormat\n        });\n    }\n\n    /**\n     * 发起jsonp请求\n     * @param vars {Object} 一次请求相关的私有数据\n     * @param config {Object} 请求配置\n     * @param defer {Object} defer对象\n     * @param retryTime {undefined|Number} 如果没有重试 将是undefined值 见`createAPI`方法\n     *                                     如果有重试 将是重试的当前次数 见`tryRequest`方法\n     * @returns {Object} 带有abort方法的对象\n     */\n    sendJSONP(vars, config, defer) {\n        const t = this;\n        const url = config.mock ? config.mockUrl : config.url;\n        return jsonp({\n            traditional: config.traditional,\n            log: config.log,\n            mark: vars.mark,\n            useMark: config.mark,\n            url: url,\n            data: vars.data,\n            urlStamp: config.urlStamp,\n            flag: config.jsonpFlag,\n            callbackName: config.jsonpCallbackName,\n            success(response) {\n                t.processResponse(vars, config, defer, response);\n            },\n            error() {\n                let error = {\n                    message: `Not accessable JSONP in request for ${vars.mark._api}(${url})`\n                };\n\n                defer.reject(error);\n                event.fire('g.reject', [error, config]);\n                event.fire(t.api.contextId + '.reject', [error, config]);\n            },\n            complete() {\n                if (vars.retryTime === undefined || vars.retryTime === config.retry) {\n                    t.api.pending = FALSE;\n                    t.api._requester = NULL;\n                }\n            }\n        });\n    }\n}\n\n/**\n * 关键词\n *     语意化的\n *     优雅的\n *     功能增强的\n *     底层隔离的\n */\nconst context = (function () {\n    let count = 0;\n\n    return function(contextId, options) {\n\n        if (isString(contextId)) {\n            options = options || {};\n        } else {\n            options = contextId || {}\n            contextId = 'c' + count++;\n        }\n\n        let storage = nattyStorage({\n            type: 'variable',\n            key: contextId\n        });\n\n        let ctx = {};\n\n        ctx.api = storage.get();\n\n        ctx._contextId = contextId;\n\n        // 插件是不能覆盖的, 应该追加\n        let plugins = [].concat(runtimeGlobalConfig.plugins || [], options.plugins || []);\n\n        ctx._config = extend({}, runtimeGlobalConfig, options, {\n            plugins\n        });\n\n        /**\n         * 创建api\n         * @param namespace {String} optional\n         * @param APIs {Object} 该`namespace`下的`api`配置\n         */\n        ctx.create = function(namespace, APIs) {\n            let hasNamespace = arguments.length === 2 && isString(namespace);\n\n            if (!hasNamespace) {\n                APIs = namespace;\n            }\n\n            for (let path in APIs) {\n                storage.set(\n                    hasNamespace ? namespace + '.' + path : path,\n                    new API(\n                        hasNamespace ? namespace + '.' + path : path,\n                        runAsFn(APIs[path]),\n                        ctx._config,\n                        contextId\n                    ).api\n                );\n            }\n\n            ctx.api = storage.get();\n        }\n\n        // 绑定上下文事件\n        ctx.on = function(name, fn) {\n            if (!isFunction(fn)) return;\n            event.on(ctx._contextId + '.' + name, fn);\n            return ctx;\n        }\n\n        return ctx;\n    }\n})();\n\n/**\n * 简易接口\n * @param options\n */\nlet nattyFetch = {};\n\nnattyFetch.create = function (options) {\n    return new API('nattyFetch', runAsFn(options), defaultGlobalConfig, 'global').api;\n};\n\nextend(nattyFetch, {\n    onlyForModern: !__FALLBACK__,\n    version: '__VERSION__',\n    _util: util,\n    _event: event,\n    context,\n    ajax,\n    jsonp,\n\n    /**\n     * 执行全局配置\n     * @param options\n     */\n    setGlobal(options) {\n        runtimeGlobalConfig = extend({}, defaultGlobalConfig, options);\n        return this;\n    },\n\n    /**\n     * 获取全局配置\n     * @param property {String} optional\n     * @returns {*}\n     */\n    getGlobal(property) {\n        return property ? runtimeGlobalConfig[property] : runtimeGlobalConfig;\n    },\n\n    // 绑定全局事件\n    on(name, fn) {\n        if (!isFunction(fn)) return;\n        event.on('g.' + name, fn);\n        return this;\n    },\n\n    /**\n     * 插件名称空间\n     */\n    plugin: {\n        loop: pluginLoop,\n        soon: pluginSoon\n    }\n});\n\n// 内部直接将运行时的全局配置初始化到默认值\nnattyFetch.setGlobal(defaultGlobalConfig);\n\nexport default nattyFetch;"],"names":["const","hasWindow","NULL","TRUE","FALSE","EMPTY","dummyPromise","noop","isAbsoluteUrl","isRelativeUrl","isBoolean","isString","isFunction","runAsFn","isPlainObject","isEmptyObject","let","isArray","extend","sortPlainObjectKey","doc","SCRIPT","defaultOptions"],"mappings":"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"}