'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _nattyFetch = require('natty-fetch');

var _nattyFetch2 = _interopRequireDefault(_nattyFetch);

var _objectAssign = require('object-assign');

var _objectAssign2 = _interopRequireDefault(_objectAssign);

var _vuFunctionParser = require('@ali/vu-function-parser');

var _vuFunctionParser2 = _interopRequireDefault(_vuFunctionParser);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function processDataSourceParams(dataSourceProps, componentProps) {
  var params = {};

  dataSourceProps.forEach(function (item) {
    var name = item.name;
    var value = item.value;
    var isVariable = item.isVariable;

    if (isVariable) {
      value = componentProps[value];
    }
    params[name] = value;
  });

  return params;
}

function parser(dataSource, nattyOptions) {
  var isData = dataSource.type === "DATA";
  var isRpc = dataSource.type === "URL";
  var isJsonp = dataSource.method === 'JSONP';

  if (isData) {
    //静态数据源，直接返回data
    return function () {
      return Promise.resolve(dataSource.data);
    };
  } else {
    //动态数据源，构造rpcOption请求数据
    return function (props) {
      var rpcOption = {
        url: dataSource.url,
        jsonp: isJsonp,
        method: isJsonp ? "GET" : dataSource.method,
        data: processDataSourceParams(dataSource.params || [], props || {}),
        withCredentials: false,
        willFetch: dataSource.willFetch ? (0, _vuFunctionParser2.default)(dataSource.willFetch) : function () {},
        process: dataSource.process ? (0, _vuFunctionParser2.default)(dataSource.process) : undefined
      };

      rpcOption = (0, _objectAssign2.default)({}, rpcOption, nattyOptions || {});

      if (!rpcOption.url) {
        return Promise.reject("数据源url缺失，请检查配置是否正确");
      }

      var context = _nattyFetch2.default.context();
      context.create({
        'dataSource': rpcOption
      });

      return context.api.dataSource();
    };
  }
}

exports.default = parser;
module.exports = exports['default'];