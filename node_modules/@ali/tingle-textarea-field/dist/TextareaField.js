'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * TextareaField Component for tingle
 * @author zhangshun@alipay.com
 *
 * Copyright 2014-2016, Tingle Team.
 * All rights reserved.
 */
var React = require('react');
var classnames = require('classnames');
var Context = require('@ali/tingle-context');
var calculateHeight = require('./calculateHeight');
var Field = require('@ali/tingle-field');

var prefixClass = Context.prefixClass;

var TextareaField = function (_React$Component) {
    _inherits(TextareaField, _React$Component);

    function TextareaField(props) {
        _classCallCheck(this, TextareaField);

        var _this = _possibleConstructorReturn(this, (TextareaField.__proto__ || Object.getPrototypeOf(TextareaField)).call(this, props));

        _this.state = {
            height: null,
            rows: 1
        };
        return _this;
    }

    _createClass(TextareaField, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this._resize();
        }
    }, {
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            if ('value' in nextProps) {
                this._resize();
            }
        }
    }, {
        key: '_resize',
        value: function _resize() {
            this.setState(calculateHeight(ReactDOM.findDOMNode(this.refs.textarea), this.props.minRows || this.props.rows, this.props.maxRows));
        }
    }, {
        key: 'handleChange',
        value: function handleChange(e) {
            this._resize();
            this.props.onChange(e.target.value, e);
        }
    }, {
        key: 'handleFocus',
        value: function handleFocus(e) {
            this.props.onFocus(e);
        }
    }, {
        key: 'handleBlur',
        value: function handleBlur(e) {
            this.props.onBlur(e);
        }
    }, {
        key: 'render',
        value: function render() {
            var _classnames;

            var t = this;
            var _t$props = t.props,
                placeholder = _t$props.placeholder,
                label = _t$props.label,
                readOnly = _t$props.readOnly,
                lineHeight = _t$props.lineHeight;

            var style = {
                //height: t.state.height,
                lineHeight: lineHeight
            };

            return React.createElement(
                Field,
                _extends({}, t.props, { multiLine: true, className: classnames((_classnames = {}, _defineProperty(_classnames, prefixClass('textarea-field'), true), _defineProperty(_classnames, 'readonly', readOnly), _defineProperty(_classnames, t.props.className, !!t.props.className), _classnames)) }),
                React.createElement('textarea', { ref: 'textarea',
                    className: prefixClass('textarea-field-content'),
                    style: style,
                    placeholder: placeholder,
                    value: t.props.value,
                    readOnly: readOnly,
                    rows: t.state.rows,
                    onChange: t.handleChange.bind(t),
                    onFocus: t.handleFocus.bind(t),
                    onBlur: t.handleBlur.bind(t) })
            );
        }
    }]);

    return TextareaField;
}(React.Component);

;

TextareaField.defaultProps = {
    placeholder: '',
    onChange: Context.noop,
    onFocus: Context.noop,
    onBlur: Context.noop,
    readOnly: false,
    minRows: 1,
    maxRows: 10,
    lineHeight: '1.3',
    value: ''
};

// http://facebook.github.io/react/docs/reusable-components.html
TextareaField.propTypes = {
    value: React.PropTypes.string,
    placeholder: React.PropTypes.string,
    onChange: React.PropTypes.func,
    onFocus: React.PropTypes.func,
    onBlur: React.PropTypes.func,
    readOnly: React.PropTypes.bool,
    minRows: React.PropTypes.number,
    maxRows: React.PropTypes.number,
    lineHeight: React.PropTypes.string,
    className: React.PropTypes.string
};

TextareaField.displayName = 'TextareaField';

module.exports = TextareaField;
//# sourceMappingURL=data:application/json;base64,
