/**
 * RadioField Component for tingle
 * @author shanchao
 *
 * Copyright 2014-2016, Tingle Team.
 * All rights reserved.
 */
import React from 'react';
import classnames from 'classnames';
import Icon from '@ali/tingle-icon';
import Context from '@ali/tingle-context';
import Group from '@ali/tingle-group';


const prefixClass = Context.prefixClass;


class RadioField extends React.Component {

  constructor(props) {
    super(props);
    this.state = {};
  }
  clickAction(value, item, index, data) {
    const t = this;
    const { data: radioArray, onChange } = t.props;

    const disable = item.disable;
    if (disable) {
      return;
    }
    radioArray.map(function (radioItem) {
      radioItem.checked = false;
      return radioItem;
    });
    item.checked = !item.checked;
    if (onChange) {
      onChange(value, index, data);
    }
    t.forceUpdate();
  }

  render() {
    const t = this;
    const { rootClassName,
      className, data: radioArray,
      groupListArgument, groupListFlag, label,
    } = t.props;

    const radioArrayComponent = radioArray.map(function (item, index, data) {
      const { checked, disable, value } = item;
      const textClassName = classnames(
        prefixClass('radio-field-text FBAC FBH FB1'), { disable }
      );
      const iconClassName = classnames(
        prefixClass('radio-field-icon'), { noChecked: !checked }, { checked }, { disable }
      );
      return (
        <div onClick={t.clickAction.bind(t, value, item, index, data)}
          key={index} className={prefixClass('radio-field-row FBAC FBH')}
        >
            <div ref={`text${index}`} className={textClassName}>{item.text}</div>
            <div className={prefixClass('radio-field-icon-div FBAC FBH')}>
                <Icon width={20} height={20} name={"check"} className={iconClassName} />
            </div>
        </div>
      );
    });

    let finalJSX = (
        <Group className={classnames(prefixClass('checkbox-field'), {
          [rootClassName]: !!rootClassName,
        }, {
          [className]: !!className,
        })}>
          {
            label === ''
            ? null
            : (
              <Group.Head className={classnames(prefixClass('checkbox-label'))}>
              {label}
              </Group.Head>
            )
          }
          <Group.List {...groupListArgument}>
            {radioArrayComponent}
          </Group.List>
        </Group>
    );

    if (!groupListFlag) {
      finalJSX = (
          <div ref="root" className={classnames(prefixClass('checkbox-field'), {
            [rootClassName]: !!rootClassName,
          }, {
            [className]: !!className,
          })}>
              {radioArrayComponent}
          </div>
      );
    }

    return finalJSX;
  }
}

RadioField.defaultProps = {
  data: [],
  onChange() { },
  groupListFlag: true,
  groupListArgument: {
    lineIndent: 0,
    itemIndent: 15,
  },
  label: '',
};

// http://facebook.github.io/react/docs/reusable-components.html
RadioField.propTypes = {
  className: React.PropTypes.string,
  data: React.PropTypes.array,
  onChange: React.PropTypes.func,
  groupListFlag: React.PropTypes.bool,
  groupListArgument: React.PropTypes.object,
};

RadioField.displayName = 'RadioField';

module.exports = RadioField;
