/**
 * SearchHistory Component for tingle
 * @author zhouquan.yezq
 *
 * Copyright 2014-2016, Tingle Team.
 * All rights reserved.
 */
const classnames = require('classnames');
const debounce = require('lodash/debounce');

const Context = require('@ali/tingle-context');
const locale = require('./locale');

const Storage = {

    _toJSON: function (data) {
        return JSON.stringify(data)
    },

    _fromJSON: function (data) {
        try {
            data = JSON.parse(data);
        } catch (e) {
            data = null
        }
        return data
    },

    getItem: function (key) {
        return this._fromJSON(localStorage.getItem(key));
    },

    setItem: function (key, data) {
        return localStorage.setItem(key, this._toJSON(data));
    },

    removeItem: function (key) {
        localStorage.removeItem(key);
    }
};

class SearchHistory extends React.Component {

    constructor(props) {
        super(props);
        this.state = {};
        this.HISTORY_KEY = props.name;
    }

    getHistory() {
        let list = Storage.getItem(this.HISTORY_KEY) || [];
        return list.slice(0, this.props.displayCount)
    }

    addItem(keyword) { // add new history item
        let t = this;
        let list = t.getHistory();
        let index = list.indexOf(keyword);
        if (index !== -1) {
            list.splice(index, 1);
        }
        list.unshift(keyword);
        Storage.setItem(t.HISTORY_KEY, list);
    }

    clearHistory() {
        let t = this;
        Storage.removeItem(t.HISTORY_KEY);
        this.setState({
            historyList: []
        });
    }

    onSelect(keyword) {
        this.props.onSelect && this.props.onSelect(keyword);
    }

    render() {
        let t = this;
        let list = t.getHistory();
        if (list.length === 0) {
            return null
        }
        let i18n = locale[t.props.locale];
        return <div className={classnames(Context.prefixClass('search-bar-history'), t.props.className)}>
            <div className={Context.prefixClass('search-bar-history-header')}>
                {i18n['history']}
                <span className={Context.prefixClass('search-bar-history-action')}
                      onClick={t.clearHistory.bind(t)}>{i18n['clear']}</span>
            </div>
            <ul className={Context.prefixClass('search-bar-history-list')}>
                {list.map((item, idx) => <li key={idx}><span onClick={t.onSelect.bind(t, item)}>{item}</span></li>)}
            </ul>
        </div>
    }
}

SearchHistory.defaultProps = {
    name: 'SEARCH_BAR_HISTORY',
    keyword: '',
    displayCount: 8
};

// http://facebook.github.io/react/docs/reusable-components.html
SearchHistory.propTypes = {
    onSelect: React.PropTypes.func,
    name: React.PropTypes.string,
    keyword: React.PropTypes.string,
    displayCount: React.PropTypes.number
};

SearchHistory.displayName = 'SearchHistory';

module.exports = SearchHistory;
