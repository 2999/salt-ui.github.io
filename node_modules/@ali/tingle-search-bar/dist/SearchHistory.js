'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * SearchHistory Component for tingle
 * @author zhouquan.yezq
 *
 * Copyright 2014-2016, Tingle Team.
 * All rights reserved.
 */
var classnames = require('classnames');
var debounce = require('lodash/debounce');

var Context = require('@ali/tingle-context');
var locale = require('./locale');

var Storage = {

    _toJSON: function _toJSON(data) {
        return JSON.stringify(data);
    },

    _fromJSON: function _fromJSON(data) {
        try {
            data = JSON.parse(data);
        } catch (e) {
            data = null;
        }
        return data;
    },

    getItem: function getItem(key) {
        return this._fromJSON(localStorage.getItem(key));
    },

    setItem: function setItem(key, data) {
        return localStorage.setItem(key, this._toJSON(data));
    },

    removeItem: function removeItem(key) {
        localStorage.removeItem(key);
    }
};

var SearchHistory = function (_React$Component) {
    _inherits(SearchHistory, _React$Component);

    function SearchHistory(props) {
        _classCallCheck(this, SearchHistory);

        var _this = _possibleConstructorReturn(this, (SearchHistory.__proto__ || Object.getPrototypeOf(SearchHistory)).call(this, props));

        _this.state = {};
        _this.HISTORY_KEY = props.name;
        return _this;
    }

    _createClass(SearchHistory, [{
        key: 'getHistory',
        value: function getHistory() {
            var list = Storage.getItem(this.HISTORY_KEY) || [];
            return list.slice(0, this.props.displayCount);
        }
    }, {
        key: 'addItem',
        value: function addItem(keyword) {
            // add new history item
            var t = this;
            var list = t.getHistory();
            var index = list.indexOf(keyword);
            if (index !== -1) {
                list.splice(index, 1);
            }
            list.unshift(keyword);
            Storage.setItem(t.HISTORY_KEY, list);
        }
    }, {
        key: 'clearHistory',
        value: function clearHistory() {
            var t = this;
            Storage.removeItem(t.HISTORY_KEY);
            this.setState({
                historyList: []
            });
        }
    }, {
        key: 'onSelect',
        value: function onSelect(keyword) {
            this.props.onSelect && this.props.onSelect(keyword);
        }
    }, {
        key: 'render',
        value: function render() {
            var t = this;
            var list = t.getHistory();
            if (list.length === 0) {
                return null;
            }
            var i18n = locale[t.props.locale];
            return React.createElement(
                'div',
                { className: classnames(Context.prefixClass('search-bar-history'), t.props.className) },
                React.createElement(
                    'div',
                    { className: Context.prefixClass('search-bar-history-header') },
                    i18n['history'],
                    React.createElement(
                        'span',
                        { className: Context.prefixClass('search-bar-history-action'),
                            onClick: t.clearHistory.bind(t) },
                        i18n['clear']
                    )
                ),
                React.createElement(
                    'ul',
                    { className: Context.prefixClass('search-bar-history-list') },
                    list.map(function (item, idx) {
                        return React.createElement(
                            'li',
                            { key: idx },
                            React.createElement(
                                'span',
                                { onClick: t.onSelect.bind(t, item) },
                                item
                            )
                        );
                    })
                )
            );
        }
    }]);

    return SearchHistory;
}(React.Component);

SearchHistory.defaultProps = {
    name: 'SEARCH_BAR_HISTORY',
    keyword: '',
    displayCount: 8
};

// http://facebook.github.io/react/docs/reusable-components.html
SearchHistory.propTypes = {
    onSelect: React.PropTypes.func,
    name: React.PropTypes.string,
    keyword: React.PropTypes.string,
    displayCount: React.PropTypes.number
};

SearchHistory.displayName = 'SearchHistory';

module.exports = SearchHistory;
//# sourceMappingURL=data:application/json;base64,
