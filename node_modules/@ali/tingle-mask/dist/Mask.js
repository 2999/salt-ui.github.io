'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Mask Component for tingle
 * @author quanyun.mqy
 *
 * Copyright 2014-2016, Tingle Team.
 * All rights reserved.
 */
var React = require('react');
var classnames = require('classnames');

var _require = require('@ali/tingle-context');

var prefixClass = _require.prefixClass;
var noop = _require.noop;

var Mask = function (_React$Component) {
    _inherits(Mask, _React$Component);

    function Mask(props) {
        _classCallCheck(this, Mask);

        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Mask).call(this, props));

        _this.state = {
            visible: props.visible
        };
        return _this;
    }

    _createClass(Mask, [{
        key: 'handleClick',
        value: function handleClick() {
            var t = this;
            if (t.props.closeable === false || t.props.onWillHide() === false) {
                return;
            }
            t.setState({
                visible: false
            }, function () {
                t.props.onDidHide();
            });
        }
    }, {
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            this.setState({
                visible: nextProps.visible
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var t = this;
            var _t$props = t.props;
            var className = _t$props.className;
            var opacity = _t$props.opacity;
            var zIndex = _t$props.zIndex;
            var style = _t$props.style;

            var other = _objectWithoutProperties(_t$props, ['className', 'opacity', 'zIndex', 'style']);

            var visible = t.state.visible;


            return React.createElement('div', _extends({ ref: 'root', className: classnames(prefixClass('mask'), _defineProperty({
                    visible: visible
                }, className, !!className)), style: {
                    backgroundColor: 'rgba(19, 21, 26, ' + opacity + ')',
                    opacity: visible ? 1 : 0,
                    zIndex: zIndex
                }, onClick: t.handleClick.bind(t) }, other));
        }
    }]);

    return Mask;
}(React.Component);

Mask.defaultProps = {
    closeable: true,
    opacity: 0.6,
    onDidHide: noop,
    onWillHide: noop,
    visible: false,
    zIndex: 900
};

// http://facebook.github.io/react/docs/reusable-components.html
Mask.propTypes = {
    className: React.PropTypes.string,
    closeable: React.PropTypes.bool,
    opacity: React.PropTypes.number,
    onDidHide: React.PropTypes.func,
    onWillHide: React.PropTypes.func,
    visible: React.PropTypes.bool,
    zIndex: React.PropTypes.number
};

Mask.displayName = 'Mask';

module.exports = Mask;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk1hc2suanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFPQSxJQUFNLFFBQVEsUUFBUSxPQUFSLENBQWQ7QUFDQSxJQUFNLGFBQWEsUUFBUSxZQUFSLENBQW5COztlQUM0QixRQUFRLHFCQUFSLEM7O0lBQXJCLFcsWUFBQSxXO0lBQWEsSSxZQUFBLEk7O0lBRWQsSTs7O0FBRUYsa0JBQVksS0FBWixFQUFtQjtBQUFBOztBQUFBLDRGQUNULEtBRFM7O0FBRWYsY0FBSyxLQUFMLEdBQWE7QUFDVCxxQkFBUyxNQUFNO0FBRE4sU0FBYjtBQUZlO0FBS2xCOzs7O3NDQUVhO0FBQ1YsZ0JBQUksSUFBSSxJQUFSO0FBQ0EsZ0JBQUksRUFBRSxLQUFGLENBQVEsU0FBUixLQUFzQixLQUF0QixJQUErQixFQUFFLEtBQUYsQ0FBUSxVQUFSLE9BQXlCLEtBQTVELEVBQW1FO0FBQy9EO0FBQ0g7QUFDRCxjQUFFLFFBQUYsQ0FBVztBQUNQLHlCQUFTO0FBREYsYUFBWCxFQUVHLFlBQVk7QUFDWCxrQkFBRSxLQUFGLENBQVEsU0FBUjtBQUNILGFBSkQ7QUFLSDs7O2tEQUV5QixTLEVBQVc7QUFDakMsaUJBQUssUUFBTCxDQUFjO0FBQ1YseUJBQVMsVUFBVTtBQURULGFBQWQ7QUFHSDs7O2lDQUVRO0FBQ0wsZ0JBQUksSUFBSSxJQUFSO0FBREssMkJBRStDLEVBQUUsS0FGakQ7QUFBQSxnQkFFQSxTQUZBLFlBRUEsU0FGQTtBQUFBLGdCQUVXLE9BRlgsWUFFVyxPQUZYO0FBQUEsZ0JBRW9CLE1BRnBCLFlBRW9CLE1BRnBCO0FBQUEsZ0JBRTRCLEtBRjVCLFlBRTRCLEtBRjVCOztBQUFBLGdCQUVzQyxLQUZ0Qzs7QUFBQSxnQkFHQSxPQUhBLEdBR1csRUFBRSxLQUhiLENBR0EsT0FIQTs7O0FBS0wsbUJBQ0ksc0NBQUssS0FBSSxNQUFULEVBQWdCLFdBQVcsV0FBVyxZQUFZLE1BQVosQ0FBWDtBQUN2Qiw2QkFBUztBQURjLG1CQUV0QixTQUZzQixFQUVWLENBQUMsQ0FBQyxTQUZRLEVBQTNCLEVBR0ksT0FBTztBQUNQLHFDQUFpQixzQkFBc0IsT0FBdEIsR0FBZ0MsR0FEMUM7QUFFUCw2QkFBUyxVQUFVLENBQVYsR0FBYyxDQUZoQjtBQUdQLDRCQUFRO0FBSEQsaUJBSFgsRUFPRyxTQUFTLEVBQUUsV0FBRixDQUFjLElBQWQsQ0FBbUIsQ0FBbkIsQ0FQWixJQU91QyxLQVB2QyxFQURKO0FBV0g7Ozs7RUEzQ2MsTUFBTSxTOztBQThDekIsS0FBSyxZQUFMLEdBQW9CO0FBQ2hCLGVBQVcsSUFESztBQUVoQixhQUFTLEdBRk87QUFHaEIsZUFBVyxJQUhLO0FBSWhCLGdCQUFZLElBSkk7QUFLaEIsYUFBUyxLQUxPO0FBTWhCLFlBQVE7QUFOUSxDQUFwQjs7O0FBVUEsS0FBSyxTQUFMLEdBQWlCO0FBQ2IsZUFBVyxNQUFNLFNBQU4sQ0FBZ0IsTUFEZDtBQUViLGVBQVcsTUFBTSxTQUFOLENBQWdCLElBRmQ7QUFHYixhQUFTLE1BQU0sU0FBTixDQUFnQixNQUhaO0FBSWIsZUFBVyxNQUFNLFNBQU4sQ0FBZ0IsSUFKZDtBQUtiLGdCQUFZLE1BQU0sU0FBTixDQUFnQixJQUxmO0FBTWIsYUFBUyxNQUFNLFNBQU4sQ0FBZ0IsSUFOWjtBQU9iLFlBQVEsTUFBTSxTQUFOLENBQWdCO0FBUFgsQ0FBakI7O0FBVUEsS0FBSyxXQUFMLEdBQW1CLE1BQW5COztBQUVBLE9BQU8sT0FBUCxHQUFpQixJQUFqQiIsImZpbGUiOiJNYXNrLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBNYXNrIENvbXBvbmVudCBmb3IgdGluZ2xlXG4gKiBAYXV0aG9yIHF1YW55dW4ubXF5XG4gKlxuICogQ29weXJpZ2h0IDIwMTQtMjAxNiwgVGluZ2xlIFRlYW0uXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICovXG5jb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5jb25zdCBjbGFzc25hbWVzID0gcmVxdWlyZSgnY2xhc3NuYW1lcycpO1xuY29uc3Qge3ByZWZpeENsYXNzLCBub29wfSA9IHJlcXVpcmUoJ0BhbGkvdGluZ2xlLWNvbnRleHQnKTtcblxuY2xhc3MgTWFzayBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICB2aXNpYmxlOiBwcm9wcy52aXNpYmxlXG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgaGFuZGxlQ2xpY2soKSB7XG4gICAgICAgIGxldCB0ID0gdGhpcztcbiAgICAgICAgaWYgKHQucHJvcHMuY2xvc2VhYmxlID09PSBmYWxzZSB8fCB0LnByb3BzLm9uV2lsbEhpZGUoKSA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0LnNldFN0YXRlKHtcbiAgICAgICAgICAgIHZpc2libGU6IGZhbHNlXG4gICAgICAgIH0sIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHQucHJvcHMub25EaWRIaWRlKCk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgdmlzaWJsZTogbmV4dFByb3BzLnZpc2libGVcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICBsZXQgdCA9IHRoaXM7XG4gICAgICAgIGxldCB7Y2xhc3NOYW1lLCBvcGFjaXR5LCB6SW5kZXgsIHN0eWxlLCAuLi5vdGhlcn0gPSB0LnByb3BzO1xuICAgICAgICBsZXQge3Zpc2libGV9ID0gdC5zdGF0ZTtcblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiByZWY9J3Jvb3QnIGNsYXNzTmFtZT17Y2xhc3NuYW1lcyhwcmVmaXhDbGFzcygnbWFzaycpLCB7XG4gICAgICAgICAgICAgICAgdmlzaWJsZTogdmlzaWJsZSxcbiAgICAgICAgICAgICAgICBbY2xhc3NOYW1lXTogISFjbGFzc05hbWVcbiAgICAgICAgICAgIH0pfSBzdHlsZT17e1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJ3JnYmEoMTksIDIxLCAyNiwgJyArIG9wYWNpdHkgKyAnKScsXG4gICAgICAgICAgICAgICAgb3BhY2l0eTogdmlzaWJsZSA/IDEgOiAwLFxuICAgICAgICAgICAgICAgIHpJbmRleDogekluZGV4XG4gICAgICAgICAgICB9fSBvbkNsaWNrPXt0LmhhbmRsZUNsaWNrLmJpbmQodCl9IHsuLi5vdGhlcn0+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbk1hc2suZGVmYXVsdFByb3BzID0ge1xuICAgIGNsb3NlYWJsZTogdHJ1ZSxcbiAgICBvcGFjaXR5OiAwLjYsXG4gICAgb25EaWRIaWRlOiBub29wLFxuICAgIG9uV2lsbEhpZGU6IG5vb3AsXG4gICAgdmlzaWJsZTogZmFsc2UsXG4gICAgekluZGV4OiA5MDBcbn07XG5cbi8vIGh0dHA6Ly9mYWNlYm9vay5naXRodWIuaW8vcmVhY3QvZG9jcy9yZXVzYWJsZS1jb21wb25lbnRzLmh0bWxcbk1hc2sucHJvcFR5cGVzID0ge1xuICAgIGNsYXNzTmFtZTogUmVhY3QuUHJvcFR5cGVzLnN0cmluZyxcbiAgICBjbG9zZWFibGU6IFJlYWN0LlByb3BUeXBlcy5ib29sLFxuICAgIG9wYWNpdHk6IFJlYWN0LlByb3BUeXBlcy5udW1iZXIsXG4gICAgb25EaWRIaWRlOiBSZWFjdC5Qcm9wVHlwZXMuZnVuYyxcbiAgICBvbldpbGxIaWRlOiBSZWFjdC5Qcm9wVHlwZXMuZnVuYyxcbiAgICB2aXNpYmxlOiBSZWFjdC5Qcm9wVHlwZXMuYm9vbCxcbiAgICB6SW5kZXg6IFJlYWN0LlByb3BUeXBlcy5udW1iZXJcbn07XG5cbk1hc2suZGlzcGxheU5hbWUgPSAnTWFzayc7XG5cbm1vZHVsZS5leHBvcnRzID0gTWFzaztcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
