/**
 * Mask Component for tingle
 * @author quanyun.mqy
 *
 * Copyright 2014-2016, Tingle Team.
 * All rights reserved.
 */
const React = require('react');
const classnames = require('classnames');
const {prefixClass, noop} = require('@ali/tingle-context');

class Mask extends React.Component {

    constructor(props) {
        super(props);
        this.state = {
            visible: props.visible
        };
    }

    handleClick() {
        let t = this;
        if (t.props.closeable === false || t.props.onWillHide() === false) {
            return;
        }
        t.setState({
            visible: false
        }, function () {
            t.props.onDidHide();
        });
    }

    componentWillReceiveProps(nextProps) {
        this.setState({
            visible: nextProps.visible
        });
    }

    render() {
        let t = this;
        let {className, opacity, zIndex, style, ...other} = t.props;
        let {visible} = t.state;

        return (
            <div ref='root' className={classnames(prefixClass('mask'), {
                visible: visible,
                [className]: !!className
            })} style={{
                backgroundColor: 'rgba(19, 21, 26, ' + opacity + ')',
                opacity: visible ? 1 : 0,
                zIndex: zIndex
            }} onClick={t.handleClick.bind(t)} {...other}>
            </div>
        );
    }
}

Mask.defaultProps = {
    closeable: true,
    opacity: 0.6,
    onDidHide: noop,
    onWillHide: noop,
    visible: false,
    zIndex: 900
};

// http://facebook.github.io/react/docs/reusable-components.html
Mask.propTypes = {
    className: React.PropTypes.string,
    closeable: React.PropTypes.bool,
    opacity: React.PropTypes.number,
    onDidHide: React.PropTypes.func,
    onWillHide: React.PropTypes.func,
    visible: React.PropTypes.bool,
    zIndex: React.PropTypes.number
};

Mask.displayName = 'Mask';

module.exports = Mask;
