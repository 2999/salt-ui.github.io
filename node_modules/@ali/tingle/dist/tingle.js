(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : (root.Tingle = {}))[i] = a[i];
	}
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Tingle All in One!
	 * @author caoke.ck
	 *
	 * Copyright 2014-2015, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	'use strict';
	
	var Context = __webpack_require__(1);
	
	// 按照字母顺序排序
	var Tingle = Context.mixin(Context, {
	    Button: __webpack_require__(6),
	    CityField: __webpack_require__(8),
	    CityPicker: __webpack_require__(10),
	    Dialog: __webpack_require__(26),
	    Field: __webpack_require__(24),
	    GroupList: __webpack_require__(12),
	    Icon: __webpack_require__(21),
	    Layer: __webpack_require__(28),
	    LoadMore: __webpack_require__(32),
	    Mask: __webpack_require__(30),
	    NumberField: __webpack_require__(34),
	    OnOff: __webpack_require__(38),
	    OnOffField: __webpack_require__(40),
	    PhotoField: __webpack_require__(42),
	    Picker: __webpack_require__(14),
	    Scroller: __webpack_require__(16),
	    SearchBar: __webpack_require__(19),
	    SelectField: __webpack_require__(44),
	    Slide: __webpack_require__(48),
	    Slot: __webpack_require__(46),
	    Tab: __webpack_require__(51),
	    TextareaField: __webpack_require__(56),
	    TextField: __webpack_require__(36),
	    Tip: __webpack_require__(59)
	});
	
	module.exports = Tingle;

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Tingle Context
	 * The environment for tingle's initialization
	 * @auther gnosaij
	 *
	 * Copyright 2014-2015, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	'use strict';
	
	module.exports = __webpack_require__(2);

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Tingle Context
	 * The environment for tingle's initialization
	 * @auther gnosaij
	 *
	 * Copyright 2014-2015, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	'use strict';
	
	var win = window;
	var doc = document;
	
	// React的移动端touch事件初始化
	React.initializeTouchEvents(true);
	
	// 全局点击态初始化
	__webpack_require__(3).attach(doc.body);
	
	// 引入环境检测模块
	var env = __webpack_require__(4);
	
	var classnames = __webpack_require__(5);
	
	/**
	 * Top namespace
	 */
	var Context = {
	    getTID: getTID,
	    mixin: redo(mixin),
	    noop: function noop(v) {
	        return v;
	    },
	    rem: rem,
	    makePrivateRem: makePrivateRem
	};
	
	Context.mixin(Context, env, env.event);
	
	// console.dir(Context);
	
	/**
	 * 对象扩展
	 * @param  {Object} receiver
	 * @param  {Object} supplier
	 * @return {Object} 扩展后的receiver对象
	 */
	function mixin(receiver, supplier) {
	    if (Object.keys) {
	        Object.keys(supplier).forEach(function (property) {
	            Object.defineProperty(receiver, property, Object.getOwnPropertyDescriptor(supplier, property));
	        });
	    } else {
	        for (var property in supplier) {
	            if (supplier.hasOwnProperty(property)) {
	                receiver[property] = supplier[property];
	            }
	        }
	    }
	    return receiver;
	}
	
	/**
	 * 变换两个参数的函数到多个参数
	 * @param  {Function} fn 基函数
	 * @return {Function} 变换后的函数
	 * @demo
	 *      function add(x, y) { return x+y; }
	 *      add = redo(add);
	 *      add(1,2,3) => 6
	 */
	function redo(fn) {
	    return function () {
	        var args = arguments;
	        var ret = fn(args[0], args[1]);
	        for (var i = 2, l = args.length; i < l; i++) {
	            ret = fn(ret, args[i]);
	        }
	        return ret;
	    };
	}
	
	/**
	 * 获取自增长id
	 * @return {Number}
	 */
	var tid = 0;
	function getTID() {
	    return tid++;
	}
	
	/**
	 * rem system
	 * @TOTO 这个闭包 + rem方法 + makePrivateRem方法的整合
	 */
	(function (docEl, fontEl) {
	    var dpr = win.devicePixelRatio || 1;
	
	    // 类似小米2webview webkit版本是534及以下，避免闪屏
	    var matches = navigator.userAgent.match(/Android[\S\s]+AppleWebkit\/?(\d{3})/i);
	    if (matches && matches[1] <= 534) {
	        dpr = 1;
	    }
	
	    win.dpr = dpr;
	    docEl.setAttribute('data-dpr', dpr);
	    docEl.firstElementChild.appendChild(fontEl);
	
	    win.addEventListener('resize', function () {
	        // resize时立刻change,pad上刷屏明显
	        setRem();
	    }, false);
	    win.addEventListener('pageshow', function (e) {
	        if (e.persisted) {
	            setRem();
	        }
	    }, false);
	
	    setRem();
	
	    function setRem() {
	        var docWidth = docEl.clientWidth;
	        win.rem = docWidth / 10;
	
	        // ZTE 中兴 ZTE U930_TD/1.0 Linux/2.6.39/Android/4.0Release/3.5.2012 Browser/AppleWebkit534.30
	        // 老机器bug rem计算不是标准=html fontsize
	        if (/ZTE U930_TD/.test(navigator.userAgent)) {
	            win.rem = win.rem * 1.13;
	        }
	
	        fontEl.innerHTML = 'html{font-size:' + win.rem + 'px!important}';
	    }
	})(doc.documentElement, doc.createElement('style'));
	
	var defaultArtBoardWidth = 750;
	
	function rem(px, artBoardWidth) {
	    artBoardWidth = artBoardWidth || defaultArtBoardWidth;
	    return px * 10 / artBoardWidth + 'rem';
	}
	
	function makePrivateRem(artBoardWidth) {
	    return function (px) {
	        return rem(px, artBoardWidth);
	    };
	}
	
	/**
	 * 在body上添加环境检测的标识类className
	 */
	doc.documentElement.className = classnames(doc.documentElement.className.trim(), {
	    pc: env.is.pc,
	    mobile: env.is.mobile,
	    hairline: env.support.hairline
	});
	
	module.exports = Context;
	
	/**
	 * TODO: modernizr env
	 */

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Tingle Context
	 * The environment for tingle's initialization
	 * @auther jiushen
	 *
	 * Copyright 2014-2015, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	"use strict";
	
	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var env = __webpack_require__(4);
	var _env$event = env.event;
	var TOUCH_START = _env$event.TOUCH_START;
	var TOUCH_END = _env$event.TOUCH_END;
	var TOUCH_CANCEL = _env$event.TOUCH_CANCEL;
	
	var TouchEffect = (function () {
	    /**
	     *
	     * @param layer
	     * @param options
	     */
	
	    function TouchEffect(layer, options) {
	        _classCallCheck(this, TouchEffect);
	
	        this.layer = layer;
	        this.options = options || {
	            selector: "tTE", // abbr. tTouchEffect
	            activeClass: "hover"
	        };
	        this.selector = this.options.selector;
	        this.activeClass = this.options.activeClass;
	        this.initEvent();
	    }
	
	    _createClass(TouchEffect, [{
	        key: "initEvent",
	        value: function initEvent() {
	            var layer = this.layer;
	
	            layer.addEventListener(TOUCH_START, this.onTouchStart.bind(this), false);
	            layer.addEventListener(TOUCH_END, this.onTouchEnd.bind(this), false);
	            layer.addEventListener(TOUCH_CANCEL, this.onTouchEnd.bind(this), false);
	        }
	    }, {
	        key: "onTouchStart",
	        value: function onTouchStart(event) {
	
	            var target = event.target;
	
	            while (target && target.classList && !target.classList.contains(this.selector)) {
	                target = target.parentNode;
	            }
	
	            if (target && target.classList && target.classList.contains(this.selector)) {
	                target.classList.add(this.activeClass);
	            }
	        }
	    }, {
	        key: "onTouchEnd",
	        value: function onTouchEnd(event) {
	
	            var target = event.target;
	
	            while (target && target.classList && !target.classList.contains(this.selector)) {
	                target = target.parentNode;
	            }
	
	            if (target && target.classList && target.classList.contains(this.selector)) {
	                target.classList.remove(this.activeClass);
	            }
	        }
	    }, {
	        key: "destroy",
	        value: function destroy() {
	            var layer = this.layer;
	            layer.removeEventListener(TOUCH_START, this.onTouchStart.bind(this), false);
	            layer.removeEventListener(TOUCH_END, this.onTouchEnd.bind(this), false);
	            layer.removeEventListener(TOUCH_CANCEL, this.onTouchEnd.bind(this), false);
	        }
	    }]);
	
	    return TouchEffect;
	})();
	
	TouchEffect.attach = function (layer, options) {
	    return new TouchEffect(layer, options);
	};
	
	module.exports = TouchEffect;

/***/ },
/* 4 */
/***/ function(module, exports) {

	'use strict';
	
	var win = window;
	var doc = document;
	
	var ua = navigator.userAgent;
	var isMobile = !!ua.match(/mobile/i) || 'orientation' in win;
	var isPC = !isMobile;
	
	var supportTouch = ('ontouchstart' in window);
	var support3D = 'WebKitCSSMatrix' in window && 'm11' in new WebKitCSSMatrix();
	var supportHairline = (function () {
	    var support = false;
	    if (win.devicePixelRatio && devicePixelRatio >= 2) {
	        var testElem = doc.createElement('div');
	        testElem.style.border = '.5px solid transparent';
	        doc.body.appendChild(testElem);
	        if (testElem.offsetHeight == 1) {
	            // 0.5 + 0.5 = 1
	            support = true;
	        }
	        doc.body.removeChild(testElem);
	    }
	    return support;
	})();
	
	// 常量
	var START = supportTouch ? 'touchstart' : 'mousedown';
	var MOVE = supportTouch ? 'touchmove' : 'mousemove';
	var END = supportTouch ? 'touchend' : 'mouseup';
	var CANCEL = supportTouch ? 'touchcancel' : 'mouseup';
	
	var env = {
	    is: {
	        pc: isPC,
	        mobile: isMobile
	    },
	    support: {
	        '3d': support3D,
	        hairline: supportHairline,
	        touch: supportTouch
	    },
	    event: {
	        TOUCH_START: START,
	        TOUCH_MOVE: MOVE,
	        TOUCH_END: END,
	        TOUCH_CANCEL: CANCEL,
	        RESIZE: 'resize'
	    },
	    // 不建议使用
	    TOUCH: {
	        START: START,
	        MOVE: MOVE,
	        END: END,
	        CANCEL: CANCEL
	    }
	};
	
	module.exports = env;

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2015 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	
	(function () {
		'use strict';
	
		function classNames () {
	
			var classes = '';
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if ('string' === argType || 'number' === argType) {
					classes += ' ' + arg;
	
				} else if (Array.isArray(arg)) {
					classes += ' ' + classNames.apply(null, arg);
	
				} else if ('object' === argType) {
					for (var key in arg) {
						if (arg.hasOwnProperty(key) && arg[key]) {
							classes += ' ' + key;
						}
					}
				}
			}
	
			return classes.substr(1);
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true){
			// AMD. Register as an anonymous module.
			!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	
	}());


/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(7);

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Button Component for tinglejs
	 */
	
	'use strict';
	
	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var classnames = __webpack_require__(5);
	
	var Button = (function (_React$Component) {
	    _inherits(Button, _React$Component);
	
	    function Button(props) {
	        _classCallCheck(this, Button);
	
	        _get(Object.getPrototypeOf(Button.prototype), 'constructor', this).call(this, props);
	    }
	
	    _createClass(Button, [{
	        key: 'handleClick',
	        value: function handleClick() {
	            !this.props.disabled && this.props.onClick();
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _classSet;
	
	            var size = this.props.size;
	            var type = this.props.type;
	            var small = size === 's';
	            var medium = size === 'm';
	            var large = size === 'l';
	            var primary = type === 'primary';
	            var secondary = type === 'secondary';
	            var text = type === 'text';
	            var disabled = !!this.props.disabled;
	            var classSet = (_classSet = {}, _defineProperty(_classSet, this.props.className, !!this.props.className), _defineProperty(_classSet, 'tButton tFAC', true), _defineProperty(_classSet, 'tFS12 tPL16 tPR16', small), _defineProperty(_classSet, 'tFS14', medium), _defineProperty(_classSet, 'tFS18 tH44 tR5 tLH44', large), _defineProperty(_classSet, 'tH30 tR4 tLH30', small || medium), _defineProperty(_classSet, 'tBCc tFC9', disabled), _defineProperty(_classSet, 'tButtonText', text), _defineProperty(_classSet, 'tButtonPrimary tFCf', primary && !disabled), _defineProperty(_classSet, 'tButtonSecondary tFC3', secondary && !disabled), _classSet);
	
	            return React.createElement(
	                'div',
	                { className: classnames(classSet), disabled: disabled, onClick: this.handleClick.bind(this) },
	                this.props.children
	            );
	        }
	    }]);
	
	    return Button;
	})(React.Component);
	
	Button.defaultProps = {
	    size: 'l',
	    type: 'primary',
	    disabled: false,
	    onClick: function onClick() {}
	};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	Button.propTypes = {
	    disabled: React.PropTypes.bool,
	    onClick: React.PropTypes.func,
	    size: React.PropTypes.string,
	    type: React.PropTypes.string
	};
	
	Button.displayName = 'Button';
	
	module.exports = Button;

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(9);

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * CityField Component for tingle
	 * @auther guanghong.wsj
	 *
	 * Copyright 2014-2015, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	'use strict';
	
	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var CityPicker = __webpack_require__(10);
	var Field = __webpack_require__(24);
	var Context = __webpack_require__(1);
	var Icon = __webpack_require__(21);
	
	var CityField = (function (_React$Component) {
	    _inherits(CityField, _React$Component);
	
	    function CityField(props) {
	        _classCallCheck(this, CityField);
	
	        _get(Object.getPrototypeOf(CityField.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            show: false,
	            select: '',
	            city: {}
	        };
	    }
	
	    _createClass(CityField, [{
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	            var t = this;
	            t._resetState();
	        }
	    }, {
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            var t = this;
	            t.field = t.refs.field;
	            t.fieldEl = React.findDOMNode(t.field);
	            t.back = t.refs.back;
	            t.backEl = React.findDOMNode(t.back);
	
	            t.fieldEl.addEventListener('click', t._handleClick.bind(t));
	            t.backEl.addEventListener('click', t._handleBackClick.bind(t));
	        }
	    }, {
	        key: '_cityArrToObj',
	        value: function _cityArrToObj(str, arr) {
	            var obj = {};
	            obj[str] = [];
	            arr.forEach(function (name, index) {
	                obj[str].push({
	                    name: name
	                });
	            });
	            return obj;
	        }
	    }, {
	        key: '_resetState',
	        value: function _resetState() {
	            var t = this;
	            t.city = Object.keys(t.props.cityData);
	            t.finish = false;
	            t.count = 1;
	            t.level = 1;
	            t.data = [];
	            t.setState({
	                select: '',
	                city: t._cityArrToObj('选择省份', t.city)
	            });
	        }
	    }, {
	        key: '_handleClick',
	        value: function _handleClick() {
	            var t = this;
	            t.setState({
	                show: true
	            });
	            t._resetState();
	        }
	    }, {
	        key: '_handleBackClick',
	        value: function _handleBackClick() {
	            var t = this;
	            t.setState({
	                show: false
	            });
	            t._resetState();
	            t.props.onCancel();
	        }
	    }, {
	        key: '_finish',
	        value: function _finish() {
	            var t = this;
	            if (!t.finish) {
	                t.props.onChange(t.data);
	                t.finish = true;
	                t.setState({
	                    show: false
	                });
	            }
	        }
	    }, {
	        key: '_handlePick',
	        value: function _handlePick(info) {
	            var t = this;
	            t.data.push(info.name);
	            t.setState({
	                select: t.state.select + info.name
	            }, function () {
	                if (t.count == 1 && t.level < t.props.level) {
	                    t.count++;
	                    t.city = Object.keys(t.props.cityData[info.name]);
	                    t.cityName = info.name;
	                    if (t.city.length != 0) {
	                        t.setState({
	                            city: t._cityArrToObj('选择城市', t.city)
	                        });
	                    } else {
	                        t._finish();
	                    }
	                } else if (t.count == 2 && t.level < t.props.level) {
	                    t.count++;
	                    t.city = t.props.cityData[t.cityName][info.name];
	                    if (t.city.length != 0) {
	                        t.setState({
	                            city: t._cityArrToObj('选择县区', t.city)
	                        });
	                    } else {
	                        t._finish();
	                    }
	                } else {
	                    t._finish();
	                }
	                t.level++;
	            });
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var t = this;
	            var height = document.documentElement.clientHeight || window.innerHeight;
	            return React.createElement(
	                'div',
	                { className: 'tCityField' },
	                React.createElement(
	                    Field,
	                    { ref: 'field', label: t.props.label, className: 'tBCf' },
	                    React.createElement(
	                        'div',
	                        { className: 'tCityFieldIcon' },
	                        React.createElement(
	                            'span',
	                            { className: 'selectCity' },
	                            t.props.value
	                        ),
	                        React.createElement(Icon, { className: 'tCityFieldRight', id: 'tingle-city-field-chevron-right' })
	                    )
	                ),
	                React.createElement(
	                    CityPicker,
	                    { className: 'tBCd', show: t.state.show, offsetTop: 60, city: t.state.city, onPick: t._handlePick.bind(t) },
	                    React.createElement(
	                        'div',
	                        { className: 'headBar tFBH' },
	                        React.createElement(Icon, { className: 'tCityFieldLeft', ref: 'back', id: 'tingle-city-field-chevron-left' }),
	                        React.createElement(
	                            'span',
	                            { className: 'headBarTitle' },
	                            t.props.label
	                        )
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'msgBox tLH30 tBCf' },
	                        t.state.select
	                    )
	                )
	            );
	        }
	    }]);
	
	    return CityField;
	})(React.Component);
	
	CityField.defaultProps = {
	    onChange: Context.noop,
	    onCancel: Context.noop,
	    readOnly: false,
	    value: '',
	    level: Infinity,
	    label: '选择城市',
	    cityData: {}
	};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	CityField.propTypes = {
	    onChange: React.PropTypes.func,
	    onCancel: React.PropTypes.func,
	    readOnly: React.PropTypes.bool,
	    value: React.PropTypes.string,
	    level: React.PropTypes.number,
	    label: React.PropTypes.string,
	    cityData: React.PropTypes.object
	};
	
	module.exports = CityField;

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(11);

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * CityPicker Component for tingle
	 * @auther guanghong.wsj
	 *
	 * Copyright 2014-2015, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	// 引入
	'use strict';
	
	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var classnames = __webpack_require__(5);
	var GroupList = __webpack_require__(12);
	var Picker = __webpack_require__(14);
	var Context = __webpack_require__(1);
	
	var CityPicker = (function (_React$Component) {
	    _inherits(CityPicker, _React$Component);
	
	    function CityPicker(props) {
	        _classCallCheck(this, CityPicker);
	
	        _get(Object.getPrototypeOf(CityPicker.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            city: {},
	            filter: ''
	        };
	        var t = this;
	    }
	
	    _createClass(CityPicker, [{
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	            var t = this;
	            t.city = t.props.city;
	            t.filterList('');
	        }
	    }, {
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            var t = this;
	        }
	    }, {
	        key: 'componentWillReceiveProps',
	        value: function componentWillReceiveProps(nextProps) {
	            var t = this;
	            t.city = nextProps.city;
	            t.filterList('');
	        }
	    }, {
	        key: '_renderGroupLists',
	        value: function _renderGroupLists() {
	            var t = this;
	            var arr = [];
	            var groups = Object.keys(t.state.city);
	            groups.forEach(function (group, i) {
	                arr.push(React.createElement(
	                    GroupList,
	                    { className: group, title: group, key: group },
	                    t.state.city[group].map(function (city, i) {
	                        return React.createElement(
	                            'div',
	                            { className: 'tLH44 tPL10', key: group + i, 'data-group': group, 'data-name': city.name, onClick: t.handleClick.bind(t) },
	                            city.name
	                        );
	                    })
	                ));
	            });
	            return arr;
	        }
	    }, {
	        key: 'handleClick',
	        value: function handleClick(e) {
	            var t = this;
	            var target = e.currentTarget;
	            var name = target.getAttribute('data-name');
	            var group = target.getAttribute('data-group');
	            t.props.onPick && t.props.onPick(t.props.city[group].filter(function (ele) {
	                return ele.name == name;
	            })[0]);
	        }
	    }, {
	        key: 'handleSearch',
	        value: function handleSearch(value) {
	            var t = this;
	            t.filterList(value);
	            t.setState({
	                filter: value
	            });
	        }
	    }, {
	        key: 'handleFieldClick',
	        value: function handleFieldClick() {
	            var t = this;
	        }
	
	        /**
	         * 判断是否是汉字
	         */
	
	    }, {
	        key: '_isChinese',
	        value: function _isChinese(str) {
	            return (/^[\u4e00-\u9fa5]+$/.test(str)
	            );
	        }
	    }, {
	        key: 'filterList',
	        value: function filterList(value) {
	            var t = this;
	            var city = t.city;
	            var groups = Object.keys(city);
	            var newCity = {};
	            if (t.props.enableFilter) {
	                if (t._isChinese(value)) {
	                    groups.forEach(function (group, i) {
	                        var groupCity = city[group].filter(function (ele) {
	                            return ele.name.indexOf(value) != -1;
	                        });
	                        if (groupCity.length != 0) {
	                            newCity[group] = groupCity;
	                        }
	                    });
	                } else {
	                    groups.forEach(function (group, i) {
	                        var groupCity = city[group].filter(function (ele) {
	                            return ele.abbr.indexOf(value) != -1 || ele.pinyin.indexOf(value) != -1;
	                        });
	                        if (groupCity.length != 0) {
	                            newCity[group] = groupCity;
	                        }
	                    });
	                }
	            } else {
	                newCity = city;
	            }
	            t.setState({
	                city: newCity
	            });
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var t = this;
	            // 基于 Picker 扩展，没有外层包裹容器
	            var _t$props = t.props;
	            var show = _t$props.show;
	            var offsetTop = _t$props.offsetTop;
	            var offsetBottom = _t$props.offsetBottom;
	
	            return React.createElement(
	                Picker,
	                { ref: 'picker', className: classnames(_defineProperty({
	                        'tCityPicker': true
	                    }, t.props.className, !!t.props.className)), onSearch: t.handleSearch.bind(t), filter: t.state.filter, show: show, offsetTop: offsetTop, offsetBottom: offsetBottom, showSearchBar: t.props.enableFilter },
	                React.createElement(
	                    Picker.List,
	                    null,
	                    t._renderGroupLists()
	                ),
	                t.props.children
	            );
	        }
	    }]);
	
	    return CityPicker;
	})(React.Component);
	
	CityPicker.defaultProps = {
	    show: false, // 是否显示，直接传给 picker
	    offsetTop: 0, // 上方预留的空间，直接传给 picker
	    offsetBottom: 0, // 下方预留的空间，直接传给 picker
	    city: {}, // 城市列表
	    enableFilter: false, // 是否有内置的搜索过滤条
	    onPick: Context.noop // 选中之后的回调
	};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	CityPicker.propTypes = {
	    show: React.PropTypes.bool,
	    offsetTop: React.PropTypes.number,
	    offsetBottom: React.PropTypes.number,
	    city: React.PropTypes.object,
	    enableFilter: React.PropTypes.bool,
	    onPick: React.PropTypes.func
	};
	
	module.exports = CityPicker;

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(13);

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * GroupList Component for tingle
	 * @author gnosaij
	 *
	 * Copyright 2014-2015, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	"use strict";
	
	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var classnames = __webpack_require__(5);
	
	var GroupList = (function (_React$Component) {
	    _inherits(GroupList, _React$Component);
	
	    function GroupList(props) {
	        _classCallCheck(this, GroupList);
	
	        _get(Object.getPrototypeOf(GroupList.prototype), "constructor", this).call(this, props);
	    }
	
	    _createClass(GroupList, [{
	        key: "render",
	        value: function render() {
	            var t = this;
	            var items = React.Children.map(this.props.children, function (Item, index) {
	                return React.createElement(
	                    "li",
	                    { className: "tGroupListItem" },
	                    Item
	                );
	            });
	
	            return React.createElement(
	                "div",
	                null,
	                React.createElement(
	                    "h4",
	                    { className: "tFS12 tLH1_5 tPL10 tPR10 tOmit" },
	                    t.props.title
	                ),
	                React.createElement(
	                    "ul",
	                    { className: classnames(_defineProperty({
	                            tGroupList: true
	                        }, t.props.className, !!t.props.className)), style: {
	                            paddingLeft: t.props.itemIndent
	                        } },
	                    items
	                )
	            );
	        }
	    }]);
	
	    return GroupList;
	})(React.Component);
	
	GroupList.propTypes = {
	    itemIndent: React.PropTypes.number
	};
	
	GroupList.defaultProps = {
	    itemIndent: 0
	};
	
	module.exports = GroupList;

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(15);

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Picker Component for tingle
	 * @auther guanghong.wsj
	 *
	 * Copyright 2014-2015, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	// 引入
	'use strict';
	
	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var classnames = __webpack_require__(5);
	var Scroller = __webpack_require__(16);
	var SearchBar = __webpack_require__(19);
	var Context = __webpack_require__(1);
	var PickerList = __webpack_require__(23);
	
	// ES6 析构赋值
	
	var Picker = (function (_React$Component) {
	    _inherits(Picker, _React$Component);
	
	    function Picker(props) {
	        _classCallCheck(this, Picker);
	
	        _get(Object.getPrototypeOf(Picker.prototype), 'constructor', this).call(this, props);
	        var t = this;
	        t.state = {};
	    }
	
	    _createClass(Picker, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            var t = this;
	            var winHeight = document.documentElement.clientHeight || window.innerHeight;
	            t.el = React.findDOMNode(t);
	            t.scroller = t.refs.scroller;
	            t.scrollerEl = React.findDOMNode(t.scroller);
	            t.mainBox = t.el.querySelector('.tPickerMainBox');
	            t.mainBox.style.height = winHeight - t.props.offsetTop - t.props.offsetBottom + 'px';
	            t.scrollerEl.style.height = t.props.showSearchBar ? parseInt(t.mainBox.style.height) - 44 + 'px' : parseInt(t.mainBox.style.height) + 'px';
	            t.scroller.scroller.refresh();
	        }
	    }, {
	        key: 'componentWillReceiveProps',
	        value: function componentWillReceiveProps() {
	            var t = this;
	        }
	    }, {
	        key: '_handleKeyChange',
	        value: function _handleKeyChange(value) {
	            var t = this;
	            t.props.onSearch(value);
	        }
	    }, {
	        key: '_renderLists',
	        value: function _renderLists() {
	            var t = this;
	            var arr = [];
	            React.Children.map(t.props.children, function (ele) {
	                if (ele && typeof ele.type == 'function' && ele.type.displayName == 'PickerList') {
	                    arr.push(ele);
	                }
	            });
	            return arr;
	        }
	    }, {
	        key: '_renderOthers',
	        value: function _renderOthers() {
	            var t = this;
	            var arr = [];
	            React.Children.map(t.props.children, function (ele) {
	                if (!ele || typeof ele.type !== 'function' || ele.type.displayName !== 'PickerList') {
	                    arr.push(ele);
	                }
	            });
	            return arr;
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var t = this;
	            var arr = [];
	            var winHeight = document.documentElement.clientHeight || window.innerHeight;
	            if (t.props.showSearchBar) {
	                arr.push(React.createElement(SearchBar, { placeholder: t.props.searchPlaceholder, value: t.props.filter, onChange: t._handleKeyChange.bind(t) }));
	            }
	            return React.createElement(
	                'div',
	                { className: classnames(_defineProperty({
	                        "tPicker t3D": true
	                    }, t.props.className, !!t.props.className)), style: {
	                        height: winHeight,
	                        display: t.props.show ? 'block' : 'none'
	                    } },
	                t._renderOthers(),
	                React.createElement(
	                    'div',
	                    { className: 'tPickerMainBox', style: {
	                            top: t.props.offsetTop
	                        } },
	                    arr,
	                    React.createElement(
	                        Scroller,
	                        { ref: 'scroller', bounce: false, mouseWheel: Context.isPC ? true : false },
	                        t._renderLists()
	                    )
	                )
	            );
	        }
	    }]);
	
	    return Picker;
	})(React.Component);
	
	Picker.defaultProps = {
	    filter: '',
	    show: false,
	    offsetTop: 0,
	    offsetBottom: 0,
	    searchPlaceholder: '中文/拼音/首字母',
	    showKeyBar: false,
	    showSearchBar: false,
	    onSearch: Context.noop,
	    onScroll: Context.noop
	};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	Picker.propTypes = {
	    filter: React.PropTypes.string,
	    show: React.PropTypes.bool,
	    offsetTop: React.PropTypes.number,
	    offsetBottom: React.PropTypes.number,
	    searchPlaceholder: React.PropTypes.string,
	    showKeyBar: React.PropTypes.bool,
	    showSearchBar: React.PropTypes.bool,
	    onSearch: React.PropTypes.func,
	    onScroll: React.PropTypes.func
	};
	
	Picker.List = PickerList;
	
	module.exports = Picker;

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Scroller Component for tingle
	 * @auther caoke.ck
	 *
	 * Copyright 2014-2015, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	'use strict';
	
	module.exports = __webpack_require__(17);

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Scroller Component for tingle
	 * @auther caoke.ck
	 *
	 * Copyright 2014-2015, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	'use strict';
	
	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var classnames = __webpack_require__(5);
	
	// NOTE: 定制版的iscroll, 在原版iscroll-zoom的基础上加入了zoom事件
	var IScroll = __webpack_require__(18);
	
	var Scroller = (function (_React$Component) {
	    _inherits(Scroller, _React$Component);
	
	    function Scroller(props) {
	        _classCallCheck(this, Scroller);
	
	        _get(Object.getPrototypeOf(Scroller.prototype), 'constructor', this).call(this, props);
	    }
	
	    // 更多配置参数，详见 http://iscrolljs.com/ ，事件用 onXxx 的格式，例如 scrollEnd 事件对应的参数是 onScrollEnd
	
	    _createClass(Scroller, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            var t = this;
	
	            // 根节点的dom引用
	            t.el = React.findDOMNode(t.refs.root);
	
	            // 初始化 iscroll
	            t.initScroll();
	        }
	    }, {
	        key: 'componentDidUnMount',
	        value: function componentDidUnMount() {
	
	            // 销毁 iscroll
	            this.scroller.destroy();
	        }
	    }, {
	        key: 'componentDidUpdate',
	        value: function componentDidUpdate() {
	
	            var t = this;
	
	            // 避免很频繁的调用
	            clearTimeout(t._timeout);
	            t._timeout = setTimeout(function () {
	
	                // 有些场景下不需要刷新
	                if (t.props.autoRefresh) {
	
	                    // 更新 iscroll
	                    t.scroller.refresh();
	                }
	            }, 10);
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var t = this;
	
	            // iscroll 需要一个 wrapper，所以里面多加了一层 div
	            return React.createElement(
	                'div',
	                { className: classnames('tScroller', _defineProperty({}, t.props.className, !!t.props.className)), ref: 'root' },
	                React.createElement(
	                    'div',
	                    { className: 'tDIB', style: { minWidth: t.props.minWidth } },
	                    this.props.children
	                )
	            );
	        }
	    }, {
	        key: 'initScroll',
	        value: function initScroll() {
	            var t = this;
	
	            // 参数过滤，onXxx 是事件，否则是配置参数
	            var options = {};
	            var events = {};
	            for (var key in t.props) {
	                var matches = /^on([A-Z]\w*)$/.exec(key);
	                if (matches) {
	                    // 事件
	                    var evtName = matches[1].replace(/./, function (p) {
	                        return p.toLowerCase();
	                    });
	                    events[evtName] = t.props[key];
	                } else if (key !== 'className' && key !== 'autoRefresh' && key !== 'minWidth') {
	                    // 配置
	                    options[key] = t.props[key];
	                }
	            }
	
	            // iscroll 实例化
	            t.scroller = new IScroll(t.el, options);
	
	            // 事件挂载
	            for (var key in events) {
	                t.scroller.on(key, events[key].bind(null, t.scroller));
	            }
	        }
	    }]);
	
	    return Scroller;
	})(React.Component);
	
	Scroller.defaultProps = {
	    click: /chrome/i.test(navigator.userAgent),
	    autoRefresh: true,
	    minWidth: '100%'
	};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	Scroller.propTypes = {
	    autoRefresh: React.PropTypes.bool,
	    className: React.PropTypes.string
	};
	
	module.exports = Scroller;

/***/ },
/* 18 */
/***/ function(module, exports) {

	/*! iScroll v5.1.3 ~ (c) 2008-2014 Matteo Spinelli ~ http://cubiq.org/license */
	'use strict';
	
	(function (window, document, Math) {
		var rAF = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {
			window.setTimeout(callback, 1000 / 60);
		};
	
		var utils = (function () {
			var me = {};
	
			var _elementStyle = document.createElement('div').style;
			var _vendor = (function () {
				var vendors = ['t', 'webkitT', 'MozT', 'msT', 'OT'],
				    transform,
				    i = 0,
				    l = vendors.length;
	
				for (; i < l; i++) {
					transform = vendors[i] + 'ransform';
					if (transform in _elementStyle) return vendors[i].substr(0, vendors[i].length - 1);
				}
	
				return false;
			})();
	
			function _prefixStyle(style) {
				if (_vendor === false) return false;
				if (_vendor === '') return style;
				return _vendor + style.charAt(0).toUpperCase() + style.substr(1);
			}
	
			me.getTime = Date.now || function getTime() {
				return new Date().getTime();
			};
	
			me.extend = function (target, obj) {
				for (var i in obj) {
					target[i] = obj[i];
				}
			};
	
			me.addEvent = function (el, type, fn, capture) {
				el.addEventListener(type, fn, !!capture);
			};
	
			me.removeEvent = function (el, type, fn, capture) {
				el.removeEventListener(type, fn, !!capture);
			};
	
			me.prefixPointerEvent = function (pointerEvent) {
				return window.MSPointerEvent ? 'MSPointer' + pointerEvent.charAt(9).toUpperCase() + pointerEvent.substr(10) : pointerEvent;
			};
	
			me.momentum = function (current, start, time, lowerMargin, wrapperSize, deceleration) {
				var distance = current - start,
				    speed = Math.abs(distance) / time,
				    destination,
				    duration;
	
				deceleration = deceleration === undefined ? 0.0006 : deceleration;
	
				destination = current + speed * speed / (2 * deceleration) * (distance < 0 ? -1 : 1);
				duration = speed / deceleration;
	
				if (destination < lowerMargin) {
					destination = wrapperSize ? lowerMargin - wrapperSize / 2.5 * (speed / 8) : lowerMargin;
					distance = Math.abs(destination - current);
					duration = distance / speed;
				} else if (destination > 0) {
					destination = wrapperSize ? wrapperSize / 2.5 * (speed / 8) : 0;
					distance = Math.abs(current) + destination;
					duration = distance / speed;
				}
	
				return {
					destination: Math.round(destination),
					duration: duration
				};
			};
	
			var _transform = _prefixStyle('transform');
	
			me.extend(me, {
				hasTransform: _transform !== false,
				hasPerspective: _prefixStyle('perspective') in _elementStyle,
				hasTouch: 'ontouchstart' in window,
				hasPointer: window.PointerEvent || window.MSPointerEvent, // IE10 is prefixed
				hasTransition: _prefixStyle('transition') in _elementStyle
			});
	
			// This should find all Android browsers lower than build 535.19 (both stock browser and webview)
			me.isBadAndroid = /Android /.test(window.navigator.appVersion) && !/Chrome\/\d/.test(window.navigator.appVersion);
	
			me.extend(me.style = {}, {
				transform: _transform,
				transitionTimingFunction: _prefixStyle('transitionTimingFunction'),
				transitionDuration: _prefixStyle('transitionDuration'),
				transitionDelay: _prefixStyle('transitionDelay'),
				transformOrigin: _prefixStyle('transformOrigin')
			});
	
			me.hasClass = function (e, c) {
				var re = new RegExp("(^|\\s)" + c + "(\\s|$)");
				return re.test(e.className);
			};
	
			me.addClass = function (e, c) {
				if (me.hasClass(e, c)) {
					return;
				}
	
				var newclass = e.className.split(' ');
				newclass.push(c);
				e.className = newclass.join(' ');
			};
	
			me.removeClass = function (e, c) {
				if (!me.hasClass(e, c)) {
					return;
				}
	
				var re = new RegExp("(^|\\s)" + c + "(\\s|$)", 'g');
				e.className = e.className.replace(re, ' ');
			};
	
			me.offset = function (el) {
				var left = -el.offsetLeft,
				    top = -el.offsetTop;
	
				// jshint -W084
				while (el = el.offsetParent) {
					left -= el.offsetLeft;
					top -= el.offsetTop;
				}
				// jshint +W084
	
				return {
					left: left,
					top: top
				};
			};
	
			me.preventDefaultException = function (el, exceptions) {
				for (var i in exceptions) {
					if (exceptions[i].test(el[i])) {
						return true;
					}
				}
	
				return false;
			};
	
			me.extend(me.eventType = {}, {
				touchstart: 1,
				touchmove: 1,
				touchend: 1,
	
				mousedown: 2,
				mousemove: 2,
				mouseup: 2,
	
				pointerdown: 3,
				pointermove: 3,
				pointerup: 3,
	
				MSPointerDown: 3,
				MSPointerMove: 3,
				MSPointerUp: 3
			});
	
			me.extend(me.ease = {}, {
				quadratic: {
					style: 'cubic-bezier(0.25, 0.46, 0.45, 0.94)',
					fn: function fn(k) {
						return k * (2 - k);
					}
				},
				circular: {
					style: 'cubic-bezier(0.1, 0.57, 0.1, 1)', // Not properly "circular" but this looks better, it should be (0.075, 0.82, 0.165, 1)
					fn: function fn(k) {
						return Math.sqrt(1 - --k * k);
					}
				},
				back: {
					style: 'cubic-bezier(0.175, 0.885, 0.32, 1.275)',
					fn: function fn(k) {
						var b = 4;
						return (k = k - 1) * k * ((b + 1) * k + b) + 1;
					}
				},
				bounce: {
					style: '',
					fn: function fn(k) {
						if ((k /= 1) < 1 / 2.75) {
							return 7.5625 * k * k;
						} else if (k < 2 / 2.75) {
							return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;
						} else if (k < 2.5 / 2.75) {
							return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;
						} else {
							return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;
						}
					}
				},
				elastic: {
					style: '',
					fn: function fn(k) {
						var f = 0.22,
						    e = 0.4;
	
						if (k === 0) {
							return 0;
						}
						if (k == 1) {
							return 1;
						}
	
						return e * Math.pow(2, -10 * k) * Math.sin((k - f / 4) * (2 * Math.PI) / f) + 1;
					}
				}
			});
	
			me.tap = function (e, eventName) {
				var ev = document.createEvent('Event');
				ev.initEvent(eventName, true, true);
				ev.pageX = e.pageX;
				ev.pageY = e.pageY;
				e.target.dispatchEvent(ev);
			};
	
			me.click = function (e) {
				var target = e.target,
				    ev;
	
				if (!/(SELECT|INPUT|TEXTAREA)/i.test(target.tagName)) {
					ev = document.createEvent('MouseEvents');
					ev.initMouseEvent('click', true, true, e.view, 1, target.screenX, target.screenY, target.clientX, target.clientY, e.ctrlKey, e.altKey, e.shiftKey, e.metaKey, 0, null);
	
					ev._constructed = true;
					target.dispatchEvent(ev);
				}
			};
	
			return me;
		})();
	
		function IScroll(el, options) {
			this.wrapper = typeof el == 'string' ? document.querySelector(el) : el;
			this.scroller = this.wrapper.children[0];
			this.scrollerStyle = this.scroller.style; // cache style for better performance
	
			this.options = {
	
				zoomMin: 1,
				zoomMax: 4, startZoom: 1,
	
				resizeScrollbars: true,
	
				mouseWheelSpeed: 20,
	
				snapThreshold: 0.334,
	
				// INSERT POINT: OPTIONS
	
				startX: 0,
				startY: 0,
				scrollY: true,
				directionLockThreshold: 5,
				momentum: true,
	
				bounce: true,
				bounceTime: 600,
				bounceEasing: '',
	
				preventDefault: true,
				preventDefaultException: { tagName: /^(INPUT|TEXTAREA|BUTTON|SELECT)$/ },
	
				HWCompositing: true,
				useTransition: true,
				useTransform: true
			};
	
			for (var i in options) {
				this.options[i] = options[i];
			}
	
			// Normalize options
			this.translateZ = this.options.HWCompositing && utils.hasPerspective ? ' translateZ(0)' : '';
	
			this.options.useTransition = utils.hasTransition && this.options.useTransition;
			this.options.useTransform = utils.hasTransform && this.options.useTransform;
	
			this.options.eventPassthrough = this.options.eventPassthrough === true ? 'vertical' : this.options.eventPassthrough;
			this.options.preventDefault = !this.options.eventPassthrough && this.options.preventDefault;
	
			// If you want eventPassthrough I have to lock one of the axes
			this.options.scrollY = this.options.eventPassthrough == 'vertical' ? false : this.options.scrollY;
			this.options.scrollX = this.options.eventPassthrough == 'horizontal' ? false : this.options.scrollX;
	
			// With eventPassthrough we also need lockDirection mechanism
			this.options.freeScroll = this.options.freeScroll && !this.options.eventPassthrough;
			this.options.directionLockThreshold = this.options.eventPassthrough ? 0 : this.options.directionLockThreshold;
	
			this.options.bounceEasing = typeof this.options.bounceEasing == 'string' ? utils.ease[this.options.bounceEasing] || utils.ease.circular : this.options.bounceEasing;
	
			this.options.resizePolling = this.options.resizePolling === undefined ? 60 : this.options.resizePolling;
	
			if (this.options.tap === true) {
				this.options.tap = 'tap';
			}
	
			if (this.options.shrinkScrollbars == 'scale') {
				this.options.useTransition = false;
			}
	
			this.options.invertWheelDirection = this.options.invertWheelDirection ? -1 : 1;
	
			if (this.options.probeType == 3) {
				this.options.useTransition = false;
			}
	
			// INSERT POINT: NORMALIZATION
	
			// Some defaults	
			this.x = 0;
			this.y = 0;
			this.directionX = 0;
			this.directionY = 0;
			this._events = {};
	
			this.scale = Math.min(Math.max(this.options.startZoom, this.options.zoomMin), this.options.zoomMax);
	
			// INSERT POINT: DEFAULTS
	
			this._init();
			this.refresh();
	
			this.scrollTo(this.options.startX, this.options.startY);
			this.enable();
		}
	
		IScroll.prototype = {
			version: '5.1.3',
	
			_init: function _init() {
				this._initEvents();
	
				if (this.options.zoom) {
					this._initZoom();
				}
	
				if (this.options.scrollbars || this.options.indicators) {
					this._initIndicators();
				}
	
				if (this.options.mouseWheel) {
					this._initWheel();
				}
	
				if (this.options.snap) {
					this._initSnap();
				}
	
				if (this.options.keyBindings) {
					this._initKeys();
				}
	
				// INSERT POINT: _init
			},
	
			destroy: function destroy() {
				this._initEvents(true);
	
				this._execEvent('destroy');
			},
	
			_transitionEnd: function _transitionEnd(e) {
				if (e.target != this.scroller || !this.isInTransition) {
					return;
				}
	
				this._transitionTime();
				if (!this.resetPosition(this.options.bounceTime)) {
					this.isInTransition = false;
					this._execEvent('scrollEnd');
				}
			},
	
			_start: function _start(e) {
				// React to left mouse button only
				if (utils.eventType[e.type] != 1) {
					if (e.button !== 0) {
						return;
					}
				}
	
				if (!this.enabled || this.initiated && utils.eventType[e.type] !== this.initiated) {
					return;
				}
	
				if (this.options.preventDefault && !utils.isBadAndroid && !utils.preventDefaultException(e.target, this.options.preventDefaultException)) {
					e.preventDefault();
				}
	
				var point = e.touches ? e.touches[0] : e,
				    pos;
	
				this.initiated = utils.eventType[e.type];
				this.moved = false;
				this.distX = 0;
				this.distY = 0;
				this.directionX = 0;
				this.directionY = 0;
				this.directionLocked = 0;
	
				this._transitionTime();
	
				this.startTime = utils.getTime();
	
				if (this.options.useTransition && this.isInTransition) {
					this.isInTransition = false;
					pos = this.getComputedPosition();
					this._translate(Math.round(pos.x), Math.round(pos.y));
					this._execEvent('scrollEnd');
				} else if (!this.options.useTransition && this.isAnimating) {
					this.isAnimating = false;
					this._execEvent('scrollEnd');
				}
	
				this.startX = this.x;
				this.startY = this.y;
				this.absStartX = this.x;
				this.absStartY = this.y;
				this.pointX = point.pageX;
				this.pointY = point.pageY;
	
				this._execEvent('beforeScrollStart');
			},
	
			_move: function _move(e) {
				if (!this.enabled || utils.eventType[e.type] !== this.initiated) {
					return;
				}
	
				if (this.options.preventDefault) {
					// increases performance on Android? TODO: check!
					e.preventDefault();
				}
	
				var point = e.touches ? e.touches[0] : e,
				    deltaX = point.pageX - this.pointX,
				    deltaY = point.pageY - this.pointY,
				    timestamp = utils.getTime(),
				    newX,
				    newY,
				    absDistX,
				    absDistY;
	
				this.pointX = point.pageX;
				this.pointY = point.pageY;
	
				this.distX += deltaX;
				this.distY += deltaY;
				absDistX = Math.abs(this.distX);
				absDistY = Math.abs(this.distY);
	
				// We need to move at least 10 pixels for the scrolling to initiate
				if (timestamp - this.endTime > 300 && (absDistX < 10 && absDistY < 10)) {
					return;
				}
	
				// If you are scrolling in one direction lock the other
				if (!this.directionLocked && !this.options.freeScroll) {
					if (absDistX > absDistY + this.options.directionLockThreshold) {
						this.directionLocked = 'h'; // lock horizontally
					} else if (absDistY >= absDistX + this.options.directionLockThreshold) {
							this.directionLocked = 'v'; // lock vertically
						} else {
								this.directionLocked = 'n'; // no lock
							}
				}
	
				if (this.directionLocked == 'h') {
					if (this.options.eventPassthrough == 'vertical') {
						e.preventDefault();
					} else if (this.options.eventPassthrough == 'horizontal') {
						this.initiated = false;
						return;
					}
	
					deltaY = 0;
				} else if (this.directionLocked == 'v') {
					if (this.options.eventPassthrough == 'horizontal') {
						e.preventDefault();
					} else if (this.options.eventPassthrough == 'vertical') {
						this.initiated = false;
						return;
					}
	
					deltaX = 0;
				}
	
				deltaX = this.hasHorizontalScroll ? deltaX : 0;
				deltaY = this.hasVerticalScroll ? deltaY : 0;
	
				newX = this.x + deltaX;
				newY = this.y + deltaY;
	
				// Slow down if outside of the boundaries
				if (newX > 0 || newX < this.maxScrollX) {
					newX = this.options.bounce ? this.x + deltaX / 3 : newX > 0 ? 0 : this.maxScrollX;
				}
				if (newY > 0 || newY < this.maxScrollY) {
					newY = this.options.bounce ? this.y + deltaY / 3 : newY > 0 ? 0 : this.maxScrollY;
				}
	
				this.directionX = deltaX > 0 ? -1 : deltaX < 0 ? 1 : 0;
				this.directionY = deltaY > 0 ? -1 : deltaY < 0 ? 1 : 0;
	
				if (!this.moved) {
					this._execEvent('scrollStart');
				}
	
				this.moved = true;
	
				this._translate(newX, newY);
	
				/* REPLACE START: _move */
	
				if (timestamp - this.startTime > 300) {
					this.startTime = timestamp;
					this.startX = this.x;
					this.startY = this.y;
	
					if (this.options.probeType == 1) {
						this._execEvent('scroll');
					}
				}
	
				if (this.options.probeType > 1) {
					this._execEvent('scroll');
				}
				/* REPLACE END: _move */
			},
	
			_end: function _end(e) {
				if (!this.enabled || utils.eventType[e.type] !== this.initiated) {
					return;
				}
	
				if (this.options.preventDefault && !utils.preventDefaultException(e.target, this.options.preventDefaultException)) {
					e.preventDefault();
				}
	
				var point = e.changedTouches ? e.changedTouches[0] : e,
				    momentumX,
				    momentumY,
				    duration = utils.getTime() - this.startTime,
				    newX = Math.round(this.x),
				    newY = Math.round(this.y),
				    distanceX = Math.abs(newX - this.startX),
				    distanceY = Math.abs(newY - this.startY),
				    time = 0,
				    easing = '';
	
				this.isInTransition = 0;
				this.initiated = 0;
				this.endTime = utils.getTime();
	
				// reset if we are outside of the boundaries
				if (this.resetPosition(this.options.bounceTime)) {
					return;
				}
	
				this.scrollTo(newX, newY); // ensures that the last position is rounded
	
				// we scrolled less than 10 pixels
				if (!this.moved) {
					if (this.options.tap) {
						utils.tap(e, this.options.tap);
					}
	
					if (this.options.click) {
						utils.click(e);
					}
	
					this._execEvent('scrollCancel');
					return;
				}
	
				if (this._events.flick && duration < 200 && distanceX < 100 && distanceY < 100) {
					this._execEvent('flick');
					return;
				}
	
				// start momentum animation if needed
				if (this.options.momentum && duration < 300) {
					momentumX = this.hasHorizontalScroll ? utils.momentum(this.x, this.startX, duration, this.maxScrollX, this.options.bounce ? this.wrapperWidth : 0, this.options.deceleration) : { destination: newX, duration: 0 };
					momentumY = this.hasVerticalScroll ? utils.momentum(this.y, this.startY, duration, this.maxScrollY, this.options.bounce ? this.wrapperHeight : 0, this.options.deceleration) : { destination: newY, duration: 0 };
					newX = momentumX.destination;
					newY = momentumY.destination;
					time = Math.max(momentumX.duration, momentumY.duration);
					this.isInTransition = 1;
				}
	
				if (this.options.snap) {
					var snap = this._nearestSnap(newX, newY);
					this.currentPage = snap;
					time = this.options.snapSpeed || Math.max(Math.max(Math.min(Math.abs(newX - snap.x), 1000), Math.min(Math.abs(newY - snap.y), 1000)), 300);
					newX = snap.x;
					newY = snap.y;
	
					this.directionX = 0;
					this.directionY = 0;
					easing = this.options.bounceEasing;
				}
	
				// INSERT POINT: _end
	
				if (newX != this.x || newY != this.y) {
					// change easing function when scroller goes out of the boundaries
					if (newX > 0 || newX < this.maxScrollX || newY > 0 || newY < this.maxScrollY) {
						easing = utils.ease.quadratic;
					}
	
					this.scrollTo(newX, newY, time, easing);
					return;
				}
	
				this._execEvent('scrollEnd');
			},
	
			_resize: function _resize() {
				var that = this;
	
				clearTimeout(this.resizeTimeout);
	
				this.resizeTimeout = setTimeout(function () {
					that.refresh();
				}, this.options.resizePolling);
			},
	
			resetPosition: function resetPosition(time) {
				var x = this.x,
				    y = this.y;
	
				time = time || 0;
	
				if (!this.hasHorizontalScroll || this.x > 0) {
					x = 0;
				} else if (this.x < this.maxScrollX) {
					x = this.maxScrollX;
				}
	
				if (!this.hasVerticalScroll || this.y > 0) {
					y = 0;
				} else if (this.y < this.maxScrollY) {
					y = this.maxScrollY;
				}
	
				if (x == this.x && y == this.y) {
					return false;
				}
	
				this.scrollTo(x, y, time, this.options.bounceEasing);
	
				return true;
			},
	
			disable: function disable() {
				this.enabled = false;
			},
	
			enable: function enable() {
				this.enabled = true;
			},
	
			refresh: function refresh() {
				var rf = this.wrapper.offsetHeight; // Force reflow
	
				this.wrapperWidth = this.wrapper.clientWidth;
				this.wrapperHeight = this.wrapper.clientHeight;
	
				/* REPLACE START: refresh */
				this.scrollerWidth = Math.round(this.scroller.offsetWidth * this.scale);
				this.scrollerHeight = Math.round(this.scroller.offsetHeight * this.scale);
	
				this.maxScrollX = this.wrapperWidth - this.scrollerWidth;
				this.maxScrollY = this.wrapperHeight - this.scrollerHeight;
				/* REPLACE END: refresh */
	
				this.hasHorizontalScroll = this.options.scrollX && this.maxScrollX < 0;
				this.hasVerticalScroll = this.options.scrollY && this.maxScrollY < 0;
	
				if (!this.hasHorizontalScroll) {
					this.maxScrollX = 0;
					this.scrollerWidth = this.wrapperWidth;
				}
	
				if (!this.hasVerticalScroll) {
					this.maxScrollY = 0;
					this.scrollerHeight = this.wrapperHeight;
				}
	
				this.endTime = 0;
				this.directionX = 0;
				this.directionY = 0;
	
				this.wrapperOffset = utils.offset(this.wrapper);
	
				this._execEvent('refresh');
	
				this.resetPosition();
	
				// INSERT POINT: _refresh
			},
	
			on: function on(type, fn) {
				if (!this._events[type]) {
					this._events[type] = [];
				}
	
				this._events[type].push(fn);
			},
	
			off: function off(type, fn) {
				if (!this._events[type]) {
					return;
				}
	
				var index = this._events[type].indexOf(fn);
	
				if (index > -1) {
					this._events[type].splice(index, 1);
				}
			},
	
			_execEvent: function _execEvent(type) {
				if (!this._events[type]) {
					return;
				}
	
				var i = 0,
				    l = this._events[type].length;
	
				if (!l) {
					return;
				}
	
				for (; i < l; i++) {
					this._events[type][i].apply(this, [].slice.call(arguments, 1));
				}
			},
	
			scrollBy: function scrollBy(x, y, time, easing) {
				x = this.x + x;
				y = this.y + y;
				time = time || 0;
	
				this.scrollTo(x, y, time, easing);
			},
	
			scrollTo: function scrollTo(x, y, time, easing) {
				easing = easing || utils.ease.circular;
	
				this.isInTransition = this.options.useTransition && time > 0;
	
				if (!time || this.options.useTransition && easing.style) {
					this._transitionTimingFunction(easing.style);
					this._transitionTime(time);
					this._translate(x, y);
				} else {
					this._animate(x, y, time, easing.fn);
				}
			},
	
			scrollToElement: function scrollToElement(el, time, offsetX, offsetY, easing) {
				el = el.nodeType ? el : this.scroller.querySelector(el);
	
				if (!el) {
					return;
				}
	
				var pos = utils.offset(el);
	
				pos.left -= this.wrapperOffset.left;
				pos.top -= this.wrapperOffset.top;
	
				// if offsetX/Y are true we center the element to the screen
				if (offsetX === true) {
					offsetX = Math.round(el.offsetWidth / 2 - this.wrapper.offsetWidth / 2);
				}
				if (offsetY === true) {
					offsetY = Math.round(el.offsetHeight / 2 - this.wrapper.offsetHeight / 2);
				}
	
				pos.left -= offsetX || 0;
				pos.top -= offsetY || 0;
	
				pos.left = pos.left > 0 ? 0 : pos.left < this.maxScrollX ? this.maxScrollX : pos.left;
				pos.top = pos.top > 0 ? 0 : pos.top < this.maxScrollY ? this.maxScrollY : pos.top;
	
				time = time === undefined || time === null || time === 'auto' ? Math.max(Math.abs(this.x - pos.left), Math.abs(this.y - pos.top)) : time;
	
				this.scrollTo(pos.left, pos.top, time, easing);
			},
	
			_transitionTime: function _transitionTime(time) {
				time = time || 0;
	
				this.scrollerStyle[utils.style.transitionDuration] = time + 'ms';
	
				if (!time && utils.isBadAndroid) {
					this.scrollerStyle[utils.style.transitionDuration] = '0.001s';
				}
	
				if (this.indicators) {
					for (var i = this.indicators.length; i--;) {
						this.indicators[i].transitionTime(time);
					}
				}
	
				// INSERT POINT: _transitionTime
			},
	
			_transitionTimingFunction: function _transitionTimingFunction(easing) {
				this.scrollerStyle[utils.style.transitionTimingFunction] = easing;
	
				if (this.indicators) {
					for (var i = this.indicators.length; i--;) {
						this.indicators[i].transitionTimingFunction(easing);
					}
				}
	
				// INSERT POINT: _transitionTimingFunction
			},
	
			_translate: function _translate(x, y) {
				if (this.options.useTransform) {
	
					/* REPLACE START: _translate */this.scrollerStyle[utils.style.transform] = 'translate(' + x + 'px,' + y + 'px) scale(' + this.scale + ') ' + this.translateZ; /* REPLACE END: _translate */
				} else {
						x = Math.round(x);
						y = Math.round(y);
						this.scrollerStyle.left = x + 'px';
						this.scrollerStyle.top = y + 'px';
					}
	
				this.x = x;
				this.y = y;
	
				if (this.indicators) {
					for (var i = this.indicators.length; i--;) {
						this.indicators[i].updatePosition();
					}
				}
	
				// INSERT POINT: _translate
			},
	
			_initEvents: function _initEvents(remove) {
				var eventType = remove ? utils.removeEvent : utils.addEvent,
				    target = this.options.bindToWrapper ? this.wrapper : window;
	
				eventType(window, 'orientationchange', this);
				eventType(window, 'resize', this);
	
				if (this.options.click) {
					eventType(this.wrapper, 'click', this, true);
				}
	
				if (!this.options.disableMouse) {
					eventType(this.wrapper, 'mousedown', this);
					eventType(target, 'mousemove', this);
					eventType(target, 'mousecancel', this);
					eventType(target, 'mouseup', this);
				}
	
				if (utils.hasPointer && !this.options.disablePointer) {
					eventType(this.wrapper, utils.prefixPointerEvent('pointerdown'), this);
					eventType(target, utils.prefixPointerEvent('pointermove'), this);
					eventType(target, utils.prefixPointerEvent('pointercancel'), this);
					eventType(target, utils.prefixPointerEvent('pointerup'), this);
				}
	
				if (utils.hasTouch && !this.options.disableTouch) {
					eventType(this.wrapper, 'touchstart', this);
					eventType(target, 'touchmove', this);
					eventType(target, 'touchcancel', this);
					eventType(target, 'touchend', this);
				}
	
				eventType(this.scroller, 'transitionend', this);
				eventType(this.scroller, 'webkitTransitionEnd', this);
				eventType(this.scroller, 'oTransitionEnd', this);
				eventType(this.scroller, 'MSTransitionEnd', this);
			},
	
			getComputedPosition: function getComputedPosition() {
				var matrix = window.getComputedStyle(this.scroller, null),
				    x,
				    y;
	
				if (this.options.useTransform) {
					matrix = matrix[utils.style.transform].split(')')[0].split(', ');
					x = +(matrix[12] || matrix[4]);
					y = +(matrix[13] || matrix[5]);
				} else {
					x = +matrix.left.replace(/[^-\d.]/g, '');
					y = +matrix.top.replace(/[^-\d.]/g, '');
				}
	
				return { x: x, y: y };
			},
	
			_initIndicators: function _initIndicators() {
				var interactive = this.options.interactiveScrollbars,
				    customStyle = typeof this.options.scrollbars != 'string',
				    indicators = [],
				    indicator;
	
				var that = this;
	
				this.indicators = [];
	
				if (this.options.scrollbars) {
					// Vertical scrollbar
					if (this.options.scrollY) {
						indicator = {
							el: createDefaultScrollbar('v', interactive, this.options.scrollbars),
							interactive: interactive,
							defaultScrollbars: true,
							customStyle: customStyle,
							resize: this.options.resizeScrollbars,
							shrink: this.options.shrinkScrollbars,
							fade: this.options.fadeScrollbars,
							listenX: false
						};
	
						this.wrapper.appendChild(indicator.el);
						indicators.push(indicator);
					}
	
					// Horizontal scrollbar
					if (this.options.scrollX) {
						indicator = {
							el: createDefaultScrollbar('h', interactive, this.options.scrollbars),
							interactive: interactive,
							defaultScrollbars: true,
							customStyle: customStyle,
							resize: this.options.resizeScrollbars,
							shrink: this.options.shrinkScrollbars,
							fade: this.options.fadeScrollbars,
							listenY: false
						};
	
						this.wrapper.appendChild(indicator.el);
						indicators.push(indicator);
					}
				}
	
				if (this.options.indicators) {
					// TODO: check concat compatibility
					indicators = indicators.concat(this.options.indicators);
				}
	
				for (var i = indicators.length; i--;) {
					this.indicators.push(new Indicator(this, indicators[i]));
				}
	
				// TODO: check if we can use array.map (wide compatibility and performance issues)
				function _indicatorsMap(fn) {
					for (var i = that.indicators.length; i--;) {
						fn.call(that.indicators[i]);
					}
				}
	
				if (this.options.fadeScrollbars) {
					this.on('scrollEnd', function () {
						_indicatorsMap(function () {
							this.fade();
						});
					});
	
					this.on('scrollCancel', function () {
						_indicatorsMap(function () {
							this.fade();
						});
					});
	
					this.on('scrollStart', function () {
						_indicatorsMap(function () {
							this.fade(1);
						});
					});
	
					this.on('beforeScrollStart', function () {
						_indicatorsMap(function () {
							this.fade(1, true);
						});
					});
				}
	
				this.on('refresh', function () {
					_indicatorsMap(function () {
						this.refresh();
					});
				});
	
				this.on('destroy', function () {
					_indicatorsMap(function () {
						this.destroy();
					});
	
					delete this.indicators;
				});
			},
	
			_initZoom: function _initZoom() {
				this.scrollerStyle[utils.style.transformOrigin] = '0 0';
			},
	
			_zoomStart: function _zoomStart(e) {
				var c1 = Math.abs(e.touches[0].pageX - e.touches[1].pageX),
				    c2 = Math.abs(e.touches[0].pageY - e.touches[1].pageY);
	
				this.touchesDistanceStart = Math.sqrt(c1 * c1 + c2 * c2);
				this.startScale = this.scale;
	
				this.originX = Math.abs(e.touches[0].pageX + e.touches[1].pageX) / 2 + this.wrapperOffset.left - this.x;
				this.originY = Math.abs(e.touches[0].pageY + e.touches[1].pageY) / 2 + this.wrapperOffset.top - this.y;
	
				this._execEvent('zoomStart');
			},
	
			_zoom: function _zoom(e) {
				if (!this.enabled || utils.eventType[e.type] !== this.initiated) {
					return;
				}
	
				if (this.options.preventDefault) {
					e.preventDefault();
				}
	
				var c1 = Math.abs(e.touches[0].pageX - e.touches[1].pageX),
				    c2 = Math.abs(e.touches[0].pageY - e.touches[1].pageY),
				    distance = Math.sqrt(c1 * c1 + c2 * c2),
				    scale = 1 / this.touchesDistanceStart * distance * this.startScale,
				    lastScale,
				    x,
				    y;
	
				this.scaled = true;
	
				if (scale < this.options.zoomMin) {
					scale = 0.5 * this.options.zoomMin * Math.pow(2.0, scale / this.options.zoomMin);
				} else if (scale > this.options.zoomMax) {
					scale = 2.0 * this.options.zoomMax * Math.pow(0.5, this.options.zoomMax / scale);
				}
	
				lastScale = scale / this.startScale;
				x = this.originX - this.originX * lastScale + this.startX;
				y = this.originY - this.originY * lastScale + this.startY;
	
				this.scale = scale;
	
				this._execEvent('zoom', scale);
				this.scrollTo(x, y, 0);
			},
	
			_zoomEnd: function _zoomEnd(e) {
				if (!this.enabled || utils.eventType[e.type] !== this.initiated) {
					return;
				}
	
				if (this.options.preventDefault) {
					e.preventDefault();
				}
	
				var newX, newY, lastScale;
	
				this.isInTransition = 0;
				this.initiated = 0;
	
				if (this.scale > this.options.zoomMax) {
					this.scale = this.options.zoomMax;
				} else if (this.scale < this.options.zoomMin) {
					this.scale = this.options.zoomMin;
				}
	
				// Update boundaries
				this.refresh();
	
				lastScale = this.scale / this.startScale;
	
				newX = this.originX - this.originX * lastScale + this.startX;
				newY = this.originY - this.originY * lastScale + this.startY;
	
				if (newX > 0) {
					newX = 0;
				} else if (newX < this.maxScrollX) {
					newX = this.maxScrollX;
				}
	
				if (newY > 0) {
					newY = 0;
				} else if (newY < this.maxScrollY) {
					newY = this.maxScrollY;
				}
	
				if (this.x != newX || this.y != newY) {
					this.scrollTo(newX, newY, this.options.bounceTime);
				}
	
				this.scaled = false;
	
				this._execEvent('zoomEnd');
			},
	
			zoom: function zoom(scale, x, y, time) {
				if (scale < this.options.zoomMin) {
					scale = this.options.zoomMin;
				} else if (scale > this.options.zoomMax) {
					scale = this.options.zoomMax;
				}
	
				if (scale == this.scale) {
					return;
				}
	
				var relScale = scale / this.scale;
	
				x = x === undefined ? this.wrapperWidth / 2 : x;
				y = y === undefined ? this.wrapperHeight / 2 : y;
				time = time === undefined ? 300 : time;
	
				x = x + this.wrapperOffset.left - this.x;
				y = y + this.wrapperOffset.top - this.y;
	
				x = x - x * relScale + this.x;
				y = y - y * relScale + this.y;
	
				this.scale = scale;
	
				this.refresh(); // update boundaries
	
				if (x > 0) {
					x = 0;
				} else if (x < this.maxScrollX) {
					x = this.maxScrollX;
				}
	
				if (y > 0) {
					y = 0;
				} else if (y < this.maxScrollY) {
					y = this.maxScrollY;
				}
	
				this.scrollTo(x, y, time);
			},
	
			_wheelZoom: function _wheelZoom(e) {
				var wheelDeltaY,
				    deltaScale,
				    that = this;
	
				// Execute the zoomEnd event after 400ms the wheel stopped scrolling
				clearTimeout(this.wheelTimeout);
				this.wheelTimeout = setTimeout(function () {
					that._execEvent('zoomEnd');
				}, 400);
	
				if ('deltaX' in e) {
					wheelDeltaY = -e.deltaY / Math.abs(e.deltaY);
				} else if ('wheelDeltaX' in e) {
					wheelDeltaY = e.wheelDeltaY / Math.abs(e.wheelDeltaY);
				} else if ('wheelDelta' in e) {
					wheelDeltaY = e.wheelDelta / Math.abs(e.wheelDelta);
				} else if ('detail' in e) {
					wheelDeltaY = -e.detail / Math.abs(e.wheelDelta);
				} else {
					return;
				}
	
				deltaScale = this.scale + wheelDeltaY / 5;
	
				this.zoom(deltaScale, e.pageX, e.pageY, 0);
			},
	
			_initWheel: function _initWheel() {
				utils.addEvent(this.wrapper, 'wheel', this);
				utils.addEvent(this.wrapper, 'mousewheel', this);
				utils.addEvent(this.wrapper, 'DOMMouseScroll', this);
	
				this.on('destroy', function () {
					utils.removeEvent(this.wrapper, 'wheel', this);
					utils.removeEvent(this.wrapper, 'mousewheel', this);
					utils.removeEvent(this.wrapper, 'DOMMouseScroll', this);
				});
			},
	
			_wheel: function _wheel(e) {
				if (!this.enabled) {
					return;
				}
	
				e.preventDefault();
				e.stopPropagation();
	
				var wheelDeltaX,
				    wheelDeltaY,
				    newX,
				    newY,
				    that = this;
	
				if (this.wheelTimeout === undefined) {
					that._execEvent('scrollStart');
				}
	
				// Execute the scrollEnd event after 400ms the wheel stopped scrolling
				clearTimeout(this.wheelTimeout);
				this.wheelTimeout = setTimeout(function () {
					that._execEvent('scrollEnd');
					that.wheelTimeout = undefined;
				}, 400);
	
				if ('deltaX' in e) {
					if (e.deltaMode === 1) {
						wheelDeltaX = -e.deltaX * this.options.mouseWheelSpeed;
						wheelDeltaY = -e.deltaY * this.options.mouseWheelSpeed;
					} else {
						wheelDeltaX = -e.deltaX;
						wheelDeltaY = -e.deltaY;
					}
				} else if ('wheelDeltaX' in e) {
					wheelDeltaX = e.wheelDeltaX / 120 * this.options.mouseWheelSpeed;
					wheelDeltaY = e.wheelDeltaY / 120 * this.options.mouseWheelSpeed;
				} else if ('wheelDelta' in e) {
					wheelDeltaX = wheelDeltaY = e.wheelDelta / 120 * this.options.mouseWheelSpeed;
				} else if ('detail' in e) {
					wheelDeltaX = wheelDeltaY = -e.detail / 3 * this.options.mouseWheelSpeed;
				} else {
					return;
				}
	
				wheelDeltaX *= this.options.invertWheelDirection;
				wheelDeltaY *= this.options.invertWheelDirection;
	
				if (!this.hasVerticalScroll) {
					wheelDeltaX = wheelDeltaY;
					wheelDeltaY = 0;
				}
	
				if (this.options.snap) {
					newX = this.currentPage.pageX;
					newY = this.currentPage.pageY;
	
					if (wheelDeltaX > 0) {
						newX--;
					} else if (wheelDeltaX < 0) {
						newX++;
					}
	
					if (wheelDeltaY > 0) {
						newY--;
					} else if (wheelDeltaY < 0) {
						newY++;
					}
	
					this.goToPage(newX, newY);
	
					return;
				}
	
				newX = this.x + Math.round(this.hasHorizontalScroll ? wheelDeltaX : 0);
				newY = this.y + Math.round(this.hasVerticalScroll ? wheelDeltaY : 0);
	
				if (newX > 0) {
					newX = 0;
				} else if (newX < this.maxScrollX) {
					newX = this.maxScrollX;
				}
	
				if (newY > 0) {
					newY = 0;
				} else if (newY < this.maxScrollY) {
					newY = this.maxScrollY;
				}
	
				this.scrollTo(newX, newY, 0);
	
				if (this.options.probeType > 1) {
					this._execEvent('scroll');
				}
	
				// INSERT POINT: _wheel
			},
	
			_initSnap: function _initSnap() {
				this.currentPage = {};
	
				if (typeof this.options.snap == 'string') {
					this.options.snap = this.scroller.querySelectorAll(this.options.snap);
				}
	
				this.on('refresh', function () {
					var i = 0,
					    l,
					    m = 0,
					    n,
					    cx,
					    cy,
					    x = 0,
					    y,
					    stepX = this.options.snapStepX || this.wrapperWidth,
					    stepY = this.options.snapStepY || this.wrapperHeight,
					    el;
	
					this.pages = [];
	
					if (!this.wrapperWidth || !this.wrapperHeight || !this.scrollerWidth || !this.scrollerHeight) {
						return;
					}
	
					if (this.options.snap === true) {
						cx = Math.round(stepX / 2);
						cy = Math.round(stepY / 2);
	
						while (x > -this.scrollerWidth) {
							this.pages[i] = [];
							l = 0;
							y = 0;
	
							while (y > -this.scrollerHeight) {
								this.pages[i][l] = {
									x: Math.max(x, this.maxScrollX),
									y: Math.max(y, this.maxScrollY),
									width: stepX,
									height: stepY,
									cx: x - cx,
									cy: y - cy
								};
	
								y -= stepY;
								l++;
							}
	
							x -= stepX;
							i++;
						}
					} else {
						el = this.options.snap;
						l = el.length;
						n = -1;
	
						for (; i < l; i++) {
							if (i === 0 || el[i].offsetLeft <= el[i - 1].offsetLeft) {
								m = 0;
								n++;
							}
	
							if (!this.pages[m]) {
								this.pages[m] = [];
							}
	
							x = Math.max(-el[i].offsetLeft, this.maxScrollX);
							y = Math.max(-el[i].offsetTop, this.maxScrollY);
							cx = x - Math.round(el[i].offsetWidth / 2);
							cy = y - Math.round(el[i].offsetHeight / 2);
	
							this.pages[m][n] = {
								x: x,
								y: y,
								width: el[i].offsetWidth,
								height: el[i].offsetHeight,
								cx: cx,
								cy: cy
							};
	
							if (x > this.maxScrollX) {
								m++;
							}
						}
					}
	
					this.goToPage(this.currentPage.pageX || 0, this.currentPage.pageY || 0, 0);
	
					// Update snap threshold if needed
					if (this.options.snapThreshold % 1 === 0) {
						this.snapThresholdX = this.options.snapThreshold;
						this.snapThresholdY = this.options.snapThreshold;
					} else {
						this.snapThresholdX = Math.round(this.pages[this.currentPage.pageX][this.currentPage.pageY].width * this.options.snapThreshold);
						this.snapThresholdY = Math.round(this.pages[this.currentPage.pageX][this.currentPage.pageY].height * this.options.snapThreshold);
					}
				});
	
				this.on('flick', function () {
					var time = this.options.snapSpeed || Math.max(Math.max(Math.min(Math.abs(this.x - this.startX), 1000), Math.min(Math.abs(this.y - this.startY), 1000)), 300);
	
					this.goToPage(this.currentPage.pageX + this.directionX, this.currentPage.pageY + this.directionY, time);
				});
			},
	
			_nearestSnap: function _nearestSnap(x, y) {
				if (!this.pages.length) {
					return { x: 0, y: 0, pageX: 0, pageY: 0 };
				}
	
				var i = 0,
				    l = this.pages.length,
				    m = 0;
	
				// Check if we exceeded the snap threshold
				if (Math.abs(x - this.absStartX) < this.snapThresholdX && Math.abs(y - this.absStartY) < this.snapThresholdY) {
					return this.currentPage;
				}
	
				if (x > 0) {
					x = 0;
				} else if (x < this.maxScrollX) {
					x = this.maxScrollX;
				}
	
				if (y > 0) {
					y = 0;
				} else if (y < this.maxScrollY) {
					y = this.maxScrollY;
				}
	
				for (; i < l; i++) {
					if (x >= this.pages[i][0].cx) {
						x = this.pages[i][0].x;
						break;
					}
				}
	
				l = this.pages[i].length;
	
				for (; m < l; m++) {
					if (y >= this.pages[0][m].cy) {
						y = this.pages[0][m].y;
						break;
					}
				}
	
				if (i == this.currentPage.pageX) {
					i += this.directionX;
	
					if (i < 0) {
						i = 0;
					} else if (i >= this.pages.length) {
						i = this.pages.length - 1;
					}
	
					x = this.pages[i][0].x;
				}
	
				if (m == this.currentPage.pageY) {
					m += this.directionY;
	
					if (m < 0) {
						m = 0;
					} else if (m >= this.pages[0].length) {
						m = this.pages[0].length - 1;
					}
	
					y = this.pages[0][m].y;
				}
	
				return {
					x: x,
					y: y,
					pageX: i,
					pageY: m
				};
			},
	
			goToPage: function goToPage(x, y, time, easing) {
				easing = easing || this.options.bounceEasing;
	
				if (x >= this.pages.length) {
					x = this.pages.length - 1;
				} else if (x < 0) {
					x = 0;
				}
	
				if (y >= this.pages[x].length) {
					y = this.pages[x].length - 1;
				} else if (y < 0) {
					y = 0;
				}
	
				var posX = this.pages[x][y].x,
				    posY = this.pages[x][y].y;
	
				time = time === undefined ? this.options.snapSpeed || Math.max(Math.max(Math.min(Math.abs(posX - this.x), 1000), Math.min(Math.abs(posY - this.y), 1000)), 300) : time;
	
				this.currentPage = {
					x: posX,
					y: posY,
					pageX: x,
					pageY: y
				};
	
				this.scrollTo(posX, posY, time, easing);
			},
	
			next: function next(time, easing) {
				var x = this.currentPage.pageX,
				    y = this.currentPage.pageY;
	
				x++;
	
				if (x >= this.pages.length && this.hasVerticalScroll) {
					x = 0;
					y++;
				}
	
				this.goToPage(x, y, time, easing);
			},
	
			prev: function prev(time, easing) {
				var x = this.currentPage.pageX,
				    y = this.currentPage.pageY;
	
				x--;
	
				if (x < 0 && this.hasVerticalScroll) {
					x = 0;
					y--;
				}
	
				this.goToPage(x, y, time, easing);
			},
	
			_initKeys: function _initKeys(e) {
				// default key bindings
				var keys = {
					pageUp: 33,
					pageDown: 34,
					end: 35,
					home: 36,
					left: 37,
					up: 38,
					right: 39,
					down: 40
				};
				var i;
	
				// if you give me characters I give you keycode
				if (typeof this.options.keyBindings == 'object') {
					for (i in this.options.keyBindings) {
						if (typeof this.options.keyBindings[i] == 'string') {
							this.options.keyBindings[i] = this.options.keyBindings[i].toUpperCase().charCodeAt(0);
						}
					}
				} else {
					this.options.keyBindings = {};
				}
	
				for (i in keys) {
					this.options.keyBindings[i] = this.options.keyBindings[i] || keys[i];
				}
	
				utils.addEvent(window, 'keydown', this);
	
				this.on('destroy', function () {
					utils.removeEvent(window, 'keydown', this);
				});
			},
	
			_key: function _key(e) {
				if (!this.enabled) {
					return;
				}
	
				var snap = this.options.snap,
				    // we are using this alot, better to cache it
				newX = snap ? this.currentPage.pageX : this.x,
				    newY = snap ? this.currentPage.pageY : this.y,
				    now = utils.getTime(),
				    prevTime = this.keyTime || 0,
				    acceleration = 0.250,
				    pos;
	
				if (this.options.useTransition && this.isInTransition) {
					pos = this.getComputedPosition();
	
					this._translate(Math.round(pos.x), Math.round(pos.y));
					this.isInTransition = false;
				}
	
				this.keyAcceleration = now - prevTime < 200 ? Math.min(this.keyAcceleration + acceleration, 50) : 0;
	
				switch (e.keyCode) {
					case this.options.keyBindings.pageUp:
						if (this.hasHorizontalScroll && !this.hasVerticalScroll) {
							newX += snap ? 1 : this.wrapperWidth;
						} else {
							newY += snap ? 1 : this.wrapperHeight;
						}
						break;
					case this.options.keyBindings.pageDown:
						if (this.hasHorizontalScroll && !this.hasVerticalScroll) {
							newX -= snap ? 1 : this.wrapperWidth;
						} else {
							newY -= snap ? 1 : this.wrapperHeight;
						}
						break;
					case this.options.keyBindings.end:
						newX = snap ? this.pages.length - 1 : this.maxScrollX;
						newY = snap ? this.pages[0].length - 1 : this.maxScrollY;
						break;
					case this.options.keyBindings.home:
						newX = 0;
						newY = 0;
						break;
					case this.options.keyBindings.left:
						newX += snap ? -1 : 5 + this.keyAcceleration >> 0;
						break;
					case this.options.keyBindings.up:
						newY += snap ? 1 : 5 + this.keyAcceleration >> 0;
						break;
					case this.options.keyBindings.right:
						newX -= snap ? -1 : 5 + this.keyAcceleration >> 0;
						break;
					case this.options.keyBindings.down:
						newY -= snap ? 1 : 5 + this.keyAcceleration >> 0;
						break;
					default:
						return;
				}
	
				if (snap) {
					this.goToPage(newX, newY);
					return;
				}
	
				if (newX > 0) {
					newX = 0;
					this.keyAcceleration = 0;
				} else if (newX < this.maxScrollX) {
					newX = this.maxScrollX;
					this.keyAcceleration = 0;
				}
	
				if (newY > 0) {
					newY = 0;
					this.keyAcceleration = 0;
				} else if (newY < this.maxScrollY) {
					newY = this.maxScrollY;
					this.keyAcceleration = 0;
				}
	
				this.scrollTo(newX, newY, 0);
	
				this.keyTime = now;
			},
	
			_animate: function _animate(destX, destY, duration, easingFn) {
				var that = this,
				    startX = this.x,
				    startY = this.y,
				    startTime = utils.getTime(),
				    destTime = startTime + duration;
	
				function step() {
					var now = utils.getTime(),
					    newX,
					    newY,
					    easing;
	
					if (now >= destTime) {
						that.isAnimating = false;
						that._translate(destX, destY);
	
						if (!that.resetPosition(that.options.bounceTime)) {
							that._execEvent('scrollEnd');
						}
	
						return;
					}
	
					now = (now - startTime) / duration;
					easing = easingFn(now);
					newX = (destX - startX) * easing + startX;
					newY = (destY - startY) * easing + startY;
					that._translate(newX, newY);
	
					if (that.isAnimating) {
						rAF(step);
					}
	
					if (that.options.probeType == 3) {
						that._execEvent('scroll');
					}
				}
	
				this.isAnimating = true;
				step();
			},
			handleEvent: function handleEvent(e) {
				switch (e.type) {
					case 'touchstart':
					case 'pointerdown':
					case 'MSPointerDown':
					case 'mousedown':
						this._start(e);
	
						if (this.options.zoom && e.touches && e.touches.length > 1) {
							this._zoomStart(e);
						}
						break;
					case 'touchmove':
					case 'pointermove':
					case 'MSPointerMove':
					case 'mousemove':
						if (this.options.zoom && e.touches && e.touches[1]) {
							this._zoom(e);
							return;
						}
						this._move(e);
						break;
					case 'touchend':
					case 'pointerup':
					case 'MSPointerUp':
					case 'mouseup':
					case 'touchcancel':
					case 'pointercancel':
					case 'MSPointerCancel':
					case 'mousecancel':
						if (this.scaled) {
							this._zoomEnd(e);
							return;
						}
						this._end(e);
						break;
					case 'orientationchange':
					case 'resize':
						this._resize();
						break;
					case 'transitionend':
					case 'webkitTransitionEnd':
					case 'oTransitionEnd':
					case 'MSTransitionEnd':
						this._transitionEnd(e);
						break;
					case 'wheel':
					case 'DOMMouseScroll':
					case 'mousewheel':
						if (this.options.wheelAction == 'zoom') {
							this._wheelZoom(e);
							return;
						}
						this._wheel(e);
						break;
					case 'keydown':
						this._key(e);
						break;
				}
			}
	
		};
		function createDefaultScrollbar(direction, interactive, type) {
			var scrollbar = document.createElement('div'),
			    indicator = document.createElement('div');
	
			if (type === true) {
				scrollbar.style.cssText = 'position:absolute;z-index:9999';
				indicator.style.cssText = '-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;position:absolute;background:rgba(0,0,0,0.5);border:1px solid rgba(255,255,255,0.9);border-radius:3px';
			}
	
			indicator.className = 'iScrollIndicator';
	
			if (direction == 'h') {
				if (type === true) {
					scrollbar.style.cssText += ';height:7px;left:2px;right:2px;bottom:0';
					indicator.style.height = '100%';
				}
				scrollbar.className = 'iScrollHorizontalScrollbar';
			} else {
				if (type === true) {
					scrollbar.style.cssText += ';width:7px;bottom:2px;top:2px;right:1px';
					indicator.style.width = '100%';
				}
				scrollbar.className = 'iScrollVerticalScrollbar';
			}
	
			scrollbar.style.cssText += ';overflow:hidden';
	
			if (!interactive) {
				scrollbar.style.pointerEvents = 'none';
			}
	
			scrollbar.appendChild(indicator);
	
			return scrollbar;
		}
	
		function Indicator(scroller, options) {
			this.wrapper = typeof options.el == 'string' ? document.querySelector(options.el) : options.el;
			this.wrapperStyle = this.wrapper.style;
			this.indicator = this.wrapper.children[0];
			this.indicatorStyle = this.indicator.style;
			this.scroller = scroller;
	
			this.options = {
				listenX: true,
				listenY: true,
				interactive: false,
				resize: true,
				defaultScrollbars: false,
				shrink: false,
				fade: false,
				speedRatioX: 0,
				speedRatioY: 0
			};
	
			for (var i in options) {
				this.options[i] = options[i];
			}
	
			this.sizeRatioX = 1;
			this.sizeRatioY = 1;
			this.maxPosX = 0;
			this.maxPosY = 0;
	
			if (this.options.interactive) {
				if (!this.options.disableTouch) {
					utils.addEvent(this.indicator, 'touchstart', this);
					utils.addEvent(window, 'touchend', this);
				}
				if (!this.options.disablePointer) {
					utils.addEvent(this.indicator, utils.prefixPointerEvent('pointerdown'), this);
					utils.addEvent(window, utils.prefixPointerEvent('pointerup'), this);
				}
				if (!this.options.disableMouse) {
					utils.addEvent(this.indicator, 'mousedown', this);
					utils.addEvent(window, 'mouseup', this);
				}
			}
	
			if (this.options.fade) {
				this.wrapperStyle[utils.style.transform] = this.scroller.translateZ;
				this.wrapperStyle[utils.style.transitionDuration] = utils.isBadAndroid ? '0.001s' : '0ms';
				this.wrapperStyle.opacity = '0';
			}
		}
	
		Indicator.prototype = {
			handleEvent: function handleEvent(e) {
				switch (e.type) {
					case 'touchstart':
					case 'pointerdown':
					case 'MSPointerDown':
					case 'mousedown':
						this._start(e);
						break;
					case 'touchmove':
					case 'pointermove':
					case 'MSPointerMove':
					case 'mousemove':
						this._move(e);
						break;
					case 'touchend':
					case 'pointerup':
					case 'MSPointerUp':
					case 'mouseup':
					case 'touchcancel':
					case 'pointercancel':
					case 'MSPointerCancel':
					case 'mousecancel':
						this._end(e);
						break;
				}
			},
	
			destroy: function destroy() {
				if (this.options.interactive) {
					utils.removeEvent(this.indicator, 'touchstart', this);
					utils.removeEvent(this.indicator, utils.prefixPointerEvent('pointerdown'), this);
					utils.removeEvent(this.indicator, 'mousedown', this);
	
					utils.removeEvent(window, 'touchmove', this);
					utils.removeEvent(window, utils.prefixPointerEvent('pointermove'), this);
					utils.removeEvent(window, 'mousemove', this);
	
					utils.removeEvent(window, 'touchend', this);
					utils.removeEvent(window, utils.prefixPointerEvent('pointerup'), this);
					utils.removeEvent(window, 'mouseup', this);
				}
	
				if (this.options.defaultScrollbars) {
					this.wrapper.parentNode.removeChild(this.wrapper);
				}
			},
	
			_start: function _start(e) {
				var point = e.touches ? e.touches[0] : e;
	
				e.preventDefault();
				e.stopPropagation();
	
				this.transitionTime();
	
				this.initiated = true;
				this.moved = false;
				this.lastPointX = point.pageX;
				this.lastPointY = point.pageY;
	
				this.startTime = utils.getTime();
	
				if (!this.options.disableTouch) {
					utils.addEvent(window, 'touchmove', this);
				}
				if (!this.options.disablePointer) {
					utils.addEvent(window, utils.prefixPointerEvent('pointermove'), this);
				}
				if (!this.options.disableMouse) {
					utils.addEvent(window, 'mousemove', this);
				}
	
				this.scroller._execEvent('beforeScrollStart');
			},
	
			_move: function _move(e) {
				var point = e.touches ? e.touches[0] : e,
				    deltaX,
				    deltaY,
				    newX,
				    newY,
				    timestamp = utils.getTime();
	
				if (!this.moved) {
					this.scroller._execEvent('scrollStart');
				}
	
				this.moved = true;
	
				deltaX = point.pageX - this.lastPointX;
				this.lastPointX = point.pageX;
	
				deltaY = point.pageY - this.lastPointY;
				this.lastPointY = point.pageY;
	
				newX = this.x + deltaX;
				newY = this.y + deltaY;
	
				this._pos(newX, newY);
	
				if (this.scroller.options.probeType == 1 && timestamp - this.startTime > 300) {
					this.startTime = timestamp;
					this.scroller._execEvent('scroll');
				} else if (this.scroller.options.probeType > 1) {
					this.scroller._execEvent('scroll');
				}
	
				// INSERT POINT: indicator._move
	
				e.preventDefault();
				e.stopPropagation();
			},
	
			_end: function _end(e) {
				if (!this.initiated) {
					return;
				}
	
				this.initiated = false;
	
				e.preventDefault();
				e.stopPropagation();
	
				utils.removeEvent(window, 'touchmove', this);
				utils.removeEvent(window, utils.prefixPointerEvent('pointermove'), this);
				utils.removeEvent(window, 'mousemove', this);
	
				if (this.scroller.options.snap) {
					var snap = this.scroller._nearestSnap(this.scroller.x, this.scroller.y);
	
					var time = this.options.snapSpeed || Math.max(Math.max(Math.min(Math.abs(this.scroller.x - snap.x), 1000), Math.min(Math.abs(this.scroller.y - snap.y), 1000)), 300);
	
					if (this.scroller.x != snap.x || this.scroller.y != snap.y) {
						this.scroller.directionX = 0;
						this.scroller.directionY = 0;
						this.scroller.currentPage = snap;
						this.scroller.scrollTo(snap.x, snap.y, time, this.scroller.options.bounceEasing);
					}
				}
	
				if (this.moved) {
					this.scroller._execEvent('scrollEnd');
				}
			},
	
			transitionTime: function transitionTime(time) {
				time = time || 0;
				this.indicatorStyle[utils.style.transitionDuration] = time + 'ms';
	
				if (!time && utils.isBadAndroid) {
					this.indicatorStyle[utils.style.transitionDuration] = '0.001s';
				}
			},
	
			transitionTimingFunction: function transitionTimingFunction(easing) {
				this.indicatorStyle[utils.style.transitionTimingFunction] = easing;
			},
	
			refresh: function refresh() {
				this.transitionTime();
	
				if (this.options.listenX && !this.options.listenY) {
					this.indicatorStyle.display = this.scroller.hasHorizontalScroll ? 'block' : 'none';
				} else if (this.options.listenY && !this.options.listenX) {
					this.indicatorStyle.display = this.scroller.hasVerticalScroll ? 'block' : 'none';
				} else {
					this.indicatorStyle.display = this.scroller.hasHorizontalScroll || this.scroller.hasVerticalScroll ? 'block' : 'none';
				}
	
				if (this.scroller.hasHorizontalScroll && this.scroller.hasVerticalScroll) {
					utils.addClass(this.wrapper, 'iScrollBothScrollbars');
					utils.removeClass(this.wrapper, 'iScrollLoneScrollbar');
	
					if (this.options.defaultScrollbars && this.options.customStyle) {
						if (this.options.listenX) {
							this.wrapper.style.right = '8px';
						} else {
							this.wrapper.style.bottom = '8px';
						}
					}
				} else {
					utils.removeClass(this.wrapper, 'iScrollBothScrollbars');
					utils.addClass(this.wrapper, 'iScrollLoneScrollbar');
	
					if (this.options.defaultScrollbars && this.options.customStyle) {
						if (this.options.listenX) {
							this.wrapper.style.right = '2px';
						} else {
							this.wrapper.style.bottom = '2px';
						}
					}
				}
	
				var r = this.wrapper.offsetHeight; // force refresh
	
				if (this.options.listenX) {
					this.wrapperWidth = this.wrapper.clientWidth;
					if (this.options.resize) {
						this.indicatorWidth = Math.max(Math.round(this.wrapperWidth * this.wrapperWidth / (this.scroller.scrollerWidth || this.wrapperWidth || 1)), 8);
						this.indicatorStyle.width = this.indicatorWidth + 'px';
					} else {
						this.indicatorWidth = this.indicator.clientWidth;
					}
	
					this.maxPosX = this.wrapperWidth - this.indicatorWidth;
	
					if (this.options.shrink == 'clip') {
						this.minBoundaryX = -this.indicatorWidth + 8;
						this.maxBoundaryX = this.wrapperWidth - 8;
					} else {
						this.minBoundaryX = 0;
						this.maxBoundaryX = this.maxPosX;
					}
	
					this.sizeRatioX = this.options.speedRatioX || this.scroller.maxScrollX && this.maxPosX / this.scroller.maxScrollX;
				}
	
				if (this.options.listenY) {
					this.wrapperHeight = this.wrapper.clientHeight;
					if (this.options.resize) {
						this.indicatorHeight = Math.max(Math.round(this.wrapperHeight * this.wrapperHeight / (this.scroller.scrollerHeight || this.wrapperHeight || 1)), 8);
						this.indicatorStyle.height = this.indicatorHeight + 'px';
					} else {
						this.indicatorHeight = this.indicator.clientHeight;
					}
	
					this.maxPosY = this.wrapperHeight - this.indicatorHeight;
	
					if (this.options.shrink == 'clip') {
						this.minBoundaryY = -this.indicatorHeight + 8;
						this.maxBoundaryY = this.wrapperHeight - 8;
					} else {
						this.minBoundaryY = 0;
						this.maxBoundaryY = this.maxPosY;
					}
	
					this.maxPosY = this.wrapperHeight - this.indicatorHeight;
					this.sizeRatioY = this.options.speedRatioY || this.scroller.maxScrollY && this.maxPosY / this.scroller.maxScrollY;
				}
	
				this.updatePosition();
			},
	
			updatePosition: function updatePosition() {
				var x = this.options.listenX && Math.round(this.sizeRatioX * this.scroller.x) || 0,
				    y = this.options.listenY && Math.round(this.sizeRatioY * this.scroller.y) || 0;
	
				if (!this.options.ignoreBoundaries) {
					if (x < this.minBoundaryX) {
						if (this.options.shrink == 'scale') {
							this.width = Math.max(this.indicatorWidth + x, 8);
							this.indicatorStyle.width = this.width + 'px';
						}
						x = this.minBoundaryX;
					} else if (x > this.maxBoundaryX) {
						if (this.options.shrink == 'scale') {
							this.width = Math.max(this.indicatorWidth - (x - this.maxPosX), 8);
							this.indicatorStyle.width = this.width + 'px';
							x = this.maxPosX + this.indicatorWidth - this.width;
						} else {
							x = this.maxBoundaryX;
						}
					} else if (this.options.shrink == 'scale' && this.width != this.indicatorWidth) {
						this.width = this.indicatorWidth;
						this.indicatorStyle.width = this.width + 'px';
					}
	
					if (y < this.minBoundaryY) {
						if (this.options.shrink == 'scale') {
							this.height = Math.max(this.indicatorHeight + y * 3, 8);
							this.indicatorStyle.height = this.height + 'px';
						}
						y = this.minBoundaryY;
					} else if (y > this.maxBoundaryY) {
						if (this.options.shrink == 'scale') {
							this.height = Math.max(this.indicatorHeight - (y - this.maxPosY) * 3, 8);
							this.indicatorStyle.height = this.height + 'px';
							y = this.maxPosY + this.indicatorHeight - this.height;
						} else {
							y = this.maxBoundaryY;
						}
					} else if (this.options.shrink == 'scale' && this.height != this.indicatorHeight) {
						this.height = this.indicatorHeight;
						this.indicatorStyle.height = this.height + 'px';
					}
				}
	
				this.x = x;
				this.y = y;
	
				if (this.scroller.options.useTransform) {
					this.indicatorStyle[utils.style.transform] = 'translate(' + x + 'px,' + y + 'px)' + this.scroller.translateZ;
				} else {
					this.indicatorStyle.left = x + 'px';
					this.indicatorStyle.top = y + 'px';
				}
			},
	
			_pos: function _pos(x, y) {
				if (x < 0) {
					x = 0;
				} else if (x > this.maxPosX) {
					x = this.maxPosX;
				}
	
				if (y < 0) {
					y = 0;
				} else if (y > this.maxPosY) {
					y = this.maxPosY;
				}
	
				x = this.options.listenX ? Math.round(x / this.sizeRatioX) : this.scroller.x;
				y = this.options.listenY ? Math.round(y / this.sizeRatioY) : this.scroller.y;
	
				this.scroller.scrollTo(x, y);
			},
	
			fade: function fade(val, hold) {
				if (hold && !this.visible) {
					return;
				}
	
				clearTimeout(this.fadeTimeout);
				this.fadeTimeout = null;
	
				var time = val ? 250 : 500,
				    delay = val ? 0 : 300;
	
				val = val ? '1' : '0';
	
				this.wrapperStyle[utils.style.transitionDuration] = time + 'ms';
	
				this.fadeTimeout = setTimeout((function (val) {
					this.wrapperStyle.opacity = val;
					this.visible = +val;
				}).bind(this, val), delay);
			}
		};
	
		IScroll.utils = utils;
	
		if (typeof module != 'undefined' && module.exports) {
			module.exports = IScroll;
		} else {
			window.IScroll = IScroll;
		}
	})(window, document, Math);

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * SearchBar Component for tingle
	 * @auther caoke.ck
	 *
	 * Copyright 2014-2015, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	'use strict';
	
	module.exports = __webpack_require__(20);

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * SearchBar Component for tingle
	 * @auther caoke.ck
	 *
	 * Copyright 2014-2015, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	'use strict';
	
	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Context = __webpack_require__(1);
	var classnames = __webpack_require__(5);
	var Icon = __webpack_require__(21);
	
	var SearchBar = (function (_React$Component) {
	    _inherits(SearchBar, _React$Component);
	
	    function SearchBar(props) {
	        _classCallCheck(this, SearchBar);
	
	        _get(Object.getPrototypeOf(SearchBar.prototype), 'constructor', this).call(this, props);
	
	        var t = this;
	        t.state = {
	            focus: t.props.autoFocus,
	            empty: !t.props.value
	        };
	    }
	
	    _createClass(SearchBar, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            var t = this;
	            t.textfield = React.findDOMNode(t.refs.textfield);
	            if (t.props.autoFocus) {
	                t.handleFocus(true);
	            }
	        }
	    }, {
	        key: 'handleFocus',
	        value: function handleFocus(focus) {
	            var t = this;
	            if (focus) {
	                if (!t._lock) {
	                    t._lock = true;
	                    setTimeout(function () {
	                        delete t._lock;
	                    }, 20);
	                    clearTimeout(t._timeout);
	                    t.setState({
	                        focus: focus
	                    });
	                    t.textfield.focus();
	                }
	            } else {
	                t._timeout = setTimeout(function () {
	                    t.setState({
	                        focus: focus
	                    });
	                }, 200);
	            }
	        }
	    }, {
	        key: 'handleChange',
	        value: function handleChange(e) {
	            var t = this;
	            var value = e.target.value;
	            t.setState({
	                empty: !value
	            });
	            t.props.onChange(value);
	        }
	    }, {
	        key: 'handleDelete',
	        value: function handleDelete() {
	            var t = this;
	            t.handleChange({
	                target: {
	                    value: t.textfield.value = ''
	                }
	            });
	            t.handleFocus(true);
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var t = this;
	            return React.createElement(
	                'div',
	                { ref: 'root', className: 'tSearchBar tFBH tBCc tPR' },
	                React.createElement('input', { ref: 'textfield', type: 'text', className: 'tSearchBarTextfield tDB tFB1 tR5 tBCf tFS14', value: t.props.value, onFocus: t.handleFocus.bind(t, true), onBlur: t.handleFocus.bind(t, false), onChange: t.handleChange.bind(t) }),
	                React.createElement(
	                    'span',
	                    { ref: 'label', className: classnames('tSearchBarLabel tPA', {
	                            'active': t.state.focus || !t.state.empty,
	                            'tFBH tFBAC tFBJC': !t.state.focus && t.state.empty
	                        }), onClick: t.handleFocus.bind(t, true) },
	                    React.createElement(Icon, { id: 'tingle-search-bar-search', className: 'tSearchBarQueryIcon tDIB tMR6' }),
	                    React.createElement(
	                        'span',
	                        { className: classnames('tFC9', {
	                                'tDN': t.state.focus || !t.state.empty
	                            }) },
	                        t.props.placeholder
	                    )
	                ),
	                React.createElement(
	                    'span',
	                    { ref: 'delBtn', className: classnames('tSearchBarDelBtn tPA tP10', {
	                            'tDIB active': !t.state.empty,
	                            'tDN': t.state.empty
	                        }), onClick: t.handleDelete.bind(t) },
	                    React.createElement(Icon, { id: 'tingle-search-bar-clear', className: 'tSearchBarDelIcon tDIB' })
	                )
	            );
	        }
	    }]);
	
	    return SearchBar;
	})(React.Component);
	
	SearchBar.defaultProps = {
	    placeholder: '搜索',
	    value: '',
	    autoFocus: false,
	    onChange: Context.noop
	};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	SearchBar.propTypes = {
	    placeholder: React.PropTypes.string,
	    value: React.PropTypes.string,
	    autoFocus: React.PropTypes.bool,
	    onChange: React.PropTypes.func
	};
	
	module.exports = SearchBar;

/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(22);

/***/ },
/* 22 */
/***/ function(module, exports) {

	/**
	 * Icon Component for tinglejs
	 * @auther hanyu.hy
	 *
	 * Copyright 2014-2015, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	'use strict';
	
	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Icon = (function (_React$Component) {
	    _inherits(Icon, _React$Component);
	
	    function Icon(props) {
	        _classCallCheck(this, Icon);
	
	        _get(Object.getPrototypeOf(Icon.prototype), 'constructor', this).call(this, props);
	    }
	
	    _createClass(Icon, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement('svg', { className: "tIcon " + this.props.className,
	                dangerouslySetInnerHTML: { __html: '<use xlink:href="#' + this.props.id + '"/>' } });
	        }
	    }]);
	
	    return Icon;
	})(React.Component);
	
	module.exports = Icon;

/***/ },
/* 23 */
/***/ function(module, exports) {

	"use strict";
	
	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var PickerList = (function (_React$Component) {
	    _inherits(PickerList, _React$Component);
	
	    function PickerList(props) {
	        _classCallCheck(this, PickerList);
	
	        _get(Object.getPrototypeOf(PickerList.prototype), "constructor", this).call(this, props);
	        var t = this;
	    }
	
	    _createClass(PickerList, [{
	        key: "render",
	        value: function render() {
	            var t = this;
	            return React.createElement(
	                "div",
	                { className: "tPickerList" },
	                t.props.children
	            );
	        }
	    }]);
	
	    return PickerList;
	})(React.Component);
	
	PickerList.defaultProps = {};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	PickerList.propTypes = {};
	
	PickerList.displayName = "PickerList";
	
	module.exports = PickerList;

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(25);

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Field Component for tingle
	 * @auther gnosaij
	 *
	 * Copyright 2014-2015, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	'use strict';
	
	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var classnames = __webpack_require__(5);
	
	var Field = (function (_React$Component) {
	    _inherits(Field, _React$Component);
	
	    function Field(props) {
	        _classCallCheck(this, Field);
	
	        _get(Object.getPrototypeOf(Field.prototype), 'constructor', this).call(this, props);
	    }
	
	    _createClass(Field, [{
	        key: 'render',
	        value: function render() {
	            var t = this;
	
	            return React.createElement(
	                'div',
	                { className: classnames('tField tPL10 tPR10 tFS14 tFBH tFBAC', _defineProperty({}, t.props.className, !!t.props.className)) },
	                t.props.label && React.createElement(
	                    'div',
	                    { className: 'tFieldLabel tMR10 tLH1_3 tFC6' },
	                    t.props.label
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'tFB1 tPR tFC9' },
	                    t.props.children
	                )
	            );
	        }
	    }]);
	
	    return Field;
	})(React.Component);
	
	Field.defaultProps = {
	    label: ''
	};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	Field.propTypes = {
	    label: React.PropTypes.string
	};
	
	module.exports = Field;

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(27);

/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Dialog Component for tinglejs
	 */
	
	'use strict';
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var classnames = __webpack_require__(5);
	var Layer = __webpack_require__(28);
	
	var Dialog = (function (_React$Component) {
	    _inherits(Dialog, _React$Component);
	
	    function Dialog(props) {
	        _classCallCheck(this, Dialog);
	
	        _get(Object.getPrototypeOf(Dialog.prototype), 'constructor', this).call(this, props);
	
	        this.state = {
	            show: this.props.show
	        };
	    }
	
	    _createClass(Dialog, [{
	        key: 'show',
	        value: function show(options) {
	            var state = this.state,
	                prop = options ? options : this.props;
	
	            state.show = true;
	            state.title = prop.title;
	            state.children = prop.children;
	            state.buttons = prop.buttons;
	
	            this.setState(state);
	        }
	    }, {
	        key: 'hide',
	        value: function hide() {
	            this.state.show = false;
	            this.setState(this.state);
	        }
	    }, {
	        key: 'handleClick',
	        value: function handleClick(callback) {
	            this.hide();
	            callback();
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var t = this;
	            var btn = '';
	            var _props = this.props;
	            var className = _props.className;
	            var show = _props.show;
	            var width = _props.width;
	
	            var other = _objectWithoutProperties(_props, ['className', 'show', 'width']);
	
	            var title = this.state.title;
	            var buttons = this.state.buttons;
	            var classSet = _defineProperty({
	                'tDialog tR5 tPT20': true
	            }, this.props.className, !!this.props.className);
	
	            btn = buttons && buttons.map(function (item, i) {
	                var callback = item.callback || function () {};
	                return React.createElement(
	                    'div',
	                    { key: 'dialogButton' + i, className: "tFB1" + (item.primary ? " tDialogPrimary" : ""), onClick: t.handleClick.bind(t, callback) },
	                    item.children
	                );
	            });
	
	            return React.createElement(
	                Layer,
	                _extends({ show: this.state.show, width: width || 270 }, other),
	                React.createElement(
	                    'div',
	                    { className: classnames(classSet) },
	                    title ? React.createElement(
	                        'h1',
	                        { className: 'tFAC tFS16 tFC3' },
	                        title
	                    ) : '',
	                    React.createElement(
	                        'div',
	                        { className: 'tPL16 tPR16 tPT8 tPB20 tFS14 tFC3 tFAC tLH1_5' },
	                        this.state.children
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'tDialogOperation tFBH tFAC tH44 tFS16 tLH44' },
	                        btn
	                    )
	                )
	            );
	        }
	    }]);
	
	    return Dialog;
	})(React.Component);
	
	Dialog.defaultProps = {
	    buttons: [{
	        children: '确 定',
	        callback: function callback() {},
	        primary: true
	    }],
	    mask: true,
	    show: false
	};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	Dialog.propTypes = {};
	
	var WRAPPER_ID = '__TingleGlobalDialog__';
	var doc = document;
	
	Dialog.global = null;
	
	function show(options) {
	    // 只有首次全局调用时，才会创建全局实例
	    if (!Dialog.global) {
	        var wrapper = doc.getElementById(WRAPPER_ID);
	
	        var other = _objectWithoutProperties(options, []);
	
	        if (!wrapper) {
	            wrapper = doc.createElement('div');
	            wrapper.id = WRAPPER_ID;
	            doc.body.appendChild(wrapper);
	        }
	
	        Dialog.global = React.render(React.createElement(Dialog, other), wrapper);
	    }
	    Dialog.global.show(options);
	}
	
	Dialog.alert = function (options) {
	    options.buttons = [{
	        children: options.confirmText || '确 定',
	        callback: options.onConfirm,
	        primary: true
	    }];
	    show(options);
	};
	
	Dialog.confirm = function (options) {
	    options.buttons = [{
	        children: options.cancelText || '取 消',
	        callback: options.onCancel
	    }, {
	        children: options.confirmText || '确 定',
	        callback: options.onConfirm,
	        primary: true
	    }];
	    show(options);
	};
	
	module.exports = Dialog;

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(29);

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Layer Component for tinglejs
	 */
	
	'use strict';
	
	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Mask = __webpack_require__(30);
	
	var Layer = (function (_React$Component) {
	    _inherits(Layer, _React$Component);
	
	    function Layer(props) {
	        _classCallCheck(this, Layer);
	
	        _get(Object.getPrototypeOf(Layer.prototype), 'constructor', this).call(this, props);
	        this.state = {};
	    }
	
	    _createClass(Layer, [{
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	            document.documentElement.style.height = '100%';
	            document.body.style.height = '100%';
	            this.handleMask(this.props);
	        }
	    }, {
	        key: 'componentWillUpdate',
	        value: function componentWillUpdate(props, state) {
	            this.handleMask(props);
	        }
	    }, {
	        key: 'handleMask',
	        value: function handleMask(props) {
	            var last = this.state.showMask;
	            this.state.showMask = false;
	
	            if (props.mask) {
	                if (props.show) {
	                    this.state.zIndex = Layer._getIndex();
	                    this.state.showMask = true;
	                } else {
	                    last && Layer._setIndex();
	                }
	            }
	        }
	    }, {
	        key: 'getStyle',
	        value: function getStyle() {
	            var prop = this.props,
	                show = prop.show,
	                width = ('width' in prop),
	                height = ('height' in prop),
	                full = prop.mode == 'full',
	                top = ('top' in prop),
	                bottom = ('bottom' in prop),
	                left = ('left' in prop),
	                right = ('right' in prop),
	                style = {
	                width: full || !width ? '100%' : prop.width,
	                height: full ? '100%' : height ? prop.height : 'auto'
	            };
	
	            if (full) {
	                style.top = 0;
	                style.left = 0;
	            } else {
	                if (top) {
	                    style.top = prop.top;
	                } else if (bottom) {
	                    style.bottom = prop.bottom;
	                } else {
	                    style.top = '50%';
	                    style['WebkitTransform'] = (style['WebkitTransform'] || '') + ' translateY(-50%)';
	                    style['transform'] = (style['transform'] || '') + ' translateY(-50%)';
	                }
	
	                if (left) {
	                    style.left = prop.left;
	                } else if (right) {
	                    style.right = prop.right;
	                } else {
	                    style.left = '50%';
	                    style['WebkitTransform'] = (style['WebkitTransform'] || '') + ' translateX(-50%)';
	                    style['transform'] = (style['transform'] || '') + ' translateX(-50%)';
	                }
	            }
	
	            style.zIndex = this.state.zIndex || prop.zIndex;
	            style.display = show ? 'block' : 'none';
	
	            return style;
	        }
	    }, {
	        key: 'handleClick',
	        value: function handleClick(e) {
	            this.props.onClick(e);
	        }
	    }, {
	        key: 'hanldeHide',
	        value: function hanldeHide() {
	            this.props.onHide();
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var mask = this.state.showMask ? React.createElement(Mask, { onHide: this.hanldeHide.bind(this), zIndex: this.state.zIndex - 1, closeable: !!this.props.closeable, visible: true, opacity: 0.2 }) : '';
	            return React.createElement(
	                'div',
	                { onClick: this.handleClick.bind(this) },
	                mask,
	                React.createElement(
	                    'div',
	                    { className: 'tLayer', style: this.getStyle() },
	                    this.props.children
	                )
	            );
	        }
	    }]);
	
	    return Layer;
	})(React.Component);
	
	Layer.defaultProps = {
	    onClick: function onClick() {},
	    onHide: function onHide() {},
	    zIndex: 1001,
	    mask: true,
	    show: false
	};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	Layer.propTypes = {};
	
	Layer._zIndex = 1000;
	Layer._getIndex = function () {
	    Layer._zIndex += 2;
	    return Layer._zIndex;
	};
	Layer._setIndex = function () {
	    Layer._zIndex -= 2;
	};
	
	module.exports = Layer;

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(31);

/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var classnames = __webpack_require__(5);
	
	var Mask = (function (_React$Component) {
	    _inherits(Mask, _React$Component);
	
	    function Mask(props) {
	        _classCallCheck(this, Mask);
	
	        _get(Object.getPrototypeOf(Mask.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            opacity: props.opacity,
	            zIndex: props.zIndex,
	            onHide: props.onHide,
	            closeable: props.closeable,
	            visible: props.visible
	        };
	    }
	
	    /*
	        options.onHide
	        options.onClick
	        options.opacity
	    */
	
	    _createClass(Mask, [{
	        key: 'show',
	        value: function show(options) {
	            var t = this;
	
	            options = options || {};
	
	            t.setState({
	                opacity: 'opacity' in options ? options.opacity : t.props.opacity,
	                zIndex: options.zIndex || t.props.zIndex,
	                onHide: options.onHide || t.props.onHide,
	                closeable: 'closeable' in options ? options.closeable : t.props.closeable,
	                visible: true
	            });
	        }
	    }, {
	        key: 'hide',
	        value: function hide(force) {
	            var t = this;
	            if (force || t.state.closeable) {
	                t.state.visible = false;
	                t.setState(t.state);
	                t.state.onHide.call(t);
	            }
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var t = this;
	            var cls = classnames(_defineProperty({
	                tMask: true,
	                visible: t.state.visible
	            }, t.props.className, !!t.props.className));
	
	            return React.createElement('div', { ref: 'root', className: cls, style: {
	                    backgroundColor: 'rgba(0, 0, 0, ' + t.state.opacity + ')',
	                    opacity: t.state.visible ? 1 : 0,
	                    zIndex: t.state.zIndex
	                }, onClick: t.hide.bind(this, false) });
	        }
	    }]);
	
	    return Mask;
	})(React.Component);
	
	Mask.defaultProps = {
	    className: '',
	    zIndex: 1000,
	    opacity: 0.5,
	    visible: false,
	    onHide: function onHide() {},
	    closeable: true
	};
	
	var WRAPPER_ID = '__TingleGlobalMask__';
	var doc = document;
	var wrapper = doc.getElementById(WRAPPER_ID);
	if (!wrapper) {
	    wrapper = doc.createElement('div');
	    wrapper.id = WRAPPER_ID;
	    doc.body.appendChild(wrapper);
	}
	
	Mask.global = null;
	
	Mask.show = function (options) {
	    // 只有首次全局调用时，才会创建全局实例
	    if (!Mask.global) {
	        var wrapper = doc.getElementById(WRAPPER_ID);
	        if (!wrapper) {
	            wrapper = doc.createElement('div');
	            wrapper.id = WRAPPER_ID;
	            doc.body.appendChild(wrapper);
	        }
	        Mask.global = React.render(React.createElement(Mask, { closeable: false }), wrapper);
	    }
	    Mask.global.show(options);
	};
	
	Mask.hide = function () {
	    Mask.global && Mask.global.hide(true);
	};
	
	module.exports = Mask;

/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(33);

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * LoadMore Component for tingle
	 * @author iThans
	 *
	 * Copyright 2014-2015, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	'use strict';
	
	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Context = __webpack_require__(1);
	var classnames = __webpack_require__(5);
	
	var LOADING = 'loading';
	var NOMORE = 'noMore';
	
	var LoadMore = (function (_React$Component) {
	    _inherits(LoadMore, _React$Component);
	
	    function LoadMore(props) {
	        _classCallCheck(this, LoadMore);
	
	        _get(Object.getPrototypeOf(LoadMore.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            load: LOADING
	        };
	    }
	
	    // todo 是否需要加载完成的处理
	
	    _createClass(LoadMore, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            var t = this;
	
	            document.addEventListener('scroll', this._onScroll.bind(t), false);
	            document.addEventListener('resize', this._onScroll.bind(t), false);
	        }
	    }, {
	        key: 'componentWillUnmount',
	        value: function componentWillUnmount() {
	            var t = this;
	
	            document.removeEventListener('scroll', this._onScroll.bind(t), false);
	            document.removeEventListener('resize', this._onScroll.bind(t), false);
	        }
	    }, {
	        key: 'loaded',
	        value: function loaded() {
	            this.setState({ load: LOADING });
	            this.isLoading = false;
	            this._unLock();
	        }
	
	        // lock
	    }, {
	        key: 'loading',
	        value: function loading() {
	            this.isLoading = true;
	        }
	    }, {
	        key: '_canLoad',
	        value: function _canLoad() {
	            return !this.isLoading && this.state.load !== NOMORE;
	        }
	    }, {
	        key: 'noMore',
	        value: function noMore() {
	            this.setState({ load: NOMORE });
	            this._unLock();
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _classnames;
	
	            var t = this;
	            var text = '';
	            switch (t.state.load) {
	                case LOADING:
	                    text = t.props.loadingText;
	                    break;
	                case NOMORE:
	                    text = t.props.noMoreText;
	            }
	            return React.createElement(
	                'div',
	                { ref: 'root', className: classnames((_classnames = {
	                        'tLoadMore': true
	                    }, _defineProperty(_classnames, t.props.className, !!t.props.className), _defineProperty(_classnames, t.state.load, !!t.state.load), _classnames)) },
	                text
	            );
	        }
	    }, {
	        key: '_isVisible',
	        value: function _isVisible(el, offset) {
	            var t = this;
	            offset = t.props.offset >= 50 ? t.props.offset : 50;
	            // Check if the element is visible
	            // https://github.com/jquery/jquery/blob/740e190223d19a114d5373758127285d14d6b71e/src/css/hiddenVisibleSelectors.js
	            if (!el.offsetWidth || !el.offsetHeight) {
	                return false;
	            }
	
	            var eltRect = el.getBoundingClientRect();
	
	            return eltRect.top < document.documentElement.clientHeight + offset;
	        }
	    }, {
	        key: '_onScroll',
	        value: function _onScroll() {
	            var t = this;
	
	            var el = React.findDOMNode(t.refs.root);
	
	            if (!el || !t._canLoad()) {
	                return;
	            }
	
	            if (t._isVisible(el, this.offset)) {
	                t.loading();
	                t._handleLoadEvents();
	            }
	        }
	    }, {
	        key: '_handleLoadEvents',
	        value: function _handleLoadEvents() {
	            this.props.onLoadMore && this.props.onLoadMore({ loadState: this.state.load });
	        }
	    }, {
	        key: '_isLoading',
	        value: function _isLoading() {
	            return this.isLoading;
	        }
	    }, {
	        key: '_unLock',
	        value: function _unLock() {
	            this.isLoading = false;
	        }
	    }]);
	
	    return LoadMore;
	})(React.Component);
	
	LoadMore.defaultProps = {
	    offset: 50,
	    onLoadMore: Context.noop,
	    loadingText: '正在加载中…',
	    noMoreText: '没有啦！'
	};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	LoadMore.propTypes = {
	    offset: React.PropTypes.number,
	    onLoadMore: React.PropTypes.func,
	    loadingText: React.PropTypes.string,
	    noMoreText: React.PropTypes.string
	};
	
	module.exports = LoadMore;

/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(35);

/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * NumberField Component for tingle
	 * @auther fushan
	 *
	 * Copyright 2014-2015, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	'use strict';
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var classnames = __webpack_require__(5);
	var Context = __webpack_require__(1);
	var TextField = __webpack_require__(36);
	
	var numberRegExp = /^(\d+\.\d*)|(\d+\.)|\d+/;
	
	/**
	 * NumberField Component for Tingle
	 */
	
	var NumberField = (function (_React$Component) {
	    _inherits(NumberField, _React$Component);
	
	    function NumberField(props) {
	        _classCallCheck(this, NumberField);
	
	        _get(Object.getPrototypeOf(NumberField.prototype), 'constructor', this).call(this, props);
	    }
	
	    /**
	     * 复用TextField的配置
	     * @note 这种引用方式的写法很危险 有空再来改进
	     */
	
	    _createClass(NumberField, [{
	        key: 'handleChange',
	        value: function handleChange(newValue) {
	            this.props.onChange(newValue);
	        }
	    }, {
	        key: 'numberFilter',
	        value: function numberFilter(newValue) {
	            var matches = newValue.match(numberRegExp);
	            var number = '';
	            if (matches) {
	                number = matches[0];
	            }
	            return number;
	        }
	    }, {
	        key: 'handleBlur',
	        value: function handleBlur(newValue) {
	            var cleanedNewValue = newValue.replace(/\.$/, '').replace(/^0*([0-9]+)/, '$1');
	            if (cleanedNewValue !== newValue) {
	                this.props.onChange(cleanedNewValue);
	            }
	            this.props.onBlur(cleanedNewValue);
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var t = this;
	            return React.createElement(TextField, _extends({}, t.props, {
	                type: "text",
	                filter: t.numberFilter,
	                onBlur: t.handleBlur.bind(t),
	                onChange: t.handleChange.bind(t)
	            }));
	        }
	    }]);
	
	    return NumberField;
	})(React.Component);
	
	NumberField.defaultProps = TextField.defaultProps;
	NumberField.propTypes = TextField.propTypes;
	
	module.exports = NumberField;

/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(37);

/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Field Component for tingle
	 * @auther gnosaij
	 *
	 * Copyright 2014-2015, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	'use strict';
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Context = __webpack_require__(1);
	var Field = __webpack_require__(24);
	var classnames = __webpack_require__(5);
	
	var TextField = (function (_React$Component) {
	    _inherits(TextField, _React$Component);
	
	    function TextField(props) {
	        _classCallCheck(this, TextField);
	
	        _get(Object.getPrototypeOf(TextField.prototype), 'constructor', this).call(this, props);
	    }
	
	    _createClass(TextField, [{
	        key: 'handleChange',
	        value: function handleChange(e) {
	            var value = this.props.filter(e.target.value);
	            this.props.onChange(value);
	        }
	    }, {
	        key: 'handleFocus',
	        value: function handleFocus(e) {
	            var t = this;
	            t.props.onFocus(t.props.value);
	
	            // 处理placeholder
	            if (t.props.value.length) return;
	            t.refs.placeholder.getDOMNode().style.display = 'none';
	        }
	    }, {
	        key: 'handleBlur',
	        value: function handleBlur(e) {
	            var t = this;
	            t.props.onBlur(t.props.value);
	
	            // 处理placeholder
	            if (t.props.value.length) return;
	            t.refs.placeholder.getDOMNode().style.display = 'block';
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var t = this;
	            return React.createElement(
	                Field,
	                _extends({}, t.props, { className: classnames('tTextField', t.props.className) }),
	                React.createElement(
	                    'div',
	                    { ref: 'placeholder', className: classnames('tOmit tTextFieldPlaceholder', {
	                            tDN: !!t.props.value
	                        }) },
	                    t.props.placeholder
	                ),
	                React.createElement('input', { className: 'tFC9 tTextFieldInput',
	                    type: t.props.type, value: t.props.value, readOnly: t.props.readOnly,
	                    onChange: t.handleChange.bind(t),
	                    onFocus: t.handleFocus.bind(t),
	                    onBlur: t.handleBlur.bind(t) })
	            );
	        }
	    }]);
	
	    return TextField;
	})(React.Component);
	
	TextField.defaultProps = {
	    className: '',
	    filter: function filter(v) {
	        return v;
	    },
	    label: '',
	    onChange: Context.noop,
	    onFocus: Context.noop,
	    onBlur: Context.noop,
	    placeholder: '',
	    readOnly: false,
	    type: 'text',
	    value: ''
	};
	
	TextField.propTypes = {
	    className: React.PropTypes.string,
	    filter: React.PropTypes.func,
	    label: React.PropTypes.string,
	    onChange: React.PropTypes.func,
	    onFocus: React.PropTypes.func,
	    onBlur: React.PropTypes.func,
	    placeholder: React.PropTypes.string,
	    readOnly: React.PropTypes.bool,
	    type: React.PropTypes.string
	};
	
	module.exports = TextField;

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(39);

/***/ },
/* 39 */
/***/ function(module, exports) {

	/**
	 * OnOff Component for tinglejs
	 */
	"use strict";
	
	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var OnOff = (function (_React$Component) {
	    _inherits(OnOff, _React$Component);
	
	    function OnOff(props) {
	        _classCallCheck(this, OnOff);
	
	        _get(Object.getPrototypeOf(OnOff.prototype), "constructor", this).call(this, props);
	        // this.state = {
	        //     on:t.this.props.on
	        // }
	    }
	
	    /*
	    * options
	    */
	
	    _createClass(OnOff, [{
	        key: "handleChange",
	        value: function handleChange() {
	            var t = this;
	            // t.state.on=!t.state.on;
	            // t.setState(t.state);
	            t.props.onChange(!t.props.on);
	        }
	    }, {
	        key: "render",
	        value: function render() {
	            var t = this;
	            var cx = React.addons.classSet;
	            var classSet = _defineProperty({
	                "tOnOffPannel": true,
	                "tOn": t.props.on
	            }, t.props.className, !!t.props.className);
	            return React.createElement(
	                "div",
	                { className: cx(classSet), onClick: t.handleChange.bind(this) },
	                React.createElement("div", { className: "tOnOffRadius" })
	            );
	        }
	    }]);
	
	    return OnOff;
	})(React.Component);
	
	OnOff.defaultProps = {
	    on: true,
	    onChange: function onChange() {}
	};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	OnOff.propTypes = {
	    on: React.PropTypes.bool,
	    onChange: React.PropTypes.func
	};
	
	module.exports = OnOff;

/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(41);

/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * OnOffField Component for tinglejs
	 * @auther ruiyang.dry
	 *
	 * Copyright 2014-2015, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	'use strict';
	
	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var OnOff = __webpack_require__(38);
	var classnames = __webpack_require__(5);
	
	var OnOffField = (function (_React$Component) {
	    _inherits(OnOffField, _React$Component);
	
	    function OnOffField(props) {
	        _classCallCheck(this, OnOffField);
	
	        _get(Object.getPrototypeOf(OnOffField.prototype), 'constructor', this).call(this, props);
	    }
	
	    _createClass(OnOffField, [{
	        key: 'handleChange',
	        value: function handleChange(on) {
	            console.log(arguments);
	            this.props.onChange(on);
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var t = this;
	            return React.createElement(
	                'div',
	                { className: classnames(_defineProperty({
	                        'tPL10 tPR10 tFBH tFBAC tFS14 tOnOffField ': true
	                    }, t.props.className, !!t.props.className)) },
	                React.createElement(
	                    'div',
	                    { className: 'tMR10 tLH1_3 tFC6 tFieldLabel' },
	                    t.props.label
	                ),
	                React.createElement('div', { className: 'tFB1' }),
	                React.createElement(OnOff, { on: this.props.on, onChange: this.handleChange.bind(this) })
	            );
	        }
	    }]);
	
	    return OnOffField;
	})(React.Component);
	
	OnOffField.defaultProps = {};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	OnOffField.propTypes = {
	    label: React.PropTypes.string.isRequired
	};
	
	module.exports = OnOffField;

/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(43);

/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, '__esModule', {
	    value: true
	});
	
	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var _tingleIcon = __webpack_require__(21);
	
	var _tingleIcon2 = _interopRequireDefault(_tingleIcon);
	
	var PhotoField = (function (_React$Component) {
	    _inherits(PhotoField, _React$Component);
	
	    function PhotoField(props) {
	        _classCallCheck(this, PhotoField);
	
	        _get(Object.getPrototypeOf(PhotoField.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            photoUrl: props.photoUrl
	        };
	    }
	
	    _createClass(PhotoField, [{
	        key: 'showPhotoUtil',
	        value: function showPhotoUtil() {
	            var t = this;
	            WindVane.call('WVCamera', 'takePhoto', {
	                'type': '0'
	            }, function (e1) {
	                WindVane.call('WVCamera', 'confirmUploadPhoto', {
	                    path: e1.localPath
	                }, function (e2) {
	                    t.setState({
	                        photoUrl: e2.resourceURL
	                    });
	                }, function () {
	                    alert('上传失败！');
	                });
	            }, function (e) {});
	        }
	    }, {
	        key: 'showPhoto',
	        value: function showPhoto() {}
	    }, {
	        key: 'render',
	        value: function render() {
	            var t = this;
	            return React.createElement(
	                'div',
	                { className: "tPhotoField tFBH tFBAC tPR4 " + t.props.className },
	                React.createElement(
	                    'div',
	                    { className: 'tMR10' },
	                    t.props.label
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'tFB1 tFBH tFBAC tFBJE' },
	                    t.state.photoUrl ? React.createElement('img', { className: 'tPhotoFieldPreview',
	                        src: t.state.photoUrl,
	                        onClick: t.showPhoto.bind(this) }) : '',
	                    React.createElement(
	                        'div',
	                        { className: 'tPhotoFieldIcon tML4',
	                            onClick: t.showPhotoUtil.bind(this) },
	                        React.createElement(_tingleIcon2['default'], { name: t.props.icon })
	                    )
	                )
	            );
	        }
	    }]);
	
	    return PhotoField;
	})(React.Component);
	
	PhotoField.defaultProps = {
	    photoUrl: ''
	};
	
	exports.PhotoField = PhotoField;

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * SelectField Component for tingle
	 * @auther caoke.ck
	 *
	 * Copyright 2014-2015, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	'use strict';
	
	module.exports = __webpack_require__(45);

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * SelectField Component for tingle
	 * @auther caoke.ck
	 *
	 * Copyright 2014-2015, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	'use strict';
	
	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Context = __webpack_require__(1);
	var classnames = __webpack_require__(5);
	var Slot = __webpack_require__(46);
	var Icon = __webpack_require__(21);
	
	var SelectField = (function (_React$Component) {
	    _inherits(SelectField, _React$Component);
	
	    function SelectField(props) {
	        _classCallCheck(this, SelectField);
	
	        _get(Object.getPrototypeOf(SelectField.prototype), 'constructor', this).call(this, props);
	        var t = this;
	        t.state = {
	            value: props.value,
	            confirmedValue: props.value
	        };
	    }
	
	    // 外部变更选中值
	
	    _createClass(SelectField, [{
	        key: 'componentWillReceiveProps',
	        value: function componentWillReceiveProps(nextProps) {
	            var t = this;
	            t.setState({
	                value: nextProps.value,
	                confirmedValue: nextProps.value
	            });
	        }
	    }, {
	        key: 'handleClick',
	        value: function handleClick() {
	            var t = this;
	            !t.props.readOnly && t.refs.slot.show();
	        }
	    }, {
	        key: 'handleChange',
	        value: function handleChange(value) {
	            this.setState({
	                value: value
	            });
	        }
	    }, {
	        key: 'handleConfirm',
	        value: function handleConfirm(value) {
	            this.props.onChange(value);
	        }
	    }, {
	        key: 'handleCancel',
	        value: function handleCancel() {
	            var t = this;
	            t.setState({
	                value: t.state.confirmedValue
	            });
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var t = this;
	            return React.createElement(
	                'div',
	                { className: classnames('tPL10 tPR10 tFBH tFBAC tFS14 tSelectField ', _defineProperty({}, t.props.className, !!t.props.className)) },
	                React.createElement(
	                    'div',
	                    { className: 'tMR10 tLH1_3 tFC6 tSelectFieldLabel' },
	                    t.props.label
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'tFB1 tPR tFC9', onClick: t.handleClick.bind(t) },
	                    React.createElement(
	                        'div',
	                        { className: 'tSelectFieldValue tOmit tFC9' },
	                        t.props.formatter(t.state.confirmedValue),
	                        React.createElement(Icon, { className: 'tSelectFieldIcon tML6 tFCd', id: 'tingle-select-field-arrow-right' })
	                    )
	                ),
	                React.createElement(Slot, { ref: 'slot', title: t.props.label, data: t.props.data, value: t.state.value, onChange: t.handleChange.bind(t), onCancel: t.handleCancel.bind(t), onConfirm: t.handleConfirm.bind(t) })
	            );
	        }
	    }]);
	
	    return SelectField;
	})(React.Component);
	
	SelectField.defaultProps = {
	    data: [],
	    formatter: function formatter(value) {
	        return value.map(function (n) {
	            return n.text;
	        }).join(' ');
	    },
	    onChange: Context.noop,
	    readOnly: false
	};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	SelectField.propTypes = {
	    className: React.PropTypes.string,
	    label: React.PropTypes.string.isRequired,
	    data: React.PropTypes.array.isRequired,
	    value: React.PropTypes.array.isRequired,
	    formatter: React.PropTypes.func,
	    onChange: React.PropTypes.func,
	    readOnly: React.PropTypes.bool
	};
	
	SelectField.formatDataValue = Slot.formatDataValue;
	
	SelectField.formatColumnValue = Slot.formatColumnValue;
	
	module.exports = SelectField;

/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Slot Component for tingle
	 * @auther minjie.lmj
	 *
	 * Copyright 2014-2015, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	'use strict';
	
	module.exports = __webpack_require__(47);

/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Slot Component for tinglejs
	 */
	
	'use strict';
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(_x3, _x4, _x5) { var _again = true; _function: while (_again) { var object = _x3, property = _x4, receiver = _x5; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x3 = parent; _x4 = property; _x5 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var classnames = __webpack_require__(5);
	var Layer = __webpack_require__(28);
	var Scroller = __webpack_require__(16);
	
	// 滑动效果的动画函数
	var LINEAR_EASE = {
	    style: 'linear',
	    fn: function fn(k) {
	        return k;
	    }
	};
	
	var Slot = (function (_React$Component) {
	    _inherits(Slot, _React$Component);
	
	    function Slot(props) {
	        _classCallCheck(this, Slot);
	
	        _get(Object.getPrototypeOf(Slot.prototype), 'constructor', this).call(this, props);
	
	        var t = this;
	
	        // 初始状态
	        t.state = {
	            show: false,
	            title: t.props.title,
	            data: t.props.data,
	            selectedIndex: t.findSelectedIndex(t.props)
	        };
	    }
	
	    _createClass(Slot, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            var t = this;
	
	            // 获取所有 scroller 的容器
	            var slotBody = React.findDOMNode(t.refs.root).querySelector('.tSlotBody');
	
	            // 获取选项高度
	            var li = slotBody.querySelector('li');
	            t._itemHeight = parseInt(getComputedStyle(li, null).height);
	
	            // tap 事件触发选中状态变更
	            slotBody.addEventListener('iscroll:tap', function (e) {
	                var className = e.target.className;
	                var match = /tSlotItem(\d+)_(\d+)/.exec(className);
	                if (match && className.indexOf('tSlotItemActive') === -1) {
	                    var column = parseInt(match[1]);
	                    var index = parseInt(match[2]);
	                    t.props.onChange(t.getData(column, index), column, index);
	                }
	            }, false);
	
	            // 初始化滚动的标记
	            t._willRefresh = true;
	        }
	    }, {
	        key: 'componentDidUpdate',
	        value: function componentDidUpdate() {
	            var t = this;
	
	            // 可见的时候滚动到选中的选项
	            if (t.state.show && t._willRefresh) {
	                t._willRefresh = false;
	                t.scrollAll(200);
	            }
	        }
	
	        // 减少渲染次数
	    }, {
	        key: 'componentWillReceiveProps',
	        value: function componentWillReceiveProps(nextProps) {
	            var t = this;
	
	            var data = nextProps.data;
	            var selectedIndex = t.findSelectedIndex(nextProps);
	
	            // 数据变化需要重新初始化 scroller
	            var state = {};
	            var willRefresh = false;
	            if (!equals(t.state.data, data)) {
	                state.data = data;
	                willRefresh = true;
	            }
	            if (!equals(t.state.selectedIndex, selectedIndex)) {
	                state.selectedIndex = selectedIndex;
	                willRefresh = true;
	            }
	            if (willRefresh) {
	                t._willRefresh = true;
	                t.setState(state);
	            }
	        }
	    }, {
	        key: 'scrollAll',
	        value: function scrollAll(time) {
	            var t = this;
	            t.state.selectedIndex.forEach(function (index, column) {
	                var scroller = t.refs['scroller' + column].scroller;
	                scroller.scrollTo(0, -index * t._itemHeight, time, LINEAR_EASE);
	            });
	        }
	    }, {
	        key: 'findSelectedIndex',
	        value: function findSelectedIndex(props) {
	            var data = props.data;
	            var value = props.value;
	            var selectedIndex = [];
	
	            // 遍历数据模型
	            data.forEach(function (columnData, column) {
	
	                selectedIndex[column] = 0;
	
	                // 遍历每一列
	                for (var i = 0; i < columnData.length; i++) {
	
	                    // 定位选中值
	                    if (value[column] && columnData[i].value === value[column].value) {
	                        selectedIndex[column] = i;
	                        break;
	                    }
	                }
	            });
	
	            return selectedIndex;
	        }
	    }, {
	        key: 'handleScrollEnd',
	        value: function handleScrollEnd(column) {
	            var t = this;
	            var scroller = t.refs['scroller' + column].scroller;
	            var height = t._itemHeight;
	            var remainder = Math.abs(scroller.y % height);
	            var index = scroller.y / height;
	
	            // 没有滚动到选项，需要继续滚动一段距离
	            if (remainder) {
	
	                var func;
	                if (scroller.distY > 0) {
	                    // 向下滚动
	                    if (remainder < height * 0.7) {
	                        func = 'ceil';
	                    } else {
	                        func = 'floor';
	                    }
	                } else {
	                    // 向上滚动
	                    if (remainder > height * 0.3) {
	                        func = 'floor';
	                    } else {
	                        func = 'ceil';
	                    }
	                }
	
	                index = Math[func](scroller.y / height);
	            }
	
	            // 在 onChange 中设置状态
	            index = Math.abs(index);
	            t.props.onChange(t.getData(column, index), column, index);
	        }
	    }, {
	        key: 'show',
	        value: function show() {
	            this.setState({
	                show: true
	            });
	        }
	    }, {
	        key: 'hide',
	        value: function hide() {
	            this.setState({
	                show: false
	            });
	        }
	    }, {
	        key: 'handleCancel',
	        value: function handleCancel() {
	            var t = this;
	            try {
	                t.props.onCancel();
	            } finally {
	                t.hide();
	            }
	        }
	    }, {
	        key: 'handleConfirm',
	        value: function handleConfirm() {
	            var t = this;
	            try {
	                t.props.onConfirm(t.getData());
	            } finally {
	                t.hide();
	            }
	        }
	
	        // 获取值的时候指定变更的列，为什么要这么做，是因为有变更后我不直接改 state！
	    }, {
	        key: 'getData',
	        value: function getData(sColumn, sIndex) {
	            var t = this;
	            var ret = [];
	            var _t$state = t.state;
	            var data = _t$state.data;
	            var selectedIndex = _t$state.selectedIndex;
	
	            selectedIndex.forEach(function (index, column) {
	                ret[column] = data[column][column === sColumn ? sIndex : index];
	            });
	
	            return ret;
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var t = this;
	            var _t$props = t.props;
	            var className = _t$props.className;
	            var show = _t$props.show;
	            var bottom = _t$props.bottom;
	            var data = _t$props.data;
	            var width = _t$props.width;
	            var closeable = _t$props.closeable;
	
	            var other = _objectWithoutProperties(_t$props, ['className', 'show', 'bottom', 'data', 'width', 'closeable']);
	
	            return React.createElement(
	                Layer,
	                _extends({ onHide: t.handleCancel.bind(t), show: t.state.show, closeable: !(closeable === false), width: '100%', bottom: 0 }, other),
	                React.createElement(
	                    'div',
	                    { ref: 'root', className: classnames('tSlot tFS14', _defineProperty({}, className, !!className)) },
	                    React.createElement(
	                        'div',
	                        { className: 'tSlotHeader tFBH tFC3 tH44 tFBAC' },
	                        React.createElement(
	                            'div',
	                            { className: 'tSlotCancel tML12', onClick: t.handleCancel.bind(t) },
	                            '取消'
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'tFB1 tFS16 tFAC' },
	                            t.state.title
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'tSlotConfirm tMR12', onClick: t.handleConfirm.bind(t) },
	                            '完成'
	                        )
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'tSlotBody tFBH tFC9 tPR' },
	                        t.state.data.map(function (m, i) {
	                            return React.createElement(
	                                Scroller,
	                                { ref: 'scroller' + i, key: 'scroller' + i, className: 'tFB1', autoRefresh: t.state.show, tap: 'iscroll:tap', onScrollEnd: t.handleScrollEnd.bind(t, i) },
	                                React.createElement(
	                                    'ul',
	                                    null,
	                                    React.createElement('li', null),
	                                    React.createElement('li', null),
	                                    m.map(function (n, j) {
	                                        return React.createElement(
	                                            'li',
	                                            { key: n.value, className: classnames('tSlotItem' + i + '_' + j, {
	                                                    tSlotItemActive: j === t.state.selectedIndex[i]
	                                                }) },
	                                            n.text
	                                        );
	                                    }),
	                                    React.createElement('li', null),
	                                    React.createElement('li', null)
	                                )
	                            );
	                        })
	                    )
	                )
	            );
	        }
	    }]);
	
	    return Slot;
	})(React.Component);
	
	Slot.defaultProps = {
	    title: '',
	    value: [],
	    onConfirm: function onConfirm() {},
	    onCancel: function onCancel() {},
	    onChange: function onChange() {}
	};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	Slot.propTypes = {
	    className: React.PropTypes.string,
	    title: React.PropTypes.string,
	    data: React.PropTypes.array.isRequired,
	    value: React.PropTypes.array,
	    onConfirm: React.PropTypes.func,
	    onCancel: React.PropTypes.func,
	    onChange: React.PropTypes.func
	};
	
	// 格式化单列数据
	Slot.formatColumnValue = function (columnData, value) {
	
	    // 兼容简单选中值
	    var columnValue;
	    if (typeof value !== 'undefined') {
	        if (value.hasOwnProperty('value')) {
	            columnValue = value.value;
	        } else {
	            columnValue = value;
	        }
	    }
	    value = undefined;
	
	    // 遍历每一项
	    for (var i = 0; i < columnData.length; i++) {
	        var cell = columnData[i];
	
	        // 兼容非对象的数据
	        if (typeof cell !== 'object') {
	            cell = columnData[i] = {
	                text: cell,
	                value: cell
	            };
	        }
	
	        // 补全缺失数据
	        if (!cell.hasOwnProperty('text')) {
	            cell.text = cell.value;
	        }
	        if (!cell.hasOwnProperty('value')) {
	            cell.value = cell.text;
	        }
	
	        // 定位选中值
	        if (cell.value === columnValue) {
	            value = cell;
	        }
	    }
	
	    // 默认选中第一项
	    if (typeof value !== 'object') {
	        value = columnData[0];
	    }
	
	    return {
	        columnData: columnData,
	        columnValue: value
	    };
	};
	
	// 格式化多列数据
	Slot.formatDataValue = function () {
	    var data = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];
	    var value = arguments.length <= 1 || arguments[1] === undefined ? [] : arguments[1];
	
	    // 兼容单列数据的缩略写法
	    if (!isArray(data[0])) {
	        data = [data];
	    }
	    if (!isArray(value)) {
	        value = [value];
	    }
	
	    // 遍历数据模型
	    data.forEach(function (columnData, column) {
	
	        // 格式化列数据
	        var ret = Slot.formatColumnValue(columnData, value[column]);
	        value[column] = ret.columnValue;
	    });
	
	    return {
	        data: data,
	        value: value
	    };
	};
	
	module.exports = Slot;
	
	function isArray(arr) {
	    return Object.prototype.toString.call(arr) === '[object Array]';
	}
	
	function equals(obj1, obj2) {
	    return JSON.stringify(obj1) === JSON.stringify(obj2);
	}

/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Slide Component Style for tingle
	 * @author gnosaij
	 *
	 * Copyright 2014-2015, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	'use strict';
	
	module.exports = __webpack_require__(49);

/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Slide Component for tingle
	 * @author gnosaij
	 *
	 * Copyright 2014-2015, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	'use strict';
	
	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var classnames = __webpack_require__(5);
	var Context = __webpack_require__(1);
	var SlideNav = __webpack_require__(50);
	var _Context$TOUCH = Context.TOUCH;
	var START = _Context$TOUCH.START;
	var MOVE = _Context$TOUCH.MOVE;
	var END = _Context$TOUCH.END;
	var CANCEL = _Context$TOUCH.CANCEL;
	
	var support3D = Context.support['3d'];
	var supportTouch = Context.support.touch;
	var isPC = Context.is.pc;
	var noop = Context.noop;
	
	var win = window;
	var doc = document;
	var RESIZE = 'resize';
	var OFFSET = 'offset';
	var POS_MAP = {
	    '-1': '_prevEl',
	    '0': '_currentEl',
	    '1': '_nextEl'
	};
	
	// 创建translate字符串
	// TODO: translate(0,0) translateZ(0);
	var makeTranslate = (function () {
	    var prefix = support3D ? 'translate3d(' : 'translate(';
	    var suffix = support3D ? ', 0)' : ')';
	    var join = ',';
	
	    function v(n) {
	        n = '' + (n || 0);
	        n = n.indexOf('%') > -1 ? n : n + 'px';
	        return n;
	    }
	
	    return function (x, y) {
	        return prefix + v(x) + join + v(y) + suffix;
	    };
	})();
	
	// 获取兼容PC和Device的event对象的page属性
	var getCursorPage = supportTouch ? function (event, page) {
	    return event.changedTouches[0][page];
	} : function (event, page) {
	    return event[page];
	};
	
	var Slide = (function (_React$Component) {
	    _inherits(Slide, _React$Component);
	
	    function Slide(props) {
	        _classCallCheck(this, Slide);
	
	        _get(Object.getPrototypeOf(Slide.prototype), 'constructor', this).call(this, props);
	        var t = this;
	
	        // 能够触发切换的最小偏移量
	        this.effectiveDelta = 40;
	
	        // 切换动画的时长
	        // TOTO 根据手势滑动的速度来决定动画时长
	        this.duration = 200;
	
	        this.state = {
	            auto: props.auto,
	            // 当前item的索引值 以0开始
	            index: props.index,
	            disabled: false
	        };
	
	        // 当屏幕旋转的时候，修正布局
	        win.addEventListener(RESIZE, t, false);
	    }
	
	    _createClass(Slide, [{
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	            var t = this;
	            t._getLength();
	        }
	    }, {
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            var t = this;
	
	            t.el = React.findDOMNode(t.refs.root);
	
	            // 确定容器宽度
	            t.width = isPC ? t.el.clientWidth : win.innerWidth;
	
	            t._setContext();
	        }
	    }, {
	        key: 'componentDidUpdate',
	        value: function componentDidUpdate(prevProps) {
	            var t = this;
	            var oldChildrenLength = prevProps.children.length;
	            var newChildrenLength = this.props.children.length;
	            if (newChildrenLength != oldChildrenLength) {
	                t._getLength();
	                t._setContext(prevProps);
	            }
	        }
	    }, {
	        key: 'componentWillUnmount',
	        value: function componentWillUnmount() {
	            var t = this;
	            if (t.length > 1) {
	                t.el.removeEventListener(START, t, false);
	            }
	            win.removeEventListener(RESIZE, t, false);
	            clearTimeout(t._autoSlideTimer);
	        }
	
	        /**
	         * 获取 slide 列表的真正长度，主要是考虑 children
	         * 长度是 1 和 2 的情况下
	         */
	    }, {
	        key: '_getLength',
	        value: function _getLength() {
	            var t = this;
	            var originLength = React.Children.count(t.props.children);
	
	            // TODO: check
	            if (originLength === 1) {
	                t.setState({
	                    disabled: true
	                });
	            }
	
	            // item的长度经处理后不存在为2的情况
	            else if (originLength === 2) {
	                    t._dummy = true;
	                    t._realIndex = {
	                        '0': 0,
	                        '1': 1,
	                        '2': 0,
	                        '3': 1
	                    };
	                }
	
	            // 处理以后的长度，即item的个数
	            t.length = t._dummy ? 4 : originLength;
	        }
	
	        /**
	         * 根据 slide 列表长度设置正确的内部变量
	         *
	         */
	    }, {
	        key: '_setContext',
	        value: function _setContext(prevProps) {
	            var t = this;
	
	            // 由于子元素数量有变化，先解绑与数量相关的监听，再根据数量重新绑定。
	            t.el.removeEventListener(START, t, false);
	            clearTimeout(t._autoSlideTimer);
	
	            // 至少有2张slide时，才初始化事件
	            if (t.length > 1) {
	                t.el.addEventListener(START, t, false);
	            }
	
	            // 前一个，当前的，后一个item的element引用
	            t._prevEl = null;
	            t._currentEl = null;
	            t._nextEl = null;
	
	            t._deltaX = 0;
	            t._minIndex = 0;
	            t._maxIndex = t.length - 1;
	            if (!prevProps) {
	                t.props.onMount(t);
	            } else {
	                t.setState({
	                    index: t.props.index
	                });
	            }
	            if (t.length != 0) {
	                t._goto(t.state.index, true);
	                t._autoSlide();
	            }
	        }
	    }, {
	        key: '_autoSlide',
	        value: function _autoSlide() {
	            var t = this;
	            if (!t.state.auto) return;
	            t._autoSlideTimer = setTimeout(function () {
	                t.goNext();
	                t._autoSlide();
	            }, 4000);
	        }
	
	        /**
	         * @param {number} index 目标位置的索引值
	         * @param {boolean} callFromDidMount 是否是在 componentDidMount 中被调用的
	         */
	    }, {
	        key: '_goto',
	        value: function _goto(posIndex, callFromDidMount) {
	            var t = this;
	            callFromDidMount = !!callFromDidMount;
	
	            if (t.length === 1 || callFromDidMount) {
	                // `_getItemReady` 方法被调用之前，需要先更新 `currentPosIndex` 的值
	                t.currentPosIndex = posIndex;
	                t._getItemReady(0);
	
	                if (t.length > 2) {
	                    t._getItemReady(1);
	                    t._getItemReady(-1);
	                }
	
	                t._slideEnd();
	            } else if (!callFromDidMount) {
	
	                // 通过goNext/goPrev调用的_goto，一直有方向(_dir)值 向左:-1 / 向右:1
	                if (t._dir) {
	                    t._getItemUnready(t._dir === 1 ? t._nextEl : t._prevEl);
	                    t._moveItem(t._currentEl, t._dir);
	                    t._moveItem(t._dir === 1 ? t._prevEl : t._nextEl, t._dir);
	
	                    // `_getItemReady`方法被调用之前，需要先更新`currentPosIndex`的值
	                    t.currentPosIndex = posIndex;
	                    t._getItemReady(t._dir * -1);
	
	                    setTimeout(function () {
	                        t._slideEnd();
	                    }, t.duration);
	                }
	
	                // 归位的情况：移动距离小于有效距离时
	                else if (posIndex === t.currentPosIndex) {
	                        // 归位当前item
	                        t._moveItem(t._currentEl, 0);
	                        // 归位进入屏幕的另一个item
	                        // 说明:任意一个时间点,出现在屏幕内的item数量最多为2个,要么左边,要么右边,取决于移动方向
	                        if (t._moveBack) {
	                            t._moveItem(t._moveBack, 0);
	                        }
	                        // 当resize时
	                        else {
	                                t._moveItem(t._prevEl, 0);
	                                t._moveItem(t._nextEl, 0);
	                            }
	                    }
	            }
	
	            t._moveBack = null;
	            t._dir = null;
	        }
	    }, {
	        key: 'goNext',
	        value: function goNext() {
	            var t = this;
	            // 方向是向左(-1)，要展现的是后一张(1)
	            t._dir = -1;
	            t._goto(t._getPosIndex(1));
	        }
	    }, {
	        key: 'goPrev',
	        value: function goPrev() {
	            var t = this;
	            // 方向是向右(1)，要展现的是前一张(-1)
	            t._dir = 1;
	            t._goto(t._getPosIndex(-1));
	        }
	
	        /**
	         * 移动item到新的位置
	         * @param {element} item
	         * @param {number} dir 移动的方向 -1:向左移动 / 1:向右移动 / 0:移动到原位
	         */
	    }, {
	        key: '_moveItem',
	        value: function _moveItem(item, dir) {
	            var t = this;
	            item.style.webkitTransitionDuration = t.duration + 'ms';
	
	            var newOffset = +item.getAttribute(OFFSET) + dir;
	
	            t._setItemX(item, t._getPosX(newOffset));
	
	            // 如果进行了切换行为，即dir为-1或1
	            if (dir) {
	                item.setAttribute(OFFSET, newOffset);
	                t[POS_MAP[newOffset]] = item;
	            }
	        }
	
	        /**
	         * 根据指定的偏移量，找到对应的item，将其切换到可移动状态
	         * @param {number} offset -1:前一个位置 / 0:当前位置 / 1: 后一个位置
	         * @note 任何时刻，可移动状态的item数量只有三个
	         * @note 该方法依赖`currentPosIndex`和`offset`查找目标`item`，
	         *       而`_getItemUnready`方法直接给定了`item`，不需要依赖`currentPosIndex`和`offset`
	         */
	    }, {
	        key: '_getItemReady',
	        value: function _getItemReady(offset) {
	            var t = this;
	            var targetPosIndex = t._getPosIndex(offset);
	            var item = React.findDOMNode(t.refs['item' + targetPosIndex]);
	            item.classList.add('ready');
	            item.setAttribute(OFFSET, offset);
	            item.style.webkitTransform = makeTranslate(t._getPosX(offset));
	            t[POS_MAP[offset]] = item;
	        }
	
	        /**
	         * 将指定的item切换到不可移动状态，即不参与切换行为。
	         * @param {element} item 要改变状态的item
	         * @note 这个函数虽然含义上和_setItemReady对应，但参数直接只用item，
	         *  是出于性能考虑，因为调用该函数的时候，都是明确知道目标item的。
	         */
	    }, {
	        key: '_getItemUnready',
	        value: function _getItemUnready(item) {
	            var t = this;
	            item.classList.remove('ready');
	            item.removeAttribute(OFFSET);
	            item.style.webkitTransitionDuration = '0';
	            item.style.webkitTransform = 'none';
	        }
	
	        /**
	         * 获取指定的offset所对应的X坐标值(0点在当前item的左边缘)
	         * @param {number} offset -1:前一个位置 / 0:当前位置 / 1: 后一个位置
	         */
	    }, {
	        key: '_getPosX',
	        value: function _getPosX(offset) {
	            var t = this;
	            return offset === -1 ? -t.width : offset === 1 ? t.width : 0;
	        }
	
	        /**
	         *
	         */
	    }, {
	        key: '_setItemX',
	        value: function _setItemX(item, x) {
	            this[POS_MAP[item.getAttribute(OFFSET)] + 'X'] = x;
	            item.style.webkitTransform = makeTranslate(x);
	        }
	
	        /**
	         * 获取前一个或后一个位置的索引值，相对值是currentPosIndex
	         * @param {number} offset -1:取前一个位置 / 0:取当前位置 / 1: 取后一个位置
	         */
	    }, {
	        key: '_getPosIndex',
	        value: function _getPosIndex(offset) {
	            var t = this,
	                index;
	            if (offset === -1) {
	                index = t.currentPosIndex === t._minIndex ? t._maxIndex : t.currentPosIndex - 1;
	            } else if (offset === 1) {
	                index = t.currentPosIndex === t._maxIndex ? t._minIndex : t.currentPosIndex + 1;
	            } else if (offset === 0) {
	                index = t.currentPosIndex;
	            } else {
	                throw new Error('error offset');
	            }
	            return index;
	        }
	    }, {
	        key: 'handleEvent',
	        value: function handleEvent(e) {
	            var t = this;
	            switch (e.type) {
	                case START:
	                    t._touchStart(e);
	                    break;
	                case MOVE:
	                    t._touchMove(e);
	                    break;
	                case END:
	                    t._touchEnd(e);
	                    break;
	                case CANCEL:
	                    t._touchEnd(e);
	                case RESIZE:
	                    t._resize(e);
	                    break;
	            }
	        }
	    }, {
	        key: '_touchStart',
	        value: function _touchStart(e) {
	            // 只响应单指操作
	            if (supportTouch && e.touches.length > 1) {
	                return;
	            }
	
	            var t = this;
	
	            clearTimeout(t._autoSlideTimer);
	
	            // 恢复到0 拖拽过程中快速响应移动距离
	            t._prevEl.style.webkitTransitionDuration = '0ms';
	            t._currentEl.style.webkitTransitionDuration = '0ms';
	            t._nextEl.style.webkitTransitionDuration = '0ms';
	
	            // 移动初始值
	            t._prevElX = t._getPosX(-1);
	            t._currentElX = t._getPosX(0);
	            t._nextElX = t._getPosX(1);
	
	            // 浏览器默认滚动
	            t.browserScrolling = false;
	
	            // 是否是切换状态 此时忽略浏览器默认的滚动行为
	            t.sliding = false;
	
	            t.startPageX = getCursorPage(e, 'pageX');
	            t.startPageY = getCursorPage(e, 'pageY');
	            t.basePageX = t.startPageX;
	            t.startTime = e.timeStamp;
	
	            doc.addEventListener(MOVE, t, false);
	            doc.addEventListener(END, t, false);
	        }
	    }, {
	        key: '_touchMove',
	        value: function _touchMove(e) {
	            // 只响应单指操作
	            if (supportTouch && e.touches.length > 1) {
	                return;
	            }
	
	            var t = this;
	
	            // 如果浏览器默认滚动行为已被触发，则不执行Slider的滚动
	            if (t.browserScrolling) {
	                return;
	            }
	
	            var pageX = getCursorPage(e, 'pageX'),
	                pageY = getCursorPage(e, 'pageY'),
	                distX,
	                newPrevX,
	                newCurrentX,
	                newNextX,
	                deltaY;
	
	            t.deltaX = pageX - t.startPageX;
	
	            // 如果slide开始滚动
	            if (t.sliding) {
	                e.preventDefault();
	                e.stopPropagation();
	
	                // 任意时刻的位移值
	                distX = pageX - t.basePageX;
	
	                // 当不是循环模式的时候，第一张和最后一张添加粘性
	                if (t.props.loop === false && (distX >= 0 && t.currentPosIndex === t._minIndex || distX < 0 && t.currentPosIndex === t._maxIndex || distX < 0 && t._dummy && t.currentPosIndex === 1)) {
	                    distX = distX - distX / 1.3;
	                }
	
	                // 位移后的X坐标
	                newPrevX = t._prevElX + distX;
	                newCurrentX = t._currentElX + distX;
	                newNextX = t._nextElX + distX;
	
	                // 更新DOM位置
	                t._setItemX(t._prevEl, newPrevX);
	                t._setItemX(t._currentEl, newCurrentX);
	                t._setItemX(t._nextEl, newNextX);
	
	                if (t.deltaX >= 0) {
	                    t._moveBack = t._prevEl;
	                } else {
	                    t._moveBack = t._nextEl;
	                }
	            } else {
	                deltaY = pageY - t.startPageY;
	
	                // 如果X轴的移动距离先达到5px，则执行Slider的滚动
	                // 如果Y轴的移动距离先达到5px，则执行浏览器默认的页面滚动
	                if (Math.abs(t.deltaX) > 5) {
	                    e.preventDefault();
	                    e.stopPropagation();
	                    t.sliding = true;
	                } else if (Math.abs(deltaY) > 5) {
	                    t.browserScrolling = true;
	                }
	            }
	
	            t.basePageX = pageX;
	        }
	    }, {
	        key: '_touchEnd',
	        value: function _touchEnd(e) {
	            // 只响应单指操作
	            if (supportTouch && e.touches.length > 1) {
	                return;
	            }
	
	            var t = this;
	
	            // 如果浏览器默认滚动行为已被触发，则不执行Slider的滚动
	            if (t.browserScrolling) {
	                return;
	            }
	
	            t.browserScrolling = false;
	
	            // 向右滑动
	            if (t.deltaX > t.effectiveDelta) {
	                if (t.props.loop === false && t.currentPosIndex === t._minIndex) {
	                    t._goto(t.currentPosIndex);
	                } else {
	                    t.goPrev();
	                }
	            }
	
	            // 向左滑动
	            else if (t.deltaX < -t.effectiveDelta) {
	                    if (t.props.loop === false && (t.currentPosIndex === t._maxIndex || t._dummy && t.currentPosIndex === 1)) {
	                        t._goto(t.currentPosIndex);
	                    } else {
	                        t.goNext();
	                    }
	                } else {
	                    t._goto(t.currentPosIndex);
	                }
	
	            t.deltaX = 0;
	
	            doc.removeEventListener(MOVE, t, false);
	            doc.removeEventListener(END, t, false);
	
	            t._autoSlide();
	        }
	    }, {
	        key: '_slideEnd',
	        value: function _slideEnd() {
	            var t = this;
	            var realIndex = t._getRealIndex(t.currentPosIndex);
	            t.props.onSlideEnd({
	                index: realIndex,
	                item: t._currentEl,
	                data: t.props.children[realIndex]
	            });
	            // https://facebook.github.io/react/docs/component-api.html#forceupdate
	            // 通常情况下我们不使用 forcecUpdate，但我们需要 slide 过程中的中间变量
	            // 而非最终 state 去触发插件的更新，因此这里我们用到了 forceUpdate。
	            t.forceUpdate();
	        }
	    }, {
	        key: '_getRealIndex',
	        value: function _getRealIndex(posIndex) {
	            var t = this;
	            return t._dummy ? t._realIndex[posIndex] : posIndex;
	        }
	
	        /**
	         * 当屏幕旋转时，更新基本数据 && 再次定位
	         */
	    }, {
	        key: '_resize',
	        value: function _resize() {
	            var t = this;
	            t.width = isPC ? t.el.clientWidth : win.innerWidth;
	            t._goto(t.currentPosIndex);
	        }
	
	        /**
	         * 渲染items 当item数量为2时，该方法会被调用两次，第二次函数为true，以实现循环轮播
	         * @param {boolean} dummyMode 是否是在渲染补位的item，
	         * @note 只有当`props.children`的长度为2时，才需要进行补位
	         */
	    }, {
	        key: '_renderItems',
	        value: function _renderItems(dummyMode) {
	            var t = this;
	            return t.props.children.map(function (Child, index) {
	                return React.createElement(
	                    'div',
	                    { ref: "item" + (index + (dummyMode ? 2 : 0)), key: index + (dummyMode ? 2 : 0),
	                        className: "tSlideItem tSlideItem" + t._getRealIndex(index) },
	                    Child
	                );
	            });
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var t = this;
	            return React.createElement(
	                'div',
	                { ref: 'root', className: classnames(_defineProperty({
	                        "tSlide": true,
	                        "tSlideOff": t.state.disabled
	                    }, t.props.className, !!t.props.className)) },
	                React.createElement(
	                    'div',
	                    { className: 't3D tSlideView', style: { height: t.props.height } },
	                    t._renderItems(),
	                    t._dummy && t._renderItems(true)
	                ),
	                t.props.showNav && t.length > 1 && React.createElement(SlideNav, { active: t._getRealIndex(t.currentPosIndex), num: t.props.children.length })
	            );
	        }
	    }]);
	
	    return Slide;
	})(React.Component);
	
	Slide.propTypes = {
	    className: React.PropTypes.string,
	    height: React.PropTypes.oneOfType([React.PropTypes.number, React.PropTypes.string]),
	    index: React.PropTypes.number,
	    auto: React.PropTypes.bool,
	    loop: React.PropTypes.bool,
	    showNav: React.PropTypes.bool,
	    onMount: React.PropTypes.func,
	    onSlideEnd: React.PropTypes.func
	};
	
	Slide.defaultProps = {
	    height: 180,
	    index: 0,
	    auto: false,
	    loop: true,
	    showNav: false,
	    onMount: noop,
	    onSlideEnd: noop
	};
	
	module.exports = Slide;

/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var classnames = __webpack_require__(5);
	
	var SlideNav = (function (_React$Component) {
	    _inherits(SlideNav, _React$Component);
	
	    function SlideNav(props) {
	        _classCallCheck(this, SlideNav);
	
	        _get(Object.getPrototypeOf(SlideNav.prototype), "constructor", this).call(this, props);
	        this.state = {};
	    }
	
	    _createClass(SlideNav, [{
	        key: "render",
	        value: function render() {
	            var t = this;
	            var arr = [];
	            for (var i = 0; i < t.props.num; i++) {
	                arr.push(React.createElement("div", { key: i, className: classnames({
	                        "tR4 tM2 tSlideNavItem": true,
	                        "active": i == t.props.active
	                    }) }));
	            }
	            return React.createElement(
	                "div",
	                { className: "tSlideNav tFBH tFBAC tFBJC" },
	                arr
	            );
	        }
	    }]);
	
	    return SlideNav;
	})(React.Component);
	
	SlideNav.defaultProps = {
	    num: 0,
	    active: 0
	};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	SlideNav.propTypes = {
	    num: React.PropTypes.number,
	    active: React.PropTypes.number
	};
	
	module.exports = SlideNav;

/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(52);

/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var TabItem = __webpack_require__(53);
	var classnames = __webpack_require__(54);
	var Scroller = __webpack_require__(55);
	
	/**
	 * Tab Component for tinglejs
	 */
	
	var Tab = (function (_React$Component) {
	    _inherits(Tab, _React$Component);
	
	    /**
	     * 初始化 state
	     * @param  {[type]} props [description]
	     * @return {[type]}       [description]
	     */
	
	    function Tab(props) {
	        _classCallCheck(this, Tab);
	
	        _get(Object.getPrototypeOf(Tab.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            index: props.index
	        };
	    }
	
	    /**
	     * [defaultProps description]
	     * @type {Object}
	     */
	
	    /**
	     * 挂载后，计算宽度，实例化滚动
	     * @return {[type]} [description]
	     */
	
	    _createClass(Tab, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            // 计算宽度和滚动
	            var t = this;
	            if (!t.props.scroll) {
	                return;
	            }
	            var w = 0;
	            var scrollEle = React.findDOMNode(t.refs.scroll);
	            var chNodes = scrollEle.childNodes;
	            for (var i = 0, l = chNodes.length; i < l; i++) {
	                w += chNodes[i].offsetWidth + 1;
	            }
	
	            scrollEle.style.width = w + "px";
	            // 实例化滚动
	            t.refs.head.scroller.refresh();
	        }
	
	        /**
	         * 响应索引改变事件
	         * @param  {[type]} index [description]
	         * @param  {[type]} data  [description]
	         * @param  {[type]} e     [description]
	         * @return {[type]}       [description]
	         */
	    }, {
	        key: 'handleChange',
	        value: function handleChange(index, data, e) {
	            var t = this;
	            var preIndex = t.state.index;
	            t.setState({
	                index: index
	            });
	            t.props.onChange({
	                index: index,
	                preIndex: preIndex,
	                data: data,
	                e: e
	            });
	        }
	
	        /**
	         * 内置方法 渲染
	         * @return {[type]} [description]
	         */
	    }, {
	        key: 'render',
	        value: function render() {
	            var t = this;
	            var _className = classnames(_defineProperty({
	                'tTab': true
	            }, t.props.className, !!t.props.className));
	            return React.createElement(
	                'div',
	                { className: _className, ref: 'tab' },
	                t._renderHead(),
	                t._renderBody()
	            );
	        }
	
	        /**
	         * 选择 head
	         * @return {[type]} [description]
	         */
	    }, {
	        key: '_renderHead',
	        value: function _renderHead() {
	            var t = this;
	            return React.createElement(
	                Scroller,
	                { className: 'tTabHead', scrollX: true, scrollY: false, ref: 'head' },
	                React.createElement(
	                    'div',
	                    { className: 'tTabHeadScroll tCL tFBH', ref: 'scroll' },
	                    React.Children.map(t.props.children, function (child, index) {
	                        var _className = classnames({
	                            'tTabHeadItem tFL tFAC': true,
	                            'active': t.state.index == index
	                        });
	                        return React.createElement(
	                            'div',
	                            { className: _className, key: index, index: index, onClick: t.handleChange.bind(t, index, child.props.data) },
	                            React.createElement(
	                                'span',
	                                null,
	                                child.props.title
	                            )
	                        );
	                    })
	                )
	            );
	        }
	
	        /**
	         * 渲染 body
	         * @return {[type]} [description]
	         */
	    }, {
	        key: '_renderBody',
	        value: function _renderBody() {
	            var t = this;
	            return React.createElement(
	                'div',
	                { className: 'tTabBody' },
	                React.Children.map(t.props.children, function (child, index) {
	                    var _className = classnames({
	                        'tTabBodyItem': true,
	                        'tHide': !(t.state.index == index)
	                    });
	                    return React.createElement(
	                        'div',
	                        { className: _className, key: index, index: index },
	                        child
	                    );
	                })
	            );
	        }
	    }]);
	
	    return Tab;
	})(React.Component);
	
	Tab.defaultProps = {
	    index: 0,
	    scroll: true,
	    onChange: function onChange() {}
	};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	/**
	 * [propTypes description]
	 * @type {Object}
	 */
	Tab.propTypes = {
	    index: React.PropTypes.number,
	    onChange: React.PropTypes.func,
	    scroll: React.PropTypes.bool
	};
	
	Tab.item = TabItem;
	module.exports = Tab;

/***/ },
/* 53 */
/***/ function(module, exports) {

	/**
	 * Tab item
	 * author: zhangshun
	 * date: 2015-05-22
	 */
	"use strict";
	
	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var TabItem = (function (_React$Component) {
	    _inherits(TabItem, _React$Component);
	
	    function TabItem(props) {
	        _classCallCheck(this, TabItem);
	
	        _get(Object.getPrototypeOf(TabItem.prototype), "constructor", this).call(this, props);
	    }
	
	    _createClass(TabItem, [{
	        key: "render",
	        value: function render() {
	            return React.createElement(
	                "div",
	                null,
	                this.props.children
	            );
	        }
	    }]);
	
	    return TabItem;
	})(React.Component);
	
	TabItem.defaultProps = {
	    title: "",
	    data: {}
	};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	TabItem.propTypes = {
	    title: React.PropTypes.string,
	    data: React.PropTypes.object
	};
	
	module.exports = TabItem;

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2015 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	
	(function () {
		'use strict';
	
		function classNames () {
	
			var classes = '';
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if ('string' === argType || 'number' === argType) {
					classes += ' ' + arg;
	
				} else if (Array.isArray(arg)) {
					classes += ' ' + classNames.apply(null, arg);
	
				} else if ('object' === argType) {
					for (var key in arg) {
						if (arg.hasOwnProperty(key) && arg[key]) {
							classes += ' ' + key;
						}
					}
				}
			}
	
			return classes.substr(1);
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true){
			// AMD. Register as an anonymous module.
			!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	
	}());


/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Scroller Component for tingle
	 * @auther caoke.ck
	 *
	 * Copyright 2014-2015, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	'use strict';
	
	module.exports = __webpack_require__(17);

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(57);

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * TextareaField Component for tinglejs
	 * @auther zhangshun
	 *
	 * Copyright 2014-2015, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	//https://github.com/andreypopp/react-textarea-autosize
	//http://stackoverflow.com/questions/6890149/remove-3-pixels-in-ios-webkit-textarea/7029825#7029825
	'use strict';
	
	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var classnames = __webpack_require__(5);
	
	var autosize = __webpack_require__(58);
	
	var TextareaField = (function (_React$Component) {
	    _inherits(TextareaField, _React$Component);
	
	    function TextareaField(props) {
	        _classCallCheck(this, TextareaField);
	
	        _get(Object.getPrototypeOf(TextareaField.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            lineHeight: props.lineHeight
	        };
	    }
	
	    _createClass(TextareaField, [{
	        key: 'render',
	        value: function render() {
	            var t = this;
	            var _props = this.props;
	            var placeholder = _props.placeholder;
	            var label = _props.label;
	            var readOnly = _props.readOnly;
	
	            var style = {
	                lineHeight: t.state.lineHeight + 'px',
	                minHeight: t.state.lineHeight * t.props.minRows,
	                maxHeight: t.state.lineHeight * t.props.maxRows
	            };
	
	            return React.createElement(
	                'div',
	                { className: classnames(_defineProperty({
	                        'tPL10 tPR10 tFBH tFBAC tFS14 tTextareaField': true,
	                        'readOnly': readOnly
	                    }, t.props.className, !!t.props.className)) },
	                label && React.createElement(
	                    'div',
	                    { className: 'tMR10 tLH1_3 tFC6 tFieldLabel' },
	                    label
	                ),
	                React.createElement(
	                    'div',
	                    { className: 'tFB1 tPR tFC9' },
	                    React.createElement('textarea', { ref: 'textarea',
	                        className: 'tTextarea tFC9',
	                        style: style,
	                        placeholder: placeholder,
	                        value: t.props.value,
	                        readOnly: readOnly,
	                        rows: t.props.minRows,
	                        onChange: t.handleChange.bind(t),
	                        onFocus: t.handleFocus.bind(t),
	                        onBlur: t.handleBlur.bind(t) })
	                )
	            );
	        }
	
	        /**
	         * 重新调整高度
	         * @return {[type]} [description]
	         */
	    }, {
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            // 设置autosize
	            var t = this;
	            var textareaEle = React.findDOMNode(t.refs.textarea);
	            autosize(textareaEle);
	        }
	    }, {
	        key: 'componentWillUnmount',
	        value: function componentWillUnmount() {
	            // 销毁
	            autosize.destroy(React.findDOMNode(this.refs.textarea));
	        }
	    }, {
	        key: 'handleChange',
	        value: function handleChange(e) {
	            this.props.onChange(e.target.value, e);
	        }
	    }, {
	        key: 'handleFocus',
	        value: function handleFocus(e) {
	            this.props.onFocus(e);
	        }
	    }, {
	        key: 'handleBlur',
	        value: function handleBlur(e) {
	            this.props.onBlur(e);
	        }
	    }]);
	
	    return TextareaField;
	})(React.Component);
	
	TextareaField.defaultProps = {
	    value: "",
	    placeholder: "",
	    onChange: function onChange() {},
	    onFocus: function onFocus() {},
	    onBlur: function onBlur() {},
	    readOnly: false,
	    minRows: 1,
	    maxRows: 10,
	    lineHeight: 22
	};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	TextareaField.propTypes = {
	    value: React.PropTypes.string,
	    placeholder: React.PropTypes.string,
	    onChange: React.PropTypes.func,
	    onFocus: React.PropTypes.func,
	    onBlur: React.PropTypes.func,
	    readOnly: React.PropTypes.bool,
	    minRows: React.PropTypes.number,
	    maxRows: React.PropTypes.number,
	    lineHeight: React.PropTypes.number
	};
	
	module.exports = TextareaField;

/***/ },
/* 58 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, '__esModule', {
		value: true
	});
	function assign(ta) {
		var _ref = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
	
		var _ref$setOverflowX = _ref.setOverflowX;
		var setOverflowX = _ref$setOverflowX === undefined ? true : _ref$setOverflowX;
		var _ref$setOverflowY = _ref.setOverflowY;
		var setOverflowY = _ref$setOverflowY === undefined ? true : _ref$setOverflowY;
	
		if (!ta || !ta.nodeName || ta.nodeName !== 'TEXTAREA' || ta.hasAttribute('data-autosize-on')) return;
	
		var heightOffset = null;
		var overflowY = 'hidden';
	
		function init() {
			var style = window.getComputedStyle(ta, null);
	
			if (style.resize === 'vertical') {
				ta.style.resize = 'none';
			} else if (style.resize === 'both') {
				ta.style.resize = 'horizontal';
			}
	
			if (style.boxSizing === 'content-box') {
				heightOffset = -(parseFloat(style.paddingTop) + parseFloat(style.paddingBottom));
			} else {
				heightOffset = parseFloat(style.borderTopWidth) + parseFloat(style.borderBottomWidth);
			}
	
			update();
		}
	
		function changeOverflow(value) {
			{
				// Chrome/Safari-specific fix:
				// When the textarea y-overflow is hidden, Chrome/Safari do not reflow the text to account for the space
				// made available by removing the scrollbar. The following forces the necessary text reflow.
				var width = ta.style.width;
				ta.style.width = '0px';
				// Force reflow:
				/* jshint ignore:start */
				ta.offsetWidth;
				/* jshint ignore:end */
				ta.style.width = width;
			}
	
			overflowY = value;
	
			if (setOverflowY) {
				ta.style.overflowY = value;
			}
	
			update();
		}
	
		function update() {
			var startHeight = ta.style.height;
			var htmlTop = document.documentElement.scrollTop;
			var bodyTop = document.body.scrollTop;
			var originalHeight = ta.style.height;
	
			ta.style.height = 'auto';
	
			var endHeight = ta.scrollHeight + heightOffset;
	
			if (ta.scrollHeight === 0) {
				// If the scrollHeight is 0, then the element probably has display:none or is detached from the DOM.
				ta.style.height = originalHeight;
				return;
			}
	
			ta.style.height = endHeight + 'px';
	
			// prevents scroll-position jumping
			document.documentElement.scrollTop = htmlTop;
			document.body.scrollTop = bodyTop;
	
			var style = window.getComputedStyle(ta, null);
	
			if (style.height !== ta.style.height) {
				if (overflowY !== 'visible') {
					changeOverflow('visible');
					return;
				}
			} else {
				if (overflowY !== 'hidden') {
					changeOverflow('hidden');
					return;
				}
			}
	
			if (startHeight !== ta.style.height) {
				var evt = document.createEvent('Event');
				evt.initEvent('autosize:resized', true, false);
				ta.dispatchEvent(evt);
			}
		}
	
		var destroy = (function (style) {
			window.removeEventListener('resize', update);
			ta.removeEventListener('input', update);
			ta.removeEventListener('keyup', update);
			ta.removeAttribute('data-autosize-on');
			ta.removeEventListener('autosize:destroy', destroy);
	
			Object.keys(style).forEach(function (key) {
				ta.style[key] = style[key];
			});
		}).bind(ta, {
			height: ta.style.height,
			resize: ta.style.resize,
			overflowY: ta.style.overflowY,
			overflowX: ta.style.overflowX,
			wordWrap: ta.style.wordWrap
		});
	
		ta.addEventListener('autosize:destroy', destroy);
	
		// IE9 does not fire onpropertychange or oninput for deletions,
		// so binding to onkeyup to catch most of those events.
		// There is no way that I know of to detect something like 'cut' in IE9.
		if ('onpropertychange' in ta && 'oninput' in ta) {
			ta.addEventListener('keyup', update);
		}
	
		window.addEventListener('resize', update);
		ta.addEventListener('input', update);
		ta.addEventListener('autosize:update', update);
		ta.setAttribute('data-autosize-on', true);
	
		if (setOverflowY) {
			ta.style.overflowY = 'hidden';
		}
		if (setOverflowX) {
			ta.style.overflowX = 'hidden';
			ta.style.wordWrap = 'break-word';
		}
	
		init();
	}
	
	function destroy(ta) {
		if (!(ta && ta.nodeName && ta.nodeName === 'TEXTAREA')) return;
		var evt = document.createEvent('Event');
		evt.initEvent('autosize:destroy', true, false);
		ta.dispatchEvent(evt);
	}
	
	function update(ta) {
		if (!(ta && ta.nodeName && ta.nodeName === 'TEXTAREA')) return;
		var evt = document.createEvent('Event');
		evt.initEvent('autosize:update', true, false);
		ta.dispatchEvent(evt);
	}
	
	var autosize = null;
	
	// Do nothing in Node.js environment and IE8 (or lower)
	if (typeof window === 'undefined' || typeof window.getComputedStyle !== 'function') {
		autosize = function (el) {
			return el;
		};
		autosize.destroy = function (el) {
			return el;
		};
		autosize.update = function (el) {
			return el;
		};
	} else {
		autosize = function (el, options) {
			if (el) {
				Array.prototype.forEach.call(el.length ? el : [el], function (x) {
					return assign(x, options);
				});
			}
			return el;
		};
		autosize.destroy = function (el) {
			if (el) {
				Array.prototype.forEach.call(el.length ? el : [el], destroy);
			}
			return el;
		};
		autosize.update = function (el) {
			if (el) {
				Array.prototype.forEach.call(el.length ? el : [el], update);
			}
			return el;
		};
	}
	
	exports['default'] = autosize;
	module.exports = exports['default'];

/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(60);

/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Tip Component for tinglejs
	 */
	
	'use strict';
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var classnames = __webpack_require__(5);
	var Layer = __webpack_require__(28);
	
	var Tip = (function (_React$Component) {
	    _inherits(Tip, _React$Component);
	
	    function Tip(props) {
	        _classCallCheck(this, Tip);
	
	        _get(Object.getPrototypeOf(Tip.prototype), 'constructor', this).call(this, props);
	
	        this.state = {
	            show: false
	        };
	    }
	
	    _createClass(Tip, [{
	        key: 'show',
	        value: function show(options) {
	            var width = options.icon ? options.width || this.props.width : 216;
	            this.setState({
	                width: width,
	                text: options.text,
	                icon: options.icon,
	                onHide: options.onHide || this.props.onHide,
	                show: true,
	                mask: true,
	                duration: options.duration
	            });
	        }
	    }, {
	        key: 'hide',
	        value: function hide() {
	            clearTimeout(this.timer);
	            this.setState({
	                show: false
	            });
	            this.state.onHide();
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var t = this;
	            var _state = this.state;
	            var icon = _state.icon;
	            var text = _state.text;
	            var show = _state.show;
	            var duration = _state.duration;
	            var other = _objectWithoutProperties(_state, ['icon', 'text', 'show', 'duration']);
	            var classSet = {
	                'tFS14 tFCf tFAC tLH1_5': true,
	                'tPL20 tPR20': !icon
	            };
	
	            icon = icon ? React.createElement(
	                'div',
	                { className: 'tFAC tPB14 tPR' },
	                React.createElement('i', { className: "tTipIcon tTipIcon" + (icon.charAt(0).toUpperCase() + icon.substring(1)) })
	            ) : '';
	
	            clearTimeout(this.timer);
	            this.timer = show && setTimeout(function () {
	                t.hide();
	            }, duration || 3000);
	
	            return React.createElement(
	                Layer,
	                _extends({ show: show }, other),
	                React.createElement(
	                    'div',
	                    { className: 'tTip tPT20 tPB20 tR6' },
	                    icon,
	                    React.createElement(
	                        'div',
	                        { className: classnames(classSet) },
	                        text
	                    )
	                )
	            );
	        }
	    }]);
	
	    return Tip;
	})(React.Component);
	
	Tip.defaultProps = {
	    onHide: function onHide() {},
	    width: 136
	};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	Tip.propTypes = {};
	
	var WRAPPER_ID = '__TingleGlobalTip__';
	var doc = document;
	
	Tip.global = null;
	Tip.show = function (options) {
	    // 只有首次全局调用时，才会创建全局实例
	    if (!Tip.global) {
	        var wrapper = doc.getElementById(WRAPPER_ID);
	        if (!wrapper) {
	            wrapper = doc.createElement('div');
	            wrapper.id = WRAPPER_ID;
	            doc.body.appendChild(wrapper);
	        }
	        Tip.global = React.render(React.createElement(Tip, null), wrapper);
	    }
	    Tip.global.show(options);
	};
	
	module.exports = Tip;

/***/ }
/******/ ])
});
;
//# sourceMappingURL=tingle.js.map