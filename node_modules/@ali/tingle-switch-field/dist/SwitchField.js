'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * SwitchField Component for tingle
 * @dongrui.yang
 *
 * Copyright 2014-2016, Tingle Team.
 * All rights reserved.
 */
var Switch = require('@ali/tingle-switch');
var Field = require('@ali/tingle-field');
var classnames = require('classnames');
var Context = require('@ali/tingle-context');

var SwitchField = function (_React$Component) {
    _inherits(SwitchField, _React$Component);

    function SwitchField(props) {
        _classCallCheck(this, SwitchField);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(SwitchField).call(this, props));
    }

    _createClass(SwitchField, [{
        key: 'handleChange',
        value: function handleChange(on) {
            this.props.onChange(on);
        }
    }, {
        key: 'render',
        value: function render() {
            var t = this;
            return React.createElement(
                Field,
                _extends({}, t.props, { className: classnames(Context.prefixClass('switch-field'), t.props.className, {
                        'readOnly': t.props.readOnly
                    }) }),
                React.createElement(
                    'div',
                    { className: 't-FBH' },
                    React.createElement('div', { className: 't-FB1' }),
                    React.createElement(Switch, { on: this.props.on, readOnly: t.props.readOnly, onChange: this.handleChange.bind(this) })
                )
            );
        }
    }]);

    return SwitchField;
}(React.Component);

SwitchField.defaultProps = {
    label: '',
    className: ''
};

// http://facebook.github.io/react/docs/reusable-components.html
SwitchField.propTypes = {
    label: React.PropTypes.string.isRequired,
    className: React.PropTypes.string
};

SwitchField.displayName = 'SwitchField';

module.exports = SwitchField;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlN3aXRjaEZpZWxkLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFPQSxJQUFNLFNBQVMsUUFBUSxvQkFBUixDQUFmO0FBQ0EsSUFBTSxRQUFRLFFBQVEsbUJBQVIsQ0FBZDtBQUNBLElBQU0sYUFBYSxRQUFRLFlBQVIsQ0FBbkI7QUFDQSxJQUFNLFVBQVUsUUFBUSxxQkFBUixDQUFoQjs7SUFFTSxXOzs7QUFFRix5QkFBWSxLQUFaLEVBQW1CO0FBQUE7O0FBQUEsOEZBQ1QsS0FEUztBQUVsQjs7OztxQ0FFWSxFLEVBQUk7QUFDYixpQkFBSyxLQUFMLENBQVcsUUFBWCxDQUFvQixFQUFwQjtBQUNIOzs7aUNBRVE7QUFDTCxnQkFBSSxJQUFJLElBQVI7QUFDQSxtQkFDSTtBQUFDLHFCQUFEO2dCQUFBLGFBQVcsRUFBRSxLQUFiLElBQW9CLFdBQVcsV0FBVyxRQUFRLFdBQVIsQ0FBb0IsY0FBcEIsQ0FBWCxFQUFnRCxFQUFFLEtBQUYsQ0FBUSxTQUF4RCxFQUFtRTtBQUM5RixvQ0FBWSxFQUFFLEtBQUYsQ0FBUTtBQUQwRSxxQkFBbkUsQ0FBL0I7Z0JBR0k7QUFBQTtvQkFBQSxFQUFLLFdBQVUsT0FBZjtvQkFDSSw2QkFBSyxXQUFVLE9BQWYsR0FESjtvQkFFSSxvQkFBQyxNQUFELElBQVEsSUFBSSxLQUFLLEtBQUwsQ0FBVyxFQUF2QixFQUEyQixVQUFVLEVBQUUsS0FBRixDQUFRLFFBQTdDLEVBQXVELFVBQVUsS0FBSyxZQUFMLENBQWtCLElBQWxCLENBQXVCLElBQXZCLENBQWpFO0FBRko7QUFISixhQURKO0FBVUg7Ozs7RUF0QnFCLE1BQU0sUzs7QUF5QmhDLFlBQVksWUFBWixHQUEyQjtBQUN2QixXQUFPLEVBRGdCO0FBRXZCLGVBQVU7QUFGYSxDQUEzQjs7O0FBTUEsWUFBWSxTQUFaLEdBQXdCO0FBQ3BCLFdBQU8sTUFBTSxTQUFOLENBQWdCLE1BQWhCLENBQXVCLFVBRFY7QUFFcEIsZUFBVSxNQUFNLFNBQU4sQ0FBZ0I7QUFGTixDQUF4Qjs7QUFLQSxZQUFZLFdBQVosR0FBMEIsYUFBMUI7O0FBRUEsT0FBTyxPQUFQLEdBQWlCLFdBQWpCIiwiZmlsZSI6IlN3aXRjaEZpZWxkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBTd2l0Y2hGaWVsZCBDb21wb25lbnQgZm9yIHRpbmdsZVxuICogQGRvbmdydWkueWFuZ1xuICpcbiAqIENvcHlyaWdodCAyMDE0LTIwMTYsIFRpbmdsZSBUZWFtLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqL1xuY29uc3QgU3dpdGNoID0gcmVxdWlyZSgnQGFsaS90aW5nbGUtc3dpdGNoJyk7XG5jb25zdCBGaWVsZCA9IHJlcXVpcmUoJ0BhbGkvdGluZ2xlLWZpZWxkJyk7XG5jb25zdCBjbGFzc25hbWVzID0gcmVxdWlyZSgnY2xhc3NuYW1lcycpO1xuY29uc3QgQ29udGV4dCA9IHJlcXVpcmUoJ0BhbGkvdGluZ2xlLWNvbnRleHQnKTtcblxuY2xhc3MgU3dpdGNoRmllbGQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuXG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgIH1cblxuICAgIGhhbmRsZUNoYW5nZShvbikge1xuICAgICAgICB0aGlzLnByb3BzLm9uQ2hhbmdlKG9uKTtcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGxldCB0ID0gdGhpcztcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxGaWVsZCB7Li4udC5wcm9wc30gY2xhc3NOYW1lPXtjbGFzc25hbWVzKENvbnRleHQucHJlZml4Q2xhc3MoJ3N3aXRjaC1maWVsZCcpLCB0LnByb3BzLmNsYXNzTmFtZSwge1xuICAgICAgICAgICAgICAgICdyZWFkT25seSc6IHQucHJvcHMucmVhZE9ubHlcbiAgICAgICAgICAgIH0pfT5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInQtRkJIXCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidC1GQjFcIj48L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPFN3aXRjaCBvbj17dGhpcy5wcm9wcy5vbn0gcmVhZE9ubHk9e3QucHJvcHMucmVhZE9ubHl9IG9uQ2hhbmdlPXt0aGlzLmhhbmRsZUNoYW5nZS5iaW5kKHRoaXMpfSAvPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9GaWVsZD5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cblN3aXRjaEZpZWxkLmRlZmF1bHRQcm9wcyA9IHtcbiAgICBsYWJlbDogJycsXG4gICAgY2xhc3NOYW1lOicnXG59O1xuXG4vLyBodHRwOi8vZmFjZWJvb2suZ2l0aHViLmlvL3JlYWN0L2RvY3MvcmV1c2FibGUtY29tcG9uZW50cy5odG1sXG5Td2l0Y2hGaWVsZC5wcm9wVHlwZXMgPSB7XG4gICAgbGFiZWw6IFJlYWN0LlByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgICBjbGFzc05hbWU6UmVhY3QuUHJvcFR5cGVzLnN0cmluZ1xufTtcblxuU3dpdGNoRmllbGQuZGlzcGxheU5hbWUgPSAnU3dpdGNoRmllbGQnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFN3aXRjaEZpZWxkO1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
