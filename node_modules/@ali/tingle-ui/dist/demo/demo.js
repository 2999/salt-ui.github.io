/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	window.FastClick && FastClick.attach(document.body);
	__webpack_require__(1);
	
	// 插入 demo svg
	var TingleIconSymbolsDemo = __webpack_require__(6);
	ReactDOM.render(React.createElement(TingleIconSymbolsDemo, null), document.getElementById('TingleIconSymbolsDemo'));
	
	// 避免内外webview报错
	window.AliworkWebView_WillGoBack = function () {};
	
	var _ReactRouter = ReactRouter,
	    Router = _ReactRouter.Router,
	    Route = _ReactRouter.Route,
	    IndexRoute = _ReactRouter.IndexRoute,
	    Link = _ReactRouter.Link,
	    hashHistory = _ReactRouter.hashHistory,
	    browserHistory = _ReactRouter.browserHistory;
	
	var PageHome = __webpack_require__(48);
	var PageButton = __webpack_require__(54);
	var PageList = __webpack_require__(56);
	var PageForm = __webpack_require__(58);
	var PageIcon = __webpack_require__(60);
	var PageDialog = __webpack_require__(62);
	var PageGallery = __webpack_require__(64);
	var PageScene = __webpack_require__(66);
	var PageCalendar = __webpack_require__(69);
	
	var _config = {
	    ddCorpId: 'dingd8e1123006514592',
	    appId: '38', // 必填，微应用ID
	    timestamp: new Date().getTime(), // 必填，生成签名的时间戳
	    nonceStr: 'alex', // 必填，生成签名的随机串
	    signature: 'alex' // 必填，签名
	};
	
	window.Ali && Ali.ready(function () {
	    if (Ali.isDingDing) {
	        var timestamp = new Date().getTime();
	        var element = document.getElementById('current-theme');
	        var href = element.href;
	        element.href = href.replace(/(default|blue)\.css(.*)/, '') + 'dd.css?' + timestamp;
	    }
	});
	
	//window.Ali && Ali.ready(function () {
	//    let shakeHandler = function () {
	//        let element = document.getElementById('current-theme');
	//        let href = element.href;
	//        if (~href.indexOf('default')) {
	//            element.href = href.replace(/default/, 'blue');
	//        } else if (~href.indexOf('blue')) {
	//            element.href = href.replace(/blue/, 'dd');
	//        } else if (~href.indexOf('dd')) {
	//            element.href = href.replace(/dd/, 'default');
	//        }
	//    };
	//    if (Ali.isDingDing) {
	//        dd.device.accelerometer.watchShake({
	//            sensitivity: 5,//振动幅度，Number类型，加速度变化超过这个值后触发shake
	//            frequency: 50,//采样间隔(毫秒)，Number类型，指每隔多长时间对加速度进行一次采样， 然后对比前后变化，判断是否触发shake
	//            callbackDelay: 1000,//触发『摇一摇』后的等待时间(毫秒)，Number类型，防止频繁调用
	//            onSuccess : function(result) {
	//                shakeHandler();
	//            },
	//            onFail : function(err) {
	//                alert(err)
	//            }
	//        });
	//    } else if (Ali.isAliwork) {
	//        Ali.config({
	//            appId: _config.appId,
	//            corpId: _config.ddCorpId,
	//            timestamp: _config.timestamp, // 必填，生成签名的时间戳
	//            nonceStr: _config.nonceStr, // 必填，生成签名的随机串
	//            signature: _config.signature // 必填，签名
	//        });
	//        let watchShake = function () {
	//            AlipayJSBridge.call("watchShake", function () {
	//                shakeHandler();
	//                setTimeout(function () {
	//                    watchShake()
	//                }, 1000);
	//            });
	//        };
	//        watchShake();
	//    }
	//
	//});
	
	var App = function (_React$Component) {
	    _inherits(App, _React$Component);
	
	    function App() {
	        _classCallCheck(this, App);
	
	        return _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).apply(this, arguments));
	    }
	
	    _createClass(App, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(
	                'div',
	                { className: 'page-content' },
	                this.props.children
	            );
	        }
	    }]);
	
	    return App;
	}(React.Component);
	
	ReactDOM.render(React.createElement(
	    Router,
	    { history: hashHistory },
	    React.createElement(
	        Route,
	        { name: 'app', path: '/', component: App },
	        React.createElement(IndexRoute, { component: PageHome }),
	        React.createElement(Route, { path: 'button', component: PageButton }),
	        React.createElement(Route, { path: 'list', component: PageList }),
	        React.createElement(Route, { path: 'form', component: PageForm }),
	        React.createElement(Route, { path: 'icon', component: PageIcon }),
	        React.createElement(Route, { path: 'dialog', component: PageDialog }),
	        React.createElement(Route, { path: 'calendar', component: PageCalendar }),
	        React.createElement(Route, { path: 'scene', component: PageScene })
	    )
	), document.getElementById('TingleDemo'));

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Tingle Context
	 * The environment for tingle's initialization
	 * @author gnosaij
	 *
	 * Copyright 2014-2015, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	module.exports = __webpack_require__(2);
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBU0EsT0FBTyxPQUFQLEdBQWlCLFFBQVEsV0FBUixDQUFqQiIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGluZ2xlIENvbnRleHRcbiAqIFRoZSBlbnZpcm9ubWVudCBmb3IgdGluZ2xlJ3MgaW5pdGlhbGl6YXRpb25cbiAqIEBhdXRob3IgZ25vc2FpalxuICpcbiAqIENvcHlyaWdodCAyMDE0LTIwMTUsIFRpbmdsZSBUZWFtLCBBbGludy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL0NvbnRleHQnKTsiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=


/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	/**
	 * Tingle Context
	 * The environment for tingle's initialization
	 * @author gnosaij
	 *
	 * Copyright 2014-2015, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	var win = window;
	var doc = document;
	// 引入环境检测模块
	var env = __webpack_require__(3);
	var classnames = __webpack_require__(4);
	
	// 全局点击态初始化
	__webpack_require__(5).attach(doc.body);
	
	/**
	 * 变换两个参数的函数到多个参数
	 * @param  {Function} fn 基函数
	 * @return {Function} 变换后的函数
	 * @demo
	 *      let add = (x, y) => { return x+y; }
	 *      add = redo(add);
	 *      add(1,2,3) => 6
	 */
	var redo = function redo(fn) {
	    return function () {
	        var args = arguments;
	        var ret = fn(args[0], args[1]);
	        for (var i = 2, l = args.length; i < l; i++) {
	            ret = fn(ret, args[i]);
	        }
	        return ret;
	    };
	};
	
	/**
	 * 对象扩展
	 * @param  {Object} receiver
	 * @param  {Object} supplier
	 * @return {Object} 扩展后的receiver对象
	 */
	var mixin = redo(function (receiver, supplier) {
	    if (Object.keys) {
	        Object.keys(supplier).forEach(function (property) {
	            Object.defineProperty(receiver, property, Object.getOwnPropertyDescriptor(supplier, property));
	        });
	    } else {
	        for (var property in supplier) {
	            if (supplier.hasOwnProperty(property)) {
	                receiver[property] = supplier[property];
	            }
	        }
	    }
	    return receiver;
	});
	
	/**
	 * 获取自增长id
	 * @return {Number}
	 */
	var tid = 0;
	var getTID = function getTID() {
	    return tid++;
	};
	
	/**
	 * rem system
	 * @TODO 这个闭包 + rem方法 + makePrivateRem方法的整合
	 */
	(function (docEl, fontEl) {
	    var dpr = win.devicePixelRatio || 1;
	
	    // 类似小米2 webView webkit版本是534及以下，避免闪屏
	    var matches = navigator.userAgent.match(/Android[\S\s]+AppleWebkit\/?(\d{3})/i);
	    if (matches && matches[1] <= 534) {
	        dpr = 1;
	    }
	
	    win.dpr = dpr;
	
	    if (!docEl.getAttribute('data-dpr')) {
	        // 在body上添加环境检测的标识类className
	        doc.documentElement.className = classnames(doc.documentElement.className.trim(), _defineProperty({
	            pc: env.isPC,
	            mobile: env.isMobile,
	            hairline: env.supportHairline
	        }, 'dpr' + dpr, dpr > 1));
	
	        docEl.setAttribute('data-dpr', dpr);
	        docEl.firstElementChild.appendChild(fontEl);
	    }
	
	    var setRem = function setRem() {
	        var docWidth = docEl.clientWidth;
	        win.rem = docWidth / 10;
	
	        // ZTE 中兴 ZTE U930_TD/1.0 Linux/2.6.39/Android/4.0Release/3.5.2012 Browser/AppleWebkit534.30
	        // 老机器bug rem计算不是标准=html fontsize
	        if (/ZTE U930_TD/.test(navigator.userAgent)) {
	            win.rem = win.rem * 1.13;
	        }
	
	        fontEl.innerHTML = 'html{font-size:' + win.rem + 'px!important}';
	    };
	
	    win.addEventListener('resize', function () {
	        // resize时立刻change,pad上刷屏明显
	        setRem();
	    }, false);
	    win.addEventListener('pageshow', function (e) {
	        if (e.persisted) {
	            setRem();
	        }
	    }, false);
	
	    setRem();
	})(doc.documentElement, doc.createElement('style'));
	
	var defaultArtBoardWidth = 750;
	
	var rem = function rem(px, artBoardWidth) {
	    return px * 10 / (artBoardWidth || defaultArtBoardWidth) + 'rem';
	};
	
	var makePrivateRem = function makePrivateRem(artBoardWidth) {
	    return function (px) {
	        return rem(px, artBoardWidth);
	    };
	};
	
	// 全局默认配置
	var defaultGlobalConfig = {
	    svgPath: ''
	};
	
	var runtimeGlobalConfig = {};
	
	/**
	 * Top namespace
	 */
	// TODO setGlobal/getGlobal
	var Context = {
	    getTID: getTID,
	    mixin: mixin,
	    noop: function noop(v) {
	        return v;
	    },
	
	    rem: rem,
	    makePrivateRem: makePrivateRem,
	    /**
	     * 执行全局配置
	     * @param options
	     */
	    setGlobal: function setGlobal(options) {
	        runtimeGlobalConfig = mixin({}, defaultGlobalConfig, options);
	    },
	
	    /**
	     * 获取全局配置
	     * @param property {String} optional
	     * @returns {*}
	     */
	    getGlobal: function getGlobal(property) {
	        return property ? runtimeGlobalConfig[property] : runtimeGlobalConfig;
	    },
	
	    /**
	     * 为 class 添加前缀
	     * @param property {String} required
	     * @returns {*}
	     */
	    prefixClass: function prefixClass(classNames) {
	        var prefix = Context.getGlobal('classNamePrefix') || 't';
	        return classNames.split(' ').map(function (className) {
	            return prefix + '-' + className;
	        }).join(' ');
	    }
	};
	
	mixin(Context, env);
	
	// 多次require时保证返回同一个全局对象 保证setGlobal/getGlobal正确执行
	module.exports = win.__TingleContext || (win.__TingleContext = Context);
	//# sourceMappingURL=data:application/json;base64,


/***/ },
/* 3 */
/***/ function(module, exports) {

	'use strict';
	
	/**
	 * Tingle Context
	 * The environment for tingle's initialization
	 * @author gnosaij
	 *
	 * Copyright 2014-2015, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	var win = window;
	var doc = document;
	
	var ua = navigator.userAgent;
	var isMobile = !!ua.match(/mobile/i) || 'orientation' in win;
	var isPC = !isMobile;
	
	var supportTouch = 'ontouchstart' in window;
	var support3D = 'WebKitCSSMatrix' in window && 'm11' in new WebKitCSSMatrix();
	var supportHairline = function () {
	    var support = false;
	    if (win.devicePixelRatio && devicePixelRatio >= 2) {
	        var testElem = doc.createElement('div');
	        testElem.style.border = '.5px solid transparent';
	        doc.body.appendChild(testElem);
	        if (testElem.offsetHeight == 1) {
	            // 0.5 + 0.5 = 1
	            support = true;
	        }
	        doc.body.removeChild(testElem);
	    }
	    return support;
	}();
	
	// 常量
	var TOUCH_START = supportTouch ? 'touchstart' : 'mousedown';
	var TOUCH_MOVE = supportTouch ? 'touchmove' : 'mousemove';
	var TOUCH_END = supportTouch ? 'touchend' : 'mouseup';
	var TOUCH_CANCEL = supportTouch ? 'touchcancel' : 'mouseup';
	
	var env = {
	    // 是什么环境
	    isPC: isPC,
	    isMobile: isMobile,
	
	    // 是否支持
	    support3D: support3D,
	    supportHairline: supportHairline,
	    supportTouch: supportTouch,
	
	    // 事件去差异
	    TOUCH_START: TOUCH_START,
	    TOUCH_MOVE: TOUCH_MOVE,
	    TOUCH_END: TOUCH_END,
	    TOUCH_CANCEL: TOUCH_CANCEL,
	    RESIZE: 'resize'
	};
	
	module.exports = env;
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVudi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQVNBLElBQU0sTUFBTSxNQUFaO0FBQ0EsSUFBTSxNQUFNLFFBQVo7O0FBRUEsSUFBTSxLQUFLLFVBQVUsU0FBckI7QUFDQSxJQUFNLFdBQVcsQ0FBQyxDQUFDLEdBQUcsS0FBSCxDQUFTLFNBQVQsQ0FBRixJQUF5QixpQkFBaUIsR0FBM0Q7QUFDQSxJQUFNLE9BQU8sQ0FBQyxRQUFkOztBQUVBLElBQU0sZUFBZSxrQkFBa0IsTUFBdkM7QUFDQSxJQUFNLFlBQWEscUJBQXFCLE1BQXJCLElBQStCLFNBQVMsSUFBSSxlQUFKLEVBQTNEO0FBQ0EsSUFBTSxrQkFBbUIsWUFBTTtBQUMzQixRQUFJLFVBQVUsS0FBZDtBQUNBLFFBQUksSUFBSSxnQkFBSixJQUF3QixvQkFBb0IsQ0FBaEQsRUFBbUQ7QUFDL0MsWUFBTSxXQUFXLElBQUksYUFBSixDQUFrQixLQUFsQixDQUFqQjtBQUNBLGlCQUFTLEtBQVQsQ0FBZSxNQUFmLEdBQXdCLHdCQUF4QjtBQUNBLFlBQUksSUFBSixDQUFTLFdBQVQsQ0FBcUIsUUFBckI7QUFDQSxZQUFJLFNBQVMsWUFBVCxJQUF5QixDQUE3QixFQUFnQzs7QUFDNUIsc0JBQVUsSUFBVjtBQUNIO0FBQ0QsWUFBSSxJQUFKLENBQVMsV0FBVCxDQUFxQixRQUFyQjtBQUNIO0FBQ0QsV0FBTyxPQUFQO0FBQ0gsQ0FadUIsRUFBeEI7OztBQWVBLElBQU0sY0FBYyxlQUFlLFlBQWYsR0FBOEIsV0FBbEQ7QUFDQSxJQUFNLGFBQWEsZUFBZSxXQUFmLEdBQTZCLFdBQWhEO0FBQ0EsSUFBTSxZQUFZLGVBQWUsVUFBZixHQUE0QixTQUE5QztBQUNBLElBQU0sZUFBZSxlQUFlLGFBQWYsR0FBK0IsU0FBcEQ7O0FBRUEsSUFBTSxNQUFNOztBQUVSLGNBRlE7QUFHUixzQkFIUTs7O0FBTVIsd0JBTlE7QUFPUixvQ0FQUTtBQVFSLDhCQVJROzs7QUFXUiw0QkFYUTtBQVlSLDBCQVpRO0FBYVIsd0JBYlE7QUFjUiw4QkFkUTtBQWVSLFlBQVE7QUFmQSxDQUFaOztBQWtCQSxPQUFPLE9BQVAsR0FBaUIsR0FBakIiLCJmaWxlIjoiZW52LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUaW5nbGUgQ29udGV4dFxuICogVGhlIGVudmlyb25tZW50IGZvciB0aW5nbGUncyBpbml0aWFsaXphdGlvblxuICogQGF1dGhvciBnbm9zYWlqXG4gKlxuICogQ29weXJpZ2h0IDIwMTQtMjAxNSwgVGluZ2xlIFRlYW0sIEFsaW53LlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqL1xuXG5jb25zdCB3aW4gPSB3aW5kb3c7XG5jb25zdCBkb2MgPSBkb2N1bWVudDtcblxuY29uc3QgdWEgPSBuYXZpZ2F0b3IudXNlckFnZW50O1xuY29uc3QgaXNNb2JpbGUgPSAhIXVhLm1hdGNoKC9tb2JpbGUvaSkgfHwgJ29yaWVudGF0aW9uJyBpbiB3aW47XG5jb25zdCBpc1BDID0gIWlzTW9iaWxlO1xuXG5jb25zdCBzdXBwb3J0VG91Y2ggPSAnb250b3VjaHN0YXJ0JyBpbiB3aW5kb3c7XG5jb25zdCBzdXBwb3J0M0QgPSAoJ1dlYktpdENTU01hdHJpeCcgaW4gd2luZG93ICYmICdtMTEnIGluIG5ldyBXZWJLaXRDU1NNYXRyaXgoKSk7XG5jb25zdCBzdXBwb3J0SGFpcmxpbmUgPSAoKCkgPT4ge1xuICAgIHZhciBzdXBwb3J0ID0gZmFsc2U7XG4gICAgaWYgKHdpbi5kZXZpY2VQaXhlbFJhdGlvICYmIGRldmljZVBpeGVsUmF0aW8gPj0gMikge1xuICAgICAgICBjb25zdCB0ZXN0RWxlbSA9IGRvYy5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgdGVzdEVsZW0uc3R5bGUuYm9yZGVyID0gJy41cHggc29saWQgdHJhbnNwYXJlbnQnO1xuICAgICAgICBkb2MuYm9keS5hcHBlbmRDaGlsZCh0ZXN0RWxlbSk7XG4gICAgICAgIGlmICh0ZXN0RWxlbS5vZmZzZXRIZWlnaHQgPT0gMSkgeyAvLyAwLjUgKyAwLjUgPSAxXG4gICAgICAgICAgICBzdXBwb3J0ID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBkb2MuYm9keS5yZW1vdmVDaGlsZCh0ZXN0RWxlbSk7XG4gICAgfVxuICAgIHJldHVybiBzdXBwb3J0O1xufSkoKTtcblxuLy8g5bi46YePXG5jb25zdCBUT1VDSF9TVEFSVCA9IHN1cHBvcnRUb3VjaCA/ICd0b3VjaHN0YXJ0JyA6ICdtb3VzZWRvd24nO1xuY29uc3QgVE9VQ0hfTU9WRSA9IHN1cHBvcnRUb3VjaCA/ICd0b3VjaG1vdmUnIDogJ21vdXNlbW92ZSc7XG5jb25zdCBUT1VDSF9FTkQgPSBzdXBwb3J0VG91Y2ggPyAndG91Y2hlbmQnIDogJ21vdXNldXAnO1xuY29uc3QgVE9VQ0hfQ0FOQ0VMID0gc3VwcG9ydFRvdWNoID8gJ3RvdWNoY2FuY2VsJyA6ICdtb3VzZXVwJztcblxuY29uc3QgZW52ID0ge1xuICAgIC8vIOaYr+S7gOS5iOeOr+Wig1xuICAgIGlzUEMsXG4gICAgaXNNb2JpbGUsXG5cbiAgICAvLyDmmK/lkKbmlK/mjIFcbiAgICBzdXBwb3J0M0QsXG4gICAgc3VwcG9ydEhhaXJsaW5lLFxuICAgIHN1cHBvcnRUb3VjaCxcblxuICAgIC8vIOS6i+S7tuWOu+W3ruW8glxuICAgIFRPVUNIX1NUQVJULFxuICAgIFRPVUNIX01PVkUsXG4gICAgVE9VQ0hfRU5ELFxuICAgIFRPVUNIX0NBTkNFTCxcbiAgICBSRVNJWkU6ICdyZXNpemUnXG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGVudjsiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=


/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames () {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	/**
	 * Tingle Context
	 * The environment for tingle's initialization
	 * @author yize
	 *
	 * Copyright 2014-2015, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	var env = __webpack_require__(3);
	var TOUCH_START = env.TOUCH_START;
	var TOUCH_END = env.TOUCH_END;
	var TOUCH_CANCEL = env.TOUCH_CANCEL;
	
	var TouchEffect = function () {
	    /**
	     *
	     * @param layer
	     * @param options
	     */
	
	    function TouchEffect(layer, options) {
	        _classCallCheck(this, TouchEffect);
	
	        var t = this;
	        t.layer = layer;
	        t.options = options || {
	            selector: "tTE", // abbr. tTouchEffect
	            activeClass: "hover"
	        };
	        t.selector = t.options.selector;
	        t.activeClass = t.options.activeClass;
	        t.initEvent();
	    }
	
	    _createClass(TouchEffect, [{
	        key: "initEvent",
	        value: function initEvent() {
	            var t = this;
	            var layer = t.layer;
	
	            layer.addEventListener(TOUCH_START, t.onTouchStart.bind(t), false);
	            layer.addEventListener(TOUCH_END, t.onTouchEnd.bind(t), false);
	            layer.addEventListener(TOUCH_CANCEL, t.onTouchEnd.bind(t), false);
	        }
	    }, {
	        key: "onTouchStart",
	        value: function onTouchStart(event) {
	
	            var t = this;
	            var target = event.target;
	
	            while (target && target.classList && !target.classList.contains(t.selector)) {
	                target = target.parentNode;
	            }
	
	            if (target && target.classList && target.classList.contains(t.selector)) {
	                target.classList.add(t.activeClass);
	            }
	        }
	    }, {
	        key: "onTouchEnd",
	        value: function onTouchEnd(event) {
	
	            var t = this;
	            var target = event.target;
	
	            while (target && target.classList && !target.classList.contains(t.selector)) {
	                target = target.parentNode;
	            }
	
	            if (target && target.classList && target.classList.contains(t.selector)) {
	                target.classList.remove(t.activeClass);
	            }
	        }
	    }, {
	        key: "destroy",
	        value: function destroy() {
	            var t = this;
	            var layer = t.layer;
	            layer.removeEventListener(TOUCH_START, t.onTouchStart.bind(t), false);
	            layer.removeEventListener(TOUCH_END, t.onTouchEnd.bind(t), false);
	            layer.removeEventListener(TOUCH_CANCEL, t.onTouchEnd.bind(t), false);
	        }
	    }]);
	
	    return TouchEffect;
	}();
	
	TouchEffect.attach = function (layer, options) {
	    return new TouchEffect(layer, options);
	};
	
	module.exports = TouchEffect;
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvdWNoRWZmZWN0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQVNBLElBQU0sTUFBTSxRQUFRLE9BQVIsQ0FBWjtJQUNPLFcsR0FBd0MsRyxDQUF4QyxXO0lBQWEsUyxHQUEyQixHLENBQTNCLFM7SUFBVyxZLEdBQWdCLEcsQ0FBaEIsWTs7SUFFekIsVzs7Ozs7OztBQU1GLHlCQUFZLEtBQVosRUFBbUIsT0FBbkIsRUFBNEI7QUFBQTs7QUFDeEIsWUFBTSxJQUFJLElBQVY7QUFDQSxVQUFFLEtBQUYsR0FBVSxLQUFWO0FBQ0EsVUFBRSxPQUFGLEdBQVksV0FBVztBQUNmLHNCQUFVLEtBREssRTtBQUVmLHlCQUFhO0FBRkUsU0FBdkI7QUFJQSxVQUFFLFFBQUYsR0FBYSxFQUFFLE9BQUYsQ0FBVSxRQUF2QjtBQUNBLFVBQUUsV0FBRixHQUFnQixFQUFFLE9BQUYsQ0FBVSxXQUExQjtBQUNBLFVBQUUsU0FBRjtBQUNIOzs7O29DQUVXO0FBQ1IsZ0JBQU0sSUFBSSxJQUFWO0FBQ0EsZ0JBQU0sUUFBUSxFQUFFLEtBQWhCOztBQUVBLGtCQUFNLGdCQUFOLENBQXVCLFdBQXZCLEVBQW9DLEVBQUUsWUFBRixDQUFlLElBQWYsQ0FBb0IsQ0FBcEIsQ0FBcEMsRUFBNEQsS0FBNUQ7QUFDQSxrQkFBTSxnQkFBTixDQUF1QixTQUF2QixFQUFrQyxFQUFFLFVBQUYsQ0FBYSxJQUFiLENBQWtCLENBQWxCLENBQWxDLEVBQXdELEtBQXhEO0FBQ0Esa0JBQU0sZ0JBQU4sQ0FBdUIsWUFBdkIsRUFBcUMsRUFBRSxVQUFGLENBQWEsSUFBYixDQUFrQixDQUFsQixDQUFyQyxFQUEyRCxLQUEzRDtBQUNIOzs7cUNBRVksSyxFQUFPOztBQUVoQixnQkFBTSxJQUFJLElBQVY7QUFDQSxnQkFBSSxTQUFTLE1BQU0sTUFBbkI7O0FBRUEsbUJBQU8sVUFBVSxPQUFPLFNBQWpCLElBQThCLENBQUMsT0FBTyxTQUFQLENBQWlCLFFBQWpCLENBQTBCLEVBQUUsUUFBNUIsQ0FBdEMsRUFBNkU7QUFDekUseUJBQVMsT0FBTyxVQUFoQjtBQUNIOztBQUVELGdCQUFJLFVBQVUsT0FBTyxTQUFqQixJQUE4QixPQUFPLFNBQVAsQ0FBaUIsUUFBakIsQ0FBMEIsRUFBRSxRQUE1QixDQUFsQyxFQUF5RTtBQUNyRSx1QkFBTyxTQUFQLENBQWlCLEdBQWpCLENBQXFCLEVBQUUsV0FBdkI7QUFDSDtBQUNKOzs7bUNBRVUsSyxFQUFPOztBQUVkLGdCQUFNLElBQUksSUFBVjtBQUNBLGdCQUFJLFNBQVMsTUFBTSxNQUFuQjs7QUFFQSxtQkFBTyxVQUFVLE9BQU8sU0FBakIsSUFBOEIsQ0FBQyxPQUFPLFNBQVAsQ0FBaUIsUUFBakIsQ0FBMEIsRUFBRSxRQUE1QixDQUF0QyxFQUE2RTtBQUN6RSx5QkFBUyxPQUFPLFVBQWhCO0FBQ0g7O0FBRUQsZ0JBQUksVUFBVSxPQUFPLFNBQWpCLElBQThCLE9BQU8sU0FBUCxDQUFpQixRQUFqQixDQUEwQixFQUFFLFFBQTVCLENBQWxDLEVBQXlFO0FBQ3JFLHVCQUFPLFNBQVAsQ0FBaUIsTUFBakIsQ0FBd0IsRUFBRSxXQUExQjtBQUNIO0FBQ0o7OztrQ0FFUztBQUNOLGdCQUFNLElBQUksSUFBVjtBQUNBLGdCQUFNLFFBQVEsRUFBRSxLQUFoQjtBQUNBLGtCQUFNLG1CQUFOLENBQTBCLFdBQTFCLEVBQXVDLEVBQUUsWUFBRixDQUFlLElBQWYsQ0FBb0IsQ0FBcEIsQ0FBdkMsRUFBK0QsS0FBL0Q7QUFDQSxrQkFBTSxtQkFBTixDQUEwQixTQUExQixFQUFxQyxFQUFFLFVBQUYsQ0FBYSxJQUFiLENBQWtCLENBQWxCLENBQXJDLEVBQTJELEtBQTNEO0FBQ0Esa0JBQU0sbUJBQU4sQ0FBMEIsWUFBMUIsRUFBd0MsRUFBRSxVQUFGLENBQWEsSUFBYixDQUFrQixDQUFsQixDQUF4QyxFQUE4RCxLQUE5RDtBQUNIOzs7Ozs7QUFHTCxZQUFZLE1BQVosR0FBcUIsVUFBQyxLQUFELEVBQVEsT0FBUjtBQUFBLFdBQW9CLElBQUksV0FBSixDQUFnQixLQUFoQixFQUF1QixPQUF2QixDQUFwQjtBQUFBLENBQXJCOztBQUVBLE9BQU8sT0FBUCxHQUFpQixXQUFqQiIsImZpbGUiOiJ0b3VjaEVmZmVjdC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGluZ2xlIENvbnRleHRcbiAqIFRoZSBlbnZpcm9ubWVudCBmb3IgdGluZ2xlJ3MgaW5pdGlhbGl6YXRpb25cbiAqIEBhdXRob3IgeWl6ZVxuICpcbiAqIENvcHlyaWdodCAyMDE0LTIwMTUsIFRpbmdsZSBUZWFtLCBBbGludy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKi9cblxuY29uc3QgZW52ID0gcmVxdWlyZSgnLi9lbnYnKTtcbmNvbnN0IHtUT1VDSF9TVEFSVCwgVE9VQ0hfRU5ELCBUT1VDSF9DQU5DRUx9ID0gZW52O1xuXG5jbGFzcyBUb3VjaEVmZmVjdCB7XG4gICAgLyoqXG4gICAgICpcbiAgICAgKiBAcGFyYW0gbGF5ZXJcbiAgICAgKiBAcGFyYW0gb3B0aW9uc1xuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGxheWVyLCBvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IHQgPSB0aGlzO1xuICAgICAgICB0LmxheWVyID0gbGF5ZXI7XG4gICAgICAgIHQub3B0aW9ucyA9IG9wdGlvbnMgfHwge1xuICAgICAgICAgICAgICAgIHNlbGVjdG9yOiBcInRURVwiLCAvLyBhYmJyLiB0VG91Y2hFZmZlY3RcbiAgICAgICAgICAgICAgICBhY3RpdmVDbGFzczogXCJob3ZlclwiXG4gICAgICAgICAgICB9O1xuICAgICAgICB0LnNlbGVjdG9yID0gdC5vcHRpb25zLnNlbGVjdG9yO1xuICAgICAgICB0LmFjdGl2ZUNsYXNzID0gdC5vcHRpb25zLmFjdGl2ZUNsYXNzO1xuICAgICAgICB0LmluaXRFdmVudCgpXG4gICAgfVxuXG4gICAgaW5pdEV2ZW50KCkge1xuICAgICAgICBjb25zdCB0ID0gdGhpcztcbiAgICAgICAgY29uc3QgbGF5ZXIgPSB0LmxheWVyO1xuXG4gICAgICAgIGxheWVyLmFkZEV2ZW50TGlzdGVuZXIoVE9VQ0hfU1RBUlQsIHQub25Ub3VjaFN0YXJ0LmJpbmQodCksIGZhbHNlKTtcbiAgICAgICAgbGF5ZXIuYWRkRXZlbnRMaXN0ZW5lcihUT1VDSF9FTkQsIHQub25Ub3VjaEVuZC5iaW5kKHQpLCBmYWxzZSk7XG4gICAgICAgIGxheWVyLmFkZEV2ZW50TGlzdGVuZXIoVE9VQ0hfQ0FOQ0VMLCB0Lm9uVG91Y2hFbmQuYmluZCh0KSwgZmFsc2UpO1xuICAgIH1cblxuICAgIG9uVG91Y2hTdGFydChldmVudCkge1xuXG4gICAgICAgIGNvbnN0IHQgPSB0aGlzO1xuICAgICAgICBsZXQgdGFyZ2V0ID0gZXZlbnQudGFyZ2V0O1xuXG4gICAgICAgIHdoaWxlICh0YXJnZXQgJiYgdGFyZ2V0LmNsYXNzTGlzdCAmJiAhdGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyh0LnNlbGVjdG9yKSkge1xuICAgICAgICAgICAgdGFyZ2V0ID0gdGFyZ2V0LnBhcmVudE5vZGU7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGFyZ2V0ICYmIHRhcmdldC5jbGFzc0xpc3QgJiYgdGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyh0LnNlbGVjdG9yKSkge1xuICAgICAgICAgICAgdGFyZ2V0LmNsYXNzTGlzdC5hZGQodC5hY3RpdmVDbGFzcylcbiAgICAgICAgfVxuICAgIH1cblxuICAgIG9uVG91Y2hFbmQoZXZlbnQpIHtcblxuICAgICAgICBjb25zdCB0ID0gdGhpcztcbiAgICAgICAgbGV0IHRhcmdldCA9IGV2ZW50LnRhcmdldDtcblxuICAgICAgICB3aGlsZSAodGFyZ2V0ICYmIHRhcmdldC5jbGFzc0xpc3QgJiYgIXRhcmdldC5jbGFzc0xpc3QuY29udGFpbnModC5zZWxlY3RvcikpIHtcbiAgICAgICAgICAgIHRhcmdldCA9IHRhcmdldC5wYXJlbnROb2RlO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRhcmdldCAmJiB0YXJnZXQuY2xhc3NMaXN0ICYmIHRhcmdldC5jbGFzc0xpc3QuY29udGFpbnModC5zZWxlY3RvcikpIHtcbiAgICAgICAgICAgIHRhcmdldC5jbGFzc0xpc3QucmVtb3ZlKHQuYWN0aXZlQ2xhc3MpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBkZXN0cm95KCkge1xuICAgICAgICBjb25zdCB0ID0gdGhpcztcbiAgICAgICAgY29uc3QgbGF5ZXIgPSB0LmxheWVyO1xuICAgICAgICBsYXllci5yZW1vdmVFdmVudExpc3RlbmVyKFRPVUNIX1NUQVJULCB0Lm9uVG91Y2hTdGFydC5iaW5kKHQpLCBmYWxzZSk7XG4gICAgICAgIGxheWVyLnJlbW92ZUV2ZW50TGlzdGVuZXIoVE9VQ0hfRU5ELCB0Lm9uVG91Y2hFbmQuYmluZCh0KSwgZmFsc2UpO1xuICAgICAgICBsYXllci5yZW1vdmVFdmVudExpc3RlbmVyKFRPVUNIX0NBTkNFTCwgdC5vblRvdWNoRW5kLmJpbmQodCksIGZhbHNlKTtcbiAgICB9XG59XG5cblRvdWNoRWZmZWN0LmF0dGFjaCA9IChsYXllciwgb3B0aW9ucykgPT4gbmV3IFRvdWNoRWZmZWN0KGxheWVyLCBvcHRpb25zKTtcblxubW9kdWxlLmV4cG9ydHMgPSBUb3VjaEVmZmVjdDtcblxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9


/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var React = __webpack_require__(7);
	var helpers = __webpack_require__(8)(__webpack_require__(47));
	
	module.exports = React.createClass({
	
	    displayName: "TingleIconSymbols",
	
	    getDefaultProps: function getDefaultProps() {
	        return { "0": "{", "1": "s", "2": "t", "3": "y", "4": "l", "5": "e", "6": ":", "7": "{", "8": "}", "9": "}", "xmlns": "http://www.w3.org/2000/svg", "data-svgreactloader": "[[\"http://www.w3.org/2000/svg\",\"xlink\",\"http://www.w3.org/1999/xlink\"],[\"http://www.w3.org/2000/svg\",\"sketch\",\"http://www.bohemiancoding.com/sketch/ns\"]]" };
	    },
	    componentDidMount: function componentDidMount() {
	        helpers.applyXmlAttributes(this);
	    },
	    render: function render() {
	        var props = this.props;
	        var children = props.children;
	
	        return React.createElement(
	            'svg',
	            this.props,
	            React.createElement(
	                'defs',
	                null,
	                React.createElement(
	                    'style',
	                    { type: 'text/css' },
	                    '\n@font-face { font-family: ifont; src: url("http://at.alicdn.com/t/font_1442373896_4754455.eot?#iefix") format("embedded-opentype"), url("http://at.alicdn.com/t/font_1442373896_4754455.woff") format("woff"), url("http://at.alicdn.com/t/font_1442373896_4754455.ttf") format("truetype"), url("http://at.alicdn.com/t/font_1442373896_4754455.svg#ifont") format("svg"); }\n\n'
	                ),
	                React.createElement(
	                    'style',
	                    { type: 'text/css' },
	                    '\n@font-face { font-family: ifont; src: url("http://at.alicdn.com/t/font_1442373896_4754455.eot?#iefix") format("embedded-opentype"), url("http://at.alicdn.com/t/font_1442373896_4754455.woff") format("woff"), url("http://at.alicdn.com/t/font_1442373896_4754455.ttf") format("truetype"), url("http://at.alicdn.com/t/font_1442373896_4754455.svg#ifont") format("svg"); }\n\n'
	                ),
	                React.createElement(
	                    'style',
	                    { type: 'text/css' },
	                    '\n@font-face { font-family: ifont; src: url("http://at.alicdn.com/t/font_1442373896_4754455.eot?#iefix") format("embedded-opentype"), url("http://at.alicdn.com/t/font_1442373896_4754455.woff") format("woff"), url("http://at.alicdn.com/t/font_1442373896_4754455.ttf") format("truetype"), url("http://at.alicdn.com/t/font_1442373896_4754455.svg#ifont") format("svg"); }\n\n'
	                ),
	                React.createElement(
	                    'style',
	                    { type: 'text/css' },
	                    '\n@font-face { font-family: ifont; src: url("http://at.alicdn.com/t/font_1442373896_4754455.eot?#iefix") format("embedded-opentype"), url("http://at.alicdn.com/t/font_1442373896_4754455.woff") format("woff"), url("http://at.alicdn.com/t/font_1442373896_4754455.ttf") format("truetype"), url("http://at.alicdn.com/t/font_1442373896_4754455.svg#ifont") format("svg"); }\n\n'
	                ),
	                React.createElement(
	                    'style',
	                    { type: 'text/css' },
	                    '\n@font-face { font-family: ifont; src: url("http://at.alicdn.com/t/font_1442373896_4754455.eot?#iefix") format("embedded-opentype"), url("http://at.alicdn.com/t/font_1442373896_4754455.woff") format("woff"), url("http://at.alicdn.com/t/font_1442373896_4754455.ttf") format("truetype"), url("http://at.alicdn.com/t/font_1442373896_4754455.svg#ifont") format("svg"); }\n\n'
	                ),
	                React.createElement(
	                    'style',
	                    { type: 'text/css' },
	                    '\n@font-face { font-family: ifont; src: url("http://at.alicdn.com/t/font_1442373896_4754455.eot?#iefix") format("embedded-opentype"), url("http://at.alicdn.com/t/font_1442373896_4754455.woff") format("woff"), url("http://at.alicdn.com/t/font_1442373896_4754455.ttf") format("truetype"), url("http://at.alicdn.com/t/font_1442373896_4754455.svg#ifont") format("svg"); }\n\n'
	                ),
	                React.createElement(
	                    'style',
	                    { type: 'text/css' },
	                    '\n@font-face { font-family: ifont; src: url("http://at.alicdn.com/t/font_1442373896_4754455.eot?#iefix") format("embedded-opentype"), url("http://at.alicdn.com/t/font_1442373896_4754455.woff") format("woff"), url("http://at.alicdn.com/t/font_1442373896_4754455.ttf") format("truetype"), url("http://at.alicdn.com/t/font_1442373896_4754455.svg#ifont") format("svg"); }\n\n'
	                ),
	                React.createElement(
	                    'style',
	                    { type: 'text/css' },
	                    '\n@font-face { font-family: ifont; src: url("http://at.alicdn.com/t/font_1442373896_4754455.eot?#iefix") format("embedded-opentype"), url("http://at.alicdn.com/t/font_1442373896_4754455.woff") format("woff"), url("http://at.alicdn.com/t/font_1442373896_4754455.ttf") format("truetype"), url("http://at.alicdn.com/t/font_1442373896_4754455.svg#ifont") format("svg"); }\n\n'
	                )
	            ),
	            React.createElement(
	                'symbol',
	                { id: 'apply', viewBox: '0 0 200 200' },
	                React.createElement(
	                    'g',
	                    { className: 'transform-group' },
	                    React.createElement(
	                        'g',
	                        { transform: 'scale(0.1953125, 0.1953125)' },
	                        React.createElement('path', { d: 'M190.231087 546.83539l155.550729-78.723969c0 0 139.522684 166.099992 161.116491 408.477228l-119.148657 51.347458C387.74965 927.936107 228.564138 744.602615 190.231087 546.83539zM412.607804 942.581666 514.345929 903.82292 494.96758 991.021911ZM1019.738441 900.454196 1019.738441 124.669394c0-87.942935-61.703317-113.511263-95.000678-114.752534L67.67789 9.91686l0 1.702782C61.596382 12.346189 55.479057 13.551644 49.292148 15.804964-79.645456 62.524009 112.44856 456.161251 182.341397 526.125719l155.142429-78.29725c0 0-75.337849-297.626561-185.976692-401.599587l772.556271-0.01842c2.411933 0.089028 59.363016 3.121084 59.363016 78.45791l0.033769 776.776386c0 0.355087 1.347694 38.157042-22.198581 62.980403-14.607696 15.424294-36.489052 23.260773-65.035202 23.260773L153.494395 987.685933c-3.670599 0-90.000803-1.028423-90.000803-90.177835L63.493591 733.572398 27.180548 733.572398l0 163.936723c0 100.036367 82.624812 126.489856 126.312824 126.489856l742.733035 0c38.900985 0 69.647243-11.631922 91.419106-34.609239C1022.184143 952.936501 1019.843842 901.659651 1019.738441 900.454196zM576.439126 263.820618l296.52446 0 0 72.625064-296.52446 0 0-72.625064ZM434.186262 445.38072l435.764712 0 0 69.610404-435.764712 0 0-69.610404ZM582.4664 660.240229l284.46889 0 0 75.637678-284.46889 0 0-75.637678Z' })
	                    )
	                )
	            ),
	            React.createElement(
	                'symbol',
	                { id: 'benefit', viewBox: '0 0 200 200' },
	                React.createElement(
	                    'g',
	                    { className: 'transform-group' },
	                    React.createElement(
	                        'g',
	                        { transform: 'scale(0.1953125, 0.1953125)' },
	                        React.createElement('path', { d: 'M713.150788 124.492362c-114.762767 0-203.049532 103.725386-203.049532 103.725386s-88.266299-103.725386-203.029066-103.725386c-90.496084 0-244.976434 79.45461-244.976434 251.600295 0 275.865955 406.077575 523.067057 448.0055 523.067057 41.941228 0 448.03006-247.200078 448.03006-523.067057C958.132338 203.946972 803.620265 124.492362 713.150788 124.492362zM713.150788 217.187531c39.035038 0 152.284335 39.117926 152.284335 158.905126 0 183.17181-265.36581 378.135176-355.333868 424.340521-89.953731-46.215578-355.310332-241.182015-355.310332-424.340521 0-119.7872 113.251344-158.905126 152.281265-158.905126 57.661258 0 115.425869 51.646264 132.437312 71.112618 17.48114 21.073968 42.800805 33.115212 70.190619 33.283034 0.193405 0 0.388856 0 0.583285 0 27.152407 0 52.404534-12.144598 70.02075-32.844036C597.699336 268.834818 655.482367 217.187531 713.150788 217.187531L713.150788 217.187531zM510.101255 865.09385c-0.779759 0-1.541099-0.12996-2.27788-0.404206-4.093225-1.5104-9.587356-3.928472-15.854083-7.015787-3.282766-1.606591-4.628414-5.578042-3.01466-8.861832 1.619894-3.288906 5.579065-4.63353 8.861832-3.01466 4.866844 2.393513 8.983605 4.259 12.284791 5.581112 1.809205-0.731664 3.886517-1.635243 6.206352-2.700505 3.331885-1.484817 7.267521-0.035816 8.783037 3.278673 1.5104 3.337002 0.055259 7.252171-3.270487 8.774851-3.728928 1.694595-6.882757 3.013637-9.428743 3.947915C511.649518 864.946494 510.874875 865.09385 510.101255 865.09385zM554.021557 842.87378c-2.27788 0-4.50664-1.187035-5.736655-3.313465-1.832741-3.15997-0.74292-7.217379 2.424212-9.036817 6.912433-4.01443 14.405081-8.491395 22.3838-13.467733 3.075035-1.912559 7.181563-1.003863 9.117658 2.106987 1.937119 3.113921 0.99363 7.198959-2.108011 9.125845-8.106632 5.067412-15.72617 9.635451-22.779819 13.697977C556.274878 842.587254 555.144124 842.87378 554.021557 842.87378zM460.225311 839.389422c-1.151219 0-2.314719-0.291642-3.362584-0.905626-7.071046-4.179183-14.642488-8.820899-22.658046-13.888312-3.076058-1.961678-3.996011-6.052856-2.02717-9.148357 1.948375-3.080152 6.02318-3.993964 9.142218-2.032286 7.856945 5.008061 15.31787 9.562796 22.262026 13.656021 3.15383 1.862417 4.201695 5.930059 2.350534 9.074679C464.683856 838.233086 462.490911 839.389422 460.225311 839.389422zM609.679182 807.64544c-2.108011 0-4.183276-1.003863-5.463432-2.88163-2.065032-3.007497-1.302669-7.139607 1.724271-9.196453 6.913457-4.746094 14.081717-9.757225 21.415752-15.050788 2.954285-2.15406 7.095605-1.471514 9.239432 1.49198 2.148943 2.965541 1.473561 7.107885-1.479701 9.246595-7.442506 5.360078-14.678304 10.432607-21.701255 15.226796C612.274286 807.272957 610.971617 807.64544 609.679182 807.64544zM404.835793 803.740504c-1.302669 0-2.62478-0.387833-3.76986-1.174756-7.016811-4.880147-14.229073-9.995655-21.586644-15.390525-2.960425-2.156106-3.593851-6.29845-1.437745-9.239432 2.163269-2.973728 6.29845-3.613294 9.252735-1.438769 7.272637 5.310959 14.385639 10.379395 21.317515 15.177678 2.997264 2.096754 3.752464 6.219655 1.675152 9.223059C408.983253 802.747897 406.930501 803.740504 404.835793 803.740504zM662.847102 768.809947c-1.966795 0-3.916193-0.87595-5.220908-2.539846-2.25332-2.898003-1.735527-7.04751 1.144056-9.305947 6.742565-5.250584 13.58132-10.688433 20.484543-16.32992 2.825348-2.314719 6.999414-1.905396 9.318226 0.931209 2.314719 2.834558 1.90028 6.993275-0.931209 9.31311-6.986111 5.720282-13.906731 11.238972-20.719904 16.537651C665.709289 768.364809 664.277684 768.809947 662.847102 768.809947zM351.907327 764.540713c-1.437745 0-2.880607-0.463558-4.099365-1.413186-6.791683-5.372358-13.679557-10.9197-20.61655-16.677844-2.801812-2.323928-3.203972-6.499018-0.865717-9.318226 2.326998-2.805906 6.511297-3.191692 9.325389-0.870834 6.858198 5.682419 13.643742 11.17655 20.355607 16.470113 2.869351 2.258437 3.362584 6.42534 1.103124 9.295714C355.8051 763.680113 353.855702 764.540713 351.907327 764.540713zM713.5816 726.795041c-1.839905 0-3.671623-0.760317-4.975315-2.240017-2.410909-2.765997-2.136663-6.936993 0.603751-9.361205 6.224772-5.450129 12.449543-11.079336 18.705014-16.859993l5.219885 4.191462 3.959172 5.351891c-6.511297 6.037507-12.840446 11.745509-19.138896 17.279548C716.69552 726.255759 715.129862 726.795041 713.5816 726.795041zM301.463448 722.223932c-1.571798 0-3.149736-0.556679-4.41045-1.683339-4.568039-4.074805-9.142218-8.239662-13.733792-12.480242l-5.835915-5.432733c-2.661619-2.503007-2.794649-6.693446-0.286526-9.361205 2.51017-2.662643 6.699586-2.777253 9.368368-0.284479l5.737678 5.351891c4.5312 4.191462 9.05012 8.308223 13.570063 12.322653 2.729158 2.428306 2.960425 6.625908 0.530073 9.354042C305.098231 721.471802 303.290049 722.223932 301.463448 722.223932zM761.58387 681.706123c-1.694595 0-3.374864-0.650823-4.666276-1.930979-2.601244-2.581802-2.601244-6.77224-0.030699-9.356089 6.068206-6.096858 12.132318-12.363585 18.187221-18.807345 2.496867-2.686179 6.704702-2.795673 9.343809-0.291642 2.679016 2.490727 2.805906 6.67912 0.296759 9.341762-6.125511 6.547113-12.289907 12.924357-18.436908 19.088754C764.983293 681.055301 763.277442 681.706123 761.58387 681.706123zM253.772262 676.79016c-1.724271 0-3.429099-0.656963-4.719488-1.979074-6.121418-6.230911-12.236696-12.650111-18.315134-19.241226-2.467191-2.686179-2.302439-6.876618 0.388856-9.361205 2.716878-2.452865 6.876618-2.290159 9.361205 0.38988 5.975085 6.492878 11.993149 12.803607 18.005073 18.931165 2.569522 2.612501 2.521426 6.797823-0.084934 9.361205C257.116427 676.157757 255.435135 676.79016 253.772262 676.79016zM806.234813 633.285321c-1.5104 0-3.040243-0.517793-4.288676-1.576915-2.783393-2.369977-3.119037-6.54302-0.748037-9.330506 5.598508-6.585999 11.115152-13.316284 16.537651-20.186761 2.246157-2.879584 6.41306-3.367701 9.30083-1.101077 2.868327 2.258437 3.354398 6.42534 1.088798 9.30083-5.517667 6.997368-11.145851 13.861706-16.84055 20.567431C809.974997 632.499421 808.110533 633.285321 806.234813 633.285321zM209.528596 628.004037c-1.888 0-3.76986-0.816598-5.079692-2.382257-5.652743-6.78452-11.225669-13.691837-16.658402-20.75572-2.222621-2.90005-1.681292-7.04751 1.212618-9.283434 2.886747-2.204202 7.064906-1.691525 9.28855 1.212618 5.329379 6.907317 10.768251 13.691837 16.317641 20.343327 2.345418 2.800789 1.966795 6.979972-0.835018 9.31925C212.531999 627.498524 211.026716 628.004037 209.528596 628.004037zM846.459956 581.12331c-1.309832 0-2.614547-0.37146-3.771907-1.173732-3.01466-2.084475-3.758604-6.213515-1.682315-9.209756 4.935406-7.132444 9.716292-14.391778 14.289448-21.750373 1.966795-3.119037 6.068206-4.00829 9.136078-2.12029 3.100618 1.938142 4.044106 6.025227 2.121314 9.130961-4.711302 7.534604-9.595542 14.978133-14.654768 22.268166C850.618673 580.130703 848.548524 581.12331 846.459956 581.12331zM169.88469 575.434751c-2.125407 0-4.221138-1.02433-5.500271-2.922563-4.964058-7.383154-9.775644-14.874779-14.368242-22.463618-1.88186-3.131317-0.889253-7.198959 2.235924-9.094122 3.131317-1.87572 7.205099-0.889253 9.094122 2.241041 4.488221 7.40669 9.171893 14.716166 14.032598 21.921265 2.040473 3.0208 1.242294 7.150864-1.796926 9.191336C172.435793 575.070454 171.163823 575.434751 169.88469 575.434751zM880.469538 524.784164c-1.030469 0-2.066055-0.237407-3.027963-0.743944-3.25923-1.662873-4.541433-5.664-2.862187-8.904811 3.971451-7.722892 7.680936-15.519462 11.122315-23.394826 1.449002-3.368724 5.425569-4.848425 8.696056-3.430122 3.367701 1.450025 4.89038 5.353938 3.429099 8.704243-3.53757 8.15575-7.374968 16.213263-11.480472 24.162306C885.17163 523.473309 882.856911 524.784164 880.469538 524.784164zM136.646682 518.594185c-2.430352 0-4.780887-1.356904-5.938246-3.683902-4.002151-8.106632-7.729032-16.317641-11.079336-24.387433-1.400906-3.374864 0.207731-7.248078 3.581572-8.650007 3.39226-1.425466 7.254218 0.212848 8.655124 3.581572 3.288906 7.948019 6.876618 15.812127 10.720156 23.583115 1.614777 3.288906 0.268106 7.260357-3.00238 8.874111C138.639059 518.377244 137.639289 518.594185 136.646682 518.594185zM905.538493 464.010009c-0.644683 0-1.303692-0.084934-1.948375-0.298805-3.496637-1.072425-5.463432-4.780887-4.371564-8.265244 2.579755-8.380878 4.780887-16.767895 6.551206-24.90011 0.76134-3.569292 4.362354-5.858428 7.865131-5.066389 3.587712 0.76134 5.841032 4.28663 5.067412 7.863085-1.834788 8.508791-4.136204 17.261129-6.841825 26.001187C910.984528 462.189547 908.371004 464.010009 905.538493 464.010009zM112.698247 457.32782c-2.886747 0-5.53097-1.899256-6.364965-4.793166-2.491751-8.721639-4.585435-17.529235-6.243191-26.190499-0.682545-3.599991 1.669012-7.057743 5.256724-7.747451 3.514033-0.681522 7.071046 1.675152 7.747451 5.262864 1.577938 8.276501 3.586688 16.694217 5.962805 25.027 1.011027 3.507894-1.029446 7.181563-4.5312 8.18031C113.909841 457.256188 113.294834 457.32782 112.698247 457.32782zM917.848866 399.515113c-0.152473 0-0.313132 0-0.451278-0.01535-3.64911-0.243547-6.41306-3.402493-6.169513-7.049556 0.36532-5.442966 0.553609-10.887978 0.553609-16.35755 0-3.130294-0.061398-6.205329-0.188288-9.244548-0.140193-3.651157 2.685155-6.737448 6.346545-6.895037 3.623527 0.078795 6.722098 2.703575 6.895037 6.349615 0.12689 3.219321 0.187265 6.477528 0.187265 9.78997 0 5.753027-0.187265 11.510148-0.573051 17.234523C924.205645 396.836097 921.307641 399.515113 917.848866 399.515113zM102.01493 392.538211c-3.538593 0-6.480598-2.789533-6.620791-6.361895-0.127913-3.358491-0.188288-6.707772-0.188288-10.083659 0-5.783727 0.188288-11.432377 0.590448-16.956184 0.268106-3.64604 3.478218-6.42534 7.083326-6.127558 3.654226 0.271176 6.395664 3.438309 6.133697 7.086395-0.3776 5.211698-0.566912 10.553357-0.566912 15.997346 0 3.192715 0.061398 6.389524 0.189312 9.56996 0.140193 3.648087-2.704598 6.723122-6.358825 6.875594C102.184799 392.538211 102.093724 392.538211 102.01493 392.538211zM913.116075 334.087984c-3.027963 0-5.749958-2.080382-6.450922-5.15644-1.90028-8.331759-4.336772-16.539698-7.229658-24.378224-1.26583-3.429099 0.481977-7.241938 3.904936-8.508791 3.440355-1.282203 7.253194 0.490164 8.513908 3.903913 3.100618 8.393157 5.693676 17.148565 7.716752 26.056446 0.817622 3.572362-1.419326 7.114025-4.994758 7.91425C914.090263 334.039889 913.596006 334.087984 913.116075 334.087984zM108.757494 327.340303c-0.559748 0-1.12666-0.064468-1.686409-0.218988-3.544733-0.932232-5.652743-4.555759-4.720511-8.086166 2.320858-8.815783 5.232165-17.480116 8.642844-25.76992 1.38351-3.38612 5.256724-5.030573 8.636704-3.592828 3.373841 1.382487 4.994758 5.250584 3.592828 8.636704-3.178389 7.744381-5.895267 15.854083-8.063653 24.091698C114.378515 325.375555 111.68722 327.340303 108.757494 327.340303zM888.272247 273.478582c-2.205225 0-4.374634-1.11438-5.623068-3.130294-4.432962-7.123234-9.422603-14.081717-14.843056-20.662599-2.314719-2.820232-1.913583-6.998391 0.913812-9.324366 2.808976-2.302439 6.972808-1.916653 9.325389 0.919952 5.768377 7.018857 11.102872 14.455223 15.85306 22.084994 1.930979 3.103688 0.98749 7.178493-2.131547 9.117658C890.683157 273.15317 889.477702 273.478582 888.272247 273.478582zM494.064001 271.188422c-0.889253 0-1.808182-0.179079-2.672876-0.566912-6.352685-2.807952-12.090363-7.074116-16.590863-12.364609-0.249687-0.282433-2.15099-2.445702-5.500271-5.895267-2.533706-2.62478-2.467191-6.816243 0.158612-9.361205 2.612501-2.549056 6.80294-2.473331 9.355065 0.152473 3.599991 3.711532 5.652743 6.05081 5.969968 6.40078 3.325745 3.894703 7.417947 6.958482 11.961426 8.959046 3.331885 1.476631 4.860704 5.380544 3.374864 8.730848C499.029082 269.717931 496.59873 271.188422 494.064001 271.188422zM531.840372 268.088828c-2.161223 0-4.269233-1.046842-5.529947-3.003404-2.009773-3.051499-1.157359-7.16519 1.905396-9.153474 2.644223-1.735527 5.019317-3.843538 7.102768-6.261611 0.206708-0.243547 4.000104-4.577249 10.809183-11.246135 2.613524-2.552126 6.791683-2.524496 9.361205 0.100284 2.564405 2.613524 2.51017 6.800893-0.103354 9.361205-6.254447 6.144954-9.800203 10.140964-10.032494 10.42135-2.863211 3.341095-6.193049 6.288217-9.897418 8.691963C534.344402 267.737834 533.094946 268.088828 531.840372 268.088828zM135.715473 267.660062c-1.279133 0-2.558265-0.360204-3.697205-1.12666-3.02694-2.044566-3.837398-6.155187-1.796926-9.194406 4.988618-7.40976 10.573823-14.650675 16.590863-21.502733 2.430352-2.741437 6.603395-3.000334 9.343809-0.60989 2.752694 2.418073 3.01466 6.611581 0.615007 9.353019-5.65172 6.42534-10.890025 13.201673-15.561417 20.160155C139.929448 266.639826 137.83474 267.660062 135.715473 267.660062zM444.821483 227.724515c-1.468444 0-2.935865-0.474814-4.16588-1.473561-6.760984-5.484921-13.728676-10.680247-20.703531-15.464203-3.0208-2.055822-3.78214-6.181793-1.717108-9.194406 2.082428-3.01159 6.224772-3.77907 9.196453-1.720178 7.272637 4.979408 14.519692 10.384511 21.554922 16.08535 2.844791 2.302439 3.28379 6.480598 0.980327 9.31311C448.665021 226.88438 446.752462 227.724515 444.821483 227.724515zM845.149101 224.092801c-1.51654 0-3.02694-0.502443-4.270257-1.553379-6.468318-5.445012-13.356193-10.588149-20.484543-15.308661-3.046383-2.018983-3.880377-6.130627-1.862417-9.182127 2.044566-3.050476 6.16849-3.839445 9.184173-1.859347 7.541767 5.002944 14.845103 10.461259 21.697161 16.216333 2.792603 2.351558 3.15383 6.526647 0.804319 9.337669C848.912821 223.290529 847.038124 224.092801 845.149101 224.092801zM580.56612 223.784786c-1.967818 0-3.934612-0.880043-5.237281-2.561335-2.235924-2.895957-1.705851-7.05058 1.174756-9.299807 7.205099-5.585205 14.57495-10.848069 21.884426-15.619746 3.01466-2.020006 7.14984-1.191128 9.153474 1.912559 2.004657 3.054569 1.152243 7.166213-1.918699 9.157567-7.004531 4.592598-14.062274 9.647731-21.00029 15.026228C583.429331 223.327368 581.984423 223.784786 580.56612 223.784786zM180.44521 219.709981c-1.955538 0-3.880377-0.867764-5.195326-2.509147-2.2656-2.868327-1.772366-7.03523 1.084705-9.31004 7.058766-5.573949 14.519692-10.8143 22.182208-15.559371 3.069919-1.90028 7.169283-0.971118 9.111518 2.134617 1.930979 3.115967 0.969071 7.190773-2.131547 9.115612-7.241938 4.488221-14.294564 9.42772-20.939915 14.702863C183.33912 219.244376 181.895235 219.709981 180.44521 219.709981zM389.658116 191.868889c-0.99977 0-1.992377-0.223081-2.936889-0.688685-7.850805-3.888564-15.761985-7.266497-23.51046-10.034541-3.459798-1.227967-5.237281-5.016247-4.00829-8.457626 1.224898-3.449565 5.007037-5.198395 8.454556-4.007267 8.234545 2.948145 16.633842 6.517437 24.929786 10.628058 3.288906 1.629103 4.622274 5.600555 3.00238 8.871041C394.439002 190.519148 392.087445 191.868889 389.658116 191.868889zM789.478174 189.279924c-0.917906 0-1.839905-0.179079-2.714831-0.581238-7.838525-3.529383-15.884782-6.620791-23.890107-9.166777-3.476171-1.11438-5.402033-4.839215-4.29277-8.328689 1.116427-3.478218 4.805446-5.378497 8.333806-4.293793 8.478092 2.715855 16.987906 5.975085 25.27464 9.712199 3.345188 1.49812 4.824889 5.420453 3.327792 8.755408C794.411533 187.830923 792.000624 189.279924 789.478174 189.279924zM636.479571 189.17657c-2.495844 0-4.88424-1.424442-6.000668-3.839445-1.532913-3.310396-0.097214-7.241938 3.229554-8.779967 8.374738-3.895727 16.870226-7.245008 25.221428-9.958816 3.494591-1.111311 7.217379 0.776689 8.344039 4.254907 1.119497 3.477194-0.774643 7.214309-4.257977 8.340969-7.844665 2.545986-15.835663 5.703909-23.75503 9.361205C638.373711 188.985212 637.411803 189.17657 636.479571 189.17657zM237.12614 186.524161c-2.601244 0-5.055133-1.534959-6.121418-4.087085-1.388627-3.370771 0.212848-7.250124 3.587712-8.648984 8.478092-3.501754 17.08512-6.517437 25.575492-8.947789 3.557012-1.074472 7.1744 1.032516 8.191566 4.535293 1.004887 3.520173-1.029446 7.192819-4.54348 8.188496-8.021697 2.302439-16.152888 5.130857-24.156166 8.456602C238.838132 186.371688 237.966275 186.524161 237.12614 186.524161zM327.14127 172.143639c-0.280386 0-0.566912-0.01228-0.864694-0.049119-8.314363-1.074472-16.256242-1.51347-25.082258-1.099031-4.104481 0.385786-6.767124-2.638083-6.936993-6.2831-0.176009-3.651157 2.63706-6.764054 6.291287-6.933923 9.495258-0.502443 18.345834 0 27.432793 1.175779 3.624551 0.480954 6.181793 3.792373 5.719258 7.424086C333.256548 169.71431 330.41892 172.143639 327.14127 172.143639zM727.006354 158.336168c-4.837168-0.493234-9.484002-0.73678-13.855566-0.73678-4.64888 0-9.252735 0.218988-13.833053 0.605797-3.63683 0.311085-6.334265 3.518127-6.025227 7.16519 0.291642 3.450589 3.179412 6.051833 6.577812 6.051833 0.195451 0 0.385786-0.01535 0.586354-0.024559 4.189416-0.36532 8.429996-0.556679 12.69309-0.556679 3.958148 0 8.135284 0.218988 12.510942 0.657986 0.231267 0.027629 0.456395 0.042979 0.687662 0.042979 3.342118 0 6.224772-2.552126 6.565533-5.950526C733.292524 161.945369 730.634997 158.695349 727.006354 158.336168z' })
	                    )
	                )
	            ),
	            React.createElement(
	                'symbol',
	                { id: 'doc', viewBox: '0 0 200 200' },
	                React.createElement(
	                    'g',
	                    { className: 'transform-group' },
	                    React.createElement(
	                        'g',
	                        { transform: 'scale(0.1953125, 0.1953125)' },
	                        React.createElement('path', { d: 'M512 1024c-282.794667 0-512-229.205333-512-512s229.205333-512 512-512 512 229.205333 512 512S794.794667 1024 512 1024zM512 56.888889C260.664889 56.888889 56.888889 260.664889 56.888889 512s203.776 455.111111 455.111111 455.111111c251.335111 0 455.111111-203.776 455.111111-455.111111S763.335111 56.888889 512 56.888889zM398.222222 312.888889l341.333333 0L739.555556 739.555556 398.222222 739.555556 398.222222 312.888889zM455.111111 682.666667l227.555556 0L682.666667 369.777778 455.111111 369.777778 455.111111 682.666667zM483.555556 512l170.666667 0 0 28.444444-170.666667 0L483.555556 512zM483.555556 426.666667l170.666667 0L654.222222 455.111111l-170.666667 0L483.555556 426.666667zM625.777778 625.777778 483.555556 625.777778l0-28.444444L625.777778 597.333333 625.777778 625.777778zM369.777778 284.444444 341.333333 284.444444l0 312.888889 28.444444 0 0 56.888889L284.444444 654.222222 284.444444 227.555556l341.333333 0 0 56.888889-56.888889 0L369.777778 284.444444z' })
	                    )
	                )
	            ),
	            React.createElement(
	                'symbol',
	                { id: 'lift', viewBox: '0 0 200 200' },
	                React.createElement(
	                    'g',
	                    { className: 'transform-group' },
	                    React.createElement(
	                        'g',
	                        { transform: 'scale(0.1953125, 0.1953125)' },
	                        React.createElement('path', { d: 'M613.600859 382.054764c-33.866744 41.229899-74.11782 81.480975-120.743177 120.743177l233.386884 0C678.631591 465.007113 641.08327 424.756037 613.600859 382.054764zM476.661254 664.76976l267.253628 0 0 120.743177-267.253628 0 0-120.743177ZM709.872226 0 314.127774 0C140.64003 0 0 140.64003 0 314.127774l0 395.744452c0 173.487743 140.64003 314.127774 314.127774 314.127774l395.744452 0c173.487743 0 314.127774-140.64003 314.127774-314.127774L1024 314.127774C1024 140.64003 883.35997 0 709.872226 0zM381.686606 231.861479l99.392541 0 0-79.513279 54.481065 0 0 79.513279 153.13729 0 0-79.513279 54.481065 0 0 79.513279 117.0616 0 0 51.537059-117.0616 0 0 73.624011-54.481065 0 0-73.624011L535.560211 283.398539l0 73.624011-54.481065 0 0-73.624011-99.392541 0L381.686606 231.861479zM289.655964 523.412262l0 262.100675c0 51.041994-20.86311 77.546839-62.580535 79.513279-20.126795 1.472631-42.460023 1.961414-66.997172 1.472631-1.96644-19.636755-4.911702-40.003544-8.83453-61.107904 24.048366 1.961414 42.94378 2.945262 56.690011 2.945262 18.647881 0.488783 27.977476-10.06591 27.977476-31.657797L235.911215 550.652166c-24.543431 12.76364-52.030868 26.998654-82.458541 42.701273l-7.361899-64.789482c30.427673-12.757357 60.371589-26.00978 89.820439-39.757268L235.911215 343.033812l-88.349065 0 0-51.537059 88.349065 0L235.911215 148.666623l53.744749 0 0 142.830129 83.931172 0 0 51.537059-83.931172 0 0 120.006862c27.482411-13.741205 54.481065-27.977476 80.98591-42.701273 1.472631 24.543431 3.432788 44.173904 5.890524 58.898958C359.840904 487.582848 330.885862 502.307902 289.655964 523.412262zM800.604892 875.333377l-56.690011 0 0-39.757268L476.661254 835.576109l0 39.757268-56.690011 0L419.971243 614.705332l380.634906 0L800.606149 875.333377zM839.625844 577.893327c-37.305814-20.614321-70.678749-42.207464-100.128856-64.789482l0 39.020952L472.979676 552.124797l0-33.130428c-29.450107 23.559583-60.865397 46.382851-94.238332 68.469803-8.347003-11.284726-21.109386-26.504845-38.284637-45.646535 106.506907-64.294416 188.717914-135.709481 246.639306-214.245194l69.942434 0-10.307161 13.252423c53.00969 78.040648 130.06649 139.148552 231.177937 183.322456C862.201579 544.274116 849.43794 562.190707 839.625844 577.893327z' })
	                    )
	                )
	            ),
	            React.createElement(
	                'symbol',
	                { id: 'people', viewBox: '0 0 350 350' },
	                React.createElement(
	                    'g',
	                    null,
	                    React.createElement('path', { d: 'M175,171.173c38.914,0,70.463-38.318,70.463-85.586C245.463,38.318,235.105,0,175,0s-70.465,38.318-70.465,85.587\r C104.535,132.855,136.084,171.173,175,171.173z' }),
	                    React.createElement('path', { d: 'M41.909,301.853C41.897,298.971,41.885,301.041,41.909,301.853L41.909,301.853z' }),
	                    React.createElement('path', { d: 'M308.085,304.104C308.123,303.315,308.098,298.63,308.085,304.104L308.085,304.104z' }),
	                    React.createElement('path', { d: 'M307.935,298.397c-1.305-82.342-12.059-105.805-94.352-120.657c0,0-11.584,14.761-38.584,14.761\r s-38.586-14.761-38.586-14.761c-81.395,14.69-92.803,37.805-94.303,117.982c-0.123,6.547-0.18,6.891-0.202,6.131\r c0.005,1.424,0.011,4.058,0.011,8.651c0,0,19.592,39.496,133.08,39.496c113.486,0,133.08-39.496,133.08-39.496\r c0-2.951,0.002-5.003,0.005-6.399C308.062,304.575,308.018,303.664,307.935,298.397z' })
	                ),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null)
	            ),
	            React.createElement(
	                'symbol',
	                { id: 'scene-home', viewBox: '0 0 200 200' },
	                React.createElement(
	                    'g',
	                    { className: 'transform-group' },
	                    React.createElement(
	                        'g',
	                        { transform: 'scale(0.1953125, 0.1953125)' },
	                        React.createElement('path', { d: 'M761.642199 540.155247c0-18.824741 15.402805-34.715663 34.472116-34.715663 19.313881 0 34.472116 15.890922 34.472116 34.715663l0 337.625554c0 19.069311-15.158235 34.472116-34.472116 34.472116l-0.733711 0L228.189607 912.252917c-19.313881 0-34.715663-15.402805-34.715663-34.472116l0-0.733711L193.473945 540.155247c0-18.824741 15.401782-34.715663 34.715663-34.715663 19.069311 0 34.226522 15.890922 34.226522 34.715663l0 302.909891 110.74936 0L373.16549 502.993882c0-11.490705 9.535167-21.024849 20.781302-21.024849l0.48914 0 235.677651 0c11.490705 0 20.535709 9.534144 20.535709 21.024849l0 0.48914 0 339.581092 110.99393 0L761.643222 540.155247 761.642199 540.155247zM414.482501 843.065138 414.482501 843.065138l195.093327 0L609.575828 524.019755l-195.093327 0L414.482501 843.065138 414.482501 843.065138zM123.064338 549.689391 123.064338 549.689391c-13.935384 13.447267-35.204803 13.447267-49.140187 0-13.446243-13.446243-13.446243-35.204803 0-48.651047L487.825926 87.38114c13.201673-13.446243 35.204803-13.446243 48.65207 0l0.48914 0.733711 412.924517 412.924517c13.690814 13.446243 13.690814 35.204803 0 48.651047-13.201673 13.447267-35.204803 13.447267-48.651047 0L512.273734 160.724565 123.064338 549.689391 123.064338 549.689391z' })
	                    )
	                )
	            ),
	            React.createElement(
	                'symbol',
	                { id: 'scene-law', viewBox: '0 0 200 200' },
	                React.createElement(
	                    'g',
	                    { className: 'transform-group' },
	                    React.createElement(
	                        'g',
	                        { transform: 'scale(0.1953125, 0.1953125)' },
	                        React.createElement('path', { d: 'M349.727685 172.556031l224.390583 123.766838c6.200212 3.400446 14.123672 1.348718 17.699104-4.552689l6.445806-10.695596c3.603061-5.897314 1.478677-13.495362-4.692882-16.920368l-224.400816-123.742279c-6.199189-3.425006-14.168698-1.376347-17.691941 4.499477l-6.506181 10.723226c-3.568269 5.921873-1.471514 13.495362 4.752234 16.919345l0 0L349.727685 172.553984zM155.401838 494.098281l224.38956 123.791397c6.203282 3.347235 14.120602 1.327228 17.696034-4.548596l6.473435-10.695596c3.599991-5.872754 1.450025-13.522991-4.724605-16.944927L174.820096 461.98284c-6.196119-3.428076-14.120602-1.348718-17.672498 4.520967l-6.469342 10.698666C147.053706 483.072157 149.178089 490.648716 155.401838 494.098281L155.401838 494.098281 155.401838 494.098281zM946.675402 645.282562l-449.088158-222.319411 60.335157-99.867522c3.603061-5.901407 1.450025-13.501502-4.700045-16.926508L351.27697 194.798615c-6.203282-3.40147-14.169721-1.348718-17.723663 4.551666L191.019033 435.109796c-3.501754 5.900384-1.400906 13.522991 4.746094 16.926508l201.99962 111.367437c6.147 3.425006 14.120602 1.351787 17.643845-4.520967l60.435441-99.899244 426.088328 260.356726c5.999644 3.674693 13.850449 1.822508 17.398252-4.050246l32.391734-53.611012C955.245591 655.830803 952.973852 648.433322 946.675402 645.282562L946.675402 645.282562 946.675402 645.282562zM1017.558799 676.575266l-22.497387-12.346189c-6.122441-3.402493-14.148231-1.347694-17.692964 4.552689l-38.893822 64.282049c-3.547803 5.872754-1.370207 13.495362 4.753257 16.891715l22.441105 12.349259c6.17463 3.445472 14.148231 1.3743 17.720593-4.527107l38.863123-64.282049C1025.801531 687.594227 1023.701706 679.975712 1017.558799 676.575266L1017.558799 676.575266 1017.558799 676.575266zM532.68153 752.930281l-27.047006 0c3.3984-3.64604-8.272407-0.271176-8.272407-5.52483l0-64.205301L66.521554 683.20015l0 64.205301c0 5.247514-22.992667 1.87265-19.558451 5.52483L19.925307 752.930281c-11.812023 0-19.674085 15.371082-19.674085 26.565029l0 64.212464c0 11.169387 7.886621 31.668257 19.674085 31.668257l512.75213 0c11.79872 0 30.944779-20.49887 30.944779-31.668257l0-64.212464C563.622216 768.328993 544.479227 752.930281 532.68153 752.930281L532.68153 752.930281 532.68153 752.930281zM497.362116 843.710844 66.521554 843.710844c-12.357446 0-33.139771-20.298302-33.139771-32.092929 0.038886-11.79872 20.783349-32.143071 33.139771-32.122605l430.840562 0c12.395308 0 33.168424 20.348444 33.119305 32.122605C530.481422 823.441195 509.757424 843.710844 497.362116 843.710844L497.362116 843.710844 497.362116 843.710844zM497.362116 843.710844' })
	                    )
	                )
	            ),
	            React.createElement(
	                'symbol',
	                { id: 'scene-list', viewBox: '0 0 200 200' },
	                React.createElement(
	                    'g',
	                    { className: 'transform-group' },
	                    React.createElement(
	                        'g',
	                        { transform: 'scale(0.1953125, 0.1953125)' },
	                        React.createElement('path', { d: 'M932.064 828.704C925.408 822.048 916.64 818.4 907.328 818.4L99.04 818.4C79.712 818.4 64 834.112 64 853.44 64 872.768 79.712 888.48 99.04 888.48L907.328 888.48C926.656 888.48 942.368 872.768 942.368 853.44 942.368 844.128 938.72 835.36 932.064 828.704ZM907.328 468.576 99.04 468.576C79.712 468.576 64 484.288 64 503.616 64 522.944 79.712 538.656 99.04 538.656L907.328 538.656C926.656 538.656 942.368 522.944 942.368 503.616 942.368 494.304 938.72 485.536 932.064 478.88 925.408 472.224 916.64 468.576 907.328 468.576ZM932.064 138.336C925.408 131.68 916.64 128 907.328 128L99.04 128C79.712 128 64 143.744 64 163.072 64 182.368 79.712 198.112 99.04 198.112L907.328 198.112C926.656 198.112 942.368 182.368 942.368 163.072 942.368 153.76 938.72 144.96 932.064 138.336Z' })
	                    )
	                )
	            ),
	            React.createElement(
	                'symbol',
	                { id: 'show-bike', viewBox: '0 0 24 24' },
	                React.createElement(
	                    'g',
	                    { id: 'directions-bike' },
	                    React.createElement('path', { d: 'M16,4.8c1,0,1.8-0.8,1.8-1.8S17,1.2,16,1.2c-1,0-1.8,0.8-1.8,1.8S15,4.8,16,4.8z M19,12c-2.8,0-5,2.2-5,5c0,2.8,2.2,5,5,5c2.8,0,5-2.2,5-5C24,14.2,21.8,12,19,12z M19,20.5c-1.9,0-3.5-1.6-3.5-3.5s1.6-3.5,3.5-3.5c1.9,0,3.5,1.6,3.5,3.5S20.9,20.5,19,20.5z M14.8,10H19V8.2h-3.2l-1.9-3.3c-0.3-0.5-0.8-0.8-1.5-0.8c-0.5,0-0.9,0.2-1.2,0.5L7.5,8.3C7.2,8.6,7,9,7,9.5c0,0.6,0.3,1.2,0.8,1.5l3.4,2v5H13v-6.5l-2.2-1.7l2.3-2.3L14.8,10z M5,12c-2.8,0-5,2.2-5,5c0,2.8,2.2,5,5,5c2.8,0,5-2.2,5-5C10,14.2,7.8,12,5,12z M5,20.5c-1.9,0-3.5-1.6-3.5-3.5s1.6-3.5,3.5-3.5c1.9,0,3.5,1.6,3.5,3.5S6.9,20.5,5,20.5z' })
	                )
	            ),
	            React.createElement(
	                'symbol',
	                { id: 'show-button', viewBox: '0 0 24 24' },
	                React.createElement(
	                    'g',
	                    { id: 'play-arrow' },
	                    React.createElement('polygon', { points: '8,5 8,19 19,12 ' })
	                )
	            ),
	            React.createElement(
	                'symbol',
	                { id: 'show-calendar', viewBox: '0 0 24 24' },
	                React.createElement(
	                    'g',
	                    { id: 'today' },
	                    React.createElement('path', { d: 'M19,3h-1V1h-2v2H8V1H6v2H5C3.9,3,3,3.9,3,5l0,14c0,1.1,0.9,2,2,2h14c1.1,0,2-0.9,2-2V5C21,3.9,20.1,3,19,3z M19,19H5V8h14V19z' }),
	                    React.createElement('rect', { x: '7', y: '10', width: '5', height: '5' })
	                )
	            ),
	            React.createElement(
	                'symbol',
	                { id: 'show-charts', viewBox: '0 0 24 24' },
	                React.createElement(
	                    'g',
	                    { id: 'data-usage' },
	                    React.createElement('path', { d: 'M13,2.1v3c3.4,0.5,6,3.4,6,6.9c0,0.9-0.2,1.7-0.5,2.5l2.6,1.5c0.6-1.2,0.9-2.6,0.9-4.1C22,6.8,18.1,2.6,13,2.1z M12,19c-3.9,0-7-3.1-7-7c0-3.5,2.6-6.4,6-6.9v-3C5.9,2.5,2,6.8,2,12c0,5.5,4.5,10,10,10c3.3,0,6.2-1.6,8.1-4.1l-2.6-1.5C16.2,18,14.2,19,12,19z' })
	                )
	            ),
	            React.createElement(
	                'symbol',
	                { id: 'show-dialog', viewBox: '0 0 24 24' },
	                React.createElement(
	                    'g',
	                    { id: 'message' },
	                    React.createElement('path', { d: 'M20,2H4C2.9,2,2,2.9,2,4l0,18l4-4h14c1.1,0,2-0.9,2-2V4C22,2.9,21.1,2,20,2z M18,14H6v-2h12V14z M18,11H6V9h12V11z M18,8H6V6h12V8z' })
	                )
	            ),
	            React.createElement(
	                'symbol',
	                { id: 'show-feedback', viewBox: '0 0 24 24' },
	                React.createElement(
	                    'g',
	                    { id: 'hangout' },
	                    React.createElement('path', { d: 'M11.5,2C6.8,2,3,5.8,3,10.5S6.8,19,11.5,19H12v3.5c4.9-2.3,8-7.5,8-12C20,5.8,16.2,2,11.5,2z M11,11l-1,2H8.5l1-2H8V8h3V11z M15,11l-1,2h-1.5l1-2H12V8h3V11z' })
	                )
	            ),
	            React.createElement(
	                'symbol',
	                { id: 'show-form', viewBox: '0 0 434.168 434.168' },
	                React.createElement(
	                    'g',
	                    null,
	                    React.createElement('path', { d: 'M332.318,230.196V34.967H40.93v364.235h134.038c9.616,0,17.483,7.867,17.483,17.483s-7.867,17.483-17.483,17.483H23.446\r c-9.616,0-17.483-7.867-17.483-17.483V17.483C5.963,7.867,13.831,0,23.446,0h326.354c9.616,0,17.483,7.867,17.483,17.483v212.713\r c0,9.616-7.867,17.483-17.483,17.483S332.318,239.812,332.318,230.196z M422.357,272.739c-7.285-6.411-18.357-5.828-24.768,1.457\r l-95.867,106.648l-48.079-46.331c-6.993-6.702-18.066-6.411-24.768,0.583s-6.411,18.066,0.583,24.768l61.191,58.86\r c3.205,3.205,7.576,4.954,12.238,4.954c0.291,0,0.291,0,0.583,0c4.662-0.291,9.324-2.331,12.238-5.828l107.814-120.052\r C430.224,290.222,429.641,279.15,422.357,272.739z M268.212,101.986H110.863c-9.616,0-17.483,7.867-17.483,17.483\r s7.867,17.483,17.483,17.483h157.349c9.616,0,17.483-7.867,17.483-17.483S277.828,101.986,268.212,101.986z M285.696,215.627\r c0-9.616-7.867-17.483-17.483-17.483H110.863c-9.616,0-17.483,7.867-17.483,17.483c0,9.616,7.867,17.483,17.483,17.483h157.349\r C277.828,233.11,285.696,225.243,285.696,215.627z M110.863,291.388c-9.616,0-17.483,7.867-17.483,17.483\r c0,9.616,7.867,17.483,17.483,17.483h46.622c9.616,0,17.483-7.867,17.483-17.483c0-9.616-7.867-17.483-17.483-17.483H110.863z' })
	                ),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null)
	            ),
	            React.createElement(
	                'symbol',
	                { id: 'show-github', viewBox: '0 0 30 30' },
	                React.createElement(
	                    'title',
	                    null,
	                    'Shape'
	                ),
	                React.createElement(
	                    'desc',
	                    null,
	                    'Created with Sketch.'
	                ),
	                React.createElement(
	                    'g',
	                    { id: 'Page-1', stroke: 'none', strokeWidth: '1', fillRule: 'evenodd', 'data-svgreactloader': '[["http://www.bohemiancoding.com/sketch/ns","type","MSPage"]]' },
	                    React.createElement('path', { d: 'M15,0 C6.7,0 0,6.7 0,15 C0,21.6 4.3,27.2 10.3,29.2 C11.1,29.3 11.3,28.9 11.3,28.5 L11.3,25.9 C7.1,26.8 6.2,23.9 6.2,23.9 C5.5,22.2 4.5,21.7 4.5,21.7 C3.1,20.8 4.6,20.8 4.6,20.8 C6.1,20.9 6.9,22.3 6.9,22.3 C8.2,24.6 10.4,23.9 11.3,23.5 C11.4,22.5 11.8,21.9 12.3,21.5 C9,21.1 5.5,19.8 5.5,14.1 C5.5,12.5 6.1,11.1 7,10.1 C6.8,9.7 6.3,8.2 7.1,6.1 C7.1,6.1 8.4,5.7 11.2,7.6 C12.4,7.3 13.7,7.1 15,7.1 C16.3,7.1 17.6,7.3 18.8,7.6 C21.7,5.7 22.9,6.1 22.9,6.1 C23.7,8.2 23.2,9.7 23,10.1 C24,11.1 24.5,12.5 24.5,14.1 C24.5,19.9 21,21.1 17.7,21.5 C18.2,22 18.7,22.9 18.7,24.3 L18.7,28.4 C18.7,28.8 19,29.3 19.7,29.1 C25.7,27.1 29.9,21.5 29.9,14.9 C30,6.7 23.3,0 15,0 L15,0 Z', id: 'Shape', 'data-svgreactloader': '[["http://www.bohemiancoding.com/sketch/ns","type","MSShapeGroup"]]' })
	                )
	            ),
	            React.createElement(
	                'symbol',
	                { id: 'show-icon-bg', viewBox: '0 0 320 320' },
	                React.createElement(
	                    'title',
	                    null,
	                    'show-icon-bg'
	                ),
	                React.createElement(
	                    'desc',
	                    null,
	                    'Created with Sketch.'
	                ),
	                React.createElement(
	                    'g',
	                    { id: 'Page-1', stroke: 'none', strokeWidth: '1', fillRule: 'evenodd', 'data-svgreactloader': '[["http://www.bohemiancoding.com/sketch/ns","type","MSPage"]]' },
	                    React.createElement('path', { d: 'M160,320 C270,320 320,270 320,160 C320,50 270,1.34711146e-14 160,0 C50,-1.34711148e-14 6.7355574e-15,50 0,160 C7.34788037e-15,270 50,320 160,320 Z', 'data-svgreactloader': '[["http://www.bohemiancoding.com/sketch/ns","type","MSShapeGroup"]]' })
	                )
	            ),
	            React.createElement(
	                'symbol',
	                { id: 'show-icon', viewBox: '0 0 24 24' },
	                React.createElement(
	                    'g',
	                    { id: 'star-outline' },
	                    React.createElement('path', { d: 'M22,9.244l-7.191-0.617L12,2L9.191,8.627L2,9.244l5.455,4.727L5.82,21L12,17.272L18.18,21l-1.635-7.029L22,9.244z M12,15.396l-3.763,2.27l0.996-4.281L5.91,10.507l4.38-0.376L12,6.095l1.71,4.036l4.38,0.376l-3.322,2.878l0.996,4.281L12,15.396z' })
	                )
	            ),
	            React.createElement(
	                'symbol',
	                { id: 'show-img-text', viewBox: '0 0 24 24' },
	                React.createElement(
	                    'g',
	                    { id: 'favorite-outline' },
	                    React.createElement('path', { d: 'M16.5,3c-1.7,0-3.4,0.8-4.5,2.1C10.9,3.8,9.2,3,7.5,3C4.4,3,2,5.4,2,8.5c0,3.8,3.4,6.9,8.6,11.5l1.4,1.3l1.4-1.3c5.1-4.7,8.6-7.8,8.6-11.5C22,5.4,19.6,3,16.5,3z M12.1,18.6L12,18.6l-0.1-0.1C7.1,14.2,4,11.4,4,8.5C4,6.5,5.5,5,7.5,5c1.5,0,3,1,3.6,2.4h1.9C13.5,6,15,5,16.5,5c2,0,3.5,1.5,3.5,3.5C20,11.4,16.9,14.2,12.1,18.6z' })
	                )
	            ),
	            React.createElement(
	                'symbol',
	                { id: 'show-img', viewBox: '0 0 24 24' },
	                React.createElement(
	                    'g',
	                    { id: 'drive-drawing' },
	                    React.createElement('path', { d: 'M19,3H5C3.9,3,3,3.9,3,5v14c0,1.1,0.9,2,2,2h14c1.1,0,2-0.9,2-2V5C21,3.9,20.1,3,19,3z M18,18h-6v-5.8c-0.7,0.6-1.5,1-2.5,1c-2,0-3.7-1.7-3.7-3.7s1.7-3.7,3.7-3.7c2,0,3.7,1.7,3.7,3.7c0,1-0.4,1.8-1,2.5H18V18z' })
	                )
	            ),
	            React.createElement(
	                'symbol',
	                { id: 'show-info', viewBox: '0 0 24 24' },
	                React.createElement(
	                    'g',
	                    { id: 'info-outline' },
	                    React.createElement('path', { d: 'M11,17h2v-6h-2V17z M12,2C6.5,2,2,6.5,2,12s4.5,10,10,10c5.5,0,10-4.5,10-10S17.5,2,12,2z M12,20c-4.4,0-8-3.6-8-8s3.6-8,8-8c4.4,0,8,3.6,8,8S16.4,20,12,20z M11,9h2V7h-2V9z' })
	                )
	            ),
	            React.createElement(
	                'symbol',
	                { id: 'show-layout', viewBox: '0 0 24 24' },
	                React.createElement(
	                    'g',
	                    { id: 'view-quilt' },
	                    React.createElement('path', { d: 'M10,18h5v-6h-5V18z M4,18h5V5H4V18z M16,18h5v-6h-5V18z M10,5v6h11V5H10z' })
	                )
	            ),
	            React.createElement(
	                'symbol',
	                { id: 'show-list', viewBox: '0 0 24 24' },
	                React.createElement(
	                    'g',
	                    { id: 'list' },
	                    React.createElement('path', { d: 'M3,13h2v-2H3V13z M3,17h2v-2H3V17z M3,9h2V7H3V9z M7,13h14v-2H7V13z M7,17h14v-2H7V17z M7,7v2h14V7H7z' })
	                )
	            ),
	            React.createElement(
	                'symbol',
	                { id: 'show-native', viewBox: '0 0 24 24' },
	                React.createElement(
	                    'g',
	                    { id: 'place' },
	                    React.createElement('path', { d: 'M12,2C8.1,2,5,5.1,5,9c0,5.2,7,13,7,13s7-7.8,7-13C19,5.1,15.9,2,12,2z M12,11.5c-1.4,0-2.5-1.1-2.5-2.5s1.1-2.5,2.5-2.5c1.4,0,2.5,1.1,2.5,2.5S13.4,11.5,12,11.5z' })
	                )
	            ),
	            React.createElement(
	                'symbol',
	                { id: 'show-other', viewBox: '0 0 24 24' },
	                React.createElement(
	                    'g',
	                    { id: 'more-horiz' },
	                    React.createElement('path', { d: 'M6,10c-1.1,0-2,0.9-2,2s0.9,2,2,2c1.1,0,2-0.9,2-2S7.1,10,6,10z M18,10c-1.1,0-2,0.9-2,2s0.9,2,2,2c1.1,0,2-0.9,2-2S19.1,10,18,10z M12,10c-1.1,0-2,0.9-2,2s0.9,2,2,2c1.1,0,2-0.9,2-2S13.1,10,12,10z' })
	                )
	            ),
	            React.createElement(
	                'symbol',
	                { id: 'show-project', viewBox: '0 0 24 24' },
	                React.createElement(
	                    'g',
	                    { id: 'circles-extended' },
	                    React.createElement('path', { d: 'M12,10c2.2,0,4-1.8,4-4c0-2.2-1.8-4-4-4C9.8,2,8,3.8,8,6C8,8.2,9.8,10,12,10z M12,4c1.1,0,2,0.9,2,2c0,1.1-0.9,2-2,2c-1.1,0-2-0.9-2-2C10,4.9,10.9,4,12,4z M6,13c-2.2,0-4,1.8-4,4c0,2.2,1.8,4,4,4c2.2,0,4-1.8,4-4C10,14.8,8.2,13,6,13z M6,19c-1.1,0-2-0.9-2-2c0-1.1,0.9-2,2-2c1.1,0,2,0.9,2,2C8,18.1,7.1,19,6,19z M12,11.1c-1,0-1.9,0.9-1.9,1.9s0.9,1.9,1.9,1.9c1,0,1.9-0.9,1.9-1.9S13,11.1,12,11.1z M18,13c-2.2,0-4,1.8-4,4c0,2.2,1.8,4,4,4c2.2,0,4-1.8,4-4C22,14.8,20.2,13,18,13z M18,19c-1.1,0-2-0.9-2-2c0-1.1,0.9-2,2-2c1.1,0,2,0.9,2,2C20,18.1,19.1,19,18,19z' })
	                )
	            ),
	            React.createElement(
	                'symbol',
	                { id: 'show-scene', viewBox: '0 0 200 200' },
	                React.createElement(
	                    'g',
	                    { className: 'transform-group' },
	                    React.createElement(
	                        'g',
	                        { transform: 'scale(0.1953125, 0.1953125)' },
	                        React.createElement('path', { d: 'M867.995947 422.463778 298.756291 422.463778l572.107983-194.142675c35.866882-10.969842 56.3064-48.973388 45.600571-84.989673l-14.668071-49.335638c-8.572236-28.833699-35.553751-48.971341-65.615417-48.971341-6.597255 0-13.168927 0.959861-19.530822 2.850931l-0.468674 0.13917L126.242216 282.142915c-35.866882 10.969842-56.307424 48.973388-45.599548 84.990696l14.667048 49.334615c4.044106 13.600763 12.186554 25.264407 22.814612 33.794687-8.433066 11.381212-13.430894 25.454742-13.430894 40.675398l0 433.196213c0 37.755905 30.716582 68.473511 68.473511 68.473511l694.829002 0c37.755905 0 68.473511-30.717605 68.473511-68.473511l0-433.196213C936.470481 453.181383 905.752876 422.463778 867.995947 422.463778zM885.305171 490.937289l0 68.77641L684.655292 559.713698l69.530586-86.084611 113.810069 0C877.540324 473.629087 885.305171 481.392912 885.305171 490.937289zM173.166945 473.629087 347.303984 473.629087l-76.42153 76.422554c-2.819209 2.819209-4.842285 6.133697-6.070252 9.662057L155.859767 559.713698l0-68.77641C155.859767 481.392912 163.623591 473.629087 173.166945 473.629087zM414.288584 479.003492c1.641383-1.641383 3.007497-3.452635 4.109598-5.374404l270.01776 0-63.352887 78.437443c-1.901303 2.354628-3.313465 4.944616-4.25593 7.647167L333.578378 559.713698 414.288584 479.003492zM141.344169 331.028299l0.468674-0.13917L831.595922 96.814999c1.5104-0.414439 3.050476-0.624217 4.583388-0.624217 7.588839 0 14.404058 5.094018 16.571421 12.386098l14.668071 49.335638c2.718925 9.147334-2.51017 18.803251-11.658528 21.522176l-0.468674 0.13917L165.509545 413.649018c-1.5104 0.414439-3.049452 0.624217-4.582365 0.624217-7.589862 0-14.404058-5.094018-16.572444-12.387122l-14.667048-49.334615C126.966717 343.404164 132.195811 333.748247 141.344169 331.028299zM867.995947 941.441703 173.166945 941.441703c-9.543354 0-17.308201-7.764847-17.308201-17.308201l0-313.254493 729.445404 0 0 313.254493C885.305171 933.676855 877.540324 941.441703 867.995947 941.441703z' })
	                    )
	                )
	            ),
	            React.createElement(
	                'symbol',
	                { id: 'show-slide', viewBox: '0 0 24 24' },
	                React.createElement(
	                    'g',
	                    { id: 'view-array' },
	                    React.createElement('path', { d: 'M4,18h3V5H4V18z M18,5v13h3V5H18z M8,18h9V5H8V18z' })
	                )
	            ),
	            React.createElement(
	                'symbol',
	                { id: 'tingle-checkbox-checked', viewBox: '0 0 128 128' },
	                React.createElement('path', { d: 'M 42,75 L 113,19 127,37 40,107 1,61 18,47 Z' })
	            ),
	            React.createElement(
	                'symbol',
	                { id: 'tingle-photo-field-camera', viewBox: '0 0 612 612' },
	                React.createElement(
	                    'g',
	                    null,
	                    React.createElement(
	                        'g',
	                        null,
	                        React.createElement('path', { d: 'M581.347,146.42H453.089l-4.336-30.646l-3.326-20.661c-1.343-8.323-5.75-15.224-12.665-20.988 c-7.079-5.899-14.655-8.991-22.985-8.991H201.228c-8.33,0-15.991,2.992-22.992,8.991c-6.994,5.999-10.711,13.035-11.99,20.988 l-3.333,20.661l-4.663,30.646H30.654C13.66,146.42,0,160.081,0,176.406v339.812c0,16.986,13.66,30.646,30.654,30.646h550.693 c16.993,0,30.653-13.66,30.653-30.646V176.406C612,160.081,598.34,146.42,581.347,146.42z M575.021,509.887H36.652V183.065H158.25 c18.323,0,34.144-13.632,36.645-31.314l4.329-30.646l3.333-18.991h206.551l3,18.991l4.662,30.646 c2.687,17.654,18.656,31.314,36.318,31.314h121.932V509.887z' }),
	                        React.createElement('path', { d: 'M515.718,270.016c15.991,0,29.317-13.653,29.317-29.644c0-16.326-12.992-29.986-29.317-29.986 s-29.317,13.66-29.317,29.986C486.4,256.363,499.727,270.016,515.718,270.016z' }),
	                        React.createElement('path', { d: 'M305.499,192.731c-37.64,0-70.291,13.653-97.277,40.639s-40.646,59.637-40.646,97.285c0,37.64,13.66,70.291,40.646,97.277 s59.637,39.751,97.277,40.312c74.634,1.102,138.805-63.625,137.924-137.59c-0.448-37.981-13.66-70.298-40.64-97.285 C375.797,206.384,343.48,192.731,305.499,192.731z M376.792,402.282c-19.651,19.651-43.305,29.311-71.293,29.311 c-27.647,0-51.3-9.659-70.959-29.311c-19.659-19.659-29.317-43.646-29.317-71.627c0-27.654,9.659-51.642,29.317-71.3 c19.659-19.652,43.312-29.645,70.959-29.645c27.988,0,51.642,9.993,71.293,29.645c19.658,19.659,29.651,43.646,29.651,71.3 C406.443,358.637,396.45,382.623,376.792,402.282z' })
	                    )
	                ),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null)
	            ),
	            React.createElement(
	                'symbol',
	                { id: 'tingle-select-field-arrow-right', viewBox: '0 0 1024 1024' },
	                React.createElement('path', { d: 'M338.52 1.389l30.176-30.173 316.784 316.784-316.784 316.784-30.168-30.171 286.611-286.611z', transform: 'translate(0, 812) scale(1, -1)' })
	            ),
	            React.createElement(
	                'symbol',
	                { id: 'tingle-tip-error', viewBox: '0 0 476.737 476.737' },
	                React.createElement(
	                    'g',
	                    null,
	                    React.createElement(
	                        'g',
	                        null,
	                        React.createElement(
	                            'g',
	                            null,
	                            React.createElement('path', { 'data-svgreactloader': '[[null,"style","fill:#010002;"]]', d: 'M238.369,0C106.726,0,0,106.726,0,238.369c0,131.675,106.726,238.369,238.369,238.369 c131.675,0,238.369-106.694,238.369-238.369C476.737,106.726,370.043,0,238.369,0z M348.813,150.395l-88.578,88.61l78.407,87.338 c6.198,6.198,6.198,16.304,0,22.47c-6.166,6.198-16.273,6.198-22.438,0l-78.407-87.338l-87.37,87.338 c-6.198,6.198-16.273,6.198-22.47,0c-6.198-6.166-6.198-16.273,0-22.47l88.578-88.578l-78.376-87.37 c-6.198-6.198-6.198-16.273,0-22.47s16.273-6.198,22.47,0l78.407,87.37l87.338-87.37c6.198-6.198,16.273-6.198,22.47,0 C355.042,134.122,355.01,144.197,348.813,150.395z' })
	                        )
	                    )
	                ),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null)
	            ),
	            React.createElement(
	                'symbol',
	                { id: 'tingle-tip-fail', viewBox: '0 0 108.364 108.364' },
	                React.createElement(
	                    'g',
	                    null,
	                    React.createElement(
	                        'g',
	                        null,
	                        React.createElement('path', { d: 'M54.182,0C24.258,0,0,24.258,0,54.182c0,29.924,24.258,54.183,54.182,54.183c29.923,0,54.182-24.259,54.182-54.183 C108.364,24.258,84.105,0,54.182,0z M68.713,33.622c3.424,0,6.201,2.777,6.201,6.201c0,3.426-2.777,6.203-6.201,6.203 c-3.423,0-6.203-2.777-6.203-6.203C62.51,36.399,65.29,33.622,68.713,33.622z M40.594,33.622c3.423,0,6.2,2.777,6.2,6.201 c0,3.426-2.777,6.203-6.2,6.203c-3.423,0-6.201-2.777-6.201-6.203C34.393,36.399,37.17,33.622,40.594,33.622z M76.607,79.098 c-1.521,0.66-3.286-0.041-3.944-1.562c-2.894-6.689-9.731-11.012-17.421-11.012c-7.868,0-14.747,4.32-17.523,11.005 c-0.479,1.153-1.596,1.85-2.771,1.85c-0.384,0-0.773-0.073-1.15-0.229c-1.53-0.637-2.255-2.393-1.62-3.922 c3.71-8.932,12.764-14.703,23.064-14.703c10.084,0,19.084,5.742,22.928,14.63C78.828,76.674,78.128,78.439,76.607,79.098z' })
	                    )
	                ),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null)
	            ),
	            React.createElement(
	                'symbol',
	                { id: 'tingle-tip-loading', viewBox: '0 0 26.349 26.35' },
	                React.createElement(
	                    'g',
	                    null,
	                    React.createElement(
	                        'g',
	                        null,
	                        React.createElement('circle', { cx: '13.792', cy: '3.082', r: '3.082' }),
	                        React.createElement('circle', { cx: '13.792', cy: '24.501', r: '1.849' }),
	                        React.createElement('circle', { cx: '6.219', cy: '6.218', r: '2.774' }),
	                        React.createElement('circle', { cx: '21.365', cy: '21.363', r: '1.541' }),
	                        React.createElement('circle', { cx: '3.082', cy: '13.792', r: '2.465' }),
	                        React.createElement('circle', { cx: '24.501', cy: '13.791', r: '1.232' }),
	                        React.createElement('circle', { cx: '21.364', cy: '6.218', r: '0.924' }),
	                        React.createElement('path', { d: 'M4.694,19.84c-0.843,0.843-0.843,2.207,0,3.05c0.842,0.843,2.208,0.843,3.05,0c0.843-0.843,0.843-2.207,0-3.05 C6.902,18.996,5.537,18.988,4.694,19.84z' })
	                    )
	                ),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null)
	            ),
	            React.createElement(
	                'symbol',
	                { id: 'tingle-tip-success', viewBox: '0 0 369.946 369.946' },
	                React.createElement(
	                    'g',
	                    null,
	                    React.createElement('path', { 'data-svgreactloader': '[[null,"style","fill:#010002;"]]', d: 'M184.973,0C82.981,0,0,82.975,0,184.973s82.981,184.973,184.973,184.973 s184.973-82.975,184.973-184.973S286.965,0,184.973,0z M150.777,263.873l-66.125-66.125l8.437-8.437l57.688,57.688l125.561-125.561 l8.437,8.437L150.777,263.873z' })
	                ),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null),
	                React.createElement('g', null)
	            ),
	            React.Children.map(children, function (c) {
	                return c;
	            })
	        );
	    }
	});

/***/ },
/* 7 */
/***/ function(module, exports) {

	module.exports = React;

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	var forEach  = __webpack_require__(9);
	var ATTR_KEY = 'data-svgreactloader';
	
	var MODULE = {
	    /**
	     * @param {HTMLElement}
	     */
	    applyAttributes: function (el) {
	        var data = MODULE.hasXmlAttributes(el);
	        if (data) {
	            forEach(JSON.parse(data), function (args) {
	                var method = 'setAttribute' + (args.length === 3 ? 'NS' : '');
	                el[method].apply(el, args);
	            });
	        }
	    },
	    /**
	     * @param {HTMLElement}
	     */
	    hasXmlAttributes: function (el) {
	        return el && el.getAttribute(ATTR_KEY);
	    },
	    /**
	     * @param {React.Component}
	     */
	    applyXmlAttributes: function (component) {
	        var domEl = MODULE.reactDOM.findDOMNode(component);
	        var fn = MODULE.applyAttributes;
	
	        if (domEl) {
	            fn(domEl);
	            forEach(domEl.querySelectorAll('[' + ATTR_KEY + ']'), fn);
	        }
	    }
	};
	
	module.exports = function helpers (reactDOM) {
	    if (!MODULE.reactDOM) {
	        MODULE.reactDOM = reactDOM;
	    }
	    return MODULE;
	};


/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	var arrayEach = __webpack_require__(10),
	    baseEach = __webpack_require__(11),
	    castFunction = __webpack_require__(45),
	    isArray = __webpack_require__(27);
	
	/**
	 * Iterates over elements of `collection` and invokes `iteratee` for each element.
	 * The iteratee is invoked with three arguments: (value, index|key, collection).
	 * Iteratee functions may exit iteration early by explicitly returning `false`.
	 *
	 * **Note:** As with other "Collections" methods, objects with a "length"
	 * property are iterated like arrays. To avoid this behavior use `_.forIn`
	 * or `_.forOwn` for object iteration.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @alias each
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	 * @returns {Array|Object} Returns `collection`.
	 * @see _.forEachRight
	 * @example
	 *
	 * _.forEach([1, 2], function(value) {
	 *   console.log(value);
	 * });
	 * // => Logs `1` then `2`.
	 *
	 * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
	 *   console.log(key);
	 * });
	 * // => Logs 'a' then 'b' (iteration order is not guaranteed).
	 */
	function forEach(collection, iteratee) {
	  var func = isArray(collection) ? arrayEach : baseEach;
	  return func(collection, castFunction(iteratee));
	}
	
	module.exports = forEach;


/***/ },
/* 10 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `_.forEach` for arrays without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns `array`.
	 */
	function arrayEach(array, iteratee) {
	  var index = -1,
	      length = array == null ? 0 : array.length;
	
	  while (++index < length) {
	    if (iteratee(array[index], index, array) === false) {
	      break;
	    }
	  }
	  return array;
	}
	
	module.exports = arrayEach;


/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	var baseForOwn = __webpack_require__(12),
	    createBaseEach = __webpack_require__(44);
	
	/**
	 * The base implementation of `_.forEach` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array|Object} Returns `collection`.
	 */
	var baseEach = createBaseEach(baseForOwn);
	
	module.exports = baseEach;


/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	var baseFor = __webpack_require__(13),
	    keys = __webpack_require__(15);
	
	/**
	 * The base implementation of `_.forOwn` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Object} object The object to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Object} Returns `object`.
	 */
	function baseForOwn(object, iteratee) {
	  return object && baseFor(object, iteratee, keys);
	}
	
	module.exports = baseForOwn;


/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	var createBaseFor = __webpack_require__(14);
	
	/**
	 * The base implementation of `baseForOwn` which iterates over `object`
	 * properties returned by `keysFunc` and invokes `iteratee` for each property.
	 * Iteratee functions may exit iteration early by explicitly returning `false`.
	 *
	 * @private
	 * @param {Object} object The object to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @param {Function} keysFunc The function to get the keys of `object`.
	 * @returns {Object} Returns `object`.
	 */
	var baseFor = createBaseFor();
	
	module.exports = baseFor;


/***/ },
/* 14 */
/***/ function(module, exports) {

	/**
	 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
	 *
	 * @private
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Function} Returns the new base function.
	 */
	function createBaseFor(fromRight) {
	  return function(object, iteratee, keysFunc) {
	    var index = -1,
	        iterable = Object(object),
	        props = keysFunc(object),
	        length = props.length;
	
	    while (length--) {
	      var key = props[fromRight ? length : ++index];
	      if (iteratee(iterable[key], key, iterable) === false) {
	        break;
	      }
	    }
	    return object;
	  };
	}
	
	module.exports = createBaseFor;


/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	var arrayLikeKeys = __webpack_require__(16),
	    baseKeys = __webpack_require__(37),
	    isArrayLike = __webpack_require__(41);
	
	/**
	 * Creates an array of the own enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects. See the
	 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
	 * for more details.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keys(new Foo);
	 * // => ['a', 'b'] (iteration order is not guaranteed)
	 *
	 * _.keys('hi');
	 * // => ['0', '1']
	 */
	function keys(object) {
	  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
	}
	
	module.exports = keys;


/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	var baseTimes = __webpack_require__(17),
	    isArguments = __webpack_require__(18),
	    isArray = __webpack_require__(27),
	    isBuffer = __webpack_require__(28),
	    isIndex = __webpack_require__(31),
	    isTypedArray = __webpack_require__(32);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Creates an array of the enumerable property names of the array-like `value`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @param {boolean} inherited Specify returning inherited property names.
	 * @returns {Array} Returns the array of property names.
	 */
	function arrayLikeKeys(value, inherited) {
	  var isArr = isArray(value),
	      isArg = !isArr && isArguments(value),
	      isBuff = !isArr && !isArg && isBuffer(value),
	      isType = !isArr && !isArg && !isBuff && isTypedArray(value),
	      skipIndexes = isArr || isArg || isBuff || isType,
	      result = skipIndexes ? baseTimes(value.length, String) : [],
	      length = result.length;
	
	  for (var key in value) {
	    if ((inherited || hasOwnProperty.call(value, key)) &&
	        !(skipIndexes && (
	           // Safari 9 has enumerable `arguments.length` in strict mode.
	           key == 'length' ||
	           // Node.js 0.10 has enumerable non-index properties on buffers.
	           (isBuff && (key == 'offset' || key == 'parent')) ||
	           // PhantomJS 2 has enumerable non-index properties on typed arrays.
	           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
	           // Skip index properties.
	           isIndex(key, length)
	        ))) {
	      result.push(key);
	    }
	  }
	  return result;
	}
	
	module.exports = arrayLikeKeys;


/***/ },
/* 17 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.times` without support for iteratee shorthands
	 * or max array length checks.
	 *
	 * @private
	 * @param {number} n The number of times to invoke `iteratee`.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the array of results.
	 */
	function baseTimes(n, iteratee) {
	  var index = -1,
	      result = Array(n);
	
	  while (++index < n) {
	    result[index] = iteratee(index);
	  }
	  return result;
	}
	
	module.exports = baseTimes;


/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsArguments = __webpack_require__(19),
	    isObjectLike = __webpack_require__(26);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/** Built-in value references. */
	var propertyIsEnumerable = objectProto.propertyIsEnumerable;
	
	/**
	 * Checks if `value` is likely an `arguments` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArguments(function() { return arguments; }());
	 * // => true
	 *
	 * _.isArguments([1, 2, 3]);
	 * // => false
	 */
	var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
	  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
	    !propertyIsEnumerable.call(value, 'callee');
	};
	
	module.exports = isArguments;


/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(20),
	    isObjectLike = __webpack_require__(26);
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]';
	
	/**
	 * The base implementation of `_.isArguments`.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	 */
	function baseIsArguments(value) {
	  return isObjectLike(value) && baseGetTag(value) == argsTag;
	}
	
	module.exports = baseIsArguments;


/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(21),
	    getRawTag = __webpack_require__(24),
	    objectToString = __webpack_require__(25);
	
	/** `Object#toString` result references. */
	var nullTag = '[object Null]',
	    undefinedTag = '[object Undefined]';
	
	/** Built-in value references. */
	var symToStringTag = Symbol ? Symbol.toStringTag : undefined;
	
	/**
	 * The base implementation of `getTag` without fallbacks for buggy environments.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */
	function baseGetTag(value) {
	  if (value == null) {
	    return value === undefined ? undefinedTag : nullTag;
	  }
	  value = Object(value);
	  return (symToStringTag && symToStringTag in value)
	    ? getRawTag(value)
	    : objectToString(value);
	}
	
	module.exports = baseGetTag;


/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	var root = __webpack_require__(22);
	
	/** Built-in value references. */
	var Symbol = root.Symbol;
	
	module.exports = Symbol;


/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	var freeGlobal = __webpack_require__(23);
	
	/** Detect free variable `self`. */
	var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
	
	/** Used as a reference to the global object. */
	var root = freeGlobal || freeSelf || Function('return this')();
	
	module.exports = root;


/***/ },
/* 23 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
	var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;
	
	module.exports = freeGlobal;
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(21);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var nativeObjectToString = objectProto.toString;
	
	/** Built-in value references. */
	var symToStringTag = Symbol ? Symbol.toStringTag : undefined;
	
	/**
	 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the raw `toStringTag`.
	 */
	function getRawTag(value) {
	  var isOwn = hasOwnProperty.call(value, symToStringTag),
	      tag = value[symToStringTag];
	
	  try {
	    value[symToStringTag] = undefined;
	    var unmasked = true;
	  } catch (e) {}
	
	  var result = nativeObjectToString.call(value);
	  if (unmasked) {
	    if (isOwn) {
	      value[symToStringTag] = tag;
	    } else {
	      delete value[symToStringTag];
	    }
	  }
	  return result;
	}
	
	module.exports = getRawTag;


/***/ },
/* 25 */
/***/ function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var nativeObjectToString = objectProto.toString;
	
	/**
	 * Converts `value` to a string using `Object.prototype.toString`.
	 *
	 * @private
	 * @param {*} value The value to convert.
	 * @returns {string} Returns the converted string.
	 */
	function objectToString(value) {
	  return nativeObjectToString.call(value);
	}
	
	module.exports = objectToString;


/***/ },
/* 26 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return value != null && typeof value == 'object';
	}
	
	module.exports = isObjectLike;


/***/ },
/* 27 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is classified as an `Array` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
	 * @example
	 *
	 * _.isArray([1, 2, 3]);
	 * // => true
	 *
	 * _.isArray(document.body.children);
	 * // => false
	 *
	 * _.isArray('abc');
	 * // => false
	 *
	 * _.isArray(_.noop);
	 * // => false
	 */
	var isArray = Array.isArray;
	
	module.exports = isArray;


/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(22),
	    stubFalse = __webpack_require__(30);
	
	/** Detect free variable `exports`. */
	var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;
	
	/** Detect free variable `module`. */
	var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;
	
	/** Detect the popular CommonJS extension `module.exports`. */
	var moduleExports = freeModule && freeModule.exports === freeExports;
	
	/** Built-in value references. */
	var Buffer = moduleExports ? root.Buffer : undefined;
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;
	
	/**
	 * Checks if `value` is a buffer.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.3.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
	 * @example
	 *
	 * _.isBuffer(new Buffer(2));
	 * // => true
	 *
	 * _.isBuffer(new Uint8Array(2));
	 * // => false
	 */
	var isBuffer = nativeIsBuffer || stubFalse;
	
	module.exports = isBuffer;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(29)(module)))

/***/ },
/* 29 */
/***/ function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ },
/* 30 */
/***/ function(module, exports) {

	/**
	 * This method returns `false`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.13.0
	 * @category Util
	 * @returns {boolean} Returns `false`.
	 * @example
	 *
	 * _.times(2, _.stubFalse);
	 * // => [false, false]
	 */
	function stubFalse() {
	  return false;
	}
	
	module.exports = stubFalse;


/***/ },
/* 31 */
/***/ function(module, exports) {

	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;
	
	/** Used to detect unsigned integer values. */
	var reIsUint = /^(?:0|[1-9]\d*)$/;
	
	/**
	 * Checks if `value` is a valid array-like index.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	 */
	function isIndex(value, length) {
	  length = length == null ? MAX_SAFE_INTEGER : length;
	  return !!length &&
	    (typeof value == 'number' || reIsUint.test(value)) &&
	    (value > -1 && value % 1 == 0 && value < length);
	}
	
	module.exports = isIndex;


/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsTypedArray = __webpack_require__(33),
	    baseUnary = __webpack_require__(35),
	    nodeUtil = __webpack_require__(36);
	
	/* Node.js helper references. */
	var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
	
	/**
	 * Checks if `value` is classified as a typed array.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	 * @example
	 *
	 * _.isTypedArray(new Uint8Array);
	 * // => true
	 *
	 * _.isTypedArray([]);
	 * // => false
	 */
	var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
	
	module.exports = isTypedArray;


/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(20),
	    isLength = __webpack_require__(34),
	    isObjectLike = __webpack_require__(26);
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    funcTag = '[object Function]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    objectTag = '[object Object]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    weakMapTag = '[object WeakMap]';
	
	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]',
	    float32Tag = '[object Float32Array]',
	    float64Tag = '[object Float64Array]',
	    int8Tag = '[object Int8Array]',
	    int16Tag = '[object Int16Array]',
	    int32Tag = '[object Int32Array]',
	    uint8Tag = '[object Uint8Array]',
	    uint8ClampedTag = '[object Uint8ClampedArray]',
	    uint16Tag = '[object Uint16Array]',
	    uint32Tag = '[object Uint32Array]';
	
	/** Used to identify `toStringTag` values of typed arrays. */
	var typedArrayTags = {};
	typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
	typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
	typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
	typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
	typedArrayTags[uint32Tag] = true;
	typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
	typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
	typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
	typedArrayTags[errorTag] = typedArrayTags[funcTag] =
	typedArrayTags[mapTag] = typedArrayTags[numberTag] =
	typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
	typedArrayTags[setTag] = typedArrayTags[stringTag] =
	typedArrayTags[weakMapTag] = false;
	
	/**
	 * The base implementation of `_.isTypedArray` without Node.js optimizations.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	 */
	function baseIsTypedArray(value) {
	  return isObjectLike(value) &&
	    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
	}
	
	module.exports = baseIsTypedArray;


/***/ },
/* 34 */
/***/ function(module, exports) {

	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;
	
	/**
	 * Checks if `value` is a valid array-like length.
	 *
	 * **Note:** This method is loosely based on
	 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
	 * @example
	 *
	 * _.isLength(3);
	 * // => true
	 *
	 * _.isLength(Number.MIN_VALUE);
	 * // => false
	 *
	 * _.isLength(Infinity);
	 * // => false
	 *
	 * _.isLength('3');
	 * // => false
	 */
	function isLength(value) {
	  return typeof value == 'number' &&
	    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	}
	
	module.exports = isLength;


/***/ },
/* 35 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.unary` without support for storing metadata.
	 *
	 * @private
	 * @param {Function} func The function to cap arguments for.
	 * @returns {Function} Returns the new capped function.
	 */
	function baseUnary(func) {
	  return function(value) {
	    return func(value);
	  };
	}
	
	module.exports = baseUnary;


/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {var freeGlobal = __webpack_require__(23);
	
	/** Detect free variable `exports`. */
	var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;
	
	/** Detect free variable `module`. */
	var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;
	
	/** Detect the popular CommonJS extension `module.exports`. */
	var moduleExports = freeModule && freeModule.exports === freeExports;
	
	/** Detect free variable `process` from Node.js. */
	var freeProcess = moduleExports && freeGlobal.process;
	
	/** Used to access faster Node.js helpers. */
	var nodeUtil = (function() {
	  try {
	    return freeProcess && freeProcess.binding && freeProcess.binding('util');
	  } catch (e) {}
	}());
	
	module.exports = nodeUtil;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(29)(module)))

/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	var isPrototype = __webpack_require__(38),
	    nativeKeys = __webpack_require__(39);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function baseKeys(object) {
	  if (!isPrototype(object)) {
	    return nativeKeys(object);
	  }
	  var result = [];
	  for (var key in Object(object)) {
	    if (hasOwnProperty.call(object, key) && key != 'constructor') {
	      result.push(key);
	    }
	  }
	  return result;
	}
	
	module.exports = baseKeys;


/***/ },
/* 38 */
/***/ function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Checks if `value` is likely a prototype object.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
	 */
	function isPrototype(value) {
	  var Ctor = value && value.constructor,
	      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;
	
	  return value === proto;
	}
	
	module.exports = isPrototype;


/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	var overArg = __webpack_require__(40);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeKeys = overArg(Object.keys, Object);
	
	module.exports = nativeKeys;


/***/ },
/* 40 */
/***/ function(module, exports) {

	/**
	 * Creates a unary function that invokes `func` with its argument transformed.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {Function} transform The argument transform.
	 * @returns {Function} Returns the new function.
	 */
	function overArg(func, transform) {
	  return function(arg) {
	    return func(transform(arg));
	  };
	}
	
	module.exports = overArg;


/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	var isFunction = __webpack_require__(42),
	    isLength = __webpack_require__(34);
	
	/**
	 * Checks if `value` is array-like. A value is considered array-like if it's
	 * not a function and has a `value.length` that's an integer greater than or
	 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	 * @example
	 *
	 * _.isArrayLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLike(document.body.children);
	 * // => true
	 *
	 * _.isArrayLike('abc');
	 * // => true
	 *
	 * _.isArrayLike(_.noop);
	 * // => false
	 */
	function isArrayLike(value) {
	  return value != null && isLength(value.length) && !isFunction(value);
	}
	
	module.exports = isArrayLike;


/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(20),
	    isObject = __webpack_require__(43);
	
	/** `Object#toString` result references. */
	var asyncTag = '[object AsyncFunction]',
	    funcTag = '[object Function]',
	    genTag = '[object GeneratorFunction]',
	    proxyTag = '[object Proxy]';
	
	/**
	 * Checks if `value` is classified as a `Function` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
	 * @example
	 *
	 * _.isFunction(_);
	 * // => true
	 *
	 * _.isFunction(/abc/);
	 * // => false
	 */
	function isFunction(value) {
	  if (!isObject(value)) {
	    return false;
	  }
	  // The use of `Object#toString` avoids issues with the `typeof` operator
	  // in Safari 9 which returns 'object' for typed arrays and other constructors.
	  var tag = baseGetTag(value);
	  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
	}
	
	module.exports = isFunction;


/***/ },
/* 43 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is the
	 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
	 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(_.noop);
	 * // => true
	 *
	 * _.isObject(null);
	 * // => false
	 */
	function isObject(value) {
	  var type = typeof value;
	  return value != null && (type == 'object' || type == 'function');
	}
	
	module.exports = isObject;


/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	var isArrayLike = __webpack_require__(41);
	
	/**
	 * Creates a `baseEach` or `baseEachRight` function.
	 *
	 * @private
	 * @param {Function} eachFunc The function to iterate over a collection.
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Function} Returns the new base function.
	 */
	function createBaseEach(eachFunc, fromRight) {
	  return function(collection, iteratee) {
	    if (collection == null) {
	      return collection;
	    }
	    if (!isArrayLike(collection)) {
	      return eachFunc(collection, iteratee);
	    }
	    var length = collection.length,
	        index = fromRight ? length : -1,
	        iterable = Object(collection);
	
	    while ((fromRight ? index-- : ++index < length)) {
	      if (iteratee(iterable[index], index, iterable) === false) {
	        break;
	      }
	    }
	    return collection;
	  };
	}
	
	module.exports = createBaseEach;


/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	var identity = __webpack_require__(46);
	
	/**
	 * Casts `value` to `identity` if it's not a function.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @returns {Function} Returns cast function.
	 */
	function castFunction(value) {
	  return typeof value == 'function' ? value : identity;
	}
	
	module.exports = castFunction;


/***/ },
/* 46 */
/***/ function(module, exports) {

	/**
	 * This method returns the first argument it receives.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Util
	 * @param {*} value Any value.
	 * @returns {*} Returns `value`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 *
	 * console.log(_.identity(object) === object);
	 * // => true
	 */
	function identity(value) {
	  return value;
	}
	
	module.exports = identity;


/***/ },
/* 47 */
/***/ function(module, exports) {

	module.exports = ReactDOM;

/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(49);

/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var TingleUI = __webpack_require__(50);
	var Icon = __webpack_require__(51);
	var Grid = TingleUI.Grid,
	    Gallery = TingleUI.Gallery,
	    TabBar = TingleUI.TabBar,
	    NavBar = TingleUI.NavBar;
	var _ReactRouter = ReactRouter,
	    hashHistory = _ReactRouter.hashHistory,
	    browserHistory = _ReactRouter.browserHistory;
	
	var Page = function (_React$Component) {
	    _inherits(Page, _React$Component);
	
	    function Page(props) {
	        _classCallCheck(this, Page);
	
	        var _this = _possibleConstructorReturn(this, (Page.__proto__ || Object.getPrototypeOf(Page)).call(this, props));
	
	        _this.tingleIntroBgColors = ['#de3e3e', // 红
	        '#FFB600', // 黄
	        '#4E9C0B', // 绿
	        '#3053AB' // 蓝
	        ];
	        _this.state = {
	            tingleIntroBgColorIndex: 0,
	            activeIndex: 0,
	            images: [{
	                src: 'https://gw.alicdn.com/tps/TB1HMQVJpXXXXbZXpXXXXXXXXXX-640-340.jpg',
	                name: '信息平台前端团队',
	                href: 'http://www.taobao.com'
	            }, {
	                src: 'https://gw.alicdn.com/tps/TB1X.oFJpXXXXbMXVXXXXXXXXXX-484-282.png',
	                name: '信息平台前端团队',
	                href: 'http://www.taobao.com'
	            }, {
	                src: 'https://gw.alicdn.com/tps/TB1E2M9JpXXXXXQXXXXXXXXXXXX-820-356.png',
	                name: '信息平台前端团队',
	                href: 'http://www.taobao.com'
	            }, {
	                src: 'https://gw.alicdn.com/tps/TB1Qy3RJpXXXXcxXFXXXXXXXXXX-2000-680.jpg',
	                name: '信息平台前端团队 突破十大障碍最终登上人生巅峰',
	                href: 'http://www.taobao.com'
	            }],
	            icons: [{
	                text: '列表',
	                icon: 'show-list',
	                route: 'list'
	            }, {
	                text: '表单',
	                icon: 'show-form',
	                route: 'form'
	            }, {
	                text: '图标',
	                icon: 'show-icon',
	                route: 'icon'
	            }, {
	                text: '按钮',
	                icon: 'show-button',
	                route: 'button'
	            }, {
	                text: '对话框',
	                icon: 'show-dialog',
	                route: 'dialog'
	            }, {
	                text: '日历',
	                icon: 'show-calendar',
	                route: 'calendar'
	            }, {
	                text: '场景',
	                icon: 'show-scene',
	                route: 'scene'
	            }, {
	                text: '源码',
	                icon: 'show-github',
	                route: 'github'
	            }, {
	                text: 'Native',
	                icon: 'show-native',
	                route: 'native'
	            }, {
	                text: '文档',
	                icon: 'doc',
	                route: 'doc'
	            }]
	        };
	        return _this;
	    }
	
	    _createClass(Page, [{
	        key: 'getTingleBgColorIndex',
	        value: function getTingleBgColorIndex() {
	            var t = this;
	            var currentIndex = t.state.tingleIntroBgColorIndex;
	            var nextIndex = currentIndex === t.tingleIntroBgColors.length - 1 ? 0 : currentIndex + 1;
	            return nextIndex;
	        }
	    }, {
	        key: 'handleChangeColor',
	        value: function handleChangeColor() {
	            var t = this;
	            t.setState({
	                tingleIntroBgColorIndex: t.getTingleBgColorIndex()
	            });
	        }
	    }, {
	        key: 'handleRoute',
	        value: function handleRoute(route) {
	            var t = this;
	
	            (function () {
	                switch (route) {
	                    case "feedback":
	                        Ali.ready(function () {
	                            if (Ali.isDingDing) {
	                                Ali.alert({
	                                    message: "我们的钉钉反馈渠道目前正在升级中…",
	                                    title: "温馨提示",
	                                    okButton: "知道了"
	                                }, function () {});
	                            } else if (Ali.isAliwork) {
	                                Ali.chat.post({
	                                    'bizType': 'Create', // 业务类型(Create, Forward, Comment)
	                                    'title': '发送内外新分享', // 大标题
	                                    'postScope': 'public', // public, private
	                                    'content': '#意见反馈# ', // 默认内容
	                                    'placeholderText': '请输入您要反馈给tingle小组的意见，或bug', // placeholder
	                                    'groupId': '17122'
	                                }, function () {});
	                            }
	                        });
	                        break;
	                    case "other":
	                        Ali.ready(function () {
	                            Ali.pushWindow({
	                                url: "http://ux.alibaba.net/docs/tingle-getting-started.html"
	                            });
	                        });
	                        break;
	                    case "doc":
	                        var docUrl = window.location.origin + '/dist/docs/docs.html';
	                        var cdnUrlArr = window.location.href.match(/^.*g\.alicdn\.com\/platform\/tingle-ui\/\d+\.\d+\.\d+/);
	                        if (cdnUrlArr && cdnUrlArr.length) {
	                            docUrl = cdnUrlArr[0] + '/docs/docs.html';
	                        }
	                        Ali.ready(function () {
	                            Ali.pushWindow({
	                                url: docUrl
	                            });
	                        });
	                        break;
	                    case "github":
	                        if (Ali.isDingDing) {
	                            Ali.alert({
	                                message: "正在升级中…",
	                                title: "温馨提示",
	                                okButton: "知道了"
	                            }, function () {});
	                        } else if (Ali.isAliwork) {
	                            Ali.pushWindow({
	                                url: 'http://gitlab.alibaba-inc.com/tingle-ui'
	                            });
	                        }
	
	                        break;
	                    case "native":
	                        Ali.ready(function () {
	                            Ali.pushWindow({
	                                url: Ali.isDingDing ? 'http://h5.m.laiwang.com/home/ding.html' : 'http://zhuanti.alibaba-inc.com/markets/nw-test/native-api-test?__nc=0'
	                            });
	                        });
	                        break;
	                    default:
	                        t.context.router.push(route);
	                        break;
	                }
	            })();
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var t = this;
	            return React.createElement(
	                'div',
	                { className: 'home-page' },
	                React.createElement(Gallery, { images: this.state.images,
	                    showNav: true }),
	                React.createElement(
	                    Grid,
	                    { square: true, col: 3 },
	                    t.state.icons.map(function (item, index) {
	                        return React.createElement(
	                            'div',
	                            { key: 'icon' + index,
	                                className: 't-FBV t-FBAC t-FBJC home-grid-item t-TE',
	                                onClick: t.handleRoute.bind(t, item.route) },
	                            React.createElement(
	                                'div',
	                                { className: 'home-grid-icon' },
	                                React.createElement(Icon, { name: 'show-icon-bg', className: "icon-bg icon-color" + index }),
	                                React.createElement(Icon, { name: item.icon, className: 'icon-is' })
	                            ),
	                            React.createElement(
	                                'div',
	                                { className: 't-FC6 icon-text' },
	                                item.text
	                            )
	                        );
	                    })
	                )
	            );
	        }
	    }]);
	
	    return Page;
	}(React.Component);
	
	Page.contextTypes = {
	    router: React.PropTypes.object.isRequired
	};
	module.exports = Page;

/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	(function webpackUniversalModuleDefinition(root, factory) {
		if(true)
			module.exports = factory(__webpack_require__(7), __webpack_require__(47));
		else if(typeof define === 'function' && define.amd)
			define(["react", "react-dom"], factory);
		else if(typeof exports === 'object')
			exports["TingleUI"] = factory(require("react"), require("react-dom"));
		else
			root["TingleUI"] = factory(root["React"], root["ReactDOM"]);
	})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_42__) {
	return /******/ (function(modules) { // webpackBootstrap
	/******/ 	// The module cache
	/******/ 	var installedModules = {};
	/******/
	/******/ 	// The require function
	/******/ 	function __webpack_require__(moduleId) {
	/******/
	/******/ 		// Check if module is in cache
	/******/ 		if(installedModules[moduleId])
	/******/ 			return installedModules[moduleId].exports;
	/******/
	/******/ 		// Create a new module (and put it into the cache)
	/******/ 		var module = installedModules[moduleId] = {
	/******/ 			exports: {},
	/******/ 			id: moduleId,
	/******/ 			loaded: false
	/******/ 		};
	/******/
	/******/ 		// Execute the module function
	/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
	/******/
	/******/ 		// Flag the module as loaded
	/******/ 		module.loaded = true;
	/******/
	/******/ 		// Return the exports of the module
	/******/ 		return module.exports;
	/******/ 	}
	/******/
	/******/
	/******/ 	// expose the modules object (__webpack_modules__)
	/******/ 	__webpack_require__.m = modules;
	/******/
	/******/ 	// expose the module cache
	/******/ 	__webpack_require__.c = installedModules;
	/******/
	/******/ 	// __webpack_public_path__
	/******/ 	__webpack_require__.p = "";
	/******/
	/******/ 	// Load entry module and return exports
	/******/ 	return __webpack_require__(0);
	/******/ })
	/************************************************************************/
	/******/ ([
	/* 0 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		/**
		 * TingleUI All in One!
		 * @author alex.mm
		 *
		 * Copyright 2014-2016, Tingle Team, Alinw.
		 * All rights reserved.
		 */
		
		var IconSource = __webpack_require__(1);
		var WRAPPER_ID = '__TingleIconSymbols__';
		var doc = document;
		var wrapper = doc.getElementById(WRAPPER_ID);
		if (!wrapper) {
		    wrapper = doc.createElement('div');
		    wrapper.id = WRAPPER_ID;
		    wrapper.style.display = "none";
		    doc.body.appendChild(wrapper);
		    ReactDOM.render(React.createElement(IconSource, null), wrapper);
		}
		
		var VERSION = void 0;
		(VERSION = "1.1.16");
		
		// 按照字母顺序排序
		var TingleUI = {
		    version: VERSION,
		    Avatar: __webpack_require__(43),
		    Boxs: __webpack_require__(51),
		    Button: __webpack_require__(53),
		    Calendar: __webpack_require__(55),
		    CascadeSelectField: __webpack_require__(80),
		    CheckboxField: __webpack_require__(92),
		    Context: __webpack_require__(47),
		    DatetimeField: __webpack_require__(98),
		    Dialog: __webpack_require__(100),
		    Field: __webpack_require__(87),
		    Gallery: __webpack_require__(104),
		    Group: __webpack_require__(94),
		    Grid: __webpack_require__(109),
		    Icon: __webpack_require__(89),
		    Layer: __webpack_require__(59),
		    List: __webpack_require__(112),
		    Mask: __webpack_require__(61),
		    NavBar: __webpack_require__(114),
		    Note: __webpack_require__(116),
		    PhotoField: __webpack_require__(118),
		    //Picker: require('@ali/tingle-picker'),
		    Rate: __webpack_require__(121),
		    RadioField: __webpack_require__(123),
		    SearchBar: __webpack_require__(125),
		    SelectField: __webpack_require__(133),
		    Scroller: __webpack_require__(84),
		    ScrollList: __webpack_require__(135),
		    Slide: __webpack_require__(106),
		    Slot: __webpack_require__(82),
		    Switch: __webpack_require__(147),
		    SwitchField: __webpack_require__(149),
		    Tab: __webpack_require__(151),
		    TabBar: __webpack_require__(154),
		    TextareaField: __webpack_require__(157),
		    TextField: __webpack_require__(160),
		    Toast: __webpack_require__(162)
		};
		
		(window.SaltUI = TingleUI);
		
		module.exports = TingleUI;
	
	/***/ },
	/* 1 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var React = __webpack_require__(2);
		var helpers = __webpack_require__(3)(__webpack_require__(42));
		
		module.exports = React.createClass({
		
		  displayName: "TingleIconSymbols",
		
		  getDefaultProps: function getDefaultProps() {
		    return { "0": "{", "1": "s", "2": "t", "3": "y", "4": "l", "5": "e", "6": ":", "7": "{", "8": "}", "9": "}", "xmlns": "http://www.w3.org/2000/svg", "data-svgreactloader": "[[\"http://www.w3.org/2000/svg\",\"xlink\",\"http://www.w3.org/1999/xlink\"]]" };
		  },
		  componentDidMount: function componentDidMount() {
		    helpers.applyXmlAttributes(this);
		  },
		  render: function render() {
		    var props = this.props;
		    var children = props.children;
		
		    return React.createElement(
		      'svg',
		      this.props,
		      React.createElement(
		        'symbol',
		        { id: 'field-required', viewBox: '0 0 200 200' },
		        React.createElement(
		          'g',
		          { className: 'transform-group' },
		          React.createElement(
		            'g',
		            { transform: 'scale(0.1953125, 0.1953125)' },
		            React.createElement('path', { d: 'M723.776 440.512 536.768 512l186.944 71.488c47.616 18.368 75.136 33.024 82.496 44.032 7.296 11.008 11.008 22.016 11.008 33.024 0 29.376-5.568 45.888-16.704 49.472-11.072 3.712-22.208 5.504-33.28 5.504-11.2 0-22.272-2.752-33.344-8.256-11.136-5.504-24.064-13.76-38.848-24.768L523.072 528.512l38.912 230.976c3.648 11.008 5.504 21.12 5.504 30.272 0 9.216 0 15.616 0 19.264 0 22.016-5.504 37.632-16.64 46.72C539.712 864.96 526.784 869.504 512 869.504c-11.328 0-23.552-3.648-36.8-11.008-13.248-7.296-19.776-23.808-19.776-49.472 0-7.296 0.96-14.656 2.816-22.016 1.92-7.296 2.816-16.512 2.816-27.52l45.184-230.976-175.232 153.984c-11.328 7.36-23.552 14.656-36.8 22.016-13.248 7.36-25.408 11.008-36.672 11.008-11.328 0-22.592-3.648-33.92-11.008-11.328-7.296-16.96-22.016-16.96-44.032 0-14.656 5.504-27.52 16.512-38.528s36.608-23.808 76.992-38.528L487.296 512 300.288 440.512C274.624 429.504 252.608 419.456 234.304 410.24c-18.368-9.152-27.52-24.768-27.52-46.72 0-18.304 5.504-32.064 16.576-41.28C234.496 313.152 245.504 308.48 256.704 308.48c11.072 0 23.104 2.752 36.096 8.256 12.864 5.504 24.896 13.76 36.096 24.768l172.032 153.984L462.08 264.512c0-11.008-0.96-20.096-2.816-27.52-1.92-7.296-2.752-14.656-2.752-22.016 0-14.656 5.504-28.352 16.64-41.28C484.288 160.96 497.28 154.496 512 154.496c22.656 0 37.568 7.36 45.248 22.016 7.488 14.656 11.328 27.52 11.328 38.528 0 7.36 0 15.616 0 24.768 0 9.216-1.92 17.408-5.696 24.768L517.696 495.488l175.168-153.984c15.04-14.656 28.16-23.808 39.552-27.52 11.328-3.648 22.592-5.504 33.92-5.504 15.04 0 27.264 5.504 36.672 16.512S817.28 348.864 817.28 363.52c0 14.656-3.712 26.624-11.008 35.776C798.848 408.448 771.392 422.208 723.776 440.512z' })
		          )
		        )
		      ),
		      React.createElement(
		        'symbol',
		        { id: 'tingle-icon-symbols' },
		        React.createElement(
		          'symbol',
		          { id: 'field-required', viewBox: '0 0 200 200' },
		          React.createElement(
		            'g',
		            { className: 'transform-group' },
		            React.createElement(
		              'g',
		              { transform: 'scale(0.1953125, 0.1953125)' },
		              React.createElement('path', { d: 'M723.776 440.512 536.768 512l186.944 71.488c47.616 18.368 75.136 33.024 82.496 44.032 7.296 11.008 11.008 22.016 11.008 33.024 0 29.376-5.568 45.888-16.704 49.472-11.072 3.712-22.208 5.504-33.28 5.504-11.2 0-22.272-2.752-33.344-8.256-11.136-5.504-24.064-13.76-38.848-24.768L523.072 528.512l38.912 230.976c3.648 11.008 5.504 21.12 5.504 30.272 0 9.216 0 15.616 0 19.264 0 22.016-5.504 37.632-16.64 46.72C539.712 864.96 526.784 869.504 512 869.504c-11.328 0-23.552-3.648-36.8-11.008-13.248-7.296-19.776-23.808-19.776-49.472 0-7.296 0.96-14.656 2.816-22.016 1.92-7.296 2.816-16.512 2.816-27.52l45.184-230.976-175.232 153.984c-11.328 7.36-23.552 14.656-36.8 22.016-13.248 7.36-25.408 11.008-36.672 11.008-11.328 0-22.592-3.648-33.92-11.008-11.328-7.296-16.96-22.016-16.96-44.032 0-14.656 5.504-27.52 16.512-38.528s36.608-23.808 76.992-38.528L487.296 512 300.288 440.512C274.624 429.504 252.608 419.456 234.304 410.24c-18.368-9.152-27.52-24.768-27.52-46.72 0-18.304 5.504-32.064 16.576-41.28C234.496 313.152 245.504 308.48 256.704 308.48c11.072 0 23.104 2.752 36.096 8.256 12.864 5.504 24.896 13.76 36.096 24.768l172.032 153.984L462.08 264.512c0-11.008-0.96-20.096-2.816-27.52-1.92-7.296-2.752-14.656-2.752-22.016 0-14.656 5.504-28.352 16.64-41.28C484.288 160.96 497.28 154.496 512 154.496c22.656 0 37.568 7.36 45.248 22.016 7.488 14.656 11.328 27.52 11.328 38.528 0 7.36 0 15.616 0 24.768 0 9.216-1.92 17.408-5.696 24.768L517.696 495.488l175.168-153.984c15.04-14.656 28.16-23.808 39.552-27.52 11.328-3.648 22.592-5.504 33.92-5.504 15.04 0 27.264 5.504 36.672 16.512S817.28 348.864 817.28 363.52c0 14.656-3.712 26.624-11.008 35.776C798.848 408.448 771.392 422.208 723.776 440.512z' })
		            )
		          )
		        ),
		        React.createElement(
		          'symbol',
		          { id: 'tingle-icon-symbols' },
		          React.createElement(
		            'symbol',
		            { id: 'field-required', viewBox: '0 0 200 200' },
		            React.createElement(
		              'g',
		              { className: 'transform-group' },
		              React.createElement(
		                'g',
		                { transform: 'scale(0.1953125, 0.1953125)' },
		                React.createElement('path', { d: 'M723.776 440.512 536.768 512l186.944 71.488c47.616 18.368 75.136 33.024 82.496 44.032 7.296 11.008 11.008 22.016 11.008 33.024 0 29.376-5.568 45.888-16.704 49.472-11.072 3.712-22.208 5.504-33.28 5.504-11.2 0-22.272-2.752-33.344-8.256-11.136-5.504-24.064-13.76-38.848-24.768L523.072 528.512l38.912 230.976c3.648 11.008 5.504 21.12 5.504 30.272 0 9.216 0 15.616 0 19.264 0 22.016-5.504 37.632-16.64 46.72C539.712 864.96 526.784 869.504 512 869.504c-11.328 0-23.552-3.648-36.8-11.008-13.248-7.296-19.776-23.808-19.776-49.472 0-7.296 0.96-14.656 2.816-22.016 1.92-7.296 2.816-16.512 2.816-27.52l45.184-230.976-175.232 153.984c-11.328 7.36-23.552 14.656-36.8 22.016-13.248 7.36-25.408 11.008-36.672 11.008-11.328 0-22.592-3.648-33.92-11.008-11.328-7.296-16.96-22.016-16.96-44.032 0-14.656 5.504-27.52 16.512-38.528s36.608-23.808 76.992-38.528L487.296 512 300.288 440.512C274.624 429.504 252.608 419.456 234.304 410.24c-18.368-9.152-27.52-24.768-27.52-46.72 0-18.304 5.504-32.064 16.576-41.28C234.496 313.152 245.504 308.48 256.704 308.48c11.072 0 23.104 2.752 36.096 8.256 12.864 5.504 24.896 13.76 36.096 24.768l172.032 153.984L462.08 264.512c0-11.008-0.96-20.096-2.816-27.52-1.92-7.296-2.752-14.656-2.752-22.016 0-14.656 5.504-28.352 16.64-41.28C484.288 160.96 497.28 154.496 512 154.496c22.656 0 37.568 7.36 45.248 22.016 7.488 14.656 11.328 27.52 11.328 38.528 0 7.36 0 15.616 0 24.768 0 9.216-1.92 17.408-5.696 24.768L517.696 495.488l175.168-153.984c15.04-14.656 28.16-23.808 39.552-27.52 11.328-3.648 22.592-5.504 33.92-5.504 15.04 0 27.264 5.504 36.672 16.512S817.28 348.864 817.28 363.52c0 14.656-3.712 26.624-11.008 35.776C798.848 408.448 771.392 422.208 723.776 440.512z' })
		              )
		            )
		          ),
		          React.createElement(
		            'symbol',
		            { id: 'tingle-icon-symbols' },
		            React.createElement(
		              'symbol',
		              { id: 'field-required', viewBox: '0 0 200 200' },
		              React.createElement(
		                'g',
		                { className: 'transform-group' },
		                React.createElement(
		                  'g',
		                  { transform: 'scale(0.1953125, 0.1953125)' },
		                  React.createElement('path', { d: 'M723.776 440.512 536.768 512l186.944 71.488c47.616 18.368 75.136 33.024 82.496 44.032 7.296 11.008 11.008 22.016 11.008 33.024 0 29.376-5.568 45.888-16.704 49.472-11.072 3.712-22.208 5.504-33.28 5.504-11.2 0-22.272-2.752-33.344-8.256-11.136-5.504-24.064-13.76-38.848-24.768L523.072 528.512l38.912 230.976c3.648 11.008 5.504 21.12 5.504 30.272 0 9.216 0 15.616 0 19.264 0 22.016-5.504 37.632-16.64 46.72C539.712 864.96 526.784 869.504 512 869.504c-11.328 0-23.552-3.648-36.8-11.008-13.248-7.296-19.776-23.808-19.776-49.472 0-7.296 0.96-14.656 2.816-22.016 1.92-7.296 2.816-16.512 2.816-27.52l45.184-230.976-175.232 153.984c-11.328 7.36-23.552 14.656-36.8 22.016-13.248 7.36-25.408 11.008-36.672 11.008-11.328 0-22.592-3.648-33.92-11.008-11.328-7.296-16.96-22.016-16.96-44.032 0-14.656 5.504-27.52 16.512-38.528s36.608-23.808 76.992-38.528L487.296 512 300.288 440.512C274.624 429.504 252.608 419.456 234.304 410.24c-18.368-9.152-27.52-24.768-27.52-46.72 0-18.304 5.504-32.064 16.576-41.28C234.496 313.152 245.504 308.48 256.704 308.48c11.072 0 23.104 2.752 36.096 8.256 12.864 5.504 24.896 13.76 36.096 24.768l172.032 153.984L462.08 264.512c0-11.008-0.96-20.096-2.816-27.52-1.92-7.296-2.752-14.656-2.752-22.016 0-14.656 5.504-28.352 16.64-41.28C484.288 160.96 497.28 154.496 512 154.496c22.656 0 37.568 7.36 45.248 22.016 7.488 14.656 11.328 27.52 11.328 38.528 0 7.36 0 15.616 0 24.768 0 9.216-1.92 17.408-5.696 24.768L517.696 495.488l175.168-153.984c15.04-14.656 28.16-23.808 39.552-27.52 11.328-3.648 22.592-5.504 33.92-5.504 15.04 0 27.264 5.504 36.672 16.512S817.28 348.864 817.28 363.52c0 14.656-3.712 26.624-11.008 35.776C798.848 408.448 771.392 422.208 723.776 440.512z' })
		                )
		              )
		            ),
		            React.createElement(
		              'symbol',
		              { id: 'tingle-icon-symbols' },
		              React.createElement(
		                'symbol',
		                { id: 'field-required', viewBox: '0 0 200 200' },
		                React.createElement(
		                  'g',
		                  { className: 'transform-group' },
		                  React.createElement(
		                    'g',
		                    { transform: 'scale(0.1953125, 0.1953125)' },
		                    React.createElement('path', { d: 'M723.776 440.512 536.768 512l186.944 71.488c47.616 18.368 75.136 33.024 82.496 44.032 7.296 11.008 11.008 22.016 11.008 33.024 0 29.376-5.568 45.888-16.704 49.472-11.072 3.712-22.208 5.504-33.28 5.504-11.2 0-22.272-2.752-33.344-8.256-11.136-5.504-24.064-13.76-38.848-24.768L523.072 528.512l38.912 230.976c3.648 11.008 5.504 21.12 5.504 30.272 0 9.216 0 15.616 0 19.264 0 22.016-5.504 37.632-16.64 46.72C539.712 864.96 526.784 869.504 512 869.504c-11.328 0-23.552-3.648-36.8-11.008-13.248-7.296-19.776-23.808-19.776-49.472 0-7.296 0.96-14.656 2.816-22.016 1.92-7.296 2.816-16.512 2.816-27.52l45.184-230.976-175.232 153.984c-11.328 7.36-23.552 14.656-36.8 22.016-13.248 7.36-25.408 11.008-36.672 11.008-11.328 0-22.592-3.648-33.92-11.008-11.328-7.296-16.96-22.016-16.96-44.032 0-14.656 5.504-27.52 16.512-38.528s36.608-23.808 76.992-38.528L487.296 512 300.288 440.512C274.624 429.504 252.608 419.456 234.304 410.24c-18.368-9.152-27.52-24.768-27.52-46.72 0-18.304 5.504-32.064 16.576-41.28C234.496 313.152 245.504 308.48 256.704 308.48c11.072 0 23.104 2.752 36.096 8.256 12.864 5.504 24.896 13.76 36.096 24.768l172.032 153.984L462.08 264.512c0-11.008-0.96-20.096-2.816-27.52-1.92-7.296-2.752-14.656-2.752-22.016 0-14.656 5.504-28.352 16.64-41.28C484.288 160.96 497.28 154.496 512 154.496c22.656 0 37.568 7.36 45.248 22.016 7.488 14.656 11.328 27.52 11.328 38.528 0 7.36 0 15.616 0 24.768 0 9.216-1.92 17.408-5.696 24.768L517.696 495.488l175.168-153.984c15.04-14.656 28.16-23.808 39.552-27.52 11.328-3.648 22.592-5.504 33.92-5.504 15.04 0 27.264 5.504 36.672 16.512S817.28 348.864 817.28 363.52c0 14.656-3.712 26.624-11.008 35.776C798.848 408.448 771.392 422.208 723.776 440.512z' })
		                  )
		                )
		              ),
		              React.createElement(
		                'symbol',
		                { id: 'tingle-icon-symbols' },
		                React.createElement(
		                  'symbol',
		                  { id: 'field-required', viewBox: '0 0 200 200' },
		                  React.createElement(
		                    'g',
		                    { className: 'transform-group' },
		                    React.createElement(
		                      'g',
		                      { transform: 'scale(0.1953125, 0.1953125)' },
		                      React.createElement('path', { d: 'M723.776 440.512 536.768 512l186.944 71.488c47.616 18.368 75.136 33.024 82.496 44.032 7.296 11.008 11.008 22.016 11.008 33.024 0 29.376-5.568 45.888-16.704 49.472-11.072 3.712-22.208 5.504-33.28 5.504-11.2 0-22.272-2.752-33.344-8.256-11.136-5.504-24.064-13.76-38.848-24.768L523.072 528.512l38.912 230.976c3.648 11.008 5.504 21.12 5.504 30.272 0 9.216 0 15.616 0 19.264 0 22.016-5.504 37.632-16.64 46.72C539.712 864.96 526.784 869.504 512 869.504c-11.328 0-23.552-3.648-36.8-11.008-13.248-7.296-19.776-23.808-19.776-49.472 0-7.296 0.96-14.656 2.816-22.016 1.92-7.296 2.816-16.512 2.816-27.52l45.184-230.976-175.232 153.984c-11.328 7.36-23.552 14.656-36.8 22.016-13.248 7.36-25.408 11.008-36.672 11.008-11.328 0-22.592-3.648-33.92-11.008-11.328-7.296-16.96-22.016-16.96-44.032 0-14.656 5.504-27.52 16.512-38.528s36.608-23.808 76.992-38.528L487.296 512 300.288 440.512C274.624 429.504 252.608 419.456 234.304 410.24c-18.368-9.152-27.52-24.768-27.52-46.72 0-18.304 5.504-32.064 16.576-41.28C234.496 313.152 245.504 308.48 256.704 308.48c11.072 0 23.104 2.752 36.096 8.256 12.864 5.504 24.896 13.76 36.096 24.768l172.032 153.984L462.08 264.512c0-11.008-0.96-20.096-2.816-27.52-1.92-7.296-2.752-14.656-2.752-22.016 0-14.656 5.504-28.352 16.64-41.28C484.288 160.96 497.28 154.496 512 154.496c22.656 0 37.568 7.36 45.248 22.016 7.488 14.656 11.328 27.52 11.328 38.528 0 7.36 0 15.616 0 24.768 0 9.216-1.92 17.408-5.696 24.768L517.696 495.488l175.168-153.984c15.04-14.656 28.16-23.808 39.552-27.52 11.328-3.648 22.592-5.504 33.92-5.504 15.04 0 27.264 5.504 36.672 16.512S817.28 348.864 817.28 363.52c0 14.656-3.712 26.624-11.008 35.776C798.848 408.448 771.392 422.208 723.776 440.512z' })
		                    )
		                  )
		                ),
		                React.createElement(
		                  'symbol',
		                  { id: 'tingle-icon-symbols' },
		                  React.createElement(
		                    'symbol',
		                    { id: 'tingle-icon-symbols' },
		                    React.createElement(
		                      'symbol',
		                      { id: 'angle-down', viewBox: '0 0 24 24' },
		                      React.createElement(
		                        'g',
		                        { id: 'expand-more' },
		                        React.createElement('polygon', { points: '16.6,8.6 12,13.2 7.4,8.6 6,10 12,16 18,10 ' })
		                      )
		                    ),
		                    React.createElement(
		                      'symbol',
		                      { id: 'angle-left', viewBox: '0 0 24 24' },
		                      React.createElement(
		                        'g',
		                        { id: 'chevron-left' },
		                        React.createElement('polygon', { points: '15.4,7.4 14,6 8,12 14,18 15.4,16.6 10.8,12 ' })
		                      )
		                    ),
		                    React.createElement(
		                      'symbol',
		                      { id: 'angle-right', viewBox: '0 0 24 24' },
		                      React.createElement(
		                        'g',
		                        { id: 'chevron-right' },
		                        React.createElement('polygon', { points: '10,6 8.6,7.4 13.2,12 8.6,16.6 10,18 16,12 ' })
		                      )
		                    ),
		                    React.createElement(
		                      'symbol',
		                      { id: 'angle-up', viewBox: '0 0 24 24' },
		                      React.createElement(
		                        'g',
		                        { id: 'expand-less' },
		                        React.createElement('polygon', { points: '12,8 6,14 7.4,15.4 12,10.8 16.6,15.4 18,14 ' })
		                      )
		                    ),
		                    React.createElement(
		                      'symbol',
		                      { id: 'check-round', viewBox: '0 0 20 20' },
		                      React.createElement(
		                        'title',
		                        null,
		                        'check-round'
		                      ),
		                      React.createElement(
		                        'desc',
		                        null,
		                        'Created with Sketch.'
		                      ),
		                      React.createElement(
		                        'g',
		                        { id: 'Page-1', stroke: 'none', strokeWidth: '1', fillRule: 'evenodd' },
		                        React.createElement(
		                          'g',
		                          { id: 'check-round' },
		                          React.createElement(
		                            'g',
		                            { id: 'check-circle' },
		                            React.createElement('path', { d: 'M10,0 C4.5,0 0,4.5 0,10 C0,15.5 4.5,20 10,20 C15.5,20 20,15.5 20,10 C20,4.5 15.5,0 10,0 L10,0 Z M8,15 L3,10 L4.4,8.6 L8,12.2 L15.6,4.6 L17,6 L8,15 L8,15 Z', id: 'Shape' })
		                          )
		                        )
		                      )
		                    ),
		                    React.createElement(
		                      'symbol',
		                      { id: 'check', viewBox: '0 0 24 24' },
		                      React.createElement(
		                        'g',
		                        { id: 'check' },
		                        React.createElement('polygon', { points: '9,16.2 4.8,12 3.4,13.4 9,19 21,7 19.6,5.6 ' })
		                      )
		                    ),
		                    React.createElement(
		                      'symbol',
		                      { id: 'cross-round', viewBox: '0 0 24 24' },
		                      React.createElement(
		                        'g',
		                        { id: 'cancel' },
		                        React.createElement('path', { d: 'M12,2C6.5,2,2,6.5,2,12s4.5,10,10,10c5.5,0,10-4.5,10-10S17.5,2,12,2z M17,15.6L15.6,17L12,13.4L8.4,17L7,15.6l3.6-3.6L7,8.4L8.4,7l3.6,3.6L15.6,7L17,8.4L13.4,12L17,15.6z' })
		                      )
		                    ),
		                    React.createElement(
		                      'symbol',
		                      { id: 'cross', viewBox: '0 0 24 24' },
		                      React.createElement(
		                        'g',
		                        { id: 'clear' },
		                        React.createElement('polygon', { points: '19,6.4 17.6,5 12,10.6 6.4,5 5,6.4 10.6,12 5,17.6 6.4,19 12,13.4 17.6,19 19,17.6 13.4,12 ' })
		                      )
		                    ),
		                    React.createElement(
		                      'symbol',
		                      { id: 'empty-circle', viewBox: '0 0 24 24' },
		                      React.createElement('path', { d: 'M12,2C6.5,2,2,6.5,2,12s4.5,10,10,10s10-4.5,10-10S17.5,2,12,2z M12,20c-4.4,0-8-3.6-8-8s3.6-8,8-8s8,3.6,8,8S16.4,20,12,20 z' })
		                    ),
		                    React.createElement(
		                      'symbol',
		                      { id: 'info-circle', viewBox: '0 0 24 24' },
		                      React.createElement(
		                        'g',
		                        { id: 'info-outline' },
		                        React.createElement('path', { d: 'M11,17h2v-6h-2V17z M12,2C6.5,2,2,6.5,2,12s4.5,10,10,10c5.5,0,10-4.5,10-10S17.5,2,12,2z M12,20c-4.4,0-8-3.6-8-8s3.6-8,8-8c4.4,0,8,3.6,8,8S16.4,20,12,20z M11,9h2V7h-2V9z' })
		                      )
		                    ),
		                    React.createElement(
		                      'symbol',
		                      { id: 'info-round', viewBox: '0 0 24 24' },
		                      React.createElement(
		                        'g',
		                        { id: 'info' },
		                        React.createElement('path', { d: 'M12,2C6.5,2,2,6.5,2,12s4.5,10,10,10c5.5,0,10-4.5,10-10S17.5,2,12,2z M13,17h-2v-6h2V17z M13,9h-2V7h2V9z' })
		                      )
		                    ),
		                    React.createElement(
		                      'symbol',
		                      { id: 'map', viewBox: '0 0 24 24' },
		                      React.createElement(
		                        'g',
		                        { id: 'place' },
		                        React.createElement('path', { d: 'M12,2C8.1,2,5,5.1,5,9c0,5.2,7,13,7,13s7-7.8,7-13C19,5.1,15.9,2,12,2z M12,11.5c-1.4,0-2.5-1.1-2.5-2.5s1.1-2.5,2.5-2.5c1.4,0,2.5,1.1,2.5,2.5S13.4,11.5,12,11.5z' })
		                      )
		                    ),
		                    React.createElement(
		                      'symbol',
		                      { id: 'minus-circle', viewBox: '0 0 24 24' },
		                      React.createElement(
		                        'g',
		                        { id: 'unknown-4' },
		                        React.createElement('path', { d: 'M12,2C6.5,2,2,6.5,2,12s4.5,10,10,10c5.5,0,10-4.5,10-10C22,6.5,17.5,2,12,2z M12,20c-4.4,0-8-3.6-8-8c0-4.4,3.6-8,8-8c4.4,0,8,3.6,8,8C20,16.4,16.4,20,12,20z M8,13h8v-2H8V13z' })
		                      )
		                    ),
		                    React.createElement(
		                      'symbol',
		                      { id: 'minus-round', viewBox: '0 0 24 24' },
		                      React.createElement(
		                        'g',
		                        { id: 'remove-circle' },
		                        React.createElement('path', { d: 'M12,2C6.5,2,2,6.5,2,12s4.5,10,10,10c5.5,0,10-4.5,10-10S17.5,2,12,2z M17,13H7v-2h10V13z' })
		                      )
		                    ),
		                    React.createElement(
		                      'symbol',
		                      { id: 'note-round', viewBox: '0 0 24 24' },
		                      React.createElement(
		                        'g',
		                        { id: 'error' },
		                        React.createElement('path', { d: 'M12,2C6.5,2,2,6.5,2,12s4.5,10,10,10c5.5,0,10-4.5,10-10S17.5,2,12,2z M13,17h-2v-2h2V17z M13,13h-2V7h2V13z' })
		                      )
		                    ),
		                    React.createElement(
		                      'symbol',
		                      { id: 'pen', viewBox: '0 0 24 24' },
		                      React.createElement(
		                        'g',
		                        { id: 'create' },
		                        React.createElement('path', { d: 'M3,17.2V21h3.8L17.8,9.9l-3.8-3.8L3,17.2z M20.7,7c0.4-0.4,0.4-1,0-1.4l-2.3-2.3c-0.4-0.4-1-0.4-1.4,0l-1.8,1.8l3.8,3.8L20.7,7z' })
		                      )
		                    ),
		                    React.createElement(
		                      'symbol',
		                      { id: 'plus-circle', viewBox: '0 0 24 24' },
		                      React.createElement(
		                        'g',
		                        { id: 'unknown-3' },
		                        React.createElement('path', { d: 'M13,8h-2v3H8v2h3v3h2v-3h3v-2h-3V8z M12,2C6.5,2,2,6.5,2,12s4.5,10,10,10c5.5,0,10-4.5,10-10C22,6.5,17.5,2,12,2z M12,20c-4.4,0-8-3.6-8-8c0-4.4,3.6-8,8-8c4.4,0,8,3.6,8,8C20,16.4,16.4,20,12,20z' })
		                      )
		                    ),
		                    React.createElement(
		                      'symbol',
		                      { id: 'plus-round', viewBox: '0 0 24 24' },
		                      React.createElement(
		                        'g',
		                        { id: 'add-circle' },
		                        React.createElement('path', { d: 'M12,2C6.5,2,2,6.5,2,12s4.5,10,10,10c5.5,0,10-4.5,10-10S17.5,2,12,2z M17,13h-4v4h-2v-4H7v-2h4V7h2v4h4V13z' })
		                      )
		                    ),
		                    React.createElement(
		                      'symbol',
		                      { id: 'plus', viewBox: '0 0 24 24' },
		                      React.createElement(
		                        'g',
		                        { id: 'add' },
		                        React.createElement('path', { d: 'M19,13h-6v6h-2v-6H5v-2h6V5h2v6h6V13z' })
		                      )
		                    ),
		                    React.createElement(
		                      'symbol',
		                      { id: 'search', viewBox: '0 0 24 24' },
		                      React.createElement(
		                        'g',
		                        { id: 'search' },
		                        React.createElement('path', { d: 'M15.5,14h-0.8l-0.3-0.3c1-1.1,1.6-2.6,1.6-4.2C16,5.9,13.1,3,9.5,3C5.9,3,3,5.9,3,9.5S5.9,16,9.5,16c1.6,0,3.1-0.6,4.2-1.6l0.3,0.3v0.8l5,5l1.5-1.5L15.5,14z M9.5,14C7,14,5,12,5,9.5S7,5,9.5,5C12,5,14,7,14,9.5S12,14,9.5,14z' })
		                      )
		                    ),
		                    React.createElement(
		                      'symbol',
		                      { id: 'setting', viewBox: '0 0 24 24' },
		                      React.createElement(
		                        'g',
		                        { id: 'settings' },
		                        React.createElement('path', { d: 'M19.4,13c0-0.3,0.1-0.6,0.1-1s0-0.7-0.1-1l2.1-1.7c0.2-0.2,0.2-0.4,0.1-0.6l-2-3.5C19.5,5.1,19.3,5,19,5.1l-2.5,1c-0.5-0.4-1.1-0.7-1.7-1l-0.4-2.6C14.5,2.2,14.2,2,14,2h-4C9.8,2,9.5,2.2,9.5,2.4L9.1,5.1C8.5,5.3,8,5.7,7.4,6.1L5,5.1C4.7,5,4.5,5.1,4.3,5.3l-2,3.5C2.2,8.9,2.3,9.2,2.5,9.4L4.6,11c0,0.3-0.1,0.6-0.1,1s0,0.7,0.1,1l-2.1,1.7c-0.2,0.2-0.2,0.4-0.1,0.6l2,3.5C4.5,18.9,4.7,19,5,18.9l2.5-1c0.5,0.4,1.1,0.7,1.7,1l0.4,2.6c0,0.2,0.2,0.4,0.5,0.4h4c0.2,0,0.5-0.2,0.5-0.4l0.4-2.6c0.6-0.3,1.2-0.6,1.7-1l2.5,1c0.2,0.1,0.5,0,0.6-0.2l2-3.5c0.1-0.2,0.1-0.5-0.1-0.6L19.4,13z M12,15.5c-1.9,0-3.5-1.6-3.5-3.5s1.6-3.5,3.5-3.5s3.5,1.6,3.5,3.5S13.9,15.5,12,15.5z' })
		                      )
		                    ),
		                    React.createElement(
		                      'symbol',
		                      { id: 'star', viewBox: '0 0 24 24' },
		                      React.createElement(
		                        'g',
		                        { id: 'star' },
		                        React.createElement('polygon', { points: '12,17.273 18.18,21 16.545,13.971 22,9.244 14.809,8.627 12,2 9.191,8.627 2,9.244 7.455,13.971 5.82,21 ' })
		                      )
		                    ),
		                    React.createElement(
		                      'symbol',
		                      { id: 'time', viewBox: '0 0 24 24' },
		                      React.createElement(
		                        'g',
		                        { id: 'schedule' },
		                        React.createElement('path', { fillOpacity: '0.9', d: 'M12,2C6.5,2,2,6.5,2,12s4.5,10,10,10c5.5,0,10-4.5,10-10S17.5,2,12,2z M12,20c-4.4,0-8-3.6-8-8s3.6-8,8-8c4.4,0,8,3.6,8,8S16.4,20,12,20z' }),
		                        React.createElement('polygon', { fillOpacity: '0.9', points: '12.5,7 11,7 11,13 16.2,16.2 17,14.9 12.5,12.2 ' })
		                      )
		                    ),
		                    React.createElement(
		                      'symbol',
		                      { id: 'user', viewBox: '0 0 24 24' },
		                      React.createElement(
		                        'g',
		                        { id: 'person' },
		                        React.createElement('path', { d: 'M12,12c2.2,0,4-1.8,4-4c0-2.2-1.8-4-4-4C9.8,4,8,5.8,8,8C8,10.2,9.8,12,12,12z M12,14c-2.7,0-8,1.3-8,4v2h16v-2C20,15.3,14.7,14,12,14z' })
		                      )
		                    )
		                  ),
		                  React.createElement(
		                    'symbol',
		                    { id: 'list-minus-circle', viewBox: '0 0 24 24' },
		                    React.createElement(
		                      'g',
		                      { id: 'unknown-4' },
		                      React.createElement('path', { d: 'M12,2C6.5,2,2,6.5,2,12s4.5,10,10,10c5.5,0,10-4.5,10-10C22,6.5,17.5,2,12,2z M12,20c-4.4,0-8-3.6-8-8c0-4.4,3.6-8,8-8c4.4,0,8,3.6,8,8C20,16.4,16.4,20,12,20z M8,13h8v-2H8V13z' })
		                    )
		                  ),
		                  React.createElement(
		                    'symbol',
		                    { id: 'note-message', viewBox: '0 0 16 16' },
		                    React.createElement(
		                      'g',
		                      { className: 'transform-group' },
		                      React.createElement(
		                        'g',
		                        { transform: 'scale(0.015625, 0.015625)' },
		                        React.createElement('path', { d: 'M511.736499 64.4775c-246.457158 0-447.121364 200.541409-447.121364 447.121364 0 246.580978 200.63146 447.088618 447.121364 447.088618 246.553349 0 447.121364-200.506617 447.121364-447.088618C958.858886 265.018909 758.316453 64.4775 511.736499 64.4775L511.736499 64.4775zM511.736499 902.715703c-215.72625 0-391.178237-175.48064-391.178237-391.149585 0-215.790718 175.450964-391.208936 391.178237-391.208936 215.72625 0 391.214053 175.417195 391.214053 391.208936C902.977157 727.233016 727.463772 902.715703 511.736499 902.715703L511.736499 902.715703zM552.385291 451.746708l-81.297584 0c-11.235902 0-20.319791 9.106402-20.319791 20.319791l0 43.073005 0 14.3488 0 189.726086c0 11.213389 9.091052 20.319791 20.320814 20.319791l81.297584 0c11.234879 0 20.319791-9.106402 20.319791-20.319791L572.706105 529.488303l0-14.3488 0-43.073005C572.706105 460.852086 563.615053 451.746708 552.385291 451.746708zM447.352119 348.014158c0 35.558867 28.826536 64.385403 64.384379 64.385403 35.55989 0 64.386426-28.826536 64.386426-64.385403s-28.826536-64.385403-64.386426-64.385403C476.177632 283.628756 447.352119 312.455291 447.352119 348.014158L447.352119 348.014158z' })
		                      )
		                    )
		                  ),
		                  React.createElement(
		                    'symbol',
		                    { id: 'note-warning', viewBox: '0 0 16 16' },
		                    React.createElement(
		                      'g',
		                      { className: 'transform-group' },
		                      React.createElement(
		                        'g',
		                        { transform: 'scale(0.015625, 0.015625)' },
		                        React.createElement('path', { d: 'M512 764.224c-25.408 0-46.016-20.544-46.016-45.952 0-25.408 20.608-46.016 46.016-46.016s46.016 20.544 46.016 46.016C558.016 743.68 537.408 764.224 512 764.224L512 764.224 512 764.224zM512 764.224M512 611.648c-21.248 0-38.528-17.28-38.528-38.528L473.472 284.992c0-21.248 17.28-38.528 38.528-38.528s38.528 17.28 38.528 38.528l0 288.128C550.528 594.368 533.248 611.648 512 611.648L512 611.648zM512 611.648M512 64C264.576 64 64 264.576 64 512s200.576 448 448 448 448-200.576 448-448S759.424 64 512 64L512 64zM512 900.224c-214.08 0-388.288-174.144-388.288-388.224S297.92 123.776 512 123.776 900.288 297.856 900.288 512 726.08 900.224 512 900.224L512 900.224zM512 900.224' })
		                      )
		                    )
		                  ),
		                  React.createElement(
		                    'symbol',
		                    { id: 'toast-error', viewBox: '0 0 24 24' },
		                    React.createElement(
		                      'g',
		                      { id: 'clear' },
		                      React.createElement('polygon', { points: '19,6.4 17.6,5 12,10.6 6.4,5 5,6.4 10.6,12 5,17.6 6.4,19 12,13.4 17.6,19 19,17.6 13.4,12 ' })
		                    )
		                  ),
		                  React.createElement(
		                    'symbol',
		                    { id: 'toast-fail', viewBox: '0 0 108.364 108.364' },
		                    React.createElement(
		                      'g',
		                      null,
		                      React.createElement(
		                        'g',
		                        null,
		                        React.createElement('path', { d: 'M54.182,0C24.258,0,0,24.258,0,54.182c0,29.924,24.258,54.183,54.182,54.183c29.923,0,54.182-24.259,54.182-54.183 C108.364,24.258,84.105,0,54.182,0z M68.713,33.622c3.424,0,6.201,2.777,6.201,6.201c0,3.426-2.777,6.203-6.201,6.203 c-3.423,0-6.203-2.777-6.203-6.203C62.51,36.399,65.29,33.622,68.713,33.622z M40.594,33.622c3.423,0,6.2,2.777,6.2,6.201 c0,3.426-2.777,6.203-6.2,6.203c-3.423,0-6.201-2.777-6.201-6.203C34.393,36.399,37.17,33.622,40.594,33.622z M76.607,79.098 c-1.521,0.66-3.286-0.041-3.944-1.562c-2.894-6.689-9.731-11.012-17.421-11.012c-7.868,0-14.747,4.32-17.523,11.005 c-0.479,1.153-1.596,1.85-2.771,1.85c-0.384,0-0.773-0.073-1.15-0.229c-1.53-0.637-2.255-2.393-1.62-3.922 c3.71-8.932,12.764-14.703,23.064-14.703c10.084,0,19.084,5.742,22.928,14.63C78.828,76.674,78.128,78.439,76.607,79.098z' })
		                      )
		                    ),
		                    React.createElement('g', null),
		                    React.createElement('g', null),
		                    React.createElement('g', null),
		                    React.createElement('g', null),
		                    React.createElement('g', null),
		                    React.createElement('g', null),
		                    React.createElement('g', null),
		                    React.createElement('g', null),
		                    React.createElement('g', null),
		                    React.createElement('g', null),
		                    React.createElement('g', null),
		                    React.createElement('g', null),
		                    React.createElement('g', null),
		                    React.createElement('g', null),
		                    React.createElement('g', null)
		                  ),
		                  React.createElement(
		                    'symbol',
		                    { id: 'toast-loading', viewBox: '0 0 399.389 399.389' },
		                    React.createElement(
		                      'g',
		                      null,
		                      React.createElement('path', { d: 'M340.896,58.489C303.18,20.773,253.031,0.001,199.693,0.001c-53.34,0-103.487,20.771-141.204,58.488 C20.772,96.207,0,146.355,0,199.694c0,53.34,20.772,103.489,58.49,141.206c37.717,37.717,87.864,58.488,141.204,58.488 c53.339,0,103.486-20.771,141.205-58.488c37.717-37.717,58.49-87.865,58.49-141.206C399.387,146.355,378.613,96.207,340.896,58.489 z M77.457,199.694c0-67.401,54.835-122.236,122.236-122.236S321.93,132.293,321.93,199.694s-54.836,122.237-122.237,122.237 S77.457,267.096,77.457,199.694z M328.061,328.063c-34.289,34.287-79.877,53.17-128.368,53.17v-41.147 c77.413,0,140.389-62.979,140.389-140.391c0-77.412-62.979-140.391-140.389-140.391c-4.593,0-9.134,0.229-13.615,0.662V18.655 c4.508-0.332,9.049-0.5,13.615-0.5c48.491,0,94.079,18.883,128.368,53.171c34.289,34.289,53.172,79.878,53.172,128.368 C381.232,248.187,362.35,293.776,328.061,328.063z' })
		                    ),
		                    React.createElement('g', null),
		                    React.createElement('g', null),
		                    React.createElement('g', null),
		                    React.createElement('g', null),
		                    React.createElement('g', null),
		                    React.createElement('g', null),
		                    React.createElement('g', null),
		                    React.createElement('g', null),
		                    React.createElement('g', null),
		                    React.createElement('g', null),
		                    React.createElement('g', null),
		                    React.createElement('g', null),
		                    React.createElement('g', null),
		                    React.createElement('g', null),
		                    React.createElement('g', null)
		                  ),
		                  React.createElement(
		                    'symbol',
		                    { id: 'toast-success', viewBox: '0 0 24 24' },
		                    React.createElement(
		                      'g',
		                      { id: 'check' },
		                      React.createElement('polygon', { points: '9,16.2 4.8,12 3.4,13.4 9,19 21,7 19.6,5.6 ' })
		                    )
		                  )
		                ),
		                React.createElement(
		                  'symbol',
		                  { id: 'list-minus-circle', viewBox: '0 0 24 24' },
		                  React.createElement(
		                    'g',
		                    { id: 'unknown-4' },
		                    React.createElement('path', { d: 'M12,2C6.5,2,2,6.5,2,12s4.5,10,10,10c5.5,0,10-4.5,10-10C22,6.5,17.5,2,12,2z M12,20c-4.4,0-8-3.6-8-8c0-4.4,3.6-8,8-8c4.4,0,8,3.6,8,8C20,16.4,16.4,20,12,20z M8,13h8v-2H8V13z' })
		                  )
		                ),
		                React.createElement(
		                  'symbol',
		                  { id: 'note-message', viewBox: '0 0 16 16' },
		                  React.createElement(
		                    'g',
		                    { className: 'transform-group' },
		                    React.createElement(
		                      'g',
		                      { transform: 'scale(0.015625, 0.015625)' },
		                      React.createElement('path', { d: 'M511.736499 64.4775c-246.457158 0-447.121364 200.541409-447.121364 447.121364 0 246.580978 200.63146 447.088618 447.121364 447.088618 246.553349 0 447.121364-200.506617 447.121364-447.088618C958.858886 265.018909 758.316453 64.4775 511.736499 64.4775L511.736499 64.4775zM511.736499 902.715703c-215.72625 0-391.178237-175.48064-391.178237-391.149585 0-215.790718 175.450964-391.208936 391.178237-391.208936 215.72625 0 391.214053 175.417195 391.214053 391.208936C902.977157 727.233016 727.463772 902.715703 511.736499 902.715703L511.736499 902.715703zM552.385291 451.746708l-81.297584 0c-11.235902 0-20.319791 9.106402-20.319791 20.319791l0 43.073005 0 14.3488 0 189.726086c0 11.213389 9.091052 20.319791 20.320814 20.319791l81.297584 0c11.234879 0 20.319791-9.106402 20.319791-20.319791L572.706105 529.488303l0-14.3488 0-43.073005C572.706105 460.852086 563.615053 451.746708 552.385291 451.746708zM447.352119 348.014158c0 35.558867 28.826536 64.385403 64.384379 64.385403 35.55989 0 64.386426-28.826536 64.386426-64.385403s-28.826536-64.385403-64.386426-64.385403C476.177632 283.628756 447.352119 312.455291 447.352119 348.014158L447.352119 348.014158z' })
		                    )
		                  )
		                ),
		                React.createElement(
		                  'symbol',
		                  { id: 'note-warning', viewBox: '0 0 16 16' },
		                  React.createElement(
		                    'g',
		                    { className: 'transform-group' },
		                    React.createElement(
		                      'g',
		                      { transform: 'scale(0.015625, 0.015625)' },
		                      React.createElement('path', { d: 'M512 764.224c-25.408 0-46.016-20.544-46.016-45.952 0-25.408 20.608-46.016 46.016-46.016s46.016 20.544 46.016 46.016C558.016 743.68 537.408 764.224 512 764.224L512 764.224 512 764.224zM512 764.224M512 611.648c-21.248 0-38.528-17.28-38.528-38.528L473.472 284.992c0-21.248 17.28-38.528 38.528-38.528s38.528 17.28 38.528 38.528l0 288.128C550.528 594.368 533.248 611.648 512 611.648L512 611.648zM512 611.648M512 64C264.576 64 64 264.576 64 512s200.576 448 448 448 448-200.576 448-448S759.424 64 512 64L512 64zM512 900.224c-214.08 0-388.288-174.144-388.288-388.224S297.92 123.776 512 123.776 900.288 297.856 900.288 512 726.08 900.224 512 900.224L512 900.224zM512 900.224' })
		                    )
		                  )
		                ),
		                React.createElement(
		                  'symbol',
		                  { id: 'toast-error', viewBox: '0 0 24 24' },
		                  React.createElement(
		                    'g',
		                    { id: 'clear' },
		                    React.createElement('polygon', { points: '19,6.4 17.6,5 12,10.6 6.4,5 5,6.4 10.6,12 5,17.6 6.4,19 12,13.4 17.6,19 19,17.6 13.4,12 ' })
		                  )
		                ),
		                React.createElement(
		                  'symbol',
		                  { id: 'toast-fail', viewBox: '0 0 108.364 108.364' },
		                  React.createElement(
		                    'g',
		                    null,
		                    React.createElement(
		                      'g',
		                      null,
		                      React.createElement('path', { d: 'M54.182,0C24.258,0,0,24.258,0,54.182c0,29.924,24.258,54.183,54.182,54.183c29.923,0,54.182-24.259,54.182-54.183 C108.364,24.258,84.105,0,54.182,0z M68.713,33.622c3.424,0,6.201,2.777,6.201,6.201c0,3.426-2.777,6.203-6.201,6.203 c-3.423,0-6.203-2.777-6.203-6.203C62.51,36.399,65.29,33.622,68.713,33.622z M40.594,33.622c3.423,0,6.2,2.777,6.2,6.201 c0,3.426-2.777,6.203-6.2,6.203c-3.423,0-6.201-2.777-6.201-6.203C34.393,36.399,37.17,33.622,40.594,33.622z M76.607,79.098 c-1.521,0.66-3.286-0.041-3.944-1.562c-2.894-6.689-9.731-11.012-17.421-11.012c-7.868,0-14.747,4.32-17.523,11.005 c-0.479,1.153-1.596,1.85-2.771,1.85c-0.384,0-0.773-0.073-1.15-0.229c-1.53-0.637-2.255-2.393-1.62-3.922 c3.71-8.932,12.764-14.703,23.064-14.703c10.084,0,19.084,5.742,22.928,14.63C78.828,76.674,78.128,78.439,76.607,79.098z' })
		                    )
		                  ),
		                  React.createElement('g', null),
		                  React.createElement('g', null),
		                  React.createElement('g', null),
		                  React.createElement('g', null),
		                  React.createElement('g', null),
		                  React.createElement('g', null),
		                  React.createElement('g', null),
		                  React.createElement('g', null),
		                  React.createElement('g', null),
		                  React.createElement('g', null),
		                  React.createElement('g', null),
		                  React.createElement('g', null),
		                  React.createElement('g', null),
		                  React.createElement('g', null),
		                  React.createElement('g', null)
		                ),
		                React.createElement(
		                  'symbol',
		                  { id: 'toast-loading', viewBox: '0 0 399.389 399.389' },
		                  React.createElement(
		                    'g',
		                    null,
		                    React.createElement('path', { d: 'M340.896,58.489C303.18,20.773,253.031,0.001,199.693,0.001c-53.34,0-103.487,20.771-141.204,58.488 C20.772,96.207,0,146.355,0,199.694c0,53.34,20.772,103.489,58.49,141.206c37.717,37.717,87.864,58.488,141.204,58.488 c53.339,0,103.486-20.771,141.205-58.488c37.717-37.717,58.49-87.865,58.49-141.206C399.387,146.355,378.613,96.207,340.896,58.489 z M77.457,199.694c0-67.401,54.835-122.236,122.236-122.236S321.93,132.293,321.93,199.694s-54.836,122.237-122.237,122.237 S77.457,267.096,77.457,199.694z M328.061,328.063c-34.289,34.287-79.877,53.17-128.368,53.17v-41.147 c77.413,0,140.389-62.979,140.389-140.391c0-77.412-62.979-140.391-140.389-140.391c-4.593,0-9.134,0.229-13.615,0.662V18.655 c4.508-0.332,9.049-0.5,13.615-0.5c48.491,0,94.079,18.883,128.368,53.171c34.289,34.289,53.172,79.878,53.172,128.368 C381.232,248.187,362.35,293.776,328.061,328.063z' })
		                  ),
		                  React.createElement('g', null),
		                  React.createElement('g', null),
		                  React.createElement('g', null),
		                  React.createElement('g', null),
		                  React.createElement('g', null),
		                  React.createElement('g', null),
		                  React.createElement('g', null),
		                  React.createElement('g', null),
		                  React.createElement('g', null),
		                  React.createElement('g', null),
		                  React.createElement('g', null),
		                  React.createElement('g', null),
		                  React.createElement('g', null),
		                  React.createElement('g', null),
		                  React.createElement('g', null)
		                ),
		                React.createElement(
		                  'symbol',
		                  { id: 'toast-success', viewBox: '0 0 24 24' },
		                  React.createElement(
		                    'g',
		                    { id: 'check' },
		                    React.createElement('polygon', { points: '9,16.2 4.8,12 3.4,13.4 9,19 21,7 19.6,5.6 ' })
		                  )
		                )
		              ),
		              React.createElement(
		                'symbol',
		                { id: 'list-minus-circle', viewBox: '0 0 24 24' },
		                React.createElement(
		                  'g',
		                  { id: 'unknown-4' },
		                  React.createElement('path', { d: 'M12,2C6.5,2,2,6.5,2,12s4.5,10,10,10c5.5,0,10-4.5,10-10C22,6.5,17.5,2,12,2z M12,20c-4.4,0-8-3.6-8-8c0-4.4,3.6-8,8-8c4.4,0,8,3.6,8,8C20,16.4,16.4,20,12,20z M8,13h8v-2H8V13z' })
		                )
		              ),
		              React.createElement(
		                'symbol',
		                { id: 'note-message', viewBox: '0 0 16 16' },
		                React.createElement(
		                  'g',
		                  { className: 'transform-group' },
		                  React.createElement(
		                    'g',
		                    { transform: 'scale(0.015625, 0.015625)' },
		                    React.createElement('path', { d: 'M511.736499 64.4775c-246.457158 0-447.121364 200.541409-447.121364 447.121364 0 246.580978 200.63146 447.088618 447.121364 447.088618 246.553349 0 447.121364-200.506617 447.121364-447.088618C958.858886 265.018909 758.316453 64.4775 511.736499 64.4775L511.736499 64.4775zM511.736499 902.715703c-215.72625 0-391.178237-175.48064-391.178237-391.149585 0-215.790718 175.450964-391.208936 391.178237-391.208936 215.72625 0 391.214053 175.417195 391.214053 391.208936C902.977157 727.233016 727.463772 902.715703 511.736499 902.715703L511.736499 902.715703zM552.385291 451.746708l-81.297584 0c-11.235902 0-20.319791 9.106402-20.319791 20.319791l0 43.073005 0 14.3488 0 189.726086c0 11.213389 9.091052 20.319791 20.320814 20.319791l81.297584 0c11.234879 0 20.319791-9.106402 20.319791-20.319791L572.706105 529.488303l0-14.3488 0-43.073005C572.706105 460.852086 563.615053 451.746708 552.385291 451.746708zM447.352119 348.014158c0 35.558867 28.826536 64.385403 64.384379 64.385403 35.55989 0 64.386426-28.826536 64.386426-64.385403s-28.826536-64.385403-64.386426-64.385403C476.177632 283.628756 447.352119 312.455291 447.352119 348.014158L447.352119 348.014158z' })
		                  )
		                )
		              ),
		              React.createElement(
		                'symbol',
		                { id: 'note-warning', viewBox: '0 0 16 16' },
		                React.createElement(
		                  'g',
		                  { className: 'transform-group' },
		                  React.createElement(
		                    'g',
		                    { transform: 'scale(0.015625, 0.015625)' },
		                    React.createElement('path', { d: 'M512 764.224c-25.408 0-46.016-20.544-46.016-45.952 0-25.408 20.608-46.016 46.016-46.016s46.016 20.544 46.016 46.016C558.016 743.68 537.408 764.224 512 764.224L512 764.224 512 764.224zM512 764.224M512 611.648c-21.248 0-38.528-17.28-38.528-38.528L473.472 284.992c0-21.248 17.28-38.528 38.528-38.528s38.528 17.28 38.528 38.528l0 288.128C550.528 594.368 533.248 611.648 512 611.648L512 611.648zM512 611.648M512 64C264.576 64 64 264.576 64 512s200.576 448 448 448 448-200.576 448-448S759.424 64 512 64L512 64zM512 900.224c-214.08 0-388.288-174.144-388.288-388.224S297.92 123.776 512 123.776 900.288 297.856 900.288 512 726.08 900.224 512 900.224L512 900.224zM512 900.224' })
		                  )
		                )
		              ),
		              React.createElement(
		                'symbol',
		                { id: 'rate-star', viewBox: '0 0 46.354 46.354' },
		                React.createElement(
		                  'g',
		                  null,
		                  React.createElement('path', { d: 'M21.57,2.049c0.303-0.612,0.927-1,1.609-1c0.682,0,1.307,0.388,1.609,1l5.771,11.695c0.261,0.529,0.767,0.896,1.352,0.981 L44.817,16.6c0.677,0.098,1.237,0.572,1.448,1.221c0.211,0.649,0.035,1.363-0.454,1.839l-9.338,9.104 c-0.423,0.412-0.616,1.006-0.517,1.588l2.204,12.855c0.114,0.674-0.161,1.354-0.715,1.756c-0.553,0.4-1.284,0.453-1.89,0.137 l-11.544-6.07c-0.522-0.275-1.147-0.275-1.67,0l-11.544,6.069c-0.604,0.317-1.337,0.265-1.89-0.136 c-0.553-0.401-0.829-1.082-0.714-1.756l2.204-12.855c0.1-0.582-0.094-1.176-0.517-1.588L0.542,19.66 c-0.489-0.477-0.665-1.19-0.454-1.839c0.211-0.649,0.772-1.123,1.449-1.221l12.908-1.875c0.584-0.085,1.09-0.452,1.351-0.982 L21.57,2.049z' })
		                )
		              ),
		              React.createElement(
		                'symbol',
		                { id: 'toast-error', viewBox: '0 0 24 24' },
		                React.createElement(
		                  'g',
		                  { id: 'clear' },
		                  React.createElement('polygon', { points: '19,6.4 17.6,5 12,10.6 6.4,5 5,6.4 10.6,12 5,17.6 6.4,19 12,13.4 17.6,19 19,17.6 13.4,12 ' })
		                )
		              ),
		              React.createElement(
		                'symbol',
		                { id: 'toast-fail', viewBox: '0 0 108.364 108.364' },
		                React.createElement(
		                  'g',
		                  null,
		                  React.createElement(
		                    'g',
		                    null,
		                    React.createElement('path', { d: 'M54.182,0C24.258,0,0,24.258,0,54.182c0,29.924,24.258,54.183,54.182,54.183c29.923,0,54.182-24.259,54.182-54.183 C108.364,24.258,84.105,0,54.182,0z M68.713,33.622c3.424,0,6.201,2.777,6.201,6.201c0,3.426-2.777,6.203-6.201,6.203 c-3.423,0-6.203-2.777-6.203-6.203C62.51,36.399,65.29,33.622,68.713,33.622z M40.594,33.622c3.423,0,6.2,2.777,6.2,6.201 c0,3.426-2.777,6.203-6.2,6.203c-3.423,0-6.201-2.777-6.201-6.203C34.393,36.399,37.17,33.622,40.594,33.622z M76.607,79.098 c-1.521,0.66-3.286-0.041-3.944-1.562c-2.894-6.689-9.731-11.012-17.421-11.012c-7.868,0-14.747,4.32-17.523,11.005 c-0.479,1.153-1.596,1.85-2.771,1.85c-0.384,0-0.773-0.073-1.15-0.229c-1.53-0.637-2.255-2.393-1.62-3.922 c3.71-8.932,12.764-14.703,23.064-14.703c10.084,0,19.084,5.742,22.928,14.63C78.828,76.674,78.128,78.439,76.607,79.098z' })
		                  )
		                ),
		                React.createElement('g', null),
		                React.createElement('g', null),
		                React.createElement('g', null),
		                React.createElement('g', null),
		                React.createElement('g', null),
		                React.createElement('g', null),
		                React.createElement('g', null),
		                React.createElement('g', null),
		                React.createElement('g', null),
		                React.createElement('g', null),
		                React.createElement('g', null),
		                React.createElement('g', null),
		                React.createElement('g', null),
		                React.createElement('g', null),
		                React.createElement('g', null)
		              ),
		              React.createElement(
		                'symbol',
		                { id: 'toast-loading', viewBox: '0 0 399.389 399.389' },
		                React.createElement(
		                  'g',
		                  null,
		                  React.createElement('path', { d: 'M340.896,58.489C303.18,20.773,253.031,0.001,199.693,0.001c-53.34,0-103.487,20.771-141.204,58.488 C20.772,96.207,0,146.355,0,199.694c0,53.34,20.772,103.489,58.49,141.206c37.717,37.717,87.864,58.488,141.204,58.488 c53.339,0,103.486-20.771,141.205-58.488c37.717-37.717,58.49-87.865,58.49-141.206C399.387,146.355,378.613,96.207,340.896,58.489 z M77.457,199.694c0-67.401,54.835-122.236,122.236-122.236S321.93,132.293,321.93,199.694s-54.836,122.237-122.237,122.237 S77.457,267.096,77.457,199.694z M328.061,328.063c-34.289,34.287-79.877,53.17-128.368,53.17v-41.147 c77.413,0,140.389-62.979,140.389-140.391c0-77.412-62.979-140.391-140.389-140.391c-4.593,0-9.134,0.229-13.615,0.662V18.655 c4.508-0.332,9.049-0.5,13.615-0.5c48.491,0,94.079,18.883,128.368,53.171c34.289,34.289,53.172,79.878,53.172,128.368 C381.232,248.187,362.35,293.776,328.061,328.063z' })
		                ),
		                React.createElement('g', null),
		                React.createElement('g', null),
		                React.createElement('g', null),
		                React.createElement('g', null),
		                React.createElement('g', null),
		                React.createElement('g', null),
		                React.createElement('g', null),
		                React.createElement('g', null),
		                React.createElement('g', null),
		                React.createElement('g', null),
		                React.createElement('g', null),
		                React.createElement('g', null),
		                React.createElement('g', null),
		                React.createElement('g', null),
		                React.createElement('g', null)
		              ),
		              React.createElement(
		                'symbol',
		                { id: 'toast-success', viewBox: '0 0 24 24' },
		                React.createElement(
		                  'g',
		                  { id: 'check' },
		                  React.createElement('polygon', { points: '9,16.2 4.8,12 3.4,13.4 9,19 21,7 19.6,5.6 ' })
		                )
		              )
		            ),
		            React.createElement(
		              'symbol',
		              { id: 'list-minus-circle', viewBox: '0 0 24 24' },
		              React.createElement(
		                'g',
		                { id: 'unknown-4' },
		                React.createElement('path', { d: 'M12,2C6.5,2,2,6.5,2,12s4.5,10,10,10c5.5,0,10-4.5,10-10C22,6.5,17.5,2,12,2z M12,20c-4.4,0-8-3.6-8-8c0-4.4,3.6-8,8-8c4.4,0,8,3.6,8,8C20,16.4,16.4,20,12,20z M8,13h8v-2H8V13z' })
		              )
		            ),
		            React.createElement(
		              'symbol',
		              { id: 'note-message', viewBox: '0 0 16 16' },
		              React.createElement(
		                'g',
		                { className: 'transform-group' },
		                React.createElement(
		                  'g',
		                  { transform: 'scale(0.015625, 0.015625)' },
		                  React.createElement('path', { d: 'M511.736499 64.4775c-246.457158 0-447.121364 200.541409-447.121364 447.121364 0 246.580978 200.63146 447.088618 447.121364 447.088618 246.553349 0 447.121364-200.506617 447.121364-447.088618C958.858886 265.018909 758.316453 64.4775 511.736499 64.4775L511.736499 64.4775zM511.736499 902.715703c-215.72625 0-391.178237-175.48064-391.178237-391.149585 0-215.790718 175.450964-391.208936 391.178237-391.208936 215.72625 0 391.214053 175.417195 391.214053 391.208936C902.977157 727.233016 727.463772 902.715703 511.736499 902.715703L511.736499 902.715703zM552.385291 451.746708l-81.297584 0c-11.235902 0-20.319791 9.106402-20.319791 20.319791l0 43.073005 0 14.3488 0 189.726086c0 11.213389 9.091052 20.319791 20.320814 20.319791l81.297584 0c11.234879 0 20.319791-9.106402 20.319791-20.319791L572.706105 529.488303l0-14.3488 0-43.073005C572.706105 460.852086 563.615053 451.746708 552.385291 451.746708zM447.352119 348.014158c0 35.558867 28.826536 64.385403 64.384379 64.385403 35.55989 0 64.386426-28.826536 64.386426-64.385403s-28.826536-64.385403-64.386426-64.385403C476.177632 283.628756 447.352119 312.455291 447.352119 348.014158L447.352119 348.014158z' })
		                )
		              )
		            ),
		            React.createElement(
		              'symbol',
		              { id: 'note-warning', viewBox: '0 0 16 16' },
		              React.createElement(
		                'g',
		                { className: 'transform-group' },
		                React.createElement(
		                  'g',
		                  { transform: 'scale(0.015625, 0.015625)' },
		                  React.createElement('path', { d: 'M512 764.224c-25.408 0-46.016-20.544-46.016-45.952 0-25.408 20.608-46.016 46.016-46.016s46.016 20.544 46.016 46.016C558.016 743.68 537.408 764.224 512 764.224L512 764.224 512 764.224zM512 764.224M512 611.648c-21.248 0-38.528-17.28-38.528-38.528L473.472 284.992c0-21.248 17.28-38.528 38.528-38.528s38.528 17.28 38.528 38.528l0 288.128C550.528 594.368 533.248 611.648 512 611.648L512 611.648zM512 611.648M512 64C264.576 64 64 264.576 64 512s200.576 448 448 448 448-200.576 448-448S759.424 64 512 64L512 64zM512 900.224c-214.08 0-388.288-174.144-388.288-388.224S297.92 123.776 512 123.776 900.288 297.856 900.288 512 726.08 900.224 512 900.224L512 900.224zM512 900.224' })
		                )
		              )
		            ),
		            React.createElement(
		              'symbol',
		              { id: 'rate-star', viewBox: '0 0 46.354 46.354' },
		              React.createElement(
		                'g',
		                null,
		                React.createElement('path', { d: 'M21.57,2.049c0.303-0.612,0.927-1,1.609-1c0.682,0,1.307,0.388,1.609,1l5.771,11.695c0.261,0.529,0.767,0.896,1.352,0.981 L44.817,16.6c0.677,0.098,1.237,0.572,1.448,1.221c0.211,0.649,0.035,1.363-0.454,1.839l-9.338,9.104 c-0.423,0.412-0.616,1.006-0.517,1.588l2.204,12.855c0.114,0.674-0.161,1.354-0.715,1.756c-0.553,0.4-1.284,0.453-1.89,0.137 l-11.544-6.07c-0.522-0.275-1.147-0.275-1.67,0l-11.544,6.069c-0.604,0.317-1.337,0.265-1.89-0.136 c-0.553-0.401-0.829-1.082-0.714-1.756l2.204-12.855c0.1-0.582-0.094-1.176-0.517-1.588L0.542,19.66 c-0.489-0.477-0.665-1.19-0.454-1.839c0.211-0.649,0.772-1.123,1.449-1.221l12.908-1.875c0.584-0.085,1.09-0.452,1.351-0.982 L21.57,2.049z' })
		              )
		            ),
		            React.createElement(
		              'symbol',
		              { id: 'toast-error', viewBox: '0 0 24 24' },
		              React.createElement(
		                'g',
		                { id: 'clear' },
		                React.createElement('polygon', { points: '19,6.4 17.6,5 12,10.6 6.4,5 5,6.4 10.6,12 5,17.6 6.4,19 12,13.4 17.6,19 19,17.6 13.4,12 ' })
		              )
		            ),
		            React.createElement(
		              'symbol',
		              { id: 'toast-fail', viewBox: '0 0 108.364 108.364' },
		              React.createElement(
		                'g',
		                null,
		                React.createElement(
		                  'g',
		                  null,
		                  React.createElement('path', { d: 'M54.182,0C24.258,0,0,24.258,0,54.182c0,29.924,24.258,54.183,54.182,54.183c29.923,0,54.182-24.259,54.182-54.183 C108.364,24.258,84.105,0,54.182,0z M68.713,33.622c3.424,0,6.201,2.777,6.201,6.201c0,3.426-2.777,6.203-6.201,6.203 c-3.423,0-6.203-2.777-6.203-6.203C62.51,36.399,65.29,33.622,68.713,33.622z M40.594,33.622c3.423,0,6.2,2.777,6.2,6.201 c0,3.426-2.777,6.203-6.2,6.203c-3.423,0-6.201-2.777-6.201-6.203C34.393,36.399,37.17,33.622,40.594,33.622z M76.607,79.098 c-1.521,0.66-3.286-0.041-3.944-1.562c-2.894-6.689-9.731-11.012-17.421-11.012c-7.868,0-14.747,4.32-17.523,11.005 c-0.479,1.153-1.596,1.85-2.771,1.85c-0.384,0-0.773-0.073-1.15-0.229c-1.53-0.637-2.255-2.393-1.62-3.922 c3.71-8.932,12.764-14.703,23.064-14.703c10.084,0,19.084,5.742,22.928,14.63C78.828,76.674,78.128,78.439,76.607,79.098z' })
		                )
		              ),
		              React.createElement('g', null),
		              React.createElement('g', null),
		              React.createElement('g', null),
		              React.createElement('g', null),
		              React.createElement('g', null),
		              React.createElement('g', null),
		              React.createElement('g', null),
		              React.createElement('g', null),
		              React.createElement('g', null),
		              React.createElement('g', null),
		              React.createElement('g', null),
		              React.createElement('g', null),
		              React.createElement('g', null),
		              React.createElement('g', null),
		              React.createElement('g', null)
		            ),
		            React.createElement(
		              'symbol',
		              { id: 'toast-loading', viewBox: '0 0 399.389 399.389' },
		              React.createElement(
		                'g',
		                null,
		                React.createElement('path', { d: 'M340.896,58.489C303.18,20.773,253.031,0.001,199.693,0.001c-53.34,0-103.487,20.771-141.204,58.488 C20.772,96.207,0,146.355,0,199.694c0,53.34,20.772,103.489,58.49,141.206c37.717,37.717,87.864,58.488,141.204,58.488 c53.339,0,103.486-20.771,141.205-58.488c37.717-37.717,58.49-87.865,58.49-141.206C399.387,146.355,378.613,96.207,340.896,58.489 z M77.457,199.694c0-67.401,54.835-122.236,122.236-122.236S321.93,132.293,321.93,199.694s-54.836,122.237-122.237,122.237 S77.457,267.096,77.457,199.694z M328.061,328.063c-34.289,34.287-79.877,53.17-128.368,53.17v-41.147 c77.413,0,140.389-62.979,140.389-140.391c0-77.412-62.979-140.391-140.389-140.391c-4.593,0-9.134,0.229-13.615,0.662V18.655 c4.508-0.332,9.049-0.5,13.615-0.5c48.491,0,94.079,18.883,128.368,53.171c34.289,34.289,53.172,79.878,53.172,128.368 C381.232,248.187,362.35,293.776,328.061,328.063z' })
		              ),
		              React.createElement('g', null),
		              React.createElement('g', null),
		              React.createElement('g', null),
		              React.createElement('g', null),
		              React.createElement('g', null),
		              React.createElement('g', null),
		              React.createElement('g', null),
		              React.createElement('g', null),
		              React.createElement('g', null),
		              React.createElement('g', null),
		              React.createElement('g', null),
		              React.createElement('g', null),
		              React.createElement('g', null),
		              React.createElement('g', null),
		              React.createElement('g', null)
		            ),
		            React.createElement(
		              'symbol',
		              { id: 'toast-success', viewBox: '0 0 24 24' },
		              React.createElement(
		                'g',
		                { id: 'check' },
		                React.createElement('polygon', { points: '9,16.2 4.8,12 3.4,13.4 9,19 21,7 19.6,5.6 ' })
		              )
		            )
		          ),
		          React.createElement(
		            'symbol',
		            { id: 'list-minus-circle', viewBox: '0 0 24 24' },
		            React.createElement(
		              'g',
		              { id: 'unknown-4' },
		              React.createElement('path', { d: 'M12,2C6.5,2,2,6.5,2,12s4.5,10,10,10c5.5,0,10-4.5,10-10C22,6.5,17.5,2,12,2z M12,20c-4.4,0-8-3.6-8-8c0-4.4,3.6-8,8-8c4.4,0,8,3.6,8,8C20,16.4,16.4,20,12,20z M8,13h8v-2H8V13z' })
		            )
		          ),
		          React.createElement(
		            'symbol',
		            { id: 'note-message', viewBox: '0 0 16 16' },
		            React.createElement(
		              'g',
		              { className: 'transform-group' },
		              React.createElement(
		                'g',
		                { transform: 'scale(0.015625, 0.015625)' },
		                React.createElement('path', { d: 'M511.736499 64.4775c-246.457158 0-447.121364 200.541409-447.121364 447.121364 0 246.580978 200.63146 447.088618 447.121364 447.088618 246.553349 0 447.121364-200.506617 447.121364-447.088618C958.858886 265.018909 758.316453 64.4775 511.736499 64.4775L511.736499 64.4775zM511.736499 902.715703c-215.72625 0-391.178237-175.48064-391.178237-391.149585 0-215.790718 175.450964-391.208936 391.178237-391.208936 215.72625 0 391.214053 175.417195 391.214053 391.208936C902.977157 727.233016 727.463772 902.715703 511.736499 902.715703L511.736499 902.715703zM552.385291 451.746708l-81.297584 0c-11.235902 0-20.319791 9.106402-20.319791 20.319791l0 43.073005 0 14.3488 0 189.726086c0 11.213389 9.091052 20.319791 20.320814 20.319791l81.297584 0c11.234879 0 20.319791-9.106402 20.319791-20.319791L572.706105 529.488303l0-14.3488 0-43.073005C572.706105 460.852086 563.615053 451.746708 552.385291 451.746708zM447.352119 348.014158c0 35.558867 28.826536 64.385403 64.384379 64.385403 35.55989 0 64.386426-28.826536 64.386426-64.385403s-28.826536-64.385403-64.386426-64.385403C476.177632 283.628756 447.352119 312.455291 447.352119 348.014158L447.352119 348.014158z' })
		              )
		            )
		          ),
		          React.createElement(
		            'symbol',
		            { id: 'note-warning', viewBox: '0 0 16 16' },
		            React.createElement(
		              'g',
		              { className: 'transform-group' },
		              React.createElement(
		                'g',
		                { transform: 'scale(0.015625, 0.015625)' },
		                React.createElement('path', { d: 'M512 764.224c-25.408 0-46.016-20.544-46.016-45.952 0-25.408 20.608-46.016 46.016-46.016s46.016 20.544 46.016 46.016C558.016 743.68 537.408 764.224 512 764.224L512 764.224 512 764.224zM512 764.224M512 611.648c-21.248 0-38.528-17.28-38.528-38.528L473.472 284.992c0-21.248 17.28-38.528 38.528-38.528s38.528 17.28 38.528 38.528l0 288.128C550.528 594.368 533.248 611.648 512 611.648L512 611.648zM512 611.648M512 64C264.576 64 64 264.576 64 512s200.576 448 448 448 448-200.576 448-448S759.424 64 512 64L512 64zM512 900.224c-214.08 0-388.288-174.144-388.288-388.224S297.92 123.776 512 123.776 900.288 297.856 900.288 512 726.08 900.224 512 900.224L512 900.224zM512 900.224' })
		              )
		            )
		          ),
		          React.createElement(
		            'symbol',
		            { id: 'rate-star', viewBox: '0 0 46.354 46.354' },
		            React.createElement(
		              'g',
		              null,
		              React.createElement('path', { d: 'M21.57,2.049c0.303-0.612,0.927-1,1.609-1c0.682,0,1.307,0.388,1.609,1l5.771,11.695c0.261,0.529,0.767,0.896,1.352,0.981 L44.817,16.6c0.677,0.098,1.237,0.572,1.448,1.221c0.211,0.649,0.035,1.363-0.454,1.839l-9.338,9.104 c-0.423,0.412-0.616,1.006-0.517,1.588l2.204,12.855c0.114,0.674-0.161,1.354-0.715,1.756c-0.553,0.4-1.284,0.453-1.89,0.137 l-11.544-6.07c-0.522-0.275-1.147-0.275-1.67,0l-11.544,6.069c-0.604,0.317-1.337,0.265-1.89-0.136 c-0.553-0.401-0.829-1.082-0.714-1.756l2.204-12.855c0.1-0.582-0.094-1.176-0.517-1.588L0.542,19.66 c-0.489-0.477-0.665-1.19-0.454-1.839c0.211-0.649,0.772-1.123,1.449-1.221l12.908-1.875c0.584-0.085,1.09-0.452,1.351-0.982 L21.57,2.049z' })
		            )
		          ),
		          React.createElement(
		            'symbol',
		            { id: 'toast-error', viewBox: '0 0 24 24' },
		            React.createElement(
		              'g',
		              { id: 'clear' },
		              React.createElement('polygon', { points: '19,6.4 17.6,5 12,10.6 6.4,5 5,6.4 10.6,12 5,17.6 6.4,19 12,13.4 17.6,19 19,17.6 13.4,12 ' })
		            )
		          ),
		          React.createElement(
		            'symbol',
		            { id: 'toast-fail', viewBox: '0 0 108.364 108.364' },
		            React.createElement(
		              'g',
		              null,
		              React.createElement(
		                'g',
		                null,
		                React.createElement('path', { d: 'M54.182,0C24.258,0,0,24.258,0,54.182c0,29.924,24.258,54.183,54.182,54.183c29.923,0,54.182-24.259,54.182-54.183 C108.364,24.258,84.105,0,54.182,0z M68.713,33.622c3.424,0,6.201,2.777,6.201,6.201c0,3.426-2.777,6.203-6.201,6.203 c-3.423,0-6.203-2.777-6.203-6.203C62.51,36.399,65.29,33.622,68.713,33.622z M40.594,33.622c3.423,0,6.2,2.777,6.2,6.201 c0,3.426-2.777,6.203-6.2,6.203c-3.423,0-6.201-2.777-6.201-6.203C34.393,36.399,37.17,33.622,40.594,33.622z M76.607,79.098 c-1.521,0.66-3.286-0.041-3.944-1.562c-2.894-6.689-9.731-11.012-17.421-11.012c-7.868,0-14.747,4.32-17.523,11.005 c-0.479,1.153-1.596,1.85-2.771,1.85c-0.384,0-0.773-0.073-1.15-0.229c-1.53-0.637-2.255-2.393-1.62-3.922 c3.71-8.932,12.764-14.703,23.064-14.703c10.084,0,19.084,5.742,22.928,14.63C78.828,76.674,78.128,78.439,76.607,79.098z' })
		              )
		            ),
		            React.createElement('g', null),
		            React.createElement('g', null),
		            React.createElement('g', null),
		            React.createElement('g', null),
		            React.createElement('g', null),
		            React.createElement('g', null),
		            React.createElement('g', null),
		            React.createElement('g', null),
		            React.createElement('g', null),
		            React.createElement('g', null),
		            React.createElement('g', null),
		            React.createElement('g', null),
		            React.createElement('g', null),
		            React.createElement('g', null),
		            React.createElement('g', null)
		          ),
		          React.createElement(
		            'symbol',
		            { id: 'toast-loading', viewBox: '0 0 399.389 399.389' },
		            React.createElement(
		              'g',
		              null,
		              React.createElement('path', { d: 'M340.896,58.489C303.18,20.773,253.031,0.001,199.693,0.001c-53.34,0-103.487,20.771-141.204,58.488 C20.772,96.207,0,146.355,0,199.694c0,53.34,20.772,103.489,58.49,141.206c37.717,37.717,87.864,58.488,141.204,58.488 c53.339,0,103.486-20.771,141.205-58.488c37.717-37.717,58.49-87.865,58.49-141.206C399.387,146.355,378.613,96.207,340.896,58.489 z M77.457,199.694c0-67.401,54.835-122.236,122.236-122.236S321.93,132.293,321.93,199.694s-54.836,122.237-122.237,122.237 S77.457,267.096,77.457,199.694z M328.061,328.063c-34.289,34.287-79.877,53.17-128.368,53.17v-41.147 c77.413,0,140.389-62.979,140.389-140.391c0-77.412-62.979-140.391-140.389-140.391c-4.593,0-9.134,0.229-13.615,0.662V18.655 c4.508-0.332,9.049-0.5,13.615-0.5c48.491,0,94.079,18.883,128.368,53.171c34.289,34.289,53.172,79.878,53.172,128.368 C381.232,248.187,362.35,293.776,328.061,328.063z' })
		            ),
		            React.createElement('g', null),
		            React.createElement('g', null),
		            React.createElement('g', null),
		            React.createElement('g', null),
		            React.createElement('g', null),
		            React.createElement('g', null),
		            React.createElement('g', null),
		            React.createElement('g', null),
		            React.createElement('g', null),
		            React.createElement('g', null),
		            React.createElement('g', null),
		            React.createElement('g', null),
		            React.createElement('g', null),
		            React.createElement('g', null),
		            React.createElement('g', null)
		          ),
		          React.createElement(
		            'symbol',
		            { id: 'toast-success', viewBox: '0 0 24 24' },
		            React.createElement(
		              'g',
		              { id: 'check' },
		              React.createElement('polygon', { points: '9,16.2 4.8,12 3.4,13.4 9,19 21,7 19.6,5.6 ' })
		            )
		          )
		        ),
		        React.createElement(
		          'symbol',
		          { id: 'list-minus-circle', viewBox: '0 0 24 24' },
		          React.createElement(
		            'g',
		            { id: 'unknown-4' },
		            React.createElement('path', { d: 'M12,2C6.5,2,2,6.5,2,12s4.5,10,10,10c5.5,0,10-4.5,10-10C22,6.5,17.5,2,12,2z M12,20c-4.4,0-8-3.6-8-8c0-4.4,3.6-8,8-8c4.4,0,8,3.6,8,8C20,16.4,16.4,20,12,20z M8,13h8v-2H8V13z' })
		          )
		        ),
		        React.createElement(
		          'symbol',
		          { id: 'note-message', viewBox: '0 0 16 16' },
		          React.createElement(
		            'g',
		            { className: 'transform-group' },
		            React.createElement(
		              'g',
		              { transform: 'scale(0.015625, 0.015625)' },
		              React.createElement('path', { d: 'M511.736499 64.4775c-246.457158 0-447.121364 200.541409-447.121364 447.121364 0 246.580978 200.63146 447.088618 447.121364 447.088618 246.553349 0 447.121364-200.506617 447.121364-447.088618C958.858886 265.018909 758.316453 64.4775 511.736499 64.4775L511.736499 64.4775zM511.736499 902.715703c-215.72625 0-391.178237-175.48064-391.178237-391.149585 0-215.790718 175.450964-391.208936 391.178237-391.208936 215.72625 0 391.214053 175.417195 391.214053 391.208936C902.977157 727.233016 727.463772 902.715703 511.736499 902.715703L511.736499 902.715703zM552.385291 451.746708l-81.297584 0c-11.235902 0-20.319791 9.106402-20.319791 20.319791l0 43.073005 0 14.3488 0 189.726086c0 11.213389 9.091052 20.319791 20.320814 20.319791l81.297584 0c11.234879 0 20.319791-9.106402 20.319791-20.319791L572.706105 529.488303l0-14.3488 0-43.073005C572.706105 460.852086 563.615053 451.746708 552.385291 451.746708zM447.352119 348.014158c0 35.558867 28.826536 64.385403 64.384379 64.385403 35.55989 0 64.386426-28.826536 64.386426-64.385403s-28.826536-64.385403-64.386426-64.385403C476.177632 283.628756 447.352119 312.455291 447.352119 348.014158L447.352119 348.014158z' })
		            )
		          )
		        ),
		        React.createElement(
		          'symbol',
		          { id: 'note-warning', viewBox: '0 0 16 16' },
		          React.createElement(
		            'g',
		            { className: 'transform-group' },
		            React.createElement(
		              'g',
		              { transform: 'scale(0.015625, 0.015625)' },
		              React.createElement('path', { d: 'M512 764.224c-25.408 0-46.016-20.544-46.016-45.952 0-25.408 20.608-46.016 46.016-46.016s46.016 20.544 46.016 46.016C558.016 743.68 537.408 764.224 512 764.224L512 764.224 512 764.224zM512 764.224M512 611.648c-21.248 0-38.528-17.28-38.528-38.528L473.472 284.992c0-21.248 17.28-38.528 38.528-38.528s38.528 17.28 38.528 38.528l0 288.128C550.528 594.368 533.248 611.648 512 611.648L512 611.648zM512 611.648M512 64C264.576 64 64 264.576 64 512s200.576 448 448 448 448-200.576 448-448S759.424 64 512 64L512 64zM512 900.224c-214.08 0-388.288-174.144-388.288-388.224S297.92 123.776 512 123.776 900.288 297.856 900.288 512 726.08 900.224 512 900.224L512 900.224zM512 900.224' })
		            )
		          )
		        ),
		        React.createElement(
		          'symbol',
		          { id: 'rate-star', viewBox: '0 0 46.354 46.354' },
		          React.createElement(
		            'g',
		            null,
		            React.createElement('path', { d: 'M21.57,2.049c0.303-0.612,0.927-1,1.609-1c0.682,0,1.307,0.388,1.609,1l5.771,11.695c0.261,0.529,0.767,0.896,1.352,0.981 L44.817,16.6c0.677,0.098,1.237,0.572,1.448,1.221c0.211,0.649,0.035,1.363-0.454,1.839l-9.338,9.104 c-0.423,0.412-0.616,1.006-0.517,1.588l2.204,12.855c0.114,0.674-0.161,1.354-0.715,1.756c-0.553,0.4-1.284,0.453-1.89,0.137 l-11.544-6.07c-0.522-0.275-1.147-0.275-1.67,0l-11.544,6.069c-0.604,0.317-1.337,0.265-1.89-0.136 c-0.553-0.401-0.829-1.082-0.714-1.756l2.204-12.855c0.1-0.582-0.094-1.176-0.517-1.588L0.542,19.66 c-0.489-0.477-0.665-1.19-0.454-1.839c0.211-0.649,0.772-1.123,1.449-1.221l12.908-1.875c0.584-0.085,1.09-0.452,1.351-0.982 L21.57,2.049z' })
		          )
		        ),
		        React.createElement(
		          'symbol',
		          { id: 'toast-error', viewBox: '0 0 24 24' },
		          React.createElement(
		            'g',
		            { id: 'clear' },
		            React.createElement('polygon', { points: '19,6.4 17.6,5 12,10.6 6.4,5 5,6.4 10.6,12 5,17.6 6.4,19 12,13.4 17.6,19 19,17.6 13.4,12 ' })
		          )
		        ),
		        React.createElement(
		          'symbol',
		          { id: 'toast-fail', viewBox: '0 0 108.364 108.364' },
		          React.createElement(
		            'g',
		            null,
		            React.createElement(
		              'g',
		              null,
		              React.createElement('path', { d: 'M54.182,0C24.258,0,0,24.258,0,54.182c0,29.924,24.258,54.183,54.182,54.183c29.923,0,54.182-24.259,54.182-54.183 C108.364,24.258,84.105,0,54.182,0z M68.713,33.622c3.424,0,6.201,2.777,6.201,6.201c0,3.426-2.777,6.203-6.201,6.203 c-3.423,0-6.203-2.777-6.203-6.203C62.51,36.399,65.29,33.622,68.713,33.622z M40.594,33.622c3.423,0,6.2,2.777,6.2,6.201 c0,3.426-2.777,6.203-6.2,6.203c-3.423,0-6.201-2.777-6.201-6.203C34.393,36.399,37.17,33.622,40.594,33.622z M76.607,79.098 c-1.521,0.66-3.286-0.041-3.944-1.562c-2.894-6.689-9.731-11.012-17.421-11.012c-7.868,0-14.747,4.32-17.523,11.005 c-0.479,1.153-1.596,1.85-2.771,1.85c-0.384,0-0.773-0.073-1.15-0.229c-1.53-0.637-2.255-2.393-1.62-3.922 c3.71-8.932,12.764-14.703,23.064-14.703c10.084,0,19.084,5.742,22.928,14.63C78.828,76.674,78.128,78.439,76.607,79.098z' })
		            )
		          ),
		          React.createElement('g', null),
		          React.createElement('g', null),
		          React.createElement('g', null),
		          React.createElement('g', null),
		          React.createElement('g', null),
		          React.createElement('g', null),
		          React.createElement('g', null),
		          React.createElement('g', null),
		          React.createElement('g', null),
		          React.createElement('g', null),
		          React.createElement('g', null),
		          React.createElement('g', null),
		          React.createElement('g', null),
		          React.createElement('g', null),
		          React.createElement('g', null)
		        ),
		        React.createElement(
		          'symbol',
		          { id: 'toast-loading', viewBox: '0 0 399.389 399.389' },
		          React.createElement(
		            'g',
		            null,
		            React.createElement('path', { d: 'M340.896,58.489C303.18,20.773,253.031,0.001,199.693,0.001c-53.34,0-103.487,20.771-141.204,58.488 C20.772,96.207,0,146.355,0,199.694c0,53.34,20.772,103.489,58.49,141.206c37.717,37.717,87.864,58.488,141.204,58.488 c53.339,0,103.486-20.771,141.205-58.488c37.717-37.717,58.49-87.865,58.49-141.206C399.387,146.355,378.613,96.207,340.896,58.489 z M77.457,199.694c0-67.401,54.835-122.236,122.236-122.236S321.93,132.293,321.93,199.694s-54.836,122.237-122.237,122.237 S77.457,267.096,77.457,199.694z M328.061,328.063c-34.289,34.287-79.877,53.17-128.368,53.17v-41.147 c77.413,0,140.389-62.979,140.389-140.391c0-77.412-62.979-140.391-140.389-140.391c-4.593,0-9.134,0.229-13.615,0.662V18.655 c4.508-0.332,9.049-0.5,13.615-0.5c48.491,0,94.079,18.883,128.368,53.171c34.289,34.289,53.172,79.878,53.172,128.368 C381.232,248.187,362.35,293.776,328.061,328.063z' })
		          ),
		          React.createElement('g', null),
		          React.createElement('g', null),
		          React.createElement('g', null),
		          React.createElement('g', null),
		          React.createElement('g', null),
		          React.createElement('g', null),
		          React.createElement('g', null),
		          React.createElement('g', null),
		          React.createElement('g', null),
		          React.createElement('g', null),
		          React.createElement('g', null),
		          React.createElement('g', null),
		          React.createElement('g', null),
		          React.createElement('g', null),
		          React.createElement('g', null)
		        ),
		        React.createElement(
		          'symbol',
		          { id: 'toast-success', viewBox: '0 0 24 24' },
		          React.createElement(
		            'g',
		            { id: 'check' },
		            React.createElement('polygon', { points: '9,16.2 4.8,12 3.4,13.4 9,19 21,7 19.6,5.6 ' })
		          )
		        )
		      ),
		      React.createElement(
		        'symbol',
		        { id: 'list-minus-circle', viewBox: '0 0 24 24' },
		        React.createElement(
		          'g',
		          { id: 'unknown-4' },
		          React.createElement('path', { d: 'M12,2C6.5,2,2,6.5,2,12s4.5,10,10,10c5.5,0,10-4.5,10-10C22,6.5,17.5,2,12,2z M12,20c-4.4,0-8-3.6-8-8c0-4.4,3.6-8,8-8c4.4,0,8,3.6,8,8C20,16.4,16.4,20,12,20z M8,13h8v-2H8V13z' })
		        )
		      ),
		      React.createElement(
		        'symbol',
		        { id: 'note-message', viewBox: '0 0 16 16' },
		        React.createElement(
		          'g',
		          { className: 'transform-group' },
		          React.createElement(
		            'g',
		            { transform: 'scale(0.015625, 0.015625)' },
		            React.createElement('path', { d: 'M511.736499 64.4775c-246.457158 0-447.121364 200.541409-447.121364 447.121364 0 246.580978 200.63146 447.088618 447.121364 447.088618 246.553349 0 447.121364-200.506617 447.121364-447.088618C958.858886 265.018909 758.316453 64.4775 511.736499 64.4775L511.736499 64.4775zM511.736499 902.715703c-215.72625 0-391.178237-175.48064-391.178237-391.149585 0-215.790718 175.450964-391.208936 391.178237-391.208936 215.72625 0 391.214053 175.417195 391.214053 391.208936C902.977157 727.233016 727.463772 902.715703 511.736499 902.715703L511.736499 902.715703zM552.385291 451.746708l-81.297584 0c-11.235902 0-20.319791 9.106402-20.319791 20.319791l0 43.073005 0 14.3488 0 189.726086c0 11.213389 9.091052 20.319791 20.320814 20.319791l81.297584 0c11.234879 0 20.319791-9.106402 20.319791-20.319791L572.706105 529.488303l0-14.3488 0-43.073005C572.706105 460.852086 563.615053 451.746708 552.385291 451.746708zM447.352119 348.014158c0 35.558867 28.826536 64.385403 64.384379 64.385403 35.55989 0 64.386426-28.826536 64.386426-64.385403s-28.826536-64.385403-64.386426-64.385403C476.177632 283.628756 447.352119 312.455291 447.352119 348.014158L447.352119 348.014158z' })
		          )
		        )
		      ),
		      React.createElement(
		        'symbol',
		        { id: 'note-warning', viewBox: '0 0 16 16' },
		        React.createElement(
		          'g',
		          { className: 'transform-group' },
		          React.createElement(
		            'g',
		            { transform: 'scale(0.015625, 0.015625)' },
		            React.createElement('path', { d: 'M512 764.224c-25.408 0-46.016-20.544-46.016-45.952 0-25.408 20.608-46.016 46.016-46.016s46.016 20.544 46.016 46.016C558.016 743.68 537.408 764.224 512 764.224L512 764.224 512 764.224zM512 764.224M512 611.648c-21.248 0-38.528-17.28-38.528-38.528L473.472 284.992c0-21.248 17.28-38.528 38.528-38.528s38.528 17.28 38.528 38.528l0 288.128C550.528 594.368 533.248 611.648 512 611.648L512 611.648zM512 611.648M512 64C264.576 64 64 264.576 64 512s200.576 448 448 448 448-200.576 448-448S759.424 64 512 64L512 64zM512 900.224c-214.08 0-388.288-174.144-388.288-388.224S297.92 123.776 512 123.776 900.288 297.856 900.288 512 726.08 900.224 512 900.224L512 900.224zM512 900.224' })
		          )
		        )
		      ),
		      React.createElement(
		        'symbol',
		        { id: 'rate-star', viewBox: '0 0 46.354 46.354' },
		        React.createElement(
		          'g',
		          null,
		          React.createElement('path', { d: 'M21.57,2.049c0.303-0.612,0.927-1,1.609-1c0.682,0,1.307,0.388,1.609,1l5.771,11.695c0.261,0.529,0.767,0.896,1.352,0.981 L44.817,16.6c0.677,0.098,1.237,0.572,1.448,1.221c0.211,0.649,0.035,1.363-0.454,1.839l-9.338,9.104 c-0.423,0.412-0.616,1.006-0.517,1.588l2.204,12.855c0.114,0.674-0.161,1.354-0.715,1.756c-0.553,0.4-1.284,0.453-1.89,0.137 l-11.544-6.07c-0.522-0.275-1.147-0.275-1.67,0l-11.544,6.069c-0.604,0.317-1.337,0.265-1.89-0.136 c-0.553-0.401-0.829-1.082-0.714-1.756l2.204-12.855c0.1-0.582-0.094-1.176-0.517-1.588L0.542,19.66 c-0.489-0.477-0.665-1.19-0.454-1.839c0.211-0.649,0.772-1.123,1.449-1.221l12.908-1.875c0.584-0.085,1.09-0.452,1.351-0.982 L21.57,2.049z' })
		        )
		      ),
		      React.createElement(
		        'symbol',
		        { id: 'toast-error', viewBox: '0 0 24 24' },
		        React.createElement(
		          'g',
		          { id: 'clear' },
		          React.createElement('polygon', { points: '19,6.4 17.6,5 12,10.6 6.4,5 5,6.4 10.6,12 5,17.6 6.4,19 12,13.4 17.6,19 19,17.6 13.4,12 ' })
		        )
		      ),
		      React.createElement(
		        'symbol',
		        { id: 'toast-fail', viewBox: '0 0 108.364 108.364' },
		        React.createElement(
		          'g',
		          null,
		          React.createElement(
		            'g',
		            null,
		            React.createElement('path', { d: 'M54.182,0C24.258,0,0,24.258,0,54.182c0,29.924,24.258,54.183,54.182,54.183c29.923,0,54.182-24.259,54.182-54.183 C108.364,24.258,84.105,0,54.182,0z M68.713,33.622c3.424,0,6.201,2.777,6.201,6.201c0,3.426-2.777,6.203-6.201,6.203 c-3.423,0-6.203-2.777-6.203-6.203C62.51,36.399,65.29,33.622,68.713,33.622z M40.594,33.622c3.423,0,6.2,2.777,6.2,6.201 c0,3.426-2.777,6.203-6.2,6.203c-3.423,0-6.201-2.777-6.201-6.203C34.393,36.399,37.17,33.622,40.594,33.622z M76.607,79.098 c-1.521,0.66-3.286-0.041-3.944-1.562c-2.894-6.689-9.731-11.012-17.421-11.012c-7.868,0-14.747,4.32-17.523,11.005 c-0.479,1.153-1.596,1.85-2.771,1.85c-0.384,0-0.773-0.073-1.15-0.229c-1.53-0.637-2.255-2.393-1.62-3.922 c3.71-8.932,12.764-14.703,23.064-14.703c10.084,0,19.084,5.742,22.928,14.63C78.828,76.674,78.128,78.439,76.607,79.098z' })
		          )
		        ),
		        React.createElement('g', null),
		        React.createElement('g', null),
		        React.createElement('g', null),
		        React.createElement('g', null),
		        React.createElement('g', null),
		        React.createElement('g', null),
		        React.createElement('g', null),
		        React.createElement('g', null),
		        React.createElement('g', null),
		        React.createElement('g', null),
		        React.createElement('g', null),
		        React.createElement('g', null),
		        React.createElement('g', null),
		        React.createElement('g', null),
		        React.createElement('g', null)
		      ),
		      React.createElement(
		        'symbol',
		        { id: 'toast-loading', viewBox: '0 0 399.389 399.389' },
		        React.createElement(
		          'g',
		          null,
		          React.createElement('path', { d: 'M340.896,58.489C303.18,20.773,253.031,0.001,199.693,0.001c-53.34,0-103.487,20.771-141.204,58.488 C20.772,96.207,0,146.355,0,199.694c0,53.34,20.772,103.489,58.49,141.206c37.717,37.717,87.864,58.488,141.204,58.488 c53.339,0,103.486-20.771,141.205-58.488c37.717-37.717,58.49-87.865,58.49-141.206C399.387,146.355,378.613,96.207,340.896,58.489 z M77.457,199.694c0-67.401,54.835-122.236,122.236-122.236S321.93,132.293,321.93,199.694s-54.836,122.237-122.237,122.237 S77.457,267.096,77.457,199.694z M328.061,328.063c-34.289,34.287-79.877,53.17-128.368,53.17v-41.147 c77.413,0,140.389-62.979,140.389-140.391c0-77.412-62.979-140.391-140.389-140.391c-4.593,0-9.134,0.229-13.615,0.662V18.655 c4.508-0.332,9.049-0.5,13.615-0.5c48.491,0,94.079,18.883,128.368,53.171c34.289,34.289,53.172,79.878,53.172,128.368 C381.232,248.187,362.35,293.776,328.061,328.063z' })
		        ),
		        React.createElement('g', null),
		        React.createElement('g', null),
		        React.createElement('g', null),
		        React.createElement('g', null),
		        React.createElement('g', null),
		        React.createElement('g', null),
		        React.createElement('g', null),
		        React.createElement('g', null),
		        React.createElement('g', null),
		        React.createElement('g', null),
		        React.createElement('g', null),
		        React.createElement('g', null),
		        React.createElement('g', null),
		        React.createElement('g', null),
		        React.createElement('g', null)
		      ),
		      React.createElement(
		        'symbol',
		        { id: 'toast-success', viewBox: '0 0 24 24' },
		        React.createElement(
		          'g',
		          { id: 'check' },
		          React.createElement('polygon', { points: '9,16.2 4.8,12 3.4,13.4 9,19 21,7 19.6,5.6 ' })
		        )
		      ),
		      React.Children.map(children, function (c) {
		        return c;
		      })
		    );
		  }
		});
	
	/***/ },
	/* 2 */
	/***/ function(module, exports) {
	
		module.exports = __WEBPACK_EXTERNAL_MODULE_2__;
	
	/***/ },
	/* 3 */
	/***/ function(module, exports, __webpack_require__) {
	
		var forEach  = __webpack_require__(4);
		var ATTR_KEY = 'data-svgreactloader';
		
		var MODULE = {
		    /**
		     * @param {HTMLElement}
		     */
		    applyAttributes: function (el) {
		        var data = MODULE.hasXmlAttributes(el);
		        if (data) {
		            forEach(JSON.parse(data), function (args) {
		                var method = 'setAttribute' + (args.length === 3 ? 'NS' : '');
		                el[method].apply(el, args);
		            });
		        }
		    },
		    /**
		     * @param {HTMLElement}
		     */
		    hasXmlAttributes: function (el) {
		        return el && el.getAttribute(ATTR_KEY);
		    },
		    /**
		     * @param {React.Component}
		     */
		    applyXmlAttributes: function (component) {
		        var domEl = MODULE.reactDOM.findDOMNode(component);
		        var fn = MODULE.applyAttributes;
		
		        if (domEl) {
		            fn(domEl);
		            forEach(domEl.querySelectorAll('[' + ATTR_KEY + ']'), fn);
		        }
		    }
		};
		
		module.exports = function helpers (reactDOM) {
		    if (!MODULE.reactDOM) {
		        MODULE.reactDOM = reactDOM;
		    }
		    return MODULE;
		};
	
	
	/***/ },
	/* 4 */
	/***/ function(module, exports, __webpack_require__) {
	
		var arrayEach = __webpack_require__(5),
		    baseEach = __webpack_require__(6),
		    castFunction = __webpack_require__(40),
		    isArray = __webpack_require__(22);
		
		/**
		 * Iterates over elements of `collection` and invokes `iteratee` for each element.
		 * The iteratee is invoked with three arguments: (value, index|key, collection).
		 * Iteratee functions may exit iteration early by explicitly returning `false`.
		 *
		 * **Note:** As with other "Collections" methods, objects with a "length"
		 * property are iterated like arrays. To avoid this behavior use `_.forIn`
		 * or `_.forOwn` for object iteration.
		 *
		 * @static
		 * @memberOf _
		 * @since 0.1.0
		 * @alias each
		 * @category Collection
		 * @param {Array|Object} collection The collection to iterate over.
		 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		 * @returns {Array|Object} Returns `collection`.
		 * @see _.forEachRight
		 * @example
		 *
		 * _.forEach([1, 2], function(value) {
		 *   console.log(value);
		 * });
		 * // => Logs `1` then `2`.
		 *
		 * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
		 *   console.log(key);
		 * });
		 * // => Logs 'a' then 'b' (iteration order is not guaranteed).
		 */
		function forEach(collection, iteratee) {
		  var func = isArray(collection) ? arrayEach : baseEach;
		  return func(collection, castFunction(iteratee));
		}
		
		module.exports = forEach;
	
	
	/***/ },
	/* 5 */
	/***/ function(module, exports) {
	
		/**
		 * A specialized version of `_.forEach` for arrays without support for
		 * iteratee shorthands.
		 *
		 * @private
		 * @param {Array} [array] The array to iterate over.
		 * @param {Function} iteratee The function invoked per iteration.
		 * @returns {Array} Returns `array`.
		 */
		function arrayEach(array, iteratee) {
		  var index = -1,
		      length = array == null ? 0 : array.length;
		
		  while (++index < length) {
		    if (iteratee(array[index], index, array) === false) {
		      break;
		    }
		  }
		  return array;
		}
		
		module.exports = arrayEach;
	
	
	/***/ },
	/* 6 */
	/***/ function(module, exports, __webpack_require__) {
	
		var baseForOwn = __webpack_require__(7),
		    createBaseEach = __webpack_require__(39);
		
		/**
		 * The base implementation of `_.forEach` without support for iteratee shorthands.
		 *
		 * @private
		 * @param {Array|Object} collection The collection to iterate over.
		 * @param {Function} iteratee The function invoked per iteration.
		 * @returns {Array|Object} Returns `collection`.
		 */
		var baseEach = createBaseEach(baseForOwn);
		
		module.exports = baseEach;
	
	
	/***/ },
	/* 7 */
	/***/ function(module, exports, __webpack_require__) {
	
		var baseFor = __webpack_require__(8),
		    keys = __webpack_require__(10);
		
		/**
		 * The base implementation of `_.forOwn` without support for iteratee shorthands.
		 *
		 * @private
		 * @param {Object} object The object to iterate over.
		 * @param {Function} iteratee The function invoked per iteration.
		 * @returns {Object} Returns `object`.
		 */
		function baseForOwn(object, iteratee) {
		  return object && baseFor(object, iteratee, keys);
		}
		
		module.exports = baseForOwn;
	
	
	/***/ },
	/* 8 */
	/***/ function(module, exports, __webpack_require__) {
	
		var createBaseFor = __webpack_require__(9);
		
		/**
		 * The base implementation of `baseForOwn` which iterates over `object`
		 * properties returned by `keysFunc` and invokes `iteratee` for each property.
		 * Iteratee functions may exit iteration early by explicitly returning `false`.
		 *
		 * @private
		 * @param {Object} object The object to iterate over.
		 * @param {Function} iteratee The function invoked per iteration.
		 * @param {Function} keysFunc The function to get the keys of `object`.
		 * @returns {Object} Returns `object`.
		 */
		var baseFor = createBaseFor();
		
		module.exports = baseFor;
	
	
	/***/ },
	/* 9 */
	/***/ function(module, exports) {
	
		/**
		 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
		 *
		 * @private
		 * @param {boolean} [fromRight] Specify iterating from right to left.
		 * @returns {Function} Returns the new base function.
		 */
		function createBaseFor(fromRight) {
		  return function(object, iteratee, keysFunc) {
		    var index = -1,
		        iterable = Object(object),
		        props = keysFunc(object),
		        length = props.length;
		
		    while (length--) {
		      var key = props[fromRight ? length : ++index];
		      if (iteratee(iterable[key], key, iterable) === false) {
		        break;
		      }
		    }
		    return object;
		  };
		}
		
		module.exports = createBaseFor;
	
	
	/***/ },
	/* 10 */
	/***/ function(module, exports, __webpack_require__) {
	
		var arrayLikeKeys = __webpack_require__(11),
		    baseKeys = __webpack_require__(32),
		    isArrayLike = __webpack_require__(36);
		
		/**
		 * Creates an array of the own enumerable property names of `object`.
		 *
		 * **Note:** Non-object values are coerced to objects. See the
		 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
		 * for more details.
		 *
		 * @static
		 * @since 0.1.0
		 * @memberOf _
		 * @category Object
		 * @param {Object} object The object to query.
		 * @returns {Array} Returns the array of property names.
		 * @example
		 *
		 * function Foo() {
		 *   this.a = 1;
		 *   this.b = 2;
		 * }
		 *
		 * Foo.prototype.c = 3;
		 *
		 * _.keys(new Foo);
		 * // => ['a', 'b'] (iteration order is not guaranteed)
		 *
		 * _.keys('hi');
		 * // => ['0', '1']
		 */
		function keys(object) {
		  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
		}
		
		module.exports = keys;
	
	
	/***/ },
	/* 11 */
	/***/ function(module, exports, __webpack_require__) {
	
		var baseTimes = __webpack_require__(12),
		    isArguments = __webpack_require__(13),
		    isArray = __webpack_require__(22),
		    isBuffer = __webpack_require__(23),
		    isIndex = __webpack_require__(26),
		    isTypedArray = __webpack_require__(27);
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;
		
		/**
		 * Creates an array of the enumerable property names of the array-like `value`.
		 *
		 * @private
		 * @param {*} value The value to query.
		 * @param {boolean} inherited Specify returning inherited property names.
		 * @returns {Array} Returns the array of property names.
		 */
		function arrayLikeKeys(value, inherited) {
		  var isArr = isArray(value),
		      isArg = !isArr && isArguments(value),
		      isBuff = !isArr && !isArg && isBuffer(value),
		      isType = !isArr && !isArg && !isBuff && isTypedArray(value),
		      skipIndexes = isArr || isArg || isBuff || isType,
		      result = skipIndexes ? baseTimes(value.length, String) : [],
		      length = result.length;
		
		  for (var key in value) {
		    if ((inherited || hasOwnProperty.call(value, key)) &&
		        !(skipIndexes && (
		           // Safari 9 has enumerable `arguments.length` in strict mode.
		           key == 'length' ||
		           // Node.js 0.10 has enumerable non-index properties on buffers.
		           (isBuff && (key == 'offset' || key == 'parent')) ||
		           // PhantomJS 2 has enumerable non-index properties on typed arrays.
		           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
		           // Skip index properties.
		           isIndex(key, length)
		        ))) {
		      result.push(key);
		    }
		  }
		  return result;
		}
		
		module.exports = arrayLikeKeys;
	
	
	/***/ },
	/* 12 */
	/***/ function(module, exports) {
	
		/**
		 * The base implementation of `_.times` without support for iteratee shorthands
		 * or max array length checks.
		 *
		 * @private
		 * @param {number} n The number of times to invoke `iteratee`.
		 * @param {Function} iteratee The function invoked per iteration.
		 * @returns {Array} Returns the array of results.
		 */
		function baseTimes(n, iteratee) {
		  var index = -1,
		      result = Array(n);
		
		  while (++index < n) {
		    result[index] = iteratee(index);
		  }
		  return result;
		}
		
		module.exports = baseTimes;
	
	
	/***/ },
	/* 13 */
	/***/ function(module, exports, __webpack_require__) {
	
		var baseIsArguments = __webpack_require__(14),
		    isObjectLike = __webpack_require__(21);
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;
		
		/** Built-in value references. */
		var propertyIsEnumerable = objectProto.propertyIsEnumerable;
		
		/**
		 * Checks if `value` is likely an `arguments` object.
		 *
		 * @static
		 * @memberOf _
		 * @since 0.1.0
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
		 *  else `false`.
		 * @example
		 *
		 * _.isArguments(function() { return arguments; }());
		 * // => true
		 *
		 * _.isArguments([1, 2, 3]);
		 * // => false
		 */
		var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
		  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
		    !propertyIsEnumerable.call(value, 'callee');
		};
		
		module.exports = isArguments;
	
	
	/***/ },
	/* 14 */
	/***/ function(module, exports, __webpack_require__) {
	
		var baseGetTag = __webpack_require__(15),
		    isObjectLike = __webpack_require__(21);
		
		/** `Object#toString` result references. */
		var argsTag = '[object Arguments]';
		
		/**
		 * The base implementation of `_.isArguments`.
		 *
		 * @private
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
		 */
		function baseIsArguments(value) {
		  return isObjectLike(value) && baseGetTag(value) == argsTag;
		}
		
		module.exports = baseIsArguments;
	
	
	/***/ },
	/* 15 */
	/***/ function(module, exports, __webpack_require__) {
	
		var Symbol = __webpack_require__(16),
		    getRawTag = __webpack_require__(19),
		    objectToString = __webpack_require__(20);
		
		/** `Object#toString` result references. */
		var nullTag = '[object Null]',
		    undefinedTag = '[object Undefined]';
		
		/** Built-in value references. */
		var symToStringTag = Symbol ? Symbol.toStringTag : undefined;
		
		/**
		 * The base implementation of `getTag` without fallbacks for buggy environments.
		 *
		 * @private
		 * @param {*} value The value to query.
		 * @returns {string} Returns the `toStringTag`.
		 */
		function baseGetTag(value) {
		  if (value == null) {
		    return value === undefined ? undefinedTag : nullTag;
		  }
		  value = Object(value);
		  return (symToStringTag && symToStringTag in value)
		    ? getRawTag(value)
		    : objectToString(value);
		}
		
		module.exports = baseGetTag;
	
	
	/***/ },
	/* 16 */
	/***/ function(module, exports, __webpack_require__) {
	
		var root = __webpack_require__(17);
		
		/** Built-in value references. */
		var Symbol = root.Symbol;
		
		module.exports = Symbol;
	
	
	/***/ },
	/* 17 */
	/***/ function(module, exports, __webpack_require__) {
	
		var freeGlobal = __webpack_require__(18);
		
		/** Detect free variable `self`. */
		var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
		
		/** Used as a reference to the global object. */
		var root = freeGlobal || freeSelf || Function('return this')();
		
		module.exports = root;
	
	
	/***/ },
	/* 18 */
	/***/ function(module, exports) {
	
		/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
		var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;
		
		module.exports = freeGlobal;
		
		/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))
	
	/***/ },
	/* 19 */
	/***/ function(module, exports, __webpack_require__) {
	
		var Symbol = __webpack_require__(16);
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;
		
		/**
		 * Used to resolve the
		 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
		 * of values.
		 */
		var nativeObjectToString = objectProto.toString;
		
		/** Built-in value references. */
		var symToStringTag = Symbol ? Symbol.toStringTag : undefined;
		
		/**
		 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
		 *
		 * @private
		 * @param {*} value The value to query.
		 * @returns {string} Returns the raw `toStringTag`.
		 */
		function getRawTag(value) {
		  var isOwn = hasOwnProperty.call(value, symToStringTag),
		      tag = value[symToStringTag];
		
		  try {
		    value[symToStringTag] = undefined;
		    var unmasked = true;
		  } catch (e) {}
		
		  var result = nativeObjectToString.call(value);
		  if (unmasked) {
		    if (isOwn) {
		      value[symToStringTag] = tag;
		    } else {
		      delete value[symToStringTag];
		    }
		  }
		  return result;
		}
		
		module.exports = getRawTag;
	
	
	/***/ },
	/* 20 */
	/***/ function(module, exports) {
	
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/**
		 * Used to resolve the
		 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
		 * of values.
		 */
		var nativeObjectToString = objectProto.toString;
		
		/**
		 * Converts `value` to a string using `Object.prototype.toString`.
		 *
		 * @private
		 * @param {*} value The value to convert.
		 * @returns {string} Returns the converted string.
		 */
		function objectToString(value) {
		  return nativeObjectToString.call(value);
		}
		
		module.exports = objectToString;
	
	
	/***/ },
	/* 21 */
	/***/ function(module, exports) {
	
		/**
		 * Checks if `value` is object-like. A value is object-like if it's not `null`
		 * and has a `typeof` result of "object".
		 *
		 * @static
		 * @memberOf _
		 * @since 4.0.0
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
		 * @example
		 *
		 * _.isObjectLike({});
		 * // => true
		 *
		 * _.isObjectLike([1, 2, 3]);
		 * // => true
		 *
		 * _.isObjectLike(_.noop);
		 * // => false
		 *
		 * _.isObjectLike(null);
		 * // => false
		 */
		function isObjectLike(value) {
		  return value != null && typeof value == 'object';
		}
		
		module.exports = isObjectLike;
	
	
	/***/ },
	/* 22 */
	/***/ function(module, exports) {
	
		/**
		 * Checks if `value` is classified as an `Array` object.
		 *
		 * @static
		 * @memberOf _
		 * @since 0.1.0
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
		 * @example
		 *
		 * _.isArray([1, 2, 3]);
		 * // => true
		 *
		 * _.isArray(document.body.children);
		 * // => false
		 *
		 * _.isArray('abc');
		 * // => false
		 *
		 * _.isArray(_.noop);
		 * // => false
		 */
		var isArray = Array.isArray;
		
		module.exports = isArray;
	
	
	/***/ },
	/* 23 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(17),
		    stubFalse = __webpack_require__(25);
		
		/** Detect free variable `exports`. */
		var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;
		
		/** Detect free variable `module`. */
		var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;
		
		/** Detect the popular CommonJS extension `module.exports`. */
		var moduleExports = freeModule && freeModule.exports === freeExports;
		
		/** Built-in value references. */
		var Buffer = moduleExports ? root.Buffer : undefined;
		
		/* Built-in method references for those with the same name as other `lodash` methods. */
		var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;
		
		/**
		 * Checks if `value` is a buffer.
		 *
		 * @static
		 * @memberOf _
		 * @since 4.3.0
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
		 * @example
		 *
		 * _.isBuffer(new Buffer(2));
		 * // => true
		 *
		 * _.isBuffer(new Uint8Array(2));
		 * // => false
		 */
		var isBuffer = nativeIsBuffer || stubFalse;
		
		module.exports = isBuffer;
		
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(24)(module)))
	
	/***/ },
	/* 24 */
	/***/ function(module, exports) {
	
		module.exports = function(module) {
			if(!module.webpackPolyfill) {
				module.deprecate = function() {};
				module.paths = [];
				// module.parent = undefined by default
				module.children = [];
				module.webpackPolyfill = 1;
			}
			return module;
		}
	
	
	/***/ },
	/* 25 */
	/***/ function(module, exports) {
	
		/**
		 * This method returns `false`.
		 *
		 * @static
		 * @memberOf _
		 * @since 4.13.0
		 * @category Util
		 * @returns {boolean} Returns `false`.
		 * @example
		 *
		 * _.times(2, _.stubFalse);
		 * // => [false, false]
		 */
		function stubFalse() {
		  return false;
		}
		
		module.exports = stubFalse;
	
	
	/***/ },
	/* 26 */
	/***/ function(module, exports) {
	
		/** Used as references for various `Number` constants. */
		var MAX_SAFE_INTEGER = 9007199254740991;
		
		/** Used to detect unsigned integer values. */
		var reIsUint = /^(?:0|[1-9]\d*)$/;
		
		/**
		 * Checks if `value` is a valid array-like index.
		 *
		 * @private
		 * @param {*} value The value to check.
		 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
		 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
		 */
		function isIndex(value, length) {
		  length = length == null ? MAX_SAFE_INTEGER : length;
		  return !!length &&
		    (typeof value == 'number' || reIsUint.test(value)) &&
		    (value > -1 && value % 1 == 0 && value < length);
		}
		
		module.exports = isIndex;
	
	
	/***/ },
	/* 27 */
	/***/ function(module, exports, __webpack_require__) {
	
		var baseIsTypedArray = __webpack_require__(28),
		    baseUnary = __webpack_require__(30),
		    nodeUtil = __webpack_require__(31);
		
		/* Node.js helper references. */
		var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
		
		/**
		 * Checks if `value` is classified as a typed array.
		 *
		 * @static
		 * @memberOf _
		 * @since 3.0.0
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
		 * @example
		 *
		 * _.isTypedArray(new Uint8Array);
		 * // => true
		 *
		 * _.isTypedArray([]);
		 * // => false
		 */
		var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
		
		module.exports = isTypedArray;
	
	
	/***/ },
	/* 28 */
	/***/ function(module, exports, __webpack_require__) {
	
		var baseGetTag = __webpack_require__(15),
		    isLength = __webpack_require__(29),
		    isObjectLike = __webpack_require__(21);
		
		/** `Object#toString` result references. */
		var argsTag = '[object Arguments]',
		    arrayTag = '[object Array]',
		    boolTag = '[object Boolean]',
		    dateTag = '[object Date]',
		    errorTag = '[object Error]',
		    funcTag = '[object Function]',
		    mapTag = '[object Map]',
		    numberTag = '[object Number]',
		    objectTag = '[object Object]',
		    regexpTag = '[object RegExp]',
		    setTag = '[object Set]',
		    stringTag = '[object String]',
		    weakMapTag = '[object WeakMap]';
		
		var arrayBufferTag = '[object ArrayBuffer]',
		    dataViewTag = '[object DataView]',
		    float32Tag = '[object Float32Array]',
		    float64Tag = '[object Float64Array]',
		    int8Tag = '[object Int8Array]',
		    int16Tag = '[object Int16Array]',
		    int32Tag = '[object Int32Array]',
		    uint8Tag = '[object Uint8Array]',
		    uint8ClampedTag = '[object Uint8ClampedArray]',
		    uint16Tag = '[object Uint16Array]',
		    uint32Tag = '[object Uint32Array]';
		
		/** Used to identify `toStringTag` values of typed arrays. */
		var typedArrayTags = {};
		typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
		typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
		typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
		typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
		typedArrayTags[uint32Tag] = true;
		typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
		typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
		typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
		typedArrayTags[errorTag] = typedArrayTags[funcTag] =
		typedArrayTags[mapTag] = typedArrayTags[numberTag] =
		typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
		typedArrayTags[setTag] = typedArrayTags[stringTag] =
		typedArrayTags[weakMapTag] = false;
		
		/**
		 * The base implementation of `_.isTypedArray` without Node.js optimizations.
		 *
		 * @private
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
		 */
		function baseIsTypedArray(value) {
		  return isObjectLike(value) &&
		    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
		}
		
		module.exports = baseIsTypedArray;
	
	
	/***/ },
	/* 29 */
	/***/ function(module, exports) {
	
		/** Used as references for various `Number` constants. */
		var MAX_SAFE_INTEGER = 9007199254740991;
		
		/**
		 * Checks if `value` is a valid array-like length.
		 *
		 * **Note:** This method is loosely based on
		 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
		 *
		 * @static
		 * @memberOf _
		 * @since 4.0.0
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
		 * @example
		 *
		 * _.isLength(3);
		 * // => true
		 *
		 * _.isLength(Number.MIN_VALUE);
		 * // => false
		 *
		 * _.isLength(Infinity);
		 * // => false
		 *
		 * _.isLength('3');
		 * // => false
		 */
		function isLength(value) {
		  return typeof value == 'number' &&
		    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
		}
		
		module.exports = isLength;
	
	
	/***/ },
	/* 30 */
	/***/ function(module, exports) {
	
		/**
		 * The base implementation of `_.unary` without support for storing metadata.
		 *
		 * @private
		 * @param {Function} func The function to cap arguments for.
		 * @returns {Function} Returns the new capped function.
		 */
		function baseUnary(func) {
		  return function(value) {
		    return func(value);
		  };
		}
		
		module.exports = baseUnary;
	
	
	/***/ },
	/* 31 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(module) {var freeGlobal = __webpack_require__(18);
		
		/** Detect free variable `exports`. */
		var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;
		
		/** Detect free variable `module`. */
		var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;
		
		/** Detect the popular CommonJS extension `module.exports`. */
		var moduleExports = freeModule && freeModule.exports === freeExports;
		
		/** Detect free variable `process` from Node.js. */
		var freeProcess = moduleExports && freeGlobal.process;
		
		/** Used to access faster Node.js helpers. */
		var nodeUtil = (function() {
		  try {
		    return freeProcess && freeProcess.binding && freeProcess.binding('util');
		  } catch (e) {}
		}());
		
		module.exports = nodeUtil;
		
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(24)(module)))
	
	/***/ },
	/* 32 */
	/***/ function(module, exports, __webpack_require__) {
	
		var isPrototype = __webpack_require__(33),
		    nativeKeys = __webpack_require__(34);
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;
		
		/**
		 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
		 *
		 * @private
		 * @param {Object} object The object to query.
		 * @returns {Array} Returns the array of property names.
		 */
		function baseKeys(object) {
		  if (!isPrototype(object)) {
		    return nativeKeys(object);
		  }
		  var result = [];
		  for (var key in Object(object)) {
		    if (hasOwnProperty.call(object, key) && key != 'constructor') {
		      result.push(key);
		    }
		  }
		  return result;
		}
		
		module.exports = baseKeys;
	
	
	/***/ },
	/* 33 */
	/***/ function(module, exports) {
	
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/**
		 * Checks if `value` is likely a prototype object.
		 *
		 * @private
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
		 */
		function isPrototype(value) {
		  var Ctor = value && value.constructor,
		      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;
		
		  return value === proto;
		}
		
		module.exports = isPrototype;
	
	
	/***/ },
	/* 34 */
	/***/ function(module, exports, __webpack_require__) {
	
		var overArg = __webpack_require__(35);
		
		/* Built-in method references for those with the same name as other `lodash` methods. */
		var nativeKeys = overArg(Object.keys, Object);
		
		module.exports = nativeKeys;
	
	
	/***/ },
	/* 35 */
	/***/ function(module, exports) {
	
		/**
		 * Creates a unary function that invokes `func` with its argument transformed.
		 *
		 * @private
		 * @param {Function} func The function to wrap.
		 * @param {Function} transform The argument transform.
		 * @returns {Function} Returns the new function.
		 */
		function overArg(func, transform) {
		  return function(arg) {
		    return func(transform(arg));
		  };
		}
		
		module.exports = overArg;
	
	
	/***/ },
	/* 36 */
	/***/ function(module, exports, __webpack_require__) {
	
		var isFunction = __webpack_require__(37),
		    isLength = __webpack_require__(29);
		
		/**
		 * Checks if `value` is array-like. A value is considered array-like if it's
		 * not a function and has a `value.length` that's an integer greater than or
		 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
		 *
		 * @static
		 * @memberOf _
		 * @since 4.0.0
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
		 * @example
		 *
		 * _.isArrayLike([1, 2, 3]);
		 * // => true
		 *
		 * _.isArrayLike(document.body.children);
		 * // => true
		 *
		 * _.isArrayLike('abc');
		 * // => true
		 *
		 * _.isArrayLike(_.noop);
		 * // => false
		 */
		function isArrayLike(value) {
		  return value != null && isLength(value.length) && !isFunction(value);
		}
		
		module.exports = isArrayLike;
	
	
	/***/ },
	/* 37 */
	/***/ function(module, exports, __webpack_require__) {
	
		var baseGetTag = __webpack_require__(15),
		    isObject = __webpack_require__(38);
		
		/** `Object#toString` result references. */
		var asyncTag = '[object AsyncFunction]',
		    funcTag = '[object Function]',
		    genTag = '[object GeneratorFunction]',
		    proxyTag = '[object Proxy]';
		
		/**
		 * Checks if `value` is classified as a `Function` object.
		 *
		 * @static
		 * @memberOf _
		 * @since 0.1.0
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
		 * @example
		 *
		 * _.isFunction(_);
		 * // => true
		 *
		 * _.isFunction(/abc/);
		 * // => false
		 */
		function isFunction(value) {
		  if (!isObject(value)) {
		    return false;
		  }
		  // The use of `Object#toString` avoids issues with the `typeof` operator
		  // in Safari 9 which returns 'object' for typed arrays and other constructors.
		  var tag = baseGetTag(value);
		  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
		}
		
		module.exports = isFunction;
	
	
	/***/ },
	/* 38 */
	/***/ function(module, exports) {
	
		/**
		 * Checks if `value` is the
		 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
		 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
		 *
		 * @static
		 * @memberOf _
		 * @since 0.1.0
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
		 * @example
		 *
		 * _.isObject({});
		 * // => true
		 *
		 * _.isObject([1, 2, 3]);
		 * // => true
		 *
		 * _.isObject(_.noop);
		 * // => true
		 *
		 * _.isObject(null);
		 * // => false
		 */
		function isObject(value) {
		  var type = typeof value;
		  return value != null && (type == 'object' || type == 'function');
		}
		
		module.exports = isObject;
	
	
	/***/ },
	/* 39 */
	/***/ function(module, exports, __webpack_require__) {
	
		var isArrayLike = __webpack_require__(36);
		
		/**
		 * Creates a `baseEach` or `baseEachRight` function.
		 *
		 * @private
		 * @param {Function} eachFunc The function to iterate over a collection.
		 * @param {boolean} [fromRight] Specify iterating from right to left.
		 * @returns {Function} Returns the new base function.
		 */
		function createBaseEach(eachFunc, fromRight) {
		  return function(collection, iteratee) {
		    if (collection == null) {
		      return collection;
		    }
		    if (!isArrayLike(collection)) {
		      return eachFunc(collection, iteratee);
		    }
		    var length = collection.length,
		        index = fromRight ? length : -1,
		        iterable = Object(collection);
		
		    while ((fromRight ? index-- : ++index < length)) {
		      if (iteratee(iterable[index], index, iterable) === false) {
		        break;
		      }
		    }
		    return collection;
		  };
		}
		
		module.exports = createBaseEach;
	
	
	/***/ },
	/* 40 */
	/***/ function(module, exports, __webpack_require__) {
	
		var identity = __webpack_require__(41);
		
		/**
		 * Casts `value` to `identity` if it's not a function.
		 *
		 * @private
		 * @param {*} value The value to inspect.
		 * @returns {Function} Returns cast function.
		 */
		function castFunction(value) {
		  return typeof value == 'function' ? value : identity;
		}
		
		module.exports = castFunction;
	
	
	/***/ },
	/* 41 */
	/***/ function(module, exports) {
	
		/**
		 * This method returns the first argument it receives.
		 *
		 * @static
		 * @since 0.1.0
		 * @memberOf _
		 * @category Util
		 * @param {*} value Any value.
		 * @returns {*} Returns `value`.
		 * @example
		 *
		 * var object = { 'a': 1 };
		 *
		 * console.log(_.identity(object) === object);
		 * // => true
		 */
		function identity(value) {
		  return value;
		}
		
		module.exports = identity;
	
	
	/***/ },
	/* 42 */
	/***/ function(module, exports) {
	
		module.exports = __WEBPACK_EXTERNAL_MODULE_42__;
	
	/***/ },
	/* 43 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		/**
		 * Avatar Component Style for tingle
		 * @author maming
		 *
		 * Copyright 2014-2016, Tingle Team, Alinw.
		 * All rights reserved.
		 */
		
		module.exports = __webpack_require__(44);
		
	
	
	/***/ },
	/* 44 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		/**
		 * Avatar Component for tingle
		 * @author
		 *
		 * Copyright 2014-2016, Tingle Team.
		 * All rights reserved.
		 */
		var classnames = __webpack_require__(45);
		
		var _require = __webpack_require__(46);
		
		var unitize = _require.unitize;
		
		var Context = __webpack_require__(47);
		var avatarColors = ["#FF8170", "#F5B153", "#56c8e8", "#79CC70", "#52bafa", "#9e9ee6"];
		var defaultSrc = 'https://img.alicdn.com/tps/TB1.IgIKpXXXXbgXpXXXXXXXXXX-116-116.png';
		var global = Context.getGlobal('avatar') || {};
		
		var Avatar = function (_React$Component) {
		    _inherits(Avatar, _React$Component);
		
		    function Avatar(props) {
		        _classCallCheck(this, Avatar);
		
		        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Avatar).call(this, props));
		
		        var size = unitize(props.size);
		        _this.style = {
		            width: size,
		            height: size,
		            lineHeight: size,
		            fontSize: unitize(props.fontSize)
		        };
		        return _this;
		    }
		
		    _createClass(Avatar, [{
		        key: 'shouldComponentUpdate',
		        value: function shouldComponentUpdate(nextProps, nextState) {
		            for (var key in this.props) {
		                if (this.props[key] !== nextProps[key]) {
		                    return true;
		                }
		            }
		            return false;
		        }
		    }, {
		        key: 'render',
		        value: function render() {
		
		            var t = this;
		            if (!t.props.name || t.props.src) {
		                return React.createElement('img', { ref: 'root', className: classnames(Context.prefixClass('avatar'), _defineProperty({}, t.props.className, !!t.props.className)), src: t.props.src || t.props.defaultSrc, style: t.style });
		            }
		            if (t.props.defaultColor) {
		                t.style.backgroundColor = t.props.defaultColor;
		            } else {
		                var hashCode = t.props.hashCode(t.props.name, t.props.isLong);
		                t.style.backgroundColor = t.props.colors[Math.abs(hashCode) % t.props.colors.length];
		            }
		            return React.createElement(
		                'div',
		                { ref: 'root', className: classnames(Context.prefixClass('avatar'), _defineProperty({}, t.props.className, !!t.props.className)), style: this.style },
		                Avatar.formatName(t.props.name)
		            );
		        }
		    }]);
		
		    return Avatar;
		}(React.Component);
		
		Avatar.hashCode = function (strKey, isLong) {
		    var intValue = function intValue(num) {
		        var MAX_VALUE = 0x7fffffff;
		        var MIN_VALUE = -0x80000000;
		        if (num > MAX_VALUE || num < MIN_VALUE) {
		            return num &= 0xFFFFFFFF;
		        }
		        return num;
		    };
		
		    var hash = 0;
		    if (typeof strKey === 'string') {
		        for (var i = 0, l = strKey.length; i < l; i++) {
		            hash = hash * 31 + strKey.charCodeAt(i);
		            if (!isLong) {
		                hash = intValue(hash);
		            }
		        }
		    }
		    return hash;
		};
		
		Avatar.formatName = function (name) {
		    var firstChar = name.slice(0, 1);
		    if (/^[A-Za-z]+$/.test(firstChar)) {
		        return firstChar.toUpperCase();
		    }
		    if (name.length === 3) {
		        return name.slice(1, 3);
		    }
		    if (name.length > 3) {
		        return name.slice(0, 2);
		    }
		    return name;
		};
		
		Avatar.defaultProps = {
		    className: '',
		    name: '',
		    src: '',
		    defaultColor: '',
		    colors: global.colors || avatarColors,
		    defaultSrc: global.defaultSrc || defaultSrc,
		    hashCode: global.hashCode || Avatar.hashCode,
		    isLong: false,
		    size: 40,
		    fontSize: 12
		};
		
		// http://facebook.github.io/react/docs/reusable-components.html
		Avatar.propTypes = {
		    className: React.PropTypes.string,
		    size: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.number]),
		    fontSize: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.number]),
		    name: React.PropTypes.string,
		    defaultColor: React.PropTypes.string,
		    defaultSrc: React.PropTypes.string,
		    src: React.PropTypes.string,
		    colors: React.PropTypes.array,
		    isLong: React.PropTypes.bool,
		    hashCode: React.PropTypes.func
		};
		
		Avatar.displayName = 'Avatar';
		
		module.exports = Avatar;
		
	
	
	/***/ },
	/* 45 */
	/***/ function(module, exports, __webpack_require__) {
	
		var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
		  Copyright (c) 2016 Jed Watson.
		  Licensed under the MIT License (MIT), see
		  http://jedwatson.github.io/classnames
		*/
		/* global define */
		
		(function () {
			'use strict';
		
			var hasOwn = {}.hasOwnProperty;
		
			function classNames () {
				var classes = [];
		
				for (var i = 0; i < arguments.length; i++) {
					var arg = arguments[i];
					if (!arg) continue;
		
					var argType = typeof arg;
		
					if (argType === 'string' || argType === 'number') {
						classes.push(arg);
					} else if (Array.isArray(arg)) {
						classes.push(classNames.apply(null, arg));
					} else if (argType === 'object') {
						for (var key in arg) {
							if (hasOwn.call(arg, key) && arg[key]) {
								classes.push(key);
							}
						}
					}
				}
		
				return classes.join(' ');
			}
		
			if (typeof module !== 'undefined' && module.exports) {
				module.exports = classNames;
			} else if (true) {
				// register as 'classnames', consistent with npm package name
				!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
					return classNames;
				}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
			} else {
				window.classNames = classNames;
			}
		}());
	
	
	/***/ },
	/* 46 */
	/***/ function(module, exports) {
	
		'use strict';
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		/**
		 * css util for tingle
		 * @author gnosaij
		 *
		 * Copyright 2014-2015, Tingle Team, Alinw.
		 * All rights reserved.
		 *
		 * Usage:
		 *     const {createStyleContext} = require('tingle-style');
		 *     let componentStyle = createStyleContext('tGroupList');
		 *
		 *     // 添加样式
		 *     componentStyle.add(`
		 *         body{
		 *             background-color: red;
		 *         }
		 *     `);
		 *
		 *     // 添加带有标识的样式，这样可以优化去重
		 *     componentStyle.add('redBG', `
		 *         body{
		 *             background-color: red;
		 *         }
		 *     `);
		 */
		var doc = document;
		var headEl = doc.getElementsByTagName('head')[0];
		
		/**
		 * 可使用`JS`动态插入样式的类
		 */
		
		var StyleContext = function () {
		    /**
		     * 构造函数
		     * @param id {String} required 用于创建`style`元素的`id`标识，建议使用`componentName`作为`id`的值，避免全局冲突
		     */
		
		    function StyleContext(id) {
		        _classCallCheck(this, StyleContext);
		
		        var t = this;
		        t.id = id;
		        t.rules = [];
		        t._createStyleEl();
		    }
		
		    _createClass(StyleContext, [{
		        key: '_createStyleEl',
		        value: function _createStyleEl() {
		            var t = this;
		            var el = doc.createElement('style');
		            el.id = t.id + '-style';
		            el.setAttribute('type', 'text/css');
		            headEl.appendChild(el);
		            t.el = el;
		        }
		    }, {
		        key: '_addRule',
		        value: function _addRule(rule) {
		            this.el.appendChild(doc.createTextNode(rule));
		        }
		
		        /**
		         * 外部接口 添加新的样式规则
		         */
		
		    }, {
		        key: 'add',
		        value: function add(ruleId, rule) {
		            var t = this;
		            if (rule === undefined) {
		                rule = ruleId;
		                t._addRule(t._clearRuleIndent(rule));
		            } else if (ruleId && -1 === t.rules.indexOf(ruleId)) {
		                t.rules.push(ruleId);
		                t._addRule('/* ' + ruleId + ' */\n' + t._clearRuleIndent(rule));
		            }
		        }
		
		        /**
		         * 删除多余的缩进 更方便阅读
		         */
		
		    }, {
		        key: '_clearRuleIndent',
		        value: function _clearRuleIndent(rule) {
		            // 为了取出正确的首行缩进数量 需要去掉第一行的换行
		            rule = rule.replace(/^\n/, '');
		            var whiteSpaceLength = rule.match(/^\s*/)[0].length;
		            var firstLineIndentRegExp = new RegExp('^\\s{' + whiteSpaceLength + '}');
		            var otherLinesIndentResExp = new RegExp('\\n\\s{' + whiteSpaceLength + '}', 'mg');
		            //console.log(rule.match(otherLinesIndentResExp));
		            // 删除多余的缩进
		            rule = rule.replace(firstLineIndentRegExp, '').replace(otherLinesIndentResExp, '\n');
		
		            return rule;
		        }
		    }]);
		
		    return StyleContext;
		}();
		
		// 创建一个Component的样式上下文
		
		
		var existedInstances = {};
		var createStyleContext = function createStyleContext(contextId) {
		    if (!contextId) {
		        console.error('The param(`contextId`) is required for `createStyleContext`(tingle-style/util.js) method. ');
		        return;
		    }
		    return existedInstances[contextId] || (existedInstances[contextId] = new StyleContext(contextId));
		};
		
		/**
		 * 添加长度单位，默认单位是`px`
		 * @param any {Number|String|*}
		 * @returns {Number|String} 返回Number时一定是0 否则返回的都是带有单位的长度字符串值
		 * @demo
		 *      unitize(10)     // 10px
		 *      unitize('10px') // 10px
		 *      unitize('1rem') // 1rem
		 *      unitize()       // 0
		 */
		var unitize = function unitize(any) {
		    var ret = void 0;
		    if (typeof any === 'number') {
		        ret = '' + any + 'px';
		    } else if (typeof any === 'string') {
		        if (any.match(/^\d+$/)) {
		            ret = any + 'px';
		        } else {
		            ret = any;
		        }
		    } else {
		        ret = 0;
		    }
		    return ret;
		};
		
		module.exports = {
		    createStyleContext: createStyleContext,
		    unitize: unitize
		};
		
	
	/***/ },
	/* 47 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		/**
		 * Tingle Context
		 * The environment for tingle's initialization
		 * @author gnosaij
		 *
		 * Copyright 2014-2015, Tingle Team, Alinw.
		 * All rights reserved.
		 */
		
		module.exports = __webpack_require__(48);
		
	
	
	/***/ },
	/* 48 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		/**
		 * Tingle Context
		 * The environment for tingle's initialization
		 * @author gnosaij
		 *
		 * Copyright 2014-2015, Tingle Team, Alinw.
		 * All rights reserved.
		 */
		var win = window;
		var doc = document;
		// 引入环境检测模块
		var env = __webpack_require__(49);
		var classnames = __webpack_require__(45);
		
		// 全局点击态初始化
		__webpack_require__(50).attach(doc.body);
		
		/**
		 * 变换两个参数的函数到多个参数
		 * @param  {Function} fn 基函数
		 * @return {Function} 变换后的函数
		 * @demo
		 *      let add = (x, y) => { return x+y; }
		 *      add = redo(add);
		 *      add(1,2,3) => 6
		 */
		var redo = function redo(fn) {
		    return function () {
		        var args = arguments;
		        var ret = fn(args[0], args[1]);
		        for (var i = 2, l = args.length; i < l; i++) {
		            ret = fn(ret, args[i]);
		        }
		        return ret;
		    };
		};
		
		/**
		 * 对象扩展
		 * @param  {Object} receiver
		 * @param  {Object} supplier
		 * @return {Object} 扩展后的receiver对象
		 */
		var mixin = redo(function (receiver, supplier) {
		    if (Object.keys) {
		        Object.keys(supplier).forEach(function (property) {
		            Object.defineProperty(receiver, property, Object.getOwnPropertyDescriptor(supplier, property));
		        });
		    } else {
		        for (var property in supplier) {
		            if (supplier.hasOwnProperty(property)) {
		                receiver[property] = supplier[property];
		            }
		        }
		    }
		    return receiver;
		});
		
		/**
		 * 获取自增长id
		 * @return {Number}
		 */
		var tid = 0;
		var getTID = function getTID() {
		    return tid++;
		};
		
		/**
		 * rem system
		 * @TODO 这个闭包 + rem方法 + makePrivateRem方法的整合
		 */
		(function (docEl, fontEl) {
		    var dpr = win.devicePixelRatio || 1;
		
		    // 类似小米2 webView webkit版本是534及以下，避免闪屏
		    var matches = navigator.userAgent.match(/Android[\S\s]+AppleWebkit\/?(\d{3})/i);
		    if (matches && matches[1] <= 534) {
		        dpr = 1;
		    }
		
		    win.dpr = dpr;
		
		    if (!docEl.getAttribute('data-dpr')) {
		        // 在body上添加环境检测的标识类className
		        doc.documentElement.className = classnames(doc.documentElement.className.trim(), _defineProperty({
		            pc: env.isPC,
		            mobile: env.isMobile,
		            hairline: env.supportHairline
		        }, 'dpr' + dpr, dpr > 1));
		
		        docEl.setAttribute('data-dpr', dpr);
		        docEl.firstElementChild.appendChild(fontEl);
		    }
		
		    var setRem = function setRem() {
		        var docWidth = docEl.clientWidth;
		        win.rem = docWidth / 10;
		
		        // ZTE 中兴 ZTE U930_TD/1.0 Linux/2.6.39/Android/4.0Release/3.5.2012 Browser/AppleWebkit534.30
		        // 老机器bug rem计算不是标准=html fontsize
		        if (/ZTE U930_TD/.test(navigator.userAgent)) {
		            win.rem = win.rem * 1.13;
		        }
		
		        fontEl.innerHTML = 'html{font-size:' + win.rem + 'px!important}';
		    };
		
		    win.addEventListener('resize', function () {
		        // resize时立刻change,pad上刷屏明显
		        setRem();
		    }, false);
		    win.addEventListener('pageshow', function (e) {
		        if (e.persisted) {
		            setRem();
		        }
		    }, false);
		
		    setRem();
		})(doc.documentElement, doc.createElement('style'));
		
		var defaultArtBoardWidth = 750;
		
		var rem = function rem(px, artBoardWidth) {
		    return px * 10 / (artBoardWidth || defaultArtBoardWidth) + 'rem';
		};
		
		var makePrivateRem = function makePrivateRem(artBoardWidth) {
		    return function (px) {
		        return rem(px, artBoardWidth);
		    };
		};
		
		// 全局默认配置
		var defaultGlobalConfig = {
		    svgPath: ''
		};
		
		var runtimeGlobalConfig = {};
		
		/**
		 * Top namespace
		 */
		// TODO setGlobal/getGlobal
		var Context = {
		    getTID: getTID,
		    mixin: mixin,
		    noop: function noop(v) {
		        return v;
		    },
		
		    rem: rem,
		    makePrivateRem: makePrivateRem,
		    /**
		     * 执行全局配置
		     * @param options
		     */
		    setGlobal: function setGlobal(options) {
		        runtimeGlobalConfig = mixin({}, defaultGlobalConfig, options);
		    },
		
		    /**
		     * 获取全局配置
		     * @param property {String} optional
		     * @returns {*}
		     */
		    getGlobal: function getGlobal(property) {
		        return property ? runtimeGlobalConfig[property] : runtimeGlobalConfig;
		    },
		
		    /**
		     * 为 class 添加前缀
		     * @param property {String} required
		     * @returns {*}
		     */
		    prefixClass: function prefixClass(classNames) {
		        var prefix = Context.getGlobal('classNamePrefix') || 't';
		        return classNames.split(' ').map(function (className) {
		            return prefix + '-' + className;
		        }).join(' ');
		    }
		};
		
		mixin(Context, env);
		
		// 多次require时保证返回同一个全局对象 保证setGlobal/getGlobal正确执行
		module.exports = win.__TingleContext || (win.__TingleContext = Context);
		
	
	
	/***/ },
	/* 49 */
	/***/ function(module, exports) {
	
		'use strict';
		
		/**
		 * Tingle Context
		 * The environment for tingle's initialization
		 * @author gnosaij
		 *
		 * Copyright 2014-2015, Tingle Team, Alinw.
		 * All rights reserved.
		 */
		
		var win = window;
		var doc = document;
		
		var ua = navigator.userAgent;
		var isMobile = !!ua.match(/mobile/i) || 'orientation' in win;
		var isPC = !isMobile;
		
		var supportTouch = 'ontouchstart' in window;
		var support3D = 'WebKitCSSMatrix' in window && 'm11' in new WebKitCSSMatrix();
		var supportHairline = function () {
		    var support = false;
		    if (win.devicePixelRatio && devicePixelRatio >= 2) {
		        var testElem = doc.createElement('div');
		        testElem.style.border = '.5px solid transparent';
		        doc.body.appendChild(testElem);
		        if (testElem.offsetHeight == 1) {
		            // 0.5 + 0.5 = 1
		            support = true;
		        }
		        doc.body.removeChild(testElem);
		    }
		    return support;
		}();
		
		// 常量
		var TOUCH_START = supportTouch ? 'touchstart' : 'mousedown';
		var TOUCH_MOVE = supportTouch ? 'touchmove' : 'mousemove';
		var TOUCH_END = supportTouch ? 'touchend' : 'mouseup';
		var TOUCH_CANCEL = supportTouch ? 'touchcancel' : 'mouseup';
		
		var env = {
		    // 是什么环境
		    isPC: isPC,
		    isMobile: isMobile,
		
		    // 是否支持
		    support3D: support3D,
		    supportHairline: supportHairline,
		    supportTouch: supportTouch,
		
		    // 事件去差异
		    TOUCH_START: TOUCH_START,
		    TOUCH_MOVE: TOUCH_MOVE,
		    TOUCH_END: TOUCH_END,
		    TOUCH_CANCEL: TOUCH_CANCEL,
		    RESIZE: 'resize'
		};
		
		module.exports = env;
		
	
	
	/***/ },
	/* 50 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		/**
		 * Tingle Context
		 * The environment for tingle's initialization
		 * @author yize
		 *
		 * Copyright 2014-2015, Tingle Team, Alinw.
		 * All rights reserved.
		 */
		
		var env = __webpack_require__(49);
		var TOUCH_START = env.TOUCH_START;
		var TOUCH_END = env.TOUCH_END;
		var TOUCH_CANCEL = env.TOUCH_CANCEL;
		
		var TouchEffect = function () {
		    /**
		     *
		     * @param layer
		     * @param options
		     */
		
		    function TouchEffect(layer, options) {
		        _classCallCheck(this, TouchEffect);
		
		        var t = this;
		        t.layer = layer;
		        t.options = options || {
		            selector: "tTE", // abbr. tTouchEffect
		            activeClass: "hover"
		        };
		        t.selector = t.options.selector;
		        t.activeClass = t.options.activeClass;
		        t.initEvent();
		    }
		
		    _createClass(TouchEffect, [{
		        key: "initEvent",
		        value: function initEvent() {
		            var t = this;
		            var layer = t.layer;
		
		            layer.addEventListener(TOUCH_START, t.onTouchStart.bind(t), false);
		            layer.addEventListener(TOUCH_END, t.onTouchEnd.bind(t), false);
		            layer.addEventListener(TOUCH_CANCEL, t.onTouchEnd.bind(t), false);
		        }
		    }, {
		        key: "onTouchStart",
		        value: function onTouchStart(event) {
		
		            var t = this;
		            var target = event.target;
		
		            while (target && target.classList && !target.classList.contains(t.selector)) {
		                target = target.parentNode;
		            }
		
		            if (target && target.classList && target.classList.contains(t.selector)) {
		                target.classList.add(t.activeClass);
		            }
		        }
		    }, {
		        key: "onTouchEnd",
		        value: function onTouchEnd(event) {
		
		            var t = this;
		            var target = event.target;
		
		            while (target && target.classList && !target.classList.contains(t.selector)) {
		                target = target.parentNode;
		            }
		
		            if (target && target.classList && target.classList.contains(t.selector)) {
		                target.classList.remove(t.activeClass);
		            }
		        }
		    }, {
		        key: "destroy",
		        value: function destroy() {
		            var t = this;
		            var layer = t.layer;
		            layer.removeEventListener(TOUCH_START, t.onTouchStart.bind(t), false);
		            layer.removeEventListener(TOUCH_END, t.onTouchEnd.bind(t), false);
		            layer.removeEventListener(TOUCH_CANCEL, t.onTouchEnd.bind(t), false);
		        }
		    }]);
		
		    return TouchEffect;
		}();
		
		TouchEffect.attach = function (layer, options) {
		    return new TouchEffect(layer, options);
		};
		
		module.exports = TouchEffect;
		
	
	
	/***/ },
	/* 51 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		/**
		 * Box Component Style for tingle
		 * @author fushan
		 *
		 * Copyright 2014-2016, Tingle Team, Alinw.
		 * All rights reserved.
		 */
		
		module.exports = __webpack_require__(52);
		
	
	
	/***/ },
	/* 52 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
		
		/**
		 * Box Component for tingle
		 * @author gnosaij
		 *
		 * Copyright 2014-2015, Tingle Team, Alinw.
		 * All rights reserved.
		 */
		
		var React = __webpack_require__(2);
		var classnames = __webpack_require__(45);
		
		var _require = __webpack_require__(47);
		
		var prefixClass = _require.prefixClass;
		
		
		var START = 'start';
		var CENTER = 'center';
		var END = 'end';
		var ALIGN_VALUES = [START, CENTER, END];
		
		/**
		 * 水平方向弹性容器
		 * @param props
		 * @returns {XML}
		 * @constructor
		 */
		var HBox = function HBox(props) {
		  var _classnames;
		
		  var className = props.className;
		  var flex = props.flex;
		  var vAlign = props.vAlign;
		  var hAlign = props.hAlign;
		
		  var other = _objectWithoutProperties(props, ['className', 'flex', 'vAlign', 'hAlign']);
		
		  var c = classnames(prefixClass('FBH'), (_classnames = {}, _defineProperty(_classnames, prefixClass('FB' + flex), !!flex), _defineProperty(_classnames, prefixClass('FBAS'), vAlign === START), _defineProperty(_classnames, prefixClass('FBAC'), vAlign === CENTER), _defineProperty(_classnames, prefixClass('FBAE'), vAlign === END), _defineProperty(_classnames, prefixClass('FBJS'), hAlign === START), _defineProperty(_classnames, prefixClass('FBJC'), hAlign === CENTER), _defineProperty(_classnames, prefixClass('FBJE'), hAlign === END), _defineProperty(_classnames, className, !!className), _classnames));
		
		  return React.createElement(
		    'div',
		    _extends({}, other, { className: c }),
		    props.children
		  );
		};
		
		HBox.propTypes = {
		  className: React.PropTypes.string,
		  flex: React.PropTypes.number,
		  hAlign: React.PropTypes.oneOf(ALIGN_VALUES),
		  vAlign: React.PropTypes.oneOf(ALIGN_VALUES)
		};
		
		HBox.displayName = 'HBox';
		
		/**
		 * 垂直方向弹性容器
		 * @param props
		 * @returns {XML}
		 * @constructor
		 */
		var VBox = function VBox(props) {
		  var _classnames2;
		
		  var className = props.className;
		  var flex = props.flex;
		  var vAlign = props.vAlign;
		  var hAlign = props.hAlign;
		
		  var other = _objectWithoutProperties(props, ['className', 'flex', 'vAlign', 'hAlign']);
		
		  var c = classnames(prefixClass('FBV'), (_classnames2 = {}, _defineProperty(_classnames2, prefixClass('FB' + flex), !!flex), _defineProperty(_classnames2, prefixClass('FBJS'), vAlign === START), _defineProperty(_classnames2, prefixClass('FBJC'), vAlign === CENTER), _defineProperty(_classnames2, prefixClass('FBJE'), vAlign === END), _defineProperty(_classnames2, prefixClass('FBAS'), hAlign === START), _defineProperty(_classnames2, prefixClass('FBAC'), hAlign === CENTER), _defineProperty(_classnames2, prefixClass('FBAE'), hAlign === END), _defineProperty(_classnames2, className, !!className), _classnames2));
		
		  return React.createElement(
		    'div',
		    _extends({}, other, { className: c }),
		    props.children
		  );
		};
		
		VBox.propTypes = {
		  className: React.PropTypes.string,
		  flex: React.PropTypes.number,
		  hAlign: React.PropTypes.oneOf(ALIGN_VALUES),
		  vAlign: React.PropTypes.oneOf(ALIGN_VALUES)
		};
		
		VBox.displayName = 'VBox';
		
		/**
		 * 伸缩子元素
		 * @param props
		 * @returns {XML}
		 * @constructor
		 */
		var Box = function Box(props) {
		  var _classnames3;
		
		  var className = props.className;
		  var flex = props.flex;
		
		  var other = _objectWithoutProperties(props, ['className', 'flex']);
		
		  var c = classnames((_classnames3 = {}, _defineProperty(_classnames3, prefixClass('FB' + flex), !!flex), _defineProperty(_classnames3, className, !!className), _classnames3));
		
		  return React.createElement(
		    'div',
		    _extends({}, other, { className: c }),
		    props.children
		  );
		};
		
		Box.propTypes = {
		  className: React.PropTypes.string,
		  flex: React.PropTypes.number,
		  hAlign: React.PropTypes.oneOf(ALIGN_VALUES),
		  vAlign: React.PropTypes.oneOf(ALIGN_VALUES)
		};
		
		Box.displayName = 'Box';
		
		module.exports = { HBox: HBox, VBox: VBox, Box: Box };
		
	
	
	/***/ },
	/* 53 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		/**
		 * Button Component Style for tingle
		 * @author cm
		 *
		 * Copyright 2014-2016, Tingle Team, Alinw.
		 * All rights reserved.
		 */
		
		module.exports = __webpack_require__(54);
		
	
	
	/***/ },
	/* 54 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		/**
		* Button Component for tingle
		* @author cm
		*
		* Copyright 2014-2016, Tingle Team, Alinw.
		* All rights reserved.
		*/
		var React = __webpack_require__(2);
		var classnames = __webpack_require__(45);
		var Context = __webpack_require__(47);
		
		var prefixClass = function prefixClass(name) {
		    return Context.prefixClass ? Context.prefixClass(name) : 't-' + name;
		};
		
		var Button = function (_React$Component) {
		    _inherits(Button, _React$Component);
		
		    function Button(props) {
		        _classCallCheck(this, Button);
		
		        return _possibleConstructorReturn(this, (Button.__proto__ || Object.getPrototypeOf(Button)).call(this, props));
		    }
		
		    _createClass(Button, [{
		        key: 'handleClick',
		        value: function handleClick(evt) {
		            if (!this.props.disabled) {
		                this.props.onClick(evt);
		            }
		        }
		    }, {
		        key: 'render',
		        value: function render() {
		            var _classSet;
		
		            var size = this.props.size;
		
		            var type = this.props.type;
		            var primary = type === 'primary';
		            var secondary = type === 'secondary';
		            var danger = type === 'danger';
		            var text = type === 'text';
		            var minor = type === 'minor';
		
		            var disabled = !!this.props.disabled;
		            var classSet = (_classSet = {}, _defineProperty(_classSet, '' + prefixClass('FBH FBAC FBJC'), true), _defineProperty(_classSet, this.props.className, !!this.props.className), _defineProperty(_classSet, '' + prefixClass('button'), true), _defineProperty(_classSet, 'disabled', disabled), _defineProperty(_classSet, '' + prefixClass('button-small'), size === 'small'), _defineProperty(_classSet, '' + prefixClass('button-large'), size === 'large'), _defineProperty(_classSet, '' + prefixClass('button-primary'), primary && !disabled), _defineProperty(_classSet, '' + prefixClass('button-secondary'), secondary && !disabled), _defineProperty(_classSet, '' + prefixClass('button-minor'), minor && !disabled), _defineProperty(_classSet, '' + prefixClass('button-danger'), danger && !disabled), _defineProperty(_classSet, '' + prefixClass('button-text'), text), _classSet);
		
		            var style = this.props.style;
		
		            return React.createElement(
		                'div',
		                { className: classnames(classSet),
		                    disabled: disabled,
		                    style: style,
		                    onClick: this.handleClick.bind(this) },
		                this.props.children
		            );
		        }
		    }]);
		
		    return Button;
		}(React.Component);
		
		Button.defaultProps = {
		    size: 'medium',
		    type: 'primary',
		    disabled: false,
		    style: {},
		    onClick: function onClick() {}
		};
		
		// http://facebook.github.io/react/docs/reusable-components.html
		Button.propTypes = {
		    size: React.PropTypes.oneOf(['medium', 'large', 'small']),
		    type: React.PropTypes.oneOf(['primary', 'secondary', 'minor', 'danger', 'text']),
		    disabled: React.PropTypes.bool,
		    style: React.PropTypes.object,
		    onClick: React.PropTypes.func
		};
		
		Button.displayName = 'Button';
		
		module.exports = Button;
		
	
	
	/***/ },
	/* 55 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		/**
		 * Calendar Component Style for tingle
		 * @author wenzhao.fw
		 *
		 * Copyright 2014-2016, Tingle Team, Alinw.
		 * All rights reserved.
		 */
		
		module.exports = __webpack_require__(56);
		
	
	
	/***/ },
	/* 56 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		/**
		 * Calendar Component for tingle
		 * @author wenzhao.fw
		 *
		 * Copyright 2014-2016, Tingle Team.
		 * All rights reserved.
		 */
		
		var classnames = __webpack_require__(45);
		var Formatter = __webpack_require__(57);
		var Layer = __webpack_require__(59);
		var i18n = __webpack_require__(63);
		var MonthCalendar = __webpack_require__(64);
		var YearCalendar = __webpack_require__(78);
		var Day = __webpack_require__(79);
		var Month = __webpack_require__(76);
		var Year = __webpack_require__(77);
		var deepcopy = __webpack_require__(65);
		var deepEqual = __webpack_require__(73);
		var Context = __webpack_require__(47);
		var prefixClass = Context.prefixClass;
		
		// value 的格式：{startDate: '2016-01-02', startDateType: 'AM', endDate: '2016-01-03', endDateType: 'AM' }
		
		var Calendar = function (_React$Component) {
		    _inherits(Calendar, _React$Component);
		
		    function Calendar(props) {
		        _classCallCheck(this, Calendar);
		
		        // value 可能是对象，为防止外部直接修改 props.value，造成 componentWillReceiveProps 出现问题
		        // 故在此备份一份
		        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Calendar).call(this, props));
		
		        _this.value = deepcopy(props.value);
		        _this.state = {
		            value: deepcopy(props.value),
		            panel: 'day'
		        };
		        return _this;
		    }
		
		    _createClass(Calendar, [{
		        key: 'componentWillMount',
		        value: function componentWillMount() {
		            var t = this;
		            t.locale = i18n[t.props.locale];
		        }
		    }, {
		        key: 'componentWillReceiveProps',
		        value: function componentWillReceiveProps(nextProps) {
		            var t = this;
		            if (!deepEqual(nextProps.value, t.value)) {
		                t.value = deepcopy(nextProps.value);
		                t.setState({
		                    value: deepcopy(nextProps.value)
		                });
		            }
		        }
		    }, {
		        key: 'handleChange',
		        value: function handleChange(value) {
		            var t = this;
		            var panelMap = {
		                month: 'day',
		                year: 'month'
		            };
		            var newState = {
		                value: value
		            };
		            if (t.state.panel == 'month' || t.state.panel == 'year') {
		                newState['panel'] = panelMap[t.state.panel];
		            }
		            t.setState(newState);
		        }
		    }, {
		        key: 'handlePanelChange',
		        value: function handlePanelChange() {
		            var t = this;
		            var panel = t.state.panel;
		
		            if (panel == 'day') {
		                panel = 'month';
		            } else if (panel == 'month') {
		                panel = 'year';
		            }
		            t.setState({
		                panel: panel
		            });
		        }
		    }, {
		        key: 'handleCanel',
		        value: function handleCanel() {
		            var t = this;
		            t.setState({
		                panel: 'day'
		            });
		            t.props.onCancel();
		        }
		    }, {
		        key: 'handleClear',
		        value: function handleClear() {
		            var t = this;
		            t.setState({
		                value: deepcopy(t.props.value)
		            });
		        }
		    }, {
		        key: 'handleOk',
		        value: function handleOk() {
		            var t = this;
		            t.props.onOk(deepcopy(t.state.value));
		        }
		    }, {
		        key: 'renderPanel',
		        value: function renderPanel() {
		            var t = this;
		            var _t$state = t.state;
		            var value = _t$state.value;
		            var panel = _t$state.panel;
		            var _t$props = t.props;
		            var singleMode = _t$props.singleMode;
		            var locale = _t$props.locale;
		            var showHalfDay = _t$props.showHalfDay;
		
		            var panelProps = {
		                value: value,
		                onChange: t.handleChange.bind(t),
		                singleMode: singleMode,
		                locale: locale,
		                showHalfDay: showHalfDay,
		                onTitleClick: t.handlePanelChange.bind(t),
		                onSelecting: t.props.onSelecting,
		                extraClass: t.props.extraClass
		            };
		            if (panel == 'day') {
		                return React.createElement(Day, panelProps);
		            } else {
		                panelProps['singleMode'] = true;
		                if (panel == 'month') {
		                    return React.createElement(Month, panelProps);
		                } else {
		                    return React.createElement(Year, panelProps);
		                }
		            }
		        }
		    }, {
		        key: 'renderTopPanel',
		        value: function renderTopPanel() {
		            return React.createElement(
		                'div',
		                { className: classnames(_defineProperty({}, prefixClass("top-panel"), true)) },
		                React.createElement(
		                    'span',
		                    { className: prefixClass("top-panel-cancel"), onClick: this.handleCanel.bind(this) },
		                    this.locale['button']['cancel']
		                ),
		                React.createElement(
		                    'span',
		                    { className: prefixClass("top-panel-title") },
		                    this.props.topPanelTitle || '选择时间'
		                ),
		                React.createElement(
		                    'span',
		                    { className: prefixClass("top-panel-confirm"), onClick: this.handleOk.bind(this) },
		                    this.locale['button']['confirm']
		                )
		            );
		        }
		    }, {
		        key: 'renderBottomPanel',
		        value: function renderBottomPanel() {
		            var _classnames3;
		
		            var t = this;
		            return React.createElement(
		                'div',
		                { className: classnames(_defineProperty({}, prefixClass("operate"), true)) },
		                React.createElement(
		                    'span',
		                    { className: prefixClass("cancel tap op"), onClick: this.handleCanel.bind(this) },
		                    t.locale['button']['cancel']
		                ),
		                ' ',
		                React.createElement(
		                    'span',
		                    { className: prefixClass("reset"),
		                        onClick: this.handleClear.bind(this) },
		                    ' ',
		                    t.locale['button']['clear'],
		                    ' '
		                ),
		                ' ',
		                React.createElement(
		                    'span',
		                    { className: classnames((_classnames3 = {}, _defineProperty(_classnames3, prefixClass("confirm tap op"), true), _defineProperty(_classnames3, prefixClass('gray'), !t.state.value.startDate), _classnames3)),
		                        onClick: this.handleOk.bind(this) },
		                    ' ',
		                    t.locale['button']['confirm'],
		                    ' '
		                ),
		                ' '
		            );
		        }
		    }, {
		        key: 'render',
		        value: function render() {
		            var _classnames4;
		
		            var t = this;
		            var clearButton = '';
		            var value = t.state.value;
		            var _t$props2 = t.props;
		            var visible = _t$props2.visible;
		            var className = _t$props2.className;
		            var singleMode = _t$props2.singleMode;
		            var autoFinish = _t$props2.autoFinish;
		            var locale = _t$props2.locale;
		            var showHalfDay = _t$props2.showHalfDay;
		
		            // Calculate the height of the current container
		
		            var clientHeight = document.documentElement.clientHeight;
		            var height = 352;
		            !!t.props.showTopPanel && (height += 44);
		            !!t.props.showHalfDay && (height += 120);
		
		            return React.createElement(
		                Layer,
		                { visible: visible },
		                React.createElement(
		                    'div',
		                    { className: prefixClass("calendar-container"), style: {
		                            height: clientHeight,
		                            // Scale the view to ensure user can see the whole widget 
		                            // on the small screen device
		                            transform: height >= clientHeight ? 'scale(' + ((clientHeight / height).toFixed(3) - 0.15) + ')' : ''
		                        } },
		                    React.createElement(
		                        'div',
		                        { className: classnames((_classnames4 = {}, _defineProperty(_classnames4, prefixClass("calendar"), true), _defineProperty(_classnames4, className, !!className), _classnames4)), style: {
		                                display: visible ? 'block' : 'block',
		                                height: height
		                            } },
		                        t.props.showTopPanel && t.renderTopPanel(),
		                        t.renderPanel()
		                    )
		                )
		            );
		        }
		    }]);
		
		    return Calendar;
		}(React.Component);
		
		Calendar.propTypes = {
		    className: React.PropTypes.string,
		    visible: React.PropTypes.bool, // 是否显示
		    calendarCode: React.PropTypes.object, // 后端传来的 code
		    value: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.object]), // 默认值
		    locale: React.PropTypes.string, // 国际化语言
		    singleMode: React.PropTypes.bool, // 是否是单选模式
		    onCancel: React.PropTypes.func, // 取消选择时触发的回调
		    onOk: React.PropTypes.func, // 返回值时触发的回调
		    onSelecting: React.PropTypes.func // 开始选择时的回调
		};
		
		Calendar.defaultProps = {
		    visible: true,
		    locale: 'zh-cn',
		    calendarCode: {},
		    singleMode: true,
		    showHalfDay: false,
		    showTopPanel: true,
		    value: {
		        startDate: new Date().getTime(),
		        startDateType: 'FULL',
		        endDate: new Date().getTime(),
		        endDateType: 'FULL'
		    },
		    onCancel: function onCancel() {},
		    onOk: function onOk() {},
		    onSelecting: function onSelecting() {}
		};
		
		Calendar.MonthCalendar = MonthCalendar;
		Calendar.YearCalendar = YearCalendar;
		
		Calendar.displayName = "Calendar";
		module.exports = Calendar;
		
	
	
	/***/ },
	/* 57 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		/**
		 * Formatter Component for uxcore
		 * @author guanghong.wsj
		 *
		 * Copyright 2014-2015, Uxcore Team, Alinw.
		 * All rights reserved.
		 */
		
		module.exports = __webpack_require__(58);
	
	/***/ },
	/* 58 */
	/***/ function(module, exports) {
	
		"use strict";
		
		/**
		 * Formatter Component for uxcore
		 * @author eternalsky
		 *
		 * Copyright 2014-2015, Uxcore Team, Alinw.
		 * All rights reserved.
		 */
		
		var Formatter = {};
		
		Formatter.date = function (str, pattern) {
		    var date = new Date(str);
		    if (Object.prototype.toString.call(date) === "[object Date]") {
		        // it is date
		
		        if (isNaN(date.getTime())) {
		            // invalid
		            console.warn('Formatter: invalid date');
		            return "";
		        }
		        pattern = pattern || 'YYYY-MM-DD';
		        var o = {
		            "M+": date.getMonth() + 1, //月份
		            "D+": date.getDate(), //日
		            "d+": date.getDate(), //日
		            "H+": date.getHours(), //小时
		            "h+": date.getHours(), //小时
		            "m+": date.getMinutes(), //分
		            "s+": date.getSeconds(), //秒
		            "Q+": Math.floor((date.getMonth() + 3) / 3), //季度
		            "q+": Math.floor((date.getMonth() + 3) / 3), //季度
		            "S": date.getMilliseconds() //毫秒
		        };
		        if (/(y+)/i.test(pattern)) {
		            pattern = pattern.replace(RegExp.$1, (date.getFullYear() + "").substr(4 - RegExp.$1.length));
		        }
		        for (var k in o) {
		            if (new RegExp("(" + k + ")").test(pattern)) pattern = pattern.replace(RegExp.$1, RegExp.$1.length == 1 ? o[k] : ("00" + o[k]).substr(("" + o[k]).length));
		        }
		        return pattern;
		    }
		    console.warn('Formatter: invalid date');
		    return "";
		};
		
		Formatter.money = function (str, delimiter, fixedNum) {
		    delimiter = delimiter || " ";
		    if (fixedNum) {
		        str = parseFloat(str).toFixed(fixedNum).toString();
		    }
		    if (str.indexOf(".") !== -1) {
		        return str.replace(/(\d)(?=(?:\d{3})+(\.))/g, function (match, $1) {
		            return $1 + delimiter;
		        }).replace(/(\d{3})(?![$|\.|\(|\s])/g, function (match, $1) {
		            return $1;
		        });
		    } else {
		        return str.replace(/(\d)(?=(?:\d{3})+$)/g, function (match, $1) {
		            return $1 + delimiter;
		        });
		    }
		};
		
		Formatter.cnmobile = function (str, delimiter) {
		    delimiter = delimiter || " ";
		    return str.replace(/^(\+?0?86)(?!$)/, "$1" + delimiter).replace(/(\d{4})(?!$)/g, "$1" + delimiter);
		};
		
		Formatter.card = function (str, delimiter) {
		    delimiter = delimiter || " ";
		    return str.replace(/(\d{4})(?!$)/g, "$1" + delimiter);
		};
		
		module.exports = Formatter;
	
	/***/ },
	/* 59 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		/**
		 * Layer Component Style for tingle
		 * @author gnosaij,zhouquan.yezq
		 *
		 * Copyright 2014-2016, Tingle Team, Alinw.
		 * All rights reserved.
		 */
		
		module.exports = __webpack_require__(60);
		
	
	
	/***/ },
	/* 60 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		/**
		 * Layer Component, all model tips's base backbone
		 * (Dialog, loading...) for tinglejs
		 * @author gnosaij
		 *
		 * Copyright 2014-2016, Tingle Team, Alinw.
		 * All rights reserved.
		 */
		/* eslint-disable */
		var React = __webpack_require__(2);
		var classnames = __webpack_require__(45);
		
		var _require = __webpack_require__(47);
		
		var prefixClass = _require.prefixClass;
		var noop = _require.noop;
		
		var Mask = __webpack_require__(61);
		
		var Layer = function (_React$Component) {
		    _inherits(Layer, _React$Component);
		
		    function Layer(props) {
		        _classCallCheck(this, Layer);
		
		        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Layer).call(this, props));
		
		        _this.state = {
		            visible: props.visible
		        };
		        return _this;
		    }
		
		    _createClass(Layer, [{
		        key: 'componentWillReceiveProps',
		        value: function componentWillReceiveProps(nextProps) {
		            var t = this;
		            var visible = nextProps.visible;
		            if (visible === false && t.props.onWillHide() === false) {
		                return;
		            }
		            this.setState({
		                visible: nextProps.visible
		            }, visible ? t.props.onDidShow : t.props.onDidHide);
		        }
		    }, {
		        key: 'getStyle',
		        value: function getStyle() {
		            var t = this;
		            var visible = t.state.visible;
		            var fullScreen = t.props.fullScreen;
		
		
		            var hasWidth = 'width' in t.props;
		            var hasHeight = 'height' in t.props;
		            var hasTop = 'top' in t.props;
		            var hasBottom = 'bottom' in t.props;
		            var hasLeft = 'left' in t.props;
		            var hasRight = 'right' in t.props;
		
		            var style = {
		                width: fullScreen || !hasWidth ? '100%' : t.props.width,
		                height: fullScreen ? '100%' : hasHeight ? t.props.height : 'auto'
		            };
		
		            if (fullScreen) {
		                style.top = 0;
		                style.left = 0;
		            } else {
		                if (hasTop) {
		                    style.top = t.props.top;
		                } else if (hasBottom) {
		                    style.bottom = t.props.bottom;
		                } else {
		                    style.top = '50%';
		                    style['WebkitTransform'] = (style['WebkitTransform'] || '') + ' translateY(-50%)';
		                    style['transform'] = (style['transform'] || '') + ' translateY(-50%)';
		                }
		
		                if (hasLeft) {
		                    style.left = t.props.left;
		                } else if (hasRight) {
		                    style.right = t.props.right;
		                } else {
		                    style.left = '50%';
		                    style['WebkitTransform'] = (style['WebkitTransform'] || '') + ' translateX(-50%)';
		                    style['transform'] = (style['transform'] || '') + ' translateX(-50%)';
		                }
		            }
		
		            style.zIndex = t.props.zIndex;
		            style.display = visible ? 'block' : 'none';
		
		            return style;
		        }
		    }, {
		        key: 'handleMaskClick',
		        value: function handleMaskClick() {
		            var t = this;
		
		            // 如果禁止了点击Mask关闭Layer, 则Mask的onWillHide必须返回false
		            if (t.props.maskCloseable === false || t.props.onWillHide() === false) {
		                return false;
		            }
		            t.setState({
		                visible: false
		            }, function () {
		                t.props.onDidHide();
		            });
		        }
		    }, {
		        key: 'render',
		        value: function render() {
		            var t = this;
		            var _t$props = t.props;
		            var className = _t$props.className;
		            var style = _t$props.style;
		
		            var other = _objectWithoutProperties(_t$props, ['className', 'style']);
		
		            return React.createElement(
		                'div',
		                null,
		                React.createElement(
		                    'div',
		                    _extends({}, other, { className: classnames(prefixClass('layer'), _defineProperty({}, className, !!className)), style: t.getStyle() }),
		                    t.props.children
		                ),
		                this.props.hasMask && React.createElement(Mask, { zIndex: this.props.zIndex - 1,
		                    onWillHide: (t.props.onMaskClick || t.handleMaskClick).bind(t),
		                    closeable: true, visible: t.state.visible, opacity: 0.6 })
		            );
		        }
		    }]);
		
		    return Layer;
		}(React.Component);
		
		//zIndex no defalut value, we use auto generate way to handle it
		
		
		Layer.defaultProps = {
		    onDidShow: noop,
		    onWillHide: noop,
		    onDidHide: noop,
		    maskOpacity: 0.6,
		    maskCloseable: false,
		    hasMask: true,
		    visible: false,
		    zIndex: 1000,
		    fullScreen: false
		};
		
		// http://facebook.github.io/react/docs/reusable-components.html
		Layer.propTypes = {
		    onDidShow: React.PropTypes.func,
		    onWillHide: React.PropTypes.func,
		    onMaskClick: React.PropTypes.func,
		    onDidHide: React.PropTypes.func,
		    maskOpacity: React.PropTypes.number,
		    maskCloseable: React.PropTypes.bool,
		    hasMask: React.PropTypes.bool,
		    visible: React.PropTypes.bool,
		    zIndex: React.PropTypes.number,
		    fullScreen: React.PropTypes.bool
		    // more: top, left, bottom, right, width, height
		};
		
		Layer.displayName = "Layer";
		
		module.exports = Layer;
		
	
	
	/***/ },
	/* 61 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		/**
		 * Mask Component Style for tingle
		 * @author quanyun.mqy
		 *
		 * Copyright 2014-2016, Tingle Team, Alinw.
		 * All rights reserved.
		 */
		
		module.exports = __webpack_require__(62);
		
	
	
	/***/ },
	/* 62 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		/**
		 * Mask Component for tingle
		 * @author quanyun.mqy
		 *
		 * Copyright 2014-2016, Tingle Team.
		 * All rights reserved.
		 */
		var React = __webpack_require__(2);
		var classnames = __webpack_require__(45);
		
		var _require = __webpack_require__(47);
		
		var prefixClass = _require.prefixClass;
		var noop = _require.noop;
		
		var Mask = function (_React$Component) {
		    _inherits(Mask, _React$Component);
		
		    function Mask(props) {
		        _classCallCheck(this, Mask);
		
		        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Mask).call(this, props));
		
		        _this.state = {
		            visible: props.visible
		        };
		        return _this;
		    }
		
		    _createClass(Mask, [{
		        key: 'handleClick',
		        value: function handleClick() {
		            var t = this;
		            if (t.props.closeable === false || t.props.onWillHide() === false) {
		                return;
		            }
		            t.setState({
		                visible: false
		            }, function () {
		                t.props.onDidHide();
		            });
		        }
		    }, {
		        key: 'componentWillReceiveProps',
		        value: function componentWillReceiveProps(nextProps) {
		            this.setState({
		                visible: nextProps.visible
		            });
		        }
		    }, {
		        key: 'render',
		        value: function render() {
		            var t = this;
		            var _t$props = t.props;
		            var className = _t$props.className;
		            var opacity = _t$props.opacity;
		            var zIndex = _t$props.zIndex;
		            var style = _t$props.style;
		
		            var other = _objectWithoutProperties(_t$props, ['className', 'opacity', 'zIndex', 'style']);
		
		            var visible = t.state.visible;
		
		
		            return React.createElement('div', _extends({ ref: 'root', className: classnames(prefixClass('mask'), _defineProperty({
		                    visible: visible
		                }, className, !!className)), style: {
		                    backgroundColor: 'rgba(19, 21, 26, ' + opacity + ')',
		                    opacity: visible ? 1 : 0,
		                    zIndex: zIndex
		                }, onClick: t.handleClick.bind(t) }, other));
		        }
		    }]);
		
		    return Mask;
		}(React.Component);
		
		Mask.defaultProps = {
		    closeable: true,
		    opacity: 0.6,
		    onDidHide: noop,
		    onWillHide: noop,
		    visible: false,
		    zIndex: 900
		};
		
		// http://facebook.github.io/react/docs/reusable-components.html
		Mask.propTypes = {
		    className: React.PropTypes.string,
		    closeable: React.PropTypes.bool,
		    opacity: React.PropTypes.number,
		    onDidHide: React.PropTypes.func,
		    onWillHide: React.PropTypes.func,
		    visible: React.PropTypes.bool,
		    zIndex: React.PropTypes.number
		};
		
		Mask.displayName = 'Mask';
		
		module.exports = Mask;
		
	
	
	/***/ },
	/* 63 */
	/***/ function(module, exports) {
	
		'use strict';
		
		module.exports = {
		  "zh-cn": {
		    weekTitle: ['日', '一', '二', '三', '四', '五', '六'],
		    monthTitle: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'],
		    dayTipMap: {
		      'FULL': '全天',
		      'AM': '上午',
		      'PM': '下午'
		    },
		    button: {
		      'confirm': '确定',
		      'cancel': '取消',
		      'clear': '重置'
		    }
		  },
		  "en": {
		    weekTitle: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
		    monthTitle: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
		    dayTipMap: {
		      'FULL': 'FULL',
		      'AM': 'AM',
		      'PM': 'PM'
		    },
		    button: {
		      'confirm': 'OK',
		      'cancel': 'Cancel',
		      'clear': 'reset'
		    }
		  }
		};
		
	
	
	/***/ },
	/* 64 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var classnames = __webpack_require__(45);
		var deepcopy = __webpack_require__(65);
		var deepEqual = __webpack_require__(73);
		var i18n = __webpack_require__(63);
		
		var Layer = __webpack_require__(59);
		var Formatter = __webpack_require__(57);
		var Month = __webpack_require__(76);
		var Year = __webpack_require__(77);
		
		var Context = __webpack_require__(47);
		var prefixClass = Context.prefixClass;
		
		var MonthCalendar = function (_React$Component) {
		  _inherits(MonthCalendar, _React$Component);
		
		  function MonthCalendar(props) {
		    _classCallCheck(this, MonthCalendar);
		
		    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(MonthCalendar).call(this, props));
		
		    _this.value = deepcopy(props.value);
		    _this.state = {
		      value: deepcopy(props.value),
		      panel: 'month'
		    };
		    return _this;
		  }
		
		  _createClass(MonthCalendar, [{
		    key: 'componentWillMount',
		    value: function componentWillMount() {
		      var t = this;
		      t.locale = i18n[t.props.locale];
		    }
		  }, {
		    key: 'componentWillReceiveProps',
		    value: function componentWillReceiveProps(nextProps) {
		      var t = this;
		      if (!deepEqual(nextProps.value, t.value)) {
		        t.value = deepcopy(nextProps.value);
		        t.setState({
		          value: deepcopy(nextProps.value)
		        });
		      }
		    }
		  }, {
		    key: 'handleChange',
		    value: function handleChange(value) {
		      var t = this;
		      var newState = {
		        value: value
		      };
		      if (t.state.panel == 'year') {
		        newState['panel'] = 'month';
		      }
		      t.setState(newState);
		    }
		  }, {
		    key: 'handleCanel',
		    value: function handleCanel() {
		      var t = this;
		      t.props.onCancel();
		    }
		  }, {
		    key: 'handleClear',
		    value: function handleClear() {
		      var t = this;
		      t.setState({
		        value: deepcopy(t.props.value)
		      });
		    }
		  }, {
		    key: 'handleOk',
		    value: function handleOk() {
		      var t = this;
		      var _t$state = t.state;
		      var startDate = _t$state.startDate;
		      var endDate = _t$state.endDate;
		
		      if (!!t.state.value.startDate) {
		        t.props.onOk(t.state.value);
		      }
		    }
		  }, {
		    key: 'handlePanelChange',
		    value: function handlePanelChange() {
		      var t = this;
		      var panel = t.state.panel;
		
		      if (panel == 'month') {
		        panel = 'year';
		      }
		      t.setState({
		        panel: panel
		      });
		    }
		  }, {
		    key: 'renderTopPanel',
		    value: function renderTopPanel() {
		      return React.createElement(
		        'div',
		        { className: classnames(_defineProperty({}, prefixClass("top-panel"), true)) },
		        React.createElement(
		          'span',
		          { className: prefixClass("top-panel-cancel"), onClick: this.handleCanel.bind(this) },
		          this.locale['button']['cancel']
		        ),
		        React.createElement(
		          'span',
		          { className: prefixClass("top-panel-title") },
		          this.props.topPanelTitle || '选择时间'
		        ),
		        React.createElement(
		          'span',
		          { className: prefixClass("top-panel-confirm"), onClick: this.handleOk.bind(this) },
		          this.locale['button']['confirm']
		        )
		      );
		    }
		  }, {
		    key: 'renderPanel',
		    value: function renderPanel() {
		      var t = this;
		      var _t$state2 = t.state;
		      var value = _t$state2.value;
		      var panel = _t$state2.panel;
		      var _t$props = t.props;
		      var singleMode = _t$props.singleMode;
		      var locale = _t$props.locale;
		      var showHalfDay = _t$props.showHalfDay;
		
		      var panelProps = {
		        value: value,
		        onChange: t.handleChange.bind(t),
		        singleMode: singleMode,
		        locale: locale,
		        showHalfDay: showHalfDay,
		        onTitleClick: t.handlePanelChange.bind(t)
		      };
		      if (panel == 'month') {
		        return React.createElement(Month, panelProps);
		      } else {
		        panelProps['singleMode'] = true;
		        return React.createElement(Year, panelProps);
		      }
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      var _classnames2;
		
		      var t = this;
		      var _t$props2 = t.props;
		      var visible = _t$props2.visible;
		      var className = _t$props2.className;
		      var singleMode = _t$props2.singleMode;
		
		      var button = t.locale['button'];
		
		      // Calculate the height of the current container
		      var clientHeight = document.documentElement.clientHeight;
		      var height = 230;
		      !!t.props.showTopPanel && (height += 44);
		      !!t.props.showHalfDay && (height += 120);
		
		      return React.createElement(
		        Layer,
		        { visible: visible },
		        React.createElement(
		          'div',
		          { className: prefixClass("calendar-container"), style: {
		              height: clientHeight,
		              // Scale the view to ensure user can see the whole widgit 
		              // on the small screen device
		              transform: height >= clientHeight ? 'scale(' + ((clientHeight / height).toFixed(3) - 0.15) + ')' : ''
		            } },
		          React.createElement(
		            'div',
		            { className: classnames((_classnames2 = {}, _defineProperty(_classnames2, prefixClass("calendar"), true), _defineProperty(_classnames2, className, !!className), _classnames2)), style: {
		                display: visible ? 'block' : 'none',
		                height: height
		              } },
		            t.props.showTopPanel && t.renderTopPanel(),
		            t.renderPanel()
		          )
		        )
		      );
		    }
		  }]);
		
		  return MonthCalendar;
		}(React.Component);
		
		MonthCalendar.displayName = "MonthCalendar";
		MonthCalendar.defaultProps = {
		  locale: 'zh-cn',
		  onCancel: function onCancel() {},
		  onOk: function onOk() {},
		  value: {
		    startDate: new Date().getTime(),
		    startDateType: 'FULL',
		    endDate: new Date().getTime(),
		    endDateType: 'FULL'
		  },
		  showTopPanel: true,
		  singleMode: false
		};
		MonthCalendar.propTypes = {
		  value: React.PropTypes.object,
		  locale: React.PropTypes.string,
		  onCancel: React.PropTypes.func,
		  onOk: React.PropTypes.func,
		  visible: React.PropTypes.bool,
		  singleMode: React.PropTypes.bool
		};
		
		module.exports = MonthCalendar;
		
	
	
	/***/ },
	/* 65 */
	/***/ function(module, exports, __webpack_require__) {
	
		module.exports = __webpack_require__(66);
	
	
	/***/ },
	/* 66 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		exports.__esModule = true;
		
		var _copy = __webpack_require__(67);
		
		var _polyfill = __webpack_require__(72);
		
		function defaultCustomizer(target) {
		  return void 0;
		}
		
		function deepcopy(target) {
		  var customizer = arguments.length <= 1 || arguments[1] === void 0 ? defaultCustomizer : arguments[1];
		
		  if (target === null) {
		    // copy null
		    return null;
		  }
		
		  var resultValue = (0, _copy.copyValue)(target);
		
		  if (resultValue !== null) {
		    // copy some primitive types
		    return resultValue;
		  }
		
		  var resultCollection = (0, _copy.copyCollection)(target, customizer),
		      clone = resultCollection !== null ? resultCollection : target;
		
		  var visited = [target],
		      reference = [clone];
		
		  // recursively copy from collection
		  return recursiveCopy(target, customizer, clone, visited, reference);
		}
		
		function recursiveCopy(target, customizer, clone, visited, reference) {
		  if (target === null) {
		    // copy null
		    return null;
		  }
		
		  var resultValue = (0, _copy.copyValue)(target);
		
		  if (resultValue !== null) {
		    // copy some primitive types
		    return resultValue;
		  }
		
		  var keys = (0, _polyfill.getKeys)(target).concat((0, _polyfill.getSymbols)(target));
		
		  var i = void 0,
		      len = void 0;
		
		  var key = void 0,
		      value = void 0,
		      index = void 0,
		      resultCopy = void 0,
		      result = void 0,
		      ref = void 0;
		
		  for (i = 0, len = keys.length; i < len; ++i) {
		    key = keys[i];
		    value = target[key];
		    index = (0, _polyfill.indexOf)(visited, value);
		
		    resultCopy = void 0;
		    result = void 0;
		    ref = void 0;
		
		    if (index === -1) {
		      resultCopy = (0, _copy.copy)(value, customizer);
		      result = resultCopy !== null ? resultCopy : value;
		
		      if (value !== null && /^(?:function|object)$/.test(typeof value)) {
		        visited.push(value);
		        reference.push(result);
		      }
		    } else {
		      // circular reference
		      ref = reference[index];
		    }
		
		    clone[key] = ref || recursiveCopy(value, customizer, result, visited, reference);
		  }
		
		  return clone;
		}
		
		exports['default'] = deepcopy;
		module.exports = exports['default'];
	
	/***/ },
	/* 67 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(Buffer) {'use strict';
		
		exports.__esModule = true;
		exports.copyValue = exports.copyCollection = exports.copy = void 0;
		
		var _polyfill = __webpack_require__(72);
		
		var toString = Object.prototype.toString;
		
		function copy(target, customizer) {
		  var resultValue = copyValue(target);
		
		  if (resultValue !== null) {
		    return resultValue;
		  }
		
		  return copyCollection(target, customizer);
		}
		
		function copyCollection(target, customizer) {
		  if (typeof customizer !== 'function') {
		    throw new TypeError('customizer is must be a Function');
		  }
		
		  if (typeof target === 'function') {
		    var source = String(target);
		
		    // NOTE:
		    //
		    //   https://gist.github.com/jdalton/5e34d890105aca44399f
		    //
		    //   - https://gist.github.com/jdalton/5e34d890105aca44399f#gistcomment-1283831
		    //   - http://es5.github.io/#x15
		    //
		    //   native functions does not have prototype:
		    //
		    //       Object.toString.prototype  // => undefined
		    //       (function() {}).prototype  // => {}
		    //
		    //   but cannot detect native constructor:
		    //
		    //       typeof Object     // => 'function'
		    //       Object.prototype  // => {}
		    //
		    //   and cannot detect null binded function:
		    //
		    //       String(Math.abs)
		    //         // => 'function abs() { [native code] }'
		    //
		    //     Firefox, Safari:
		    //       String((function abs() {}).bind(null))
		    //         // => 'function abs() { [native code] }'
		    //
		    //     Chrome:
		    //       String((function abs() {}).bind(null))
		    //         // => 'function () { [native code] }'
		    if (/^\s*function\s*\S*\([^\)]*\)\s*{\s*\[native code\]\s*}/.test(source)) {
		      // native function
		      return target;
		    } else {
		      // user defined function
		      return new Function('return ' + String(source))();
		    }
		  }
		
		  var targetClass = toString.call(target);
		
		  if (targetClass === '[object Array]') {
		    return [];
		  }
		
		  if (targetClass === '[object Object]' && target.constructor === Object) {
		    return {};
		  }
		
		  if (targetClass === '[object Date]') {
		    // NOTE:
		    //
		    //   Firefox need to convert
		    //
		    //   Firefox:
		    //     var date = new Date;
		    //     +date;            // 1420909365967
		    //     +new Date(date);  // 1420909365000
		    //     +new Date(+date); // 1420909365967
		    //
		    //   Chrome:
		    //     var date = new Date;
		    //     +date;            // 1420909757913
		    //     +new Date(date);  // 1420909757913
		    //     +new Date(+date); // 1420909757913
		    return new Date(target.getTime());
		  }
		
		  if (targetClass === '[object RegExp]') {
		    // NOTE:
		    //
		    //   Chrome, Safari:
		    //     (new RegExp).source => "(?:)"
		    //
		    //   Firefox:
		    //     (new RegExp).source => ""
		    //
		    //   Chrome, Safari, Firefox:
		    //     String(new RegExp) => "/(?:)/"
		    var regexpText = String(target),
		        slashIndex = regexpText.lastIndexOf('/');
		
		    return new RegExp(regexpText.slice(1, slashIndex), regexpText.slice(slashIndex + 1));
		  }
		
		  if ((0, _polyfill.isBuffer)(target)) {
		    var buffer = new Buffer(target.length);
		
		    target.copy(buffer);
		
		    return buffer;
		  }
		
		  var customizerResult = customizer(target);
		
		  if (customizerResult !== void 0) {
		    return customizerResult;
		  }
		
		  return null;
		}
		
		function copyValue(target) {
		  var targetType = typeof target;
		
		  // copy String, Number, Boolean, undefined and Symbol
		  // without null and Function
		  if (target !== null && targetType !== 'object' && targetType !== 'function') {
		    return target;
		  }
		
		  return null;
		}
		
		exports.copy = copy;
		exports.copyCollection = copyCollection;
		exports.copyValue = copyValue;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(68).Buffer))
	
	/***/ },
	/* 68 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(Buffer, global) {/*!
		 * The buffer module from node.js, for the browser.
		 *
		 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
		 * @license  MIT
		 */
		/* eslint-disable no-proto */
		
		'use strict'
		
		var base64 = __webpack_require__(69)
		var ieee754 = __webpack_require__(70)
		var isArray = __webpack_require__(71)
		
		exports.Buffer = Buffer
		exports.SlowBuffer = SlowBuffer
		exports.INSPECT_MAX_BYTES = 50
		
		/**
		 * If `Buffer.TYPED_ARRAY_SUPPORT`:
		 *   === true    Use Uint8Array implementation (fastest)
		 *   === false   Use Object implementation (most compatible, even IE6)
		 *
		 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
		 * Opera 11.6+, iOS 4.2+.
		 *
		 * Due to various browser bugs, sometimes the Object implementation will be used even
		 * when the browser supports typed arrays.
		 *
		 * Note:
		 *
		 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
		 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
		 *
		 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
		 *
		 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
		 *     incorrect length in some situations.
		
		 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
		 * get the Object implementation, which is slower but behaves correctly.
		 */
		Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
		  ? global.TYPED_ARRAY_SUPPORT
		  : typedArraySupport()
		
		/*
		 * Export kMaxLength after typed array support is determined.
		 */
		exports.kMaxLength = kMaxLength()
		
		function typedArraySupport () {
		  try {
		    var arr = new Uint8Array(1)
		    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
		    return arr.foo() === 42 && // typed array instances can be augmented
		        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
		        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
		  } catch (e) {
		    return false
		  }
		}
		
		function kMaxLength () {
		  return Buffer.TYPED_ARRAY_SUPPORT
		    ? 0x7fffffff
		    : 0x3fffffff
		}
		
		function createBuffer (that, length) {
		  if (kMaxLength() < length) {
		    throw new RangeError('Invalid typed array length')
		  }
		  if (Buffer.TYPED_ARRAY_SUPPORT) {
		    // Return an augmented `Uint8Array` instance, for best performance
		    that = new Uint8Array(length)
		    that.__proto__ = Buffer.prototype
		  } else {
		    // Fallback: Return an object instance of the Buffer class
		    if (that === null) {
		      that = new Buffer(length)
		    }
		    that.length = length
		  }
		
		  return that
		}
		
		/**
		 * The Buffer constructor returns instances of `Uint8Array` that have their
		 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
		 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
		 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
		 * returns a single octet.
		 *
		 * The `Uint8Array` prototype remains unmodified.
		 */
		
		function Buffer (arg, encodingOrOffset, length) {
		  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
		    return new Buffer(arg, encodingOrOffset, length)
		  }
		
		  // Common case.
		  if (typeof arg === 'number') {
		    if (typeof encodingOrOffset === 'string') {
		      throw new Error(
		        'If encoding is specified then the first argument must be a string'
		      )
		    }
		    return allocUnsafe(this, arg)
		  }
		  return from(this, arg, encodingOrOffset, length)
		}
		
		Buffer.poolSize = 8192 // not used by this implementation
		
		// TODO: Legacy, not needed anymore. Remove in next major version.
		Buffer._augment = function (arr) {
		  arr.__proto__ = Buffer.prototype
		  return arr
		}
		
		function from (that, value, encodingOrOffset, length) {
		  if (typeof value === 'number') {
		    throw new TypeError('"value" argument must not be a number')
		  }
		
		  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
		    return fromArrayBuffer(that, value, encodingOrOffset, length)
		  }
		
		  if (typeof value === 'string') {
		    return fromString(that, value, encodingOrOffset)
		  }
		
		  return fromObject(that, value)
		}
		
		/**
		 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
		 * if value is a number.
		 * Buffer.from(str[, encoding])
		 * Buffer.from(array)
		 * Buffer.from(buffer)
		 * Buffer.from(arrayBuffer[, byteOffset[, length]])
		 **/
		Buffer.from = function (value, encodingOrOffset, length) {
		  return from(null, value, encodingOrOffset, length)
		}
		
		if (Buffer.TYPED_ARRAY_SUPPORT) {
		  Buffer.prototype.__proto__ = Uint8Array.prototype
		  Buffer.__proto__ = Uint8Array
		  if (typeof Symbol !== 'undefined' && Symbol.species &&
		      Buffer[Symbol.species] === Buffer) {
		    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
		    Object.defineProperty(Buffer, Symbol.species, {
		      value: null,
		      configurable: true
		    })
		  }
		}
		
		function assertSize (size) {
		  if (typeof size !== 'number') {
		    throw new TypeError('"size" argument must be a number')
		  } else if (size < 0) {
		    throw new RangeError('"size" argument must not be negative')
		  }
		}
		
		function alloc (that, size, fill, encoding) {
		  assertSize(size)
		  if (size <= 0) {
		    return createBuffer(that, size)
		  }
		  if (fill !== undefined) {
		    // Only pay attention to encoding if it's a string. This
		    // prevents accidentally sending in a number that would
		    // be interpretted as a start offset.
		    return typeof encoding === 'string'
		      ? createBuffer(that, size).fill(fill, encoding)
		      : createBuffer(that, size).fill(fill)
		  }
		  return createBuffer(that, size)
		}
		
		/**
		 * Creates a new filled Buffer instance.
		 * alloc(size[, fill[, encoding]])
		 **/
		Buffer.alloc = function (size, fill, encoding) {
		  return alloc(null, size, fill, encoding)
		}
		
		function allocUnsafe (that, size) {
		  assertSize(size)
		  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
		  if (!Buffer.TYPED_ARRAY_SUPPORT) {
		    for (var i = 0; i < size; ++i) {
		      that[i] = 0
		    }
		  }
		  return that
		}
		
		/**
		 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
		 * */
		Buffer.allocUnsafe = function (size) {
		  return allocUnsafe(null, size)
		}
		/**
		 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
		 */
		Buffer.allocUnsafeSlow = function (size) {
		  return allocUnsafe(null, size)
		}
		
		function fromString (that, string, encoding) {
		  if (typeof encoding !== 'string' || encoding === '') {
		    encoding = 'utf8'
		  }
		
		  if (!Buffer.isEncoding(encoding)) {
		    throw new TypeError('"encoding" must be a valid string encoding')
		  }
		
		  var length = byteLength(string, encoding) | 0
		  that = createBuffer(that, length)
		
		  var actual = that.write(string, encoding)
		
		  if (actual !== length) {
		    // Writing a hex string, for example, that contains invalid characters will
		    // cause everything after the first invalid character to be ignored. (e.g.
		    // 'abxxcd' will be treated as 'ab')
		    that = that.slice(0, actual)
		  }
		
		  return that
		}
		
		function fromArrayLike (that, array) {
		  var length = array.length < 0 ? 0 : checked(array.length) | 0
		  that = createBuffer(that, length)
		  for (var i = 0; i < length; i += 1) {
		    that[i] = array[i] & 255
		  }
		  return that
		}
		
		function fromArrayBuffer (that, array, byteOffset, length) {
		  array.byteLength // this throws if `array` is not a valid ArrayBuffer
		
		  if (byteOffset < 0 || array.byteLength < byteOffset) {
		    throw new RangeError('\'offset\' is out of bounds')
		  }
		
		  if (array.byteLength < byteOffset + (length || 0)) {
		    throw new RangeError('\'length\' is out of bounds')
		  }
		
		  if (byteOffset === undefined && length === undefined) {
		    array = new Uint8Array(array)
		  } else if (length === undefined) {
		    array = new Uint8Array(array, byteOffset)
		  } else {
		    array = new Uint8Array(array, byteOffset, length)
		  }
		
		  if (Buffer.TYPED_ARRAY_SUPPORT) {
		    // Return an augmented `Uint8Array` instance, for best performance
		    that = array
		    that.__proto__ = Buffer.prototype
		  } else {
		    // Fallback: Return an object instance of the Buffer class
		    that = fromArrayLike(that, array)
		  }
		  return that
		}
		
		function fromObject (that, obj) {
		  if (Buffer.isBuffer(obj)) {
		    var len = checked(obj.length) | 0
		    that = createBuffer(that, len)
		
		    if (that.length === 0) {
		      return that
		    }
		
		    obj.copy(that, 0, 0, len)
		    return that
		  }
		
		  if (obj) {
		    if ((typeof ArrayBuffer !== 'undefined' &&
		        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
		      if (typeof obj.length !== 'number' || isnan(obj.length)) {
		        return createBuffer(that, 0)
		      }
		      return fromArrayLike(that, obj)
		    }
		
		    if (obj.type === 'Buffer' && isArray(obj.data)) {
		      return fromArrayLike(that, obj.data)
		    }
		  }
		
		  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
		}
		
		function checked (length) {
		  // Note: cannot use `length < kMaxLength()` here because that fails when
		  // length is NaN (which is otherwise coerced to zero.)
		  if (length >= kMaxLength()) {
		    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
		                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
		  }
		  return length | 0
		}
		
		function SlowBuffer (length) {
		  if (+length != length) { // eslint-disable-line eqeqeq
		    length = 0
		  }
		  return Buffer.alloc(+length)
		}
		
		Buffer.isBuffer = function isBuffer (b) {
		  return !!(b != null && b._isBuffer)
		}
		
		Buffer.compare = function compare (a, b) {
		  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
		    throw new TypeError('Arguments must be Buffers')
		  }
		
		  if (a === b) return 0
		
		  var x = a.length
		  var y = b.length
		
		  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
		    if (a[i] !== b[i]) {
		      x = a[i]
		      y = b[i]
		      break
		    }
		  }
		
		  if (x < y) return -1
		  if (y < x) return 1
		  return 0
		}
		
		Buffer.isEncoding = function isEncoding (encoding) {
		  switch (String(encoding).toLowerCase()) {
		    case 'hex':
		    case 'utf8':
		    case 'utf-8':
		    case 'ascii':
		    case 'latin1':
		    case 'binary':
		    case 'base64':
		    case 'ucs2':
		    case 'ucs-2':
		    case 'utf16le':
		    case 'utf-16le':
		      return true
		    default:
		      return false
		  }
		}
		
		Buffer.concat = function concat (list, length) {
		  if (!isArray(list)) {
		    throw new TypeError('"list" argument must be an Array of Buffers')
		  }
		
		  if (list.length === 0) {
		    return Buffer.alloc(0)
		  }
		
		  var i
		  if (length === undefined) {
		    length = 0
		    for (i = 0; i < list.length; ++i) {
		      length += list[i].length
		    }
		  }
		
		  var buffer = Buffer.allocUnsafe(length)
		  var pos = 0
		  for (i = 0; i < list.length; ++i) {
		    var buf = list[i]
		    if (!Buffer.isBuffer(buf)) {
		      throw new TypeError('"list" argument must be an Array of Buffers')
		    }
		    buf.copy(buffer, pos)
		    pos += buf.length
		  }
		  return buffer
		}
		
		function byteLength (string, encoding) {
		  if (Buffer.isBuffer(string)) {
		    return string.length
		  }
		  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
		      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
		    return string.byteLength
		  }
		  if (typeof string !== 'string') {
		    string = '' + string
		  }
		
		  var len = string.length
		  if (len === 0) return 0
		
		  // Use a for loop to avoid recursion
		  var loweredCase = false
		  for (;;) {
		    switch (encoding) {
		      case 'ascii':
		      case 'latin1':
		      case 'binary':
		        return len
		      case 'utf8':
		      case 'utf-8':
		      case undefined:
		        return utf8ToBytes(string).length
		      case 'ucs2':
		      case 'ucs-2':
		      case 'utf16le':
		      case 'utf-16le':
		        return len * 2
		      case 'hex':
		        return len >>> 1
		      case 'base64':
		        return base64ToBytes(string).length
		      default:
		        if (loweredCase) return utf8ToBytes(string).length // assume utf8
		        encoding = ('' + encoding).toLowerCase()
		        loweredCase = true
		    }
		  }
		}
		Buffer.byteLength = byteLength
		
		function slowToString (encoding, start, end) {
		  var loweredCase = false
		
		  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
		  // property of a typed array.
		
		  // This behaves neither like String nor Uint8Array in that we set start/end
		  // to their upper/lower bounds if the value passed is out of range.
		  // undefined is handled specially as per ECMA-262 6th Edition,
		  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
		  if (start === undefined || start < 0) {
		    start = 0
		  }
		  // Return early if start > this.length. Done here to prevent potential uint32
		  // coercion fail below.
		  if (start > this.length) {
		    return ''
		  }
		
		  if (end === undefined || end > this.length) {
		    end = this.length
		  }
		
		  if (end <= 0) {
		    return ''
		  }
		
		  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
		  end >>>= 0
		  start >>>= 0
		
		  if (end <= start) {
		    return ''
		  }
		
		  if (!encoding) encoding = 'utf8'
		
		  while (true) {
		    switch (encoding) {
		      case 'hex':
		        return hexSlice(this, start, end)
		
		      case 'utf8':
		      case 'utf-8':
		        return utf8Slice(this, start, end)
		
		      case 'ascii':
		        return asciiSlice(this, start, end)
		
		      case 'latin1':
		      case 'binary':
		        return latin1Slice(this, start, end)
		
		      case 'base64':
		        return base64Slice(this, start, end)
		
		      case 'ucs2':
		      case 'ucs-2':
		      case 'utf16le':
		      case 'utf-16le':
		        return utf16leSlice(this, start, end)
		
		      default:
		        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
		        encoding = (encoding + '').toLowerCase()
		        loweredCase = true
		    }
		  }
		}
		
		// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
		// Buffer instances.
		Buffer.prototype._isBuffer = true
		
		function swap (b, n, m) {
		  var i = b[n]
		  b[n] = b[m]
		  b[m] = i
		}
		
		Buffer.prototype.swap16 = function swap16 () {
		  var len = this.length
		  if (len % 2 !== 0) {
		    throw new RangeError('Buffer size must be a multiple of 16-bits')
		  }
		  for (var i = 0; i < len; i += 2) {
		    swap(this, i, i + 1)
		  }
		  return this
		}
		
		Buffer.prototype.swap32 = function swap32 () {
		  var len = this.length
		  if (len % 4 !== 0) {
		    throw new RangeError('Buffer size must be a multiple of 32-bits')
		  }
		  for (var i = 0; i < len; i += 4) {
		    swap(this, i, i + 3)
		    swap(this, i + 1, i + 2)
		  }
		  return this
		}
		
		Buffer.prototype.swap64 = function swap64 () {
		  var len = this.length
		  if (len % 8 !== 0) {
		    throw new RangeError('Buffer size must be a multiple of 64-bits')
		  }
		  for (var i = 0; i < len; i += 8) {
		    swap(this, i, i + 7)
		    swap(this, i + 1, i + 6)
		    swap(this, i + 2, i + 5)
		    swap(this, i + 3, i + 4)
		  }
		  return this
		}
		
		Buffer.prototype.toString = function toString () {
		  var length = this.length | 0
		  if (length === 0) return ''
		  if (arguments.length === 0) return utf8Slice(this, 0, length)
		  return slowToString.apply(this, arguments)
		}
		
		Buffer.prototype.equals = function equals (b) {
		  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
		  if (this === b) return true
		  return Buffer.compare(this, b) === 0
		}
		
		Buffer.prototype.inspect = function inspect () {
		  var str = ''
		  var max = exports.INSPECT_MAX_BYTES
		  if (this.length > 0) {
		    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
		    if (this.length > max) str += ' ... '
		  }
		  return '<Buffer ' + str + '>'
		}
		
		Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
		  if (!Buffer.isBuffer(target)) {
		    throw new TypeError('Argument must be a Buffer')
		  }
		
		  if (start === undefined) {
		    start = 0
		  }
		  if (end === undefined) {
		    end = target ? target.length : 0
		  }
		  if (thisStart === undefined) {
		    thisStart = 0
		  }
		  if (thisEnd === undefined) {
		    thisEnd = this.length
		  }
		
		  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
		    throw new RangeError('out of range index')
		  }
		
		  if (thisStart >= thisEnd && start >= end) {
		    return 0
		  }
		  if (thisStart >= thisEnd) {
		    return -1
		  }
		  if (start >= end) {
		    return 1
		  }
		
		  start >>>= 0
		  end >>>= 0
		  thisStart >>>= 0
		  thisEnd >>>= 0
		
		  if (this === target) return 0
		
		  var x = thisEnd - thisStart
		  var y = end - start
		  var len = Math.min(x, y)
		
		  var thisCopy = this.slice(thisStart, thisEnd)
		  var targetCopy = target.slice(start, end)
		
		  for (var i = 0; i < len; ++i) {
		    if (thisCopy[i] !== targetCopy[i]) {
		      x = thisCopy[i]
		      y = targetCopy[i]
		      break
		    }
		  }
		
		  if (x < y) return -1
		  if (y < x) return 1
		  return 0
		}
		
		// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
		// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
		//
		// Arguments:
		// - buffer - a Buffer to search
		// - val - a string, Buffer, or number
		// - byteOffset - an index into `buffer`; will be clamped to an int32
		// - encoding - an optional encoding, relevant is val is a string
		// - dir - true for indexOf, false for lastIndexOf
		function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
		  // Empty buffer means no match
		  if (buffer.length === 0) return -1
		
		  // Normalize byteOffset
		  if (typeof byteOffset === 'string') {
		    encoding = byteOffset
		    byteOffset = 0
		  } else if (byteOffset > 0x7fffffff) {
		    byteOffset = 0x7fffffff
		  } else if (byteOffset < -0x80000000) {
		    byteOffset = -0x80000000
		  }
		  byteOffset = +byteOffset  // Coerce to Number.
		  if (isNaN(byteOffset)) {
		    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
		    byteOffset = dir ? 0 : (buffer.length - 1)
		  }
		
		  // Normalize byteOffset: negative offsets start from the end of the buffer
		  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
		  if (byteOffset >= buffer.length) {
		    if (dir) return -1
		    else byteOffset = buffer.length - 1
		  } else if (byteOffset < 0) {
		    if (dir) byteOffset = 0
		    else return -1
		  }
		
		  // Normalize val
		  if (typeof val === 'string') {
		    val = Buffer.from(val, encoding)
		  }
		
		  // Finally, search either indexOf (if dir is true) or lastIndexOf
		  if (Buffer.isBuffer(val)) {
		    // Special case: looking for empty string/buffer always fails
		    if (val.length === 0) {
		      return -1
		    }
		    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
		  } else if (typeof val === 'number') {
		    val = val & 0xFF // Search for a byte value [0-255]
		    if (Buffer.TYPED_ARRAY_SUPPORT &&
		        typeof Uint8Array.prototype.indexOf === 'function') {
		      if (dir) {
		        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
		      } else {
		        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
		      }
		    }
		    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
		  }
		
		  throw new TypeError('val must be string, number or Buffer')
		}
		
		function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
		  var indexSize = 1
		  var arrLength = arr.length
		  var valLength = val.length
		
		  if (encoding !== undefined) {
		    encoding = String(encoding).toLowerCase()
		    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
		        encoding === 'utf16le' || encoding === 'utf-16le') {
		      if (arr.length < 2 || val.length < 2) {
		        return -1
		      }
		      indexSize = 2
		      arrLength /= 2
		      valLength /= 2
		      byteOffset /= 2
		    }
		  }
		
		  function read (buf, i) {
		    if (indexSize === 1) {
		      return buf[i]
		    } else {
		      return buf.readUInt16BE(i * indexSize)
		    }
		  }
		
		  var i
		  if (dir) {
		    var foundIndex = -1
		    for (i = byteOffset; i < arrLength; i++) {
		      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
		        if (foundIndex === -1) foundIndex = i
		        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
		      } else {
		        if (foundIndex !== -1) i -= i - foundIndex
		        foundIndex = -1
		      }
		    }
		  } else {
		    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
		    for (i = byteOffset; i >= 0; i--) {
		      var found = true
		      for (var j = 0; j < valLength; j++) {
		        if (read(arr, i + j) !== read(val, j)) {
		          found = false
		          break
		        }
		      }
		      if (found) return i
		    }
		  }
		
		  return -1
		}
		
		Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
		  return this.indexOf(val, byteOffset, encoding) !== -1
		}
		
		Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
		  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
		}
		
		Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
		  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
		}
		
		function hexWrite (buf, string, offset, length) {
		  offset = Number(offset) || 0
		  var remaining = buf.length - offset
		  if (!length) {
		    length = remaining
		  } else {
		    length = Number(length)
		    if (length > remaining) {
		      length = remaining
		    }
		  }
		
		  // must be an even number of digits
		  var strLen = string.length
		  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')
		
		  if (length > strLen / 2) {
		    length = strLen / 2
		  }
		  for (var i = 0; i < length; ++i) {
		    var parsed = parseInt(string.substr(i * 2, 2), 16)
		    if (isNaN(parsed)) return i
		    buf[offset + i] = parsed
		  }
		  return i
		}
		
		function utf8Write (buf, string, offset, length) {
		  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
		}
		
		function asciiWrite (buf, string, offset, length) {
		  return blitBuffer(asciiToBytes(string), buf, offset, length)
		}
		
		function latin1Write (buf, string, offset, length) {
		  return asciiWrite(buf, string, offset, length)
		}
		
		function base64Write (buf, string, offset, length) {
		  return blitBuffer(base64ToBytes(string), buf, offset, length)
		}
		
		function ucs2Write (buf, string, offset, length) {
		  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
		}
		
		Buffer.prototype.write = function write (string, offset, length, encoding) {
		  // Buffer#write(string)
		  if (offset === undefined) {
		    encoding = 'utf8'
		    length = this.length
		    offset = 0
		  // Buffer#write(string, encoding)
		  } else if (length === undefined && typeof offset === 'string') {
		    encoding = offset
		    length = this.length
		    offset = 0
		  // Buffer#write(string, offset[, length][, encoding])
		  } else if (isFinite(offset)) {
		    offset = offset | 0
		    if (isFinite(length)) {
		      length = length | 0
		      if (encoding === undefined) encoding = 'utf8'
		    } else {
		      encoding = length
		      length = undefined
		    }
		  // legacy write(string, encoding, offset, length) - remove in v0.13
		  } else {
		    throw new Error(
		      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
		    )
		  }
		
		  var remaining = this.length - offset
		  if (length === undefined || length > remaining) length = remaining
		
		  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
		    throw new RangeError('Attempt to write outside buffer bounds')
		  }
		
		  if (!encoding) encoding = 'utf8'
		
		  var loweredCase = false
		  for (;;) {
		    switch (encoding) {
		      case 'hex':
		        return hexWrite(this, string, offset, length)
		
		      case 'utf8':
		      case 'utf-8':
		        return utf8Write(this, string, offset, length)
		
		      case 'ascii':
		        return asciiWrite(this, string, offset, length)
		
		      case 'latin1':
		      case 'binary':
		        return latin1Write(this, string, offset, length)
		
		      case 'base64':
		        // Warning: maxLength not taken into account in base64Write
		        return base64Write(this, string, offset, length)
		
		      case 'ucs2':
		      case 'ucs-2':
		      case 'utf16le':
		      case 'utf-16le':
		        return ucs2Write(this, string, offset, length)
		
		      default:
		        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
		        encoding = ('' + encoding).toLowerCase()
		        loweredCase = true
		    }
		  }
		}
		
		Buffer.prototype.toJSON = function toJSON () {
		  return {
		    type: 'Buffer',
		    data: Array.prototype.slice.call(this._arr || this, 0)
		  }
		}
		
		function base64Slice (buf, start, end) {
		  if (start === 0 && end === buf.length) {
		    return base64.fromByteArray(buf)
		  } else {
		    return base64.fromByteArray(buf.slice(start, end))
		  }
		}
		
		function utf8Slice (buf, start, end) {
		  end = Math.min(buf.length, end)
		  var res = []
		
		  var i = start
		  while (i < end) {
		    var firstByte = buf[i]
		    var codePoint = null
		    var bytesPerSequence = (firstByte > 0xEF) ? 4
		      : (firstByte > 0xDF) ? 3
		      : (firstByte > 0xBF) ? 2
		      : 1
		
		    if (i + bytesPerSequence <= end) {
		      var secondByte, thirdByte, fourthByte, tempCodePoint
		
		      switch (bytesPerSequence) {
		        case 1:
		          if (firstByte < 0x80) {
		            codePoint = firstByte
		          }
		          break
		        case 2:
		          secondByte = buf[i + 1]
		          if ((secondByte & 0xC0) === 0x80) {
		            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
		            if (tempCodePoint > 0x7F) {
		              codePoint = tempCodePoint
		            }
		          }
		          break
		        case 3:
		          secondByte = buf[i + 1]
		          thirdByte = buf[i + 2]
		          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
		            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
		            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
		              codePoint = tempCodePoint
		            }
		          }
		          break
		        case 4:
		          secondByte = buf[i + 1]
		          thirdByte = buf[i + 2]
		          fourthByte = buf[i + 3]
		          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
		            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
		            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
		              codePoint = tempCodePoint
		            }
		          }
		      }
		    }
		
		    if (codePoint === null) {
		      // we did not generate a valid codePoint so insert a
		      // replacement char (U+FFFD) and advance only 1 byte
		      codePoint = 0xFFFD
		      bytesPerSequence = 1
		    } else if (codePoint > 0xFFFF) {
		      // encode to utf16 (surrogate pair dance)
		      codePoint -= 0x10000
		      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
		      codePoint = 0xDC00 | codePoint & 0x3FF
		    }
		
		    res.push(codePoint)
		    i += bytesPerSequence
		  }
		
		  return decodeCodePointsArray(res)
		}
		
		// Based on http://stackoverflow.com/a/22747272/680742, the browser with
		// the lowest limit is Chrome, with 0x10000 args.
		// We go 1 magnitude less, for safety
		var MAX_ARGUMENTS_LENGTH = 0x1000
		
		function decodeCodePointsArray (codePoints) {
		  var len = codePoints.length
		  if (len <= MAX_ARGUMENTS_LENGTH) {
		    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
		  }
		
		  // Decode in chunks to avoid "call stack size exceeded".
		  var res = ''
		  var i = 0
		  while (i < len) {
		    res += String.fromCharCode.apply(
		      String,
		      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
		    )
		  }
		  return res
		}
		
		function asciiSlice (buf, start, end) {
		  var ret = ''
		  end = Math.min(buf.length, end)
		
		  for (var i = start; i < end; ++i) {
		    ret += String.fromCharCode(buf[i] & 0x7F)
		  }
		  return ret
		}
		
		function latin1Slice (buf, start, end) {
		  var ret = ''
		  end = Math.min(buf.length, end)
		
		  for (var i = start; i < end; ++i) {
		    ret += String.fromCharCode(buf[i])
		  }
		  return ret
		}
		
		function hexSlice (buf, start, end) {
		  var len = buf.length
		
		  if (!start || start < 0) start = 0
		  if (!end || end < 0 || end > len) end = len
		
		  var out = ''
		  for (var i = start; i < end; ++i) {
		    out += toHex(buf[i])
		  }
		  return out
		}
		
		function utf16leSlice (buf, start, end) {
		  var bytes = buf.slice(start, end)
		  var res = ''
		  for (var i = 0; i < bytes.length; i += 2) {
		    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
		  }
		  return res
		}
		
		Buffer.prototype.slice = function slice (start, end) {
		  var len = this.length
		  start = ~~start
		  end = end === undefined ? len : ~~end
		
		  if (start < 0) {
		    start += len
		    if (start < 0) start = 0
		  } else if (start > len) {
		    start = len
		  }
		
		  if (end < 0) {
		    end += len
		    if (end < 0) end = 0
		  } else if (end > len) {
		    end = len
		  }
		
		  if (end < start) end = start
		
		  var newBuf
		  if (Buffer.TYPED_ARRAY_SUPPORT) {
		    newBuf = this.subarray(start, end)
		    newBuf.__proto__ = Buffer.prototype
		  } else {
		    var sliceLen = end - start
		    newBuf = new Buffer(sliceLen, undefined)
		    for (var i = 0; i < sliceLen; ++i) {
		      newBuf[i] = this[i + start]
		    }
		  }
		
		  return newBuf
		}
		
		/*
		 * Need to make sure that buffer isn't trying to write out of bounds.
		 */
		function checkOffset (offset, ext, length) {
		  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
		  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
		}
		
		Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
		  offset = offset | 0
		  byteLength = byteLength | 0
		  if (!noAssert) checkOffset(offset, byteLength, this.length)
		
		  var val = this[offset]
		  var mul = 1
		  var i = 0
		  while (++i < byteLength && (mul *= 0x100)) {
		    val += this[offset + i] * mul
		  }
		
		  return val
		}
		
		Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
		  offset = offset | 0
		  byteLength = byteLength | 0
		  if (!noAssert) {
		    checkOffset(offset, byteLength, this.length)
		  }
		
		  var val = this[offset + --byteLength]
		  var mul = 1
		  while (byteLength > 0 && (mul *= 0x100)) {
		    val += this[offset + --byteLength] * mul
		  }
		
		  return val
		}
		
		Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
		  if (!noAssert) checkOffset(offset, 1, this.length)
		  return this[offset]
		}
		
		Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
		  if (!noAssert) checkOffset(offset, 2, this.length)
		  return this[offset] | (this[offset + 1] << 8)
		}
		
		Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
		  if (!noAssert) checkOffset(offset, 2, this.length)
		  return (this[offset] << 8) | this[offset + 1]
		}
		
		Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
		  if (!noAssert) checkOffset(offset, 4, this.length)
		
		  return ((this[offset]) |
		      (this[offset + 1] << 8) |
		      (this[offset + 2] << 16)) +
		      (this[offset + 3] * 0x1000000)
		}
		
		Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
		  if (!noAssert) checkOffset(offset, 4, this.length)
		
		  return (this[offset] * 0x1000000) +
		    ((this[offset + 1] << 16) |
		    (this[offset + 2] << 8) |
		    this[offset + 3])
		}
		
		Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
		  offset = offset | 0
		  byteLength = byteLength | 0
		  if (!noAssert) checkOffset(offset, byteLength, this.length)
		
		  var val = this[offset]
		  var mul = 1
		  var i = 0
		  while (++i < byteLength && (mul *= 0x100)) {
		    val += this[offset + i] * mul
		  }
		  mul *= 0x80
		
		  if (val >= mul) val -= Math.pow(2, 8 * byteLength)
		
		  return val
		}
		
		Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
		  offset = offset | 0
		  byteLength = byteLength | 0
		  if (!noAssert) checkOffset(offset, byteLength, this.length)
		
		  var i = byteLength
		  var mul = 1
		  var val = this[offset + --i]
		  while (i > 0 && (mul *= 0x100)) {
		    val += this[offset + --i] * mul
		  }
		  mul *= 0x80
		
		  if (val >= mul) val -= Math.pow(2, 8 * byteLength)
		
		  return val
		}
		
		Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
		  if (!noAssert) checkOffset(offset, 1, this.length)
		  if (!(this[offset] & 0x80)) return (this[offset])
		  return ((0xff - this[offset] + 1) * -1)
		}
		
		Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
		  if (!noAssert) checkOffset(offset, 2, this.length)
		  var val = this[offset] | (this[offset + 1] << 8)
		  return (val & 0x8000) ? val | 0xFFFF0000 : val
		}
		
		Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
		  if (!noAssert) checkOffset(offset, 2, this.length)
		  var val = this[offset + 1] | (this[offset] << 8)
		  return (val & 0x8000) ? val | 0xFFFF0000 : val
		}
		
		Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
		  if (!noAssert) checkOffset(offset, 4, this.length)
		
		  return (this[offset]) |
		    (this[offset + 1] << 8) |
		    (this[offset + 2] << 16) |
		    (this[offset + 3] << 24)
		}
		
		Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
		  if (!noAssert) checkOffset(offset, 4, this.length)
		
		  return (this[offset] << 24) |
		    (this[offset + 1] << 16) |
		    (this[offset + 2] << 8) |
		    (this[offset + 3])
		}
		
		Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
		  if (!noAssert) checkOffset(offset, 4, this.length)
		  return ieee754.read(this, offset, true, 23, 4)
		}
		
		Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
		  if (!noAssert) checkOffset(offset, 4, this.length)
		  return ieee754.read(this, offset, false, 23, 4)
		}
		
		Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
		  if (!noAssert) checkOffset(offset, 8, this.length)
		  return ieee754.read(this, offset, true, 52, 8)
		}
		
		Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
		  if (!noAssert) checkOffset(offset, 8, this.length)
		  return ieee754.read(this, offset, false, 52, 8)
		}
		
		function checkInt (buf, value, offset, ext, max, min) {
		  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
		  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
		  if (offset + ext > buf.length) throw new RangeError('Index out of range')
		}
		
		Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
		  value = +value
		  offset = offset | 0
		  byteLength = byteLength | 0
		  if (!noAssert) {
		    var maxBytes = Math.pow(2, 8 * byteLength) - 1
		    checkInt(this, value, offset, byteLength, maxBytes, 0)
		  }
		
		  var mul = 1
		  var i = 0
		  this[offset] = value & 0xFF
		  while (++i < byteLength && (mul *= 0x100)) {
		    this[offset + i] = (value / mul) & 0xFF
		  }
		
		  return offset + byteLength
		}
		
		Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
		  value = +value
		  offset = offset | 0
		  byteLength = byteLength | 0
		  if (!noAssert) {
		    var maxBytes = Math.pow(2, 8 * byteLength) - 1
		    checkInt(this, value, offset, byteLength, maxBytes, 0)
		  }
		
		  var i = byteLength - 1
		  var mul = 1
		  this[offset + i] = value & 0xFF
		  while (--i >= 0 && (mul *= 0x100)) {
		    this[offset + i] = (value / mul) & 0xFF
		  }
		
		  return offset + byteLength
		}
		
		Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
		  value = +value
		  offset = offset | 0
		  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
		  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
		  this[offset] = (value & 0xff)
		  return offset + 1
		}
		
		function objectWriteUInt16 (buf, value, offset, littleEndian) {
		  if (value < 0) value = 0xffff + value + 1
		  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
		    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
		      (littleEndian ? i : 1 - i) * 8
		  }
		}
		
		Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
		  value = +value
		  offset = offset | 0
		  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
		  if (Buffer.TYPED_ARRAY_SUPPORT) {
		    this[offset] = (value & 0xff)
		    this[offset + 1] = (value >>> 8)
		  } else {
		    objectWriteUInt16(this, value, offset, true)
		  }
		  return offset + 2
		}
		
		Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
		  value = +value
		  offset = offset | 0
		  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
		  if (Buffer.TYPED_ARRAY_SUPPORT) {
		    this[offset] = (value >>> 8)
		    this[offset + 1] = (value & 0xff)
		  } else {
		    objectWriteUInt16(this, value, offset, false)
		  }
		  return offset + 2
		}
		
		function objectWriteUInt32 (buf, value, offset, littleEndian) {
		  if (value < 0) value = 0xffffffff + value + 1
		  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
		    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
		  }
		}
		
		Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
		  value = +value
		  offset = offset | 0
		  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
		  if (Buffer.TYPED_ARRAY_SUPPORT) {
		    this[offset + 3] = (value >>> 24)
		    this[offset + 2] = (value >>> 16)
		    this[offset + 1] = (value >>> 8)
		    this[offset] = (value & 0xff)
		  } else {
		    objectWriteUInt32(this, value, offset, true)
		  }
		  return offset + 4
		}
		
		Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
		  value = +value
		  offset = offset | 0
		  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
		  if (Buffer.TYPED_ARRAY_SUPPORT) {
		    this[offset] = (value >>> 24)
		    this[offset + 1] = (value >>> 16)
		    this[offset + 2] = (value >>> 8)
		    this[offset + 3] = (value & 0xff)
		  } else {
		    objectWriteUInt32(this, value, offset, false)
		  }
		  return offset + 4
		}
		
		Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
		  value = +value
		  offset = offset | 0
		  if (!noAssert) {
		    var limit = Math.pow(2, 8 * byteLength - 1)
		
		    checkInt(this, value, offset, byteLength, limit - 1, -limit)
		  }
		
		  var i = 0
		  var mul = 1
		  var sub = 0
		  this[offset] = value & 0xFF
		  while (++i < byteLength && (mul *= 0x100)) {
		    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
		      sub = 1
		    }
		    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
		  }
		
		  return offset + byteLength
		}
		
		Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
		  value = +value
		  offset = offset | 0
		  if (!noAssert) {
		    var limit = Math.pow(2, 8 * byteLength - 1)
		
		    checkInt(this, value, offset, byteLength, limit - 1, -limit)
		  }
		
		  var i = byteLength - 1
		  var mul = 1
		  var sub = 0
		  this[offset + i] = value & 0xFF
		  while (--i >= 0 && (mul *= 0x100)) {
		    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
		      sub = 1
		    }
		    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
		  }
		
		  return offset + byteLength
		}
		
		Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
		  value = +value
		  offset = offset | 0
		  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
		  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
		  if (value < 0) value = 0xff + value + 1
		  this[offset] = (value & 0xff)
		  return offset + 1
		}
		
		Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
		  value = +value
		  offset = offset | 0
		  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
		  if (Buffer.TYPED_ARRAY_SUPPORT) {
		    this[offset] = (value & 0xff)
		    this[offset + 1] = (value >>> 8)
		  } else {
		    objectWriteUInt16(this, value, offset, true)
		  }
		  return offset + 2
		}
		
		Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
		  value = +value
		  offset = offset | 0
		  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
		  if (Buffer.TYPED_ARRAY_SUPPORT) {
		    this[offset] = (value >>> 8)
		    this[offset + 1] = (value & 0xff)
		  } else {
		    objectWriteUInt16(this, value, offset, false)
		  }
		  return offset + 2
		}
		
		Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
		  value = +value
		  offset = offset | 0
		  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
		  if (Buffer.TYPED_ARRAY_SUPPORT) {
		    this[offset] = (value & 0xff)
		    this[offset + 1] = (value >>> 8)
		    this[offset + 2] = (value >>> 16)
		    this[offset + 3] = (value >>> 24)
		  } else {
		    objectWriteUInt32(this, value, offset, true)
		  }
		  return offset + 4
		}
		
		Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
		  value = +value
		  offset = offset | 0
		  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
		  if (value < 0) value = 0xffffffff + value + 1
		  if (Buffer.TYPED_ARRAY_SUPPORT) {
		    this[offset] = (value >>> 24)
		    this[offset + 1] = (value >>> 16)
		    this[offset + 2] = (value >>> 8)
		    this[offset + 3] = (value & 0xff)
		  } else {
		    objectWriteUInt32(this, value, offset, false)
		  }
		  return offset + 4
		}
		
		function checkIEEE754 (buf, value, offset, ext, max, min) {
		  if (offset + ext > buf.length) throw new RangeError('Index out of range')
		  if (offset < 0) throw new RangeError('Index out of range')
		}
		
		function writeFloat (buf, value, offset, littleEndian, noAssert) {
		  if (!noAssert) {
		    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
		  }
		  ieee754.write(buf, value, offset, littleEndian, 23, 4)
		  return offset + 4
		}
		
		Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
		  return writeFloat(this, value, offset, true, noAssert)
		}
		
		Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
		  return writeFloat(this, value, offset, false, noAssert)
		}
		
		function writeDouble (buf, value, offset, littleEndian, noAssert) {
		  if (!noAssert) {
		    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
		  }
		  ieee754.write(buf, value, offset, littleEndian, 52, 8)
		  return offset + 8
		}
		
		Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
		  return writeDouble(this, value, offset, true, noAssert)
		}
		
		Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
		  return writeDouble(this, value, offset, false, noAssert)
		}
		
		// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
		Buffer.prototype.copy = function copy (target, targetStart, start, end) {
		  if (!start) start = 0
		  if (!end && end !== 0) end = this.length
		  if (targetStart >= target.length) targetStart = target.length
		  if (!targetStart) targetStart = 0
		  if (end > 0 && end < start) end = start
		
		  // Copy 0 bytes; we're done
		  if (end === start) return 0
		  if (target.length === 0 || this.length === 0) return 0
		
		  // Fatal error conditions
		  if (targetStart < 0) {
		    throw new RangeError('targetStart out of bounds')
		  }
		  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
		  if (end < 0) throw new RangeError('sourceEnd out of bounds')
		
		  // Are we oob?
		  if (end > this.length) end = this.length
		  if (target.length - targetStart < end - start) {
		    end = target.length - targetStart + start
		  }
		
		  var len = end - start
		  var i
		
		  if (this === target && start < targetStart && targetStart < end) {
		    // descending copy from end
		    for (i = len - 1; i >= 0; --i) {
		      target[i + targetStart] = this[i + start]
		    }
		  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
		    // ascending copy from start
		    for (i = 0; i < len; ++i) {
		      target[i + targetStart] = this[i + start]
		    }
		  } else {
		    Uint8Array.prototype.set.call(
		      target,
		      this.subarray(start, start + len),
		      targetStart
		    )
		  }
		
		  return len
		}
		
		// Usage:
		//    buffer.fill(number[, offset[, end]])
		//    buffer.fill(buffer[, offset[, end]])
		//    buffer.fill(string[, offset[, end]][, encoding])
		Buffer.prototype.fill = function fill (val, start, end, encoding) {
		  // Handle string cases:
		  if (typeof val === 'string') {
		    if (typeof start === 'string') {
		      encoding = start
		      start = 0
		      end = this.length
		    } else if (typeof end === 'string') {
		      encoding = end
		      end = this.length
		    }
		    if (val.length === 1) {
		      var code = val.charCodeAt(0)
		      if (code < 256) {
		        val = code
		      }
		    }
		    if (encoding !== undefined && typeof encoding !== 'string') {
		      throw new TypeError('encoding must be a string')
		    }
		    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
		      throw new TypeError('Unknown encoding: ' + encoding)
		    }
		  } else if (typeof val === 'number') {
		    val = val & 255
		  }
		
		  // Invalid ranges are not set to a default, so can range check early.
		  if (start < 0 || this.length < start || this.length < end) {
		    throw new RangeError('Out of range index')
		  }
		
		  if (end <= start) {
		    return this
		  }
		
		  start = start >>> 0
		  end = end === undefined ? this.length : end >>> 0
		
		  if (!val) val = 0
		
		  var i
		  if (typeof val === 'number') {
		    for (i = start; i < end; ++i) {
		      this[i] = val
		    }
		  } else {
		    var bytes = Buffer.isBuffer(val)
		      ? val
		      : utf8ToBytes(new Buffer(val, encoding).toString())
		    var len = bytes.length
		    for (i = 0; i < end - start; ++i) {
		      this[i + start] = bytes[i % len]
		    }
		  }
		
		  return this
		}
		
		// HELPER FUNCTIONS
		// ================
		
		var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g
		
		function base64clean (str) {
		  // Node strips out invalid characters like \n and \t from the string, base64-js does not
		  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
		  // Node converts strings with length < 2 to ''
		  if (str.length < 2) return ''
		  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
		  while (str.length % 4 !== 0) {
		    str = str + '='
		  }
		  return str
		}
		
		function stringtrim (str) {
		  if (str.trim) return str.trim()
		  return str.replace(/^\s+|\s+$/g, '')
		}
		
		function toHex (n) {
		  if (n < 16) return '0' + n.toString(16)
		  return n.toString(16)
		}
		
		function utf8ToBytes (string, units) {
		  units = units || Infinity
		  var codePoint
		  var length = string.length
		  var leadSurrogate = null
		  var bytes = []
		
		  for (var i = 0; i < length; ++i) {
		    codePoint = string.charCodeAt(i)
		
		    // is surrogate component
		    if (codePoint > 0xD7FF && codePoint < 0xE000) {
		      // last char was a lead
		      if (!leadSurrogate) {
		        // no lead yet
		        if (codePoint > 0xDBFF) {
		          // unexpected trail
		          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
		          continue
		        } else if (i + 1 === length) {
		          // unpaired lead
		          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
		          continue
		        }
		
		        // valid lead
		        leadSurrogate = codePoint
		
		        continue
		      }
		
		      // 2 leads in a row
		      if (codePoint < 0xDC00) {
		        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
		        leadSurrogate = codePoint
		        continue
		      }
		
		      // valid surrogate pair
		      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
		    } else if (leadSurrogate) {
		      // valid bmp char, but last char was a lead
		      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
		    }
		
		    leadSurrogate = null
		
		    // encode utf8
		    if (codePoint < 0x80) {
		      if ((units -= 1) < 0) break
		      bytes.push(codePoint)
		    } else if (codePoint < 0x800) {
		      if ((units -= 2) < 0) break
		      bytes.push(
		        codePoint >> 0x6 | 0xC0,
		        codePoint & 0x3F | 0x80
		      )
		    } else if (codePoint < 0x10000) {
		      if ((units -= 3) < 0) break
		      bytes.push(
		        codePoint >> 0xC | 0xE0,
		        codePoint >> 0x6 & 0x3F | 0x80,
		        codePoint & 0x3F | 0x80
		      )
		    } else if (codePoint < 0x110000) {
		      if ((units -= 4) < 0) break
		      bytes.push(
		        codePoint >> 0x12 | 0xF0,
		        codePoint >> 0xC & 0x3F | 0x80,
		        codePoint >> 0x6 & 0x3F | 0x80,
		        codePoint & 0x3F | 0x80
		      )
		    } else {
		      throw new Error('Invalid code point')
		    }
		  }
		
		  return bytes
		}
		
		function asciiToBytes (str) {
		  var byteArray = []
		  for (var i = 0; i < str.length; ++i) {
		    // Node's code seems to be doing this and not & 0x7F..
		    byteArray.push(str.charCodeAt(i) & 0xFF)
		  }
		  return byteArray
		}
		
		function utf16leToBytes (str, units) {
		  var c, hi, lo
		  var byteArray = []
		  for (var i = 0; i < str.length; ++i) {
		    if ((units -= 2) < 0) break
		
		    c = str.charCodeAt(i)
		    hi = c >> 8
		    lo = c % 256
		    byteArray.push(lo)
		    byteArray.push(hi)
		  }
		
		  return byteArray
		}
		
		function base64ToBytes (str) {
		  return base64.toByteArray(base64clean(str))
		}
		
		function blitBuffer (src, dst, offset, length) {
		  for (var i = 0; i < length; ++i) {
		    if ((i + offset >= dst.length) || (i >= src.length)) break
		    dst[i + offset] = src[i]
		  }
		  return i
		}
		
		function isnan (val) {
		  return val !== val // eslint-disable-line no-self-compare
		}
		
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(68).Buffer, (function() { return this; }())))
	
	/***/ },
	/* 69 */
	/***/ function(module, exports) {
	
		'use strict'
		
		exports.byteLength = byteLength
		exports.toByteArray = toByteArray
		exports.fromByteArray = fromByteArray
		
		var lookup = []
		var revLookup = []
		var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array
		
		var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
		for (var i = 0, len = code.length; i < len; ++i) {
		  lookup[i] = code[i]
		  revLookup[code.charCodeAt(i)] = i
		}
		
		revLookup['-'.charCodeAt(0)] = 62
		revLookup['_'.charCodeAt(0)] = 63
		
		function placeHoldersCount (b64) {
		  var len = b64.length
		  if (len % 4 > 0) {
		    throw new Error('Invalid string. Length must be a multiple of 4')
		  }
		
		  // the number of equal signs (place holders)
		  // if there are two placeholders, than the two characters before it
		  // represent one byte
		  // if there is only one, then the three characters before it represent 2 bytes
		  // this is just a cheap hack to not do indexOf twice
		  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0
		}
		
		function byteLength (b64) {
		  // base64 is 4/3 + up to two characters of the original data
		  return b64.length * 3 / 4 - placeHoldersCount(b64)
		}
		
		function toByteArray (b64) {
		  var i, j, l, tmp, placeHolders, arr
		  var len = b64.length
		  placeHolders = placeHoldersCount(b64)
		
		  arr = new Arr(len * 3 / 4 - placeHolders)
		
		  // if there are placeholders, only get up to the last complete 4 chars
		  l = placeHolders > 0 ? len - 4 : len
		
		  var L = 0
		
		  for (i = 0, j = 0; i < l; i += 4, j += 3) {
		    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]
		    arr[L++] = (tmp >> 16) & 0xFF
		    arr[L++] = (tmp >> 8) & 0xFF
		    arr[L++] = tmp & 0xFF
		  }
		
		  if (placeHolders === 2) {
		    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)
		    arr[L++] = tmp & 0xFF
		  } else if (placeHolders === 1) {
		    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)
		    arr[L++] = (tmp >> 8) & 0xFF
		    arr[L++] = tmp & 0xFF
		  }
		
		  return arr
		}
		
		function tripletToBase64 (num) {
		  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]
		}
		
		function encodeChunk (uint8, start, end) {
		  var tmp
		  var output = []
		  for (var i = start; i < end; i += 3) {
		    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
		    output.push(tripletToBase64(tmp))
		  }
		  return output.join('')
		}
		
		function fromByteArray (uint8) {
		  var tmp
		  var len = uint8.length
		  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
		  var output = ''
		  var parts = []
		  var maxChunkLength = 16383 // must be multiple of 3
		
		  // go through the array every three bytes, we'll deal with trailing stuff later
		  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
		    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
		  }
		
		  // pad the end with zeros, but make sure to not forget the extra bytes
		  if (extraBytes === 1) {
		    tmp = uint8[len - 1]
		    output += lookup[tmp >> 2]
		    output += lookup[(tmp << 4) & 0x3F]
		    output += '=='
		  } else if (extraBytes === 2) {
		    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])
		    output += lookup[tmp >> 10]
		    output += lookup[(tmp >> 4) & 0x3F]
		    output += lookup[(tmp << 2) & 0x3F]
		    output += '='
		  }
		
		  parts.push(output)
		
		  return parts.join('')
		}
	
	
	/***/ },
	/* 70 */
	/***/ function(module, exports) {
	
		exports.read = function (buffer, offset, isLE, mLen, nBytes) {
		  var e, m
		  var eLen = nBytes * 8 - mLen - 1
		  var eMax = (1 << eLen) - 1
		  var eBias = eMax >> 1
		  var nBits = -7
		  var i = isLE ? (nBytes - 1) : 0
		  var d = isLE ? -1 : 1
		  var s = buffer[offset + i]
		
		  i += d
		
		  e = s & ((1 << (-nBits)) - 1)
		  s >>= (-nBits)
		  nBits += eLen
		  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}
		
		  m = e & ((1 << (-nBits)) - 1)
		  e >>= (-nBits)
		  nBits += mLen
		  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}
		
		  if (e === 0) {
		    e = 1 - eBias
		  } else if (e === eMax) {
		    return m ? NaN : ((s ? -1 : 1) * Infinity)
		  } else {
		    m = m + Math.pow(2, mLen)
		    e = e - eBias
		  }
		  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
		}
		
		exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
		  var e, m, c
		  var eLen = nBytes * 8 - mLen - 1
		  var eMax = (1 << eLen) - 1
		  var eBias = eMax >> 1
		  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
		  var i = isLE ? 0 : (nBytes - 1)
		  var d = isLE ? 1 : -1
		  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0
		
		  value = Math.abs(value)
		
		  if (isNaN(value) || value === Infinity) {
		    m = isNaN(value) ? 1 : 0
		    e = eMax
		  } else {
		    e = Math.floor(Math.log(value) / Math.LN2)
		    if (value * (c = Math.pow(2, -e)) < 1) {
		      e--
		      c *= 2
		    }
		    if (e + eBias >= 1) {
		      value += rt / c
		    } else {
		      value += rt * Math.pow(2, 1 - eBias)
		    }
		    if (value * c >= 2) {
		      e++
		      c /= 2
		    }
		
		    if (e + eBias >= eMax) {
		      m = 0
		      e = eMax
		    } else if (e + eBias >= 1) {
		      m = (value * c - 1) * Math.pow(2, mLen)
		      e = e + eBias
		    } else {
		      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
		      e = 0
		    }
		  }
		
		  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}
		
		  e = (e << mLen) | m
		  eLen += mLen
		  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}
		
		  buffer[offset + i - d] |= s * 128
		}
	
	
	/***/ },
	/* 71 */
	/***/ function(module, exports) {
	
		var toString = {}.toString;
		
		module.exports = Array.isArray || function (arr) {
		  return toString.call(arr) == '[object Array]';
		};
	
	
	/***/ },
	/* 72 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(Buffer) {'use strict';
		
		exports.__esModule = true;
		var toString = Object.prototype.toString;
		
		var isBuffer = typeof Buffer !== 'undefined' ? function isBuffer(obj) {
		  return Buffer.isBuffer(obj);
		} : function isBuffer() {
		  // always return false in browsers
		  return false;
		};
		
		var getKeys = typeof Object.keys === 'function' ? function getKeys(obj) {
		  return Object.keys(obj);
		} : function getKeys(obj) {
		  var objType = typeof obj;
		
		  if (obj === null || objType !== 'function' && objType !== 'object') {
		    throw new TypeError('obj must be an Object');
		  }
		
		  var resultKeys = [],
		      key = void 0;
		
		  for (key in obj) {
		    Object.prototype.hasOwnProperty.call(obj, key) && resultKeys.push(key);
		  }
		
		  return resultKeys;
		};
		
		var getSymbols = typeof Symbol === 'function' ? function getSymbols(obj) {
		  return Object.getOwnPropertySymbols(obj);
		} : function getSymbols() {
		  // always return empty Array when Symbol is not supported
		  return [];
		};
		
		// NOTE:
		//
		//   Array.prototype.indexOf is cannot find NaN (in Chrome)
		//   Array.prototype.includes is can find NaN (in Chrome)
		//
		//   this function can find NaN, because use SameValue algorithm
		function indexOf(array, s) {
		  if (toString.call(array) !== '[object Array]') {
		    throw new TypeError('array must be an Array');
		  }
		
		  var i = void 0,
		      len = void 0,
		      value = void 0;
		
		  for (i = 0, len = array.length; i < len; ++i) {
		    value = array[i];
		
		    // NOTE:
		    //
		    //   it is SameValue algorithm
		    //   http://stackoverflow.com/questions/27144277/comparing-a-variable-with-itself
		    //
		    // eslint-disable-next-line no-self-compare
		    if (value === s || value !== value && s !== s) {
		      return i;
		    }
		  }
		
		  return -1;
		}
		
		exports.getKeys = getKeys;
		exports.getSymbols = getSymbols;
		exports.indexOf = indexOf;
		exports.isBuffer = isBuffer;
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(68).Buffer))
	
	/***/ },
	/* 73 */
	/***/ function(module, exports, __webpack_require__) {
	
		var pSlice = Array.prototype.slice;
		var objectKeys = __webpack_require__(74);
		var isArguments = __webpack_require__(75);
		
		var deepEqual = module.exports = function (actual, expected, opts) {
		  if (!opts) opts = {};
		  // 7.1. All identical values are equivalent, as determined by ===.
		  if (actual === expected) {
		    return true;
		
		  } else if (actual instanceof Date && expected instanceof Date) {
		    return actual.getTime() === expected.getTime();
		
		  // 7.3. Other pairs that do not both pass typeof value == 'object',
		  // equivalence is determined by ==.
		  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {
		    return opts.strict ? actual === expected : actual == expected;
		
		  // 7.4. For all other Object pairs, including Array objects, equivalence is
		  // determined by having the same number of owned properties (as verified
		  // with Object.prototype.hasOwnProperty.call), the same set of keys
		  // (although not necessarily the same order), equivalent values for every
		  // corresponding key, and an identical 'prototype' property. Note: this
		  // accounts for both named and indexed properties on Arrays.
		  } else {
		    return objEquiv(actual, expected, opts);
		  }
		}
		
		function isUndefinedOrNull(value) {
		  return value === null || value === undefined;
		}
		
		function isBuffer (x) {
		  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;
		  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {
		    return false;
		  }
		  if (x.length > 0 && typeof x[0] !== 'number') return false;
		  return true;
		}
		
		function objEquiv(a, b, opts) {
		  var i, key;
		  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))
		    return false;
		  // an identical 'prototype' property.
		  if (a.prototype !== b.prototype) return false;
		  //~~~I've managed to break Object.keys through screwy arguments passing.
		  //   Converting to array solves the problem.
		  if (isArguments(a)) {
		    if (!isArguments(b)) {
		      return false;
		    }
		    a = pSlice.call(a);
		    b = pSlice.call(b);
		    return deepEqual(a, b, opts);
		  }
		  if (isBuffer(a)) {
		    if (!isBuffer(b)) {
		      return false;
		    }
		    if (a.length !== b.length) return false;
		    for (i = 0; i < a.length; i++) {
		      if (a[i] !== b[i]) return false;
		    }
		    return true;
		  }
		  try {
		    var ka = objectKeys(a),
		        kb = objectKeys(b);
		  } catch (e) {//happens when one is a string literal and the other isn't
		    return false;
		  }
		  // having the same number of owned properties (keys incorporates
		  // hasOwnProperty)
		  if (ka.length != kb.length)
		    return false;
		  //the same set of keys (although not necessarily the same order),
		  ka.sort();
		  kb.sort();
		  //~~~cheap key test
		  for (i = ka.length - 1; i >= 0; i--) {
		    if (ka[i] != kb[i])
		      return false;
		  }
		  //equivalent values for every corresponding key, and
		  //~~~possibly expensive deep test
		  for (i = ka.length - 1; i >= 0; i--) {
		    key = ka[i];
		    if (!deepEqual(a[key], b[key], opts)) return false;
		  }
		  return typeof a === typeof b;
		}
	
	
	/***/ },
	/* 74 */
	/***/ function(module, exports) {
	
		exports = module.exports = typeof Object.keys === 'function'
		  ? Object.keys : shim;
		
		exports.shim = shim;
		function shim (obj) {
		  var keys = [];
		  for (var key in obj) keys.push(key);
		  return keys;
		}
	
	
	/***/ },
	/* 75 */
	/***/ function(module, exports) {
	
		var supportsArgumentsClass = (function(){
		  return Object.prototype.toString.call(arguments)
		})() == '[object Arguments]';
		
		exports = module.exports = supportsArgumentsClass ? supported : unsupported;
		
		exports.supported = supported;
		function supported(object) {
		  return Object.prototype.toString.call(object) == '[object Arguments]';
		};
		
		exports.unsupported = unsupported;
		function unsupported(object){
		  return object &&
		    typeof object == 'object' &&
		    typeof object.length == 'number' &&
		    Object.prototype.hasOwnProperty.call(object, 'callee') &&
		    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||
		    false;
		};
	
	
	/***/ },
	/* 76 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var classnames = __webpack_require__(45);
		var i18n = __webpack_require__(63);
		var Context = __webpack_require__(47);
		var prefixClass = Context.prefixClass;
		
		// value 的格式：{startDate: '2016-01-02', endDate: '2016-01-03'}
		
		var Month = function (_React$Component) {
		  _inherits(Month, _React$Component);
		
		  function Month(props) {
		    _classCallCheck(this, Month);
		
		    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Month).call(this, props));
		
		    var date = _this.processValue();
		    _this.state = {
		      year: new Date(date.startDate).getFullYear()
		    };
		    return _this;
		  }
		
		  _createClass(Month, [{
		    key: 'processValue',
		    value: function processValue(props) {
		      var t = this;
		      props = props || t.props;
		      if (_typeof(props.value) == 'object') {
		        var _props$value = props.value;
		        var startDate = _props$value.startDate;
		        var endDate = _props$value.endDate;
		      } else {
		        var startDate = props.value;
		      }
		      return {
		        startDate: new Date(startDate || 0),
		        endDate: new Date(endDate || startDate || 0)
		      };
		    }
		  }, {
		    key: 'componentWillReceiveProps',
		    value: function componentWillReceiveProps(nextProps) {
		      var t = this;
		      var newState = {};
		      if (t.processValue().startDate.getTime() !== t.processValue(nextProps).startDate.getTime()) {
		        newState['year'] = t.processValue(nextProps).startDate.getFullYear();
		      }
		      t.setState(newState);
		    }
		  }, {
		    key: 'getTitle',
		    value: function getTitle() {
		      var t = this;
		      return t.state.year;
		    }
		  }, {
		    key: 'handleListItemClick',
		    value: function handleListItemClick(date) {
		      var t = this;
		      var value = t.processValue();
		      date.setDate(value.startDate.getDate());
		      var startDate = value.startDate;
		      var endDate = value.endDate;
		
		      var newValue = {};
		
		      if (!t.props.singleMode) {
		        if (startDate.getTime() !== endDate.getTime()) {
		          newValue = {
		            startDate: new Date(date).getTime(),
		            endDate: ""
		          };
		        } else {
		          // 需先判断选中日期和 startDate 的大小
		          // 如果选中日期大于 startDate，则选中日期作为 endDate。
		          if (new Date(date).getTime() > new Date(startDate).getTime()) {
		            newValue = {
		              startDate: new Date(startDate).getTime(),
		              endDate: new Date(date).getTime()
		            };
		          }
		          // 反之，则 startDate 作为新的 endDate，选中日期作为新的 startDate
		          else {
		              newValue = {
		                startDate: new Date(date).getTime(),
		                endDate: new Date(startDate).getTime()
		              };
		            }
		        }
		      } else {
		        newValue = {
		          startDate: new Date(date).getTime(),
		          endDate: ""
		        };
		      }
		
		      t.props.onChange(newValue);
		    }
		  }, {
		    key: 'handlePrev',
		    value: function handlePrev() {
		      var t = this;
		      t.setState({
		        year: t.state.year - 1
		      });
		    }
		  }, {
		    key: 'handleNext',
		    value: function handleNext() {
		      var t = this;
		      t.setState({
		        year: t.state.year + 1
		      });
		    }
		  }, {
		    key: 'handleTitleClick',
		    value: function handleTitleClick() {
		      if (this.props.singleMode) {
		        this.props.onTitleClick();
		      }
		    }
		  }, {
		    key: 'isItemActive',
		    value: function isItemActive(index) {
		      var t = this;
		      var year = t.state.year;
		
		      var _t$processValue = t.processValue();
		
		      var startDate = _t$processValue.startDate;
		      var endDate = _t$processValue.endDate;
		
		      if (!startDate) {
		        return false;
		      }
		      var startYear = new Date(startDate).getFullYear();
		      var startMonth = new Date(startDate).getMonth();
		      var active = false;
		      if (!!endDate) {
		        var endYear = new Date(endDate).getFullYear();
		        var endMonth = new Date(endDate).getMonth();
		        if (startYear != endYear) {
		          active = year == startYear && index >= startMonth || year > startYear && year < endYear || year == endYear && index <= endMonth;
		        } else {
		          active = year == startYear && index <= endMonth && index >= startMonth;
		        }
		      } else {
		        active = year == startYear && index == startMonth;
		      }
		
		      return active;
		    }
		  }, {
		    key: 'renderMonthList',
		    value: function renderMonthList() {
		      var t = this;
		      var months = i18n[t.props.locale]['monthTitle'];
		      var year = t.state.year;
		
		
		      return months.map(function (month, index) {
		        var _classnames;
		
		        return React.createElement(
		          'div',
		          { className: classnames((_classnames = {}, _defineProperty(_classnames, prefixClass('month-list-item'), true), _defineProperty(_classnames, "active", t.isItemActive(index)), _classnames)), key: index, onClick: t.handleListItemClick.bind(t, new Date(year, index)) },
		          month
		        );
		      });
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      var t = this;
		      return React.createElement(
		        'div',
		        { className: prefixClass('month-panel') },
		        React.createElement(
		          'div',
		          { className: prefixClass('tool FBH FBAC') },
		          React.createElement('div', { className: prefixClass('FB1') }),
		          React.createElement(
		            'div',
		            { className: prefixClass('btn prev-month tap op'), onClick: this.handlePrev.bind(this) },
		            '<'
		          ),
		          React.createElement(
		            'span',
		            { className: prefixClass('text'), onClick: t.handleTitleClick.bind(t) },
		            t.getTitle()
		          ),
		          React.createElement(
		            'div',
		            { className: prefixClass('btn next-month tap op'), onClick: this.handleNext.bind(this) },
		            '>'
		          ),
		          React.createElement('div', { className: prefixClass('FB1') })
		        ),
		        React.createElement(
		          'div',
		          { className: prefixClass('month-list') },
		          t.renderMonthList()
		        )
		      );
		    }
		  }]);
		
		  return Month;
		}(React.Component);
		
		Month.displayName = "Month";
		Month.defaultProps = {
		  locale: 'zh-cn',
		  onChange: function onChange() {},
		  onTitleClick: function onTitleClick() {},
		  singleMode: false
		};
		Month.propTypes = {
		  value: React.PropTypes.object,
		  locale: React.PropTypes.string,
		  onChange: React.PropTypes.func,
		  onTitleClick: React.PropTypes.func,
		  singleMode: React.PropTypes.bool
		};
		
		module.exports = Month;
		
	
	
	/***/ },
	/* 77 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var classnames = __webpack_require__(45);
		var i18n = __webpack_require__(63);
		var Context = __webpack_require__(47);
		var prefixClass = Context.prefixClass;
		
		var Year = function (_React$Component) {
		  _inherits(Year, _React$Component);
		
		  function Year(props) {
		    _classCallCheck(this, Year);
		
		    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Year).call(this, props));
		
		    _this.state = {
		      year: _this.getYear()
		    };
		    return _this;
		  }
		
		  _createClass(Year, [{
		    key: 'componentWillReceiveProps',
		    value: function componentWillReceiveProps(nextProps) {
		      var t = this;
		      var newState = {};
		      if (t.processValue().startDate.getTime() !== t.processValue(nextProps).startDate.getTime()) {
		        newState['year'] = t.getYear(nextProps);
		      }
		      t.setState(newState);
		    }
		  }, {
		    key: 'componentWillMount',
		    value: function componentWillMount() {
		      var t = this;
		    }
		  }, {
		    key: 'getYear',
		    value: function getYear(props) {
		      var t = this;
		
		      var _t$processValue = t.processValue(props);
		
		      var startDate = _t$processValue.startDate;
		
		      var year = new Date(startDate).getFullYear();
		      year = year.toString().substring(0, 3) + '0';
		      return parseInt(year);
		    }
		  }, {
		    key: 'processValue',
		    value: function processValue(props) {
		      var t = this;
		      props = props || t.props;
		      if (_typeof(props.value) == 'object') {
		        var _props$value = props.value;
		        var startDate = _props$value.startDate;
		        var endDate = _props$value.endDate;
		      } else {
		        var startDate = props.value;
		      }
		      return {
		        startDate: new Date(startDate || 0),
		        endDate: new Date(endDate || startDate || 0)
		      };
		    }
		  }, {
		    key: 'getTitle',
		    value: function getTitle() {
		      var t = this;
		      return t.state.year + '-' + (t.state.year + 9);
		    }
		  }, {
		    key: 'handleListItemClick',
		    value: function handleListItemClick(date) {
		      var t = this;
		      var value = t.processValue();
		      date = new Date(date.setDate(value.startDate.getDate())).setMonth(value.startDate.getMonth());
		      var newValue = {};
		      if (!t.props.singleMode) {
		        if (!!t.props.value.endDate) {
		          newValue = {
		            startDate: new Date(date).getTime(),
		            endDate: ""
		          };
		        } else {
		          // 需先判断选中日期和 startDate 的大小
		          // 如果选中日期大于 startDate，则选中日期作为 endDate。
		          if (new Date(date).getTime() > new Date(value.startDate).getTime()) {
		            newValue = {
		              startDate: new Date(value.startDate).getTime(),
		              endDate: new Date(date).getTime()
		            };
		          }
		          // 反之，则 startDate 作为新的 endDate，选中日期作为新的 startDate
		          else {
		              newValue = {
		                startDate: new Date(date).getTime(),
		                endDate: new Date(value.startDate).getTime()
		              };
		            }
		        }
		      } else {
		        newValue = {
		          startDate: new Date(date).getTime(),
		          endDate: ""
		        };
		      }
		      t.props.onChange(newValue);
		    }
		  }, {
		    key: 'handlePrev',
		    value: function handlePrev() {
		      var t = this;
		      t.setState({
		        year: t.state.year - 10
		      });
		    }
		  }, {
		    key: 'handleNext',
		    value: function handleNext() {
		      var t = this;
		      t.setState({
		        year: t.state.year + 10
		      });
		    }
		  }, {
		    key: 'isItemActive',
		    value: function isItemActive(index) {
		      var t = this;
		      var year = t.state.year;
		
		      var _t$processValue2 = t.processValue();
		
		      var startDate = _t$processValue2.startDate;
		      var endDate = _t$processValue2.endDate;
		
		      if (!startDate) {
		        return false;
		      }
		      var startYear = new Date(startDate).getFullYear();
		      var startMonth = new Date(startDate).getMonth();
		      var now = year + index;
		      var active = false;
		      if (!!endDate) {
		        var endYear = new Date(endDate).getFullYear();
		        active = now >= startYear && now <= endYear;
		      } else {
		        active = now == startYear;
		      }
		
		      return active;
		    }
		  }, {
		    key: 'renderYearList',
		    value: function renderYearList() {
		      var t = this;
		      var months = i18n[t.props.locale]['monthTitle'];
		      var year = t.state.year;
		
		      var yearList = [];
		
		      yearList.push(React.createElement(
		        'div',
		        { className: classnames(_defineProperty({}, prefixClass('year-list-item'), true)), key: 'prev', onClick: t.handlePrev.bind(t) },
		        "..."
		      ));
		
		      for (var i = 0; i < 10; i++) {
		        var _classnames2;
		
		        yearList.push(React.createElement(
		          'div',
		          { className: classnames((_classnames2 = {}, _defineProperty(_classnames2, prefixClass('year-list-item'), true), _defineProperty(_classnames2, "active", t.isItemActive(i)), _classnames2)), key: i, onClick: t.handleListItemClick.bind(t, new Date(year + i + "")) },
		          year + i
		        ));
		      }
		
		      yearList.push(React.createElement(
		        'div',
		        { className: classnames(_defineProperty({}, prefixClass('year-list-item'), true)), key: 'next', onClick: t.handleNext.bind(t) },
		        "..."
		      ));
		
		      return yearList;
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      var t = this;
		      return React.createElement(
		        'div',
		        { className: prefixClass("month-panel") },
		        React.createElement(
		          'div',
		          { className: prefixClass("tool FBH FBAC") },
		          React.createElement('div', { className: prefixClass("FB1") }),
		          React.createElement(
		            'div',
		            { className: prefixClass("btn prev-month tap op"), onClick: this.handlePrev.bind(this) },
		            '<'
		          ),
		          React.createElement(
		            'span',
		            { className: prefixClass("text") },
		            t.getTitle()
		          ),
		          React.createElement(
		            'div',
		            { className: prefixClass("btn next-month tap op"), onClick: this.handleNext.bind(this) },
		            '>'
		          ),
		          React.createElement('div', { className: prefixClass("FB1") })
		        ),
		        React.createElement(
		          'div',
		          { className: prefixClass("year-list") },
		          t.renderYearList()
		        )
		      );
		    }
		  }]);
		
		  return Year;
		}(React.Component);
		
		Year.displayName = "Year";
		Year.defaultProps = {
		  locale: 'zh-cn',
		  onChange: function onChange() {},
		  singleMode: false
		};
		Year.propTypes = {
		  value: React.PropTypes.object,
		  locale: React.PropTypes.string,
		  onChange: React.PropTypes.func,
		  singleMode: React.PropTypes.bool
		};
		
		module.exports = Year;
		
	
	
	/***/ },
	/* 78 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var classnames = __webpack_require__(45);
		var deepcopy = __webpack_require__(65);
		var deepEqual = __webpack_require__(73);
		var i18n = __webpack_require__(63);
		
		var Layer = __webpack_require__(59);
		var Formatter = __webpack_require__(57);
		var Year = __webpack_require__(77);
		var Context = __webpack_require__(47);
		
		var prefixClass = Context.prefixClass;
		
		var YearCalendar = function (_React$Component) {
		  _inherits(YearCalendar, _React$Component);
		
		  function YearCalendar(props) {
		    _classCallCheck(this, YearCalendar);
		
		    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(YearCalendar).call(this, props));
		
		    _this.value = deepcopy(props.value);
		    _this.state = {
		      value: deepcopy(props.value),
		      panel: 'year'
		    };
		    return _this;
		  }
		
		  _createClass(YearCalendar, [{
		    key: 'componentWillMount',
		    value: function componentWillMount() {
		      var t = this;
		      t.locale = i18n[t.props.locale];
		    }
		  }, {
		    key: 'componentWillReceiveProps',
		    value: function componentWillReceiveProps(nextProps) {
		      var t = this;
		      if (!deepEqual(nextProps.value, t.value)) {
		        t.value = deepcopy(nextProps.value);
		        t.setState({
		          value: deepcopy(nextProps.value)
		        });
		      }
		    }
		  }, {
		    key: 'handleChange',
		    value: function handleChange(value) {
		      var t = this;
		      t.setState({
		        value: value
		      });
		    }
		  }, {
		    key: 'handleCanel',
		    value: function handleCanel() {
		      var t = this;
		      t.props.onCancel();
		    }
		  }, {
		    key: 'handleClear',
		    value: function handleClear() {
		      var t = this;
		      t.setState({
		        value: deepcopy(t.props.value)
		      });
		    }
		  }, {
		    key: 'handleOk',
		    value: function handleOk() {
		      var t = this;
		      var _t$state = t.state;
		      var startDate = _t$state.startDate;
		      var endDate = _t$state.endDate;
		
		      if (!!t.state.value.startDate) {
		        t.props.onOk(t.state.value);
		      }
		    }
		  }, {
		    key: 'renderTopPanel',
		    value: function renderTopPanel() {
		      return React.createElement(
		        'div',
		        { className: classnames(_defineProperty({}, prefixClass("top-panel"), true)) },
		        React.createElement(
		          'span',
		          { className: prefixClass("top-panel-cancel"), onClick: this.handleCanel.bind(this) },
		          this.locale['button']['cancel']
		        ),
		        React.createElement(
		          'span',
		          { className: prefixClass("top-panel-title") },
		          this.props.topPanelTitle || '选择时间'
		        ),
		        React.createElement(
		          'span',
		          { className: prefixClass("top-panel-confirm"), onClick: this.handleOk.bind(this) },
		          this.locale['button']['confirm']
		        )
		      );
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      var _classnames2;
		
		      var t = this;
		      var _t$props = t.props;
		      var visible = _t$props.visible;
		      var className = _t$props.className;
		      var singleMode = _t$props.singleMode;
		
		      var button = t.locale['button'];
		
		      // Calculate the height of the current container
		      var clientHeight = document.documentElement.clientHeight;
		      var height = 230;
		      !!t.props.showTopPanel && (height += 44);
		      !!t.props.showHalfDay && (height += 120);
		
		      return React.createElement(
		        Layer,
		        { visible: visible },
		        React.createElement(
		          'div',
		          { className: prefixClass("calendar-container"), style: {
		              height: clientHeight,
		              // Scale the view to ensure user can see the whole widgit 
		              // on the small screen device
		              transform: height >= clientHeight ? 'scale(' + ((clientHeight / height).toFixed(3) - 0.15) + ')' : ''
		            } },
		          React.createElement(
		            'div',
		            { className: classnames((_classnames2 = {}, _defineProperty(_classnames2, prefixClass("calendar"), true), _defineProperty(_classnames2, className, !!className), _classnames2)), style: {
		                display: visible ? 'block' : 'none',
		                height: height
		              } },
		            t.renderTopPanel(),
		            React.createElement(Year, { value: t.state.value, onChange: t.handleChange.bind(t), singleMode: singleMode })
		          )
		        )
		      );
		    }
		  }]);
		
		  return YearCalendar;
		}(React.Component);
		
		YearCalendar.displayName = "YearCalendar";
		YearCalendar.defaultProps = {
		  locale: 'zh-cn',
		  onCancel: function onCancel() {},
		  onOk: function onOk() {},
		  value: {
		    startDate: new Date().getTime(),
		    startDateType: 'FULL',
		    endDateType: 'FULL'
		  },
		  showTopPanel: true,
		  singleMode: false
		};
		YearCalendar.propTypes = {
		  value: React.PropTypes.object,
		  locale: React.PropTypes.string,
		  onCancel: React.PropTypes.func,
		  onOk: React.PropTypes.func,
		  visible: React.PropTypes.bool,
		  singleMode: React.PropTypes.bool
		};
		
		module.exports = YearCalendar;
		
	
	
	/***/ },
	/* 79 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var classnames = __webpack_require__(45);
		var i18n = __webpack_require__(63);
		var Context = __webpack_require__(47);
		var prefixClass = Context.prefixClass;
		
		// value 的格式：{startDate: '2016-01-02', startDateType: 'AM', endDate: '2016-01-03', endDateType: 'AM' }
		
		var Day = function (_React$Component) {
		  _inherits(Day, _React$Component);
		
		  function Day(props) {
		    _classCallCheck(this, Day);
		
		    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Day).call(this, props));
		
		    _this.state = {
		      currentDate: _this.processValue(props).startDate, // 当前正在展示的面板上对应的时间，用以获取年和月的信息
		      active: 'endDate'
		    };
		    return _this;
		  }
		
		  _createClass(Day, [{
		    key: 'componentWillMount',
		    value: function componentWillMount() {
		      var t = this;
		      t.locale = i18n[t.props.locale];
		    }
		  }, {
		    key: 'componentWillReceiveProps',
		    value: function componentWillReceiveProps(nextProps) {
		      var t = this;
		      var value = t.props.value;
		
		      var nextValue = nextProps.value;
		      var active = t.state.active;
		
		      var newState = {};
		      if (new Date(value.startDate).getTime() !== new Date(nextValue.startDate).getTime()) {
		        newState['active'] = 'startDate';
		      } else {
		        newState['active'] = 'endDate';
		      }
		      if (t.processValue().startDate.getTime() !== t.processValue(nextProps).startDate.getTime()) {
		        newState['currentDate'] = t.processValue(nextProps).startDate;
		      }
		
		      t.setState(newState);
		    }
		  }, {
		    key: 'processValue',
		    value: function processValue(props) {
		      var t = this;
		      props = props || t.props;
		      if (_typeof(props.value) == 'object') {
		        var _props$value = props.value;
		        var startDate = _props$value.startDate;
		        var startDateType = _props$value.startDateType;
		        var endDate = _props$value.endDate;
		        var endDateType = _props$value.endDateType;
		      } else {
		        var startDate = props.value;
		      }
		
		      // 处理异常情况，当 endDate 存在且不等于 startDate 的情况下， startDateType 不可能为 'AM'
		      if (endDate && new Date(startDate).getTime() !== new Date(endDate).getTime() && startDateType == 'AM') {
		        startDateType = 'FULL';
		      }
		      return {
		        startDate: new Date(startDate || 0),
		        startDateType: startDateType || 'FULL',
		        endDate: new Date(endDate || startDate || 0),
		        endDateType: endDateType || 'FULL'
		      };
		    }
		  }, {
		    key: 'handlePrev',
		    value: function handlePrev() {
		      var t = this;
		      var currentDate = t.state.currentDate;
		
		      t.setState({
		        currentDate: new Date(currentDate.setMonth(currentDate.getMonth() - 1))
		      });
		    }
		  }, {
		    key: 'handleNext',
		    value: function handleNext() {
		      var t = this;
		      var currentDate = t.state.currentDate;
		
		      t.setState({
		        currentDate: new Date(currentDate.setMonth(currentDate.getMonth() + 1))
		      });
		    }
		  }, {
		    key: 'handleClick',
		    value: function handleClick(date, e) {
		      var t = this;
		
		      //如果有onSelecting的方法，且其执行函数后值为false，则直接返回
		      if (typeof t.props.onSelecting == 'function' && t.props.onSelecting(date, e) === false) {
		        return;
		      }
		
		      var singleMode = t.props.singleMode;
		      var _t$props$value = t.props.value;
		      var startDate = _t$props$value.startDate;
		      var startDateType = _t$props$value.startDateType;
		      var endDate = _t$props$value.endDate;
		      var endDateType = _t$props$value.endDateType;
		
		      var status = 0;
		      // 先判断目前是一点状态还是两点状态，如果 startDate != endDate 则为两点状态，
		      // 否则相等则为一点、startDate 为 0 则为0点状态
		      if (!!startDate) {
		        // 如果是单选模式，则 status 总为 2
		        if (!!endDate && new Date(endDate).getTime() !== new Date(startDate).getTime() || singleMode) {
		          status = 2;
		        } else {
		          status = 1;
		        }
		      }
		
		      var newStartDate = '';
		      var newEndDate = '';
		      var newStartDateType = 'FULL';
		      var newEndDateType = 'FULL';
		      if (status == 0) {
		        newStartDate = date.getTime();
		      } else if (status == 1) {
		        // 判断点击的时间和开始时间的大小，以决定谁是新的开始时间。
		        if (date.getTime() >= new Date(startDate).getTime()) {
		          newStartDate = startDate;
		          newEndDate = date.getTime();
		          newStartDateType = startDateType;
		        } else {
		          newStartDate = date.getTime();
		          newEndDate = startDate;
		          newEndDateType = startDateType;
		        }
		      } else {
		        newStartDate = date.getTime();
		      }
		
		      t.props.onChange({
		        startDate: newStartDate,
		        startDateType: newStartDateType,
		        endDate: newEndDate,
		        endDateType: newEndDateType
		      });
		    }
		  }, {
		    key: 'handleTypeClick',
		    value: function handleTypeClick(type, e) {
		      var t = this;
		      var value = typeof t.props.value == "string" ? { startDate: t.props.value } : t.props.value;
		      var startDate = value.startDate;
		      var startDateType = value.startDateType;
		      var endDate = value.endDate;
		      var endDateType = value.endDateType;
		
		      var status = 0;
		      var active = t.state.active;
		      // 先判断目前是一点状态还是两点状态，如果 startDate != endDate 则为两点状态，
		      // 否则相等则为一点、startDate 不存在则为 0 点状态
		
		      if (!!startDate) {
		        if (!!endDate && new Date(endDate).getTime() !== new Date(startDate).getTime()) {
		          status = 2;
		        } else {
		          status = 1;
		        }
		      }
		
		      var newStartDateType = "FULL";
		      var newEndDateType = "FULL";
		
		      if (status == 2) {
		        if (active == 'startDate') {
		          newStartDateType = type;
		          newEndDateType = endDateType;
		        } else {
		          newStartDateType = startDateType;
		          newEndDateType = type;
		        }
		      } else {
		        newStartDateType = type;
		        newEndDateType = type;
		      }
		
		      t.props.onChange({
		        startDate: startDate,
		        startDateType: newStartDateType,
		        endDate: endDate,
		        endDateType: newEndDateType
		      });
		    }
		  }, {
		    key: 'handleTitleClick',
		    value: function handleTitleClick(e) {
		      if (this.props.singleMode) {
		        this.props.onTitleClick(e);
		      }
		    }
		
		    /**
		     * 当前时间是否在被选中的范围
		     * @param {Date} date 当前时间
		     * @param {Object} 由 processValue 导出的时间范围
		     */
		
		  }, {
		    key: 'isInRange',
		    value: function isInRange(date, value) {
		
		      return date.getTime() >= value.startDate.getTime() && date.getTime() <= value.endDate.getTime();
		    }
		  }, {
		    key: 'getType',
		    value: function getType(date, value) {
		      var type = '';
		      ['FULL', 'AM', 'PM'].forEach(function (item, index) {
		        if (date.getTime() == value.startDate.getTime() && new RegExp(item, 'i').test(value.startDateType) || date.getTime() == value.endDate.getTime() && new RegExp(item, 'i').test(value.endDateType)) {
		          type = item;
		        }
		      });
		      return type;
		    }
		  }, {
		    key: 'renderDate',
		    value: function renderDate(date, value) {
		      var _classnames;
		
		      var t = this;
		      // TODO: tStatus 假休班
		      // 只有开始和结束的日子可能出现上午和下午
		      var type = t.getType(date, value);
		      var now = new Date();
		      var currentDate = t.state.currentDate;
		      var cls = classnames((_classnames = {}, _defineProperty(_classnames, prefixClass('FB1 tap op'), true), _defineProperty(_classnames, prefixClass('now'), now.getTime() == date.getTime()), _defineProperty(_classnames, prefixClass('selected'), t.isInRange(date, value)), _defineProperty(_classnames, prefixClass('AM'), type == 'AM'), _defineProperty(_classnames, prefixClass('PM'), type == 'PM'), _defineProperty(_classnames, prefixClass('prev-month'), date.getMonth() < currentDate.getMonth() && date.getYear() === currentDate.getYear() || date.getYear() < currentDate.getYear()), _defineProperty(_classnames, prefixClass('next-month'), date.getMonth() > currentDate.getMonth() && date.getYear() === currentDate.getYear() || date.getYear() > currentDate.getYear()), _defineProperty(_classnames, prefixClass('weekend'), date.getDay() === 6 || date.getDay() === 0), _defineProperty(_classnames, t.handleExtraClass(date, value), true), _classnames));
		      //在这里添加新功能，确定不可用日期
		      var dateContent = React.createElement(
		        'div',
		        { key: date.getTime(), className: cls, onClick: t.handleClick.bind(t, new Date(date)) },
		        React.createElement(
		          'div',
		          { className: prefixClass('date-point') },
		          date.getDate()
		        ),
		        t.props.showHalfDay ? React.createElement(
		          'div',
		          { className: classnames(_defineProperty({}, prefixClass('date-tip'), true)) },
		          t.props.showHalfDay ? t.locale['dayTipMap'][type] : ""
		        ) : ''
		      );
		      return dateContent;
		    }
		
		    //给“天”的展示项目添加新的样式
		
		  }, {
		    key: 'handleExtraClass',
		    value: function handleExtraClass(date, value) {
		      //如果添加的是一个字符串
		      if (typeof this.props.extraClass == 'string') {
		        return this.props.extraClass;
		      } else if (typeof this.props.extraClass == 'function') {
		        return this.props.extraClass(date, value) || '';
		      }
		      return '';
		    }
		  }, {
		    key: 'renderDatePanel',
		    value: function renderDatePanel(value) {
		      var t = this;
		      var dateArrInAWeek = [];
		      var weekArr = [];
		      var flexBoxKey = 0;
		      var currentDate = t.state.currentDate;
		
		      var currentYear = currentDate.getFullYear();
		      var currentMonth = currentDate.getMonth();
		      var calendarCode = t.props.calendarCode;
		
		      var now = new Date();
		      var firstDateInStartMonth = new Date(new Date(currentDate).setDate(1));
		      var changedDate = new Date(new Date(currentDate).setDate(1)); // 用于当月的循环复制
		      var firstDayInStartMonth = firstDateInStartMonth.getDay();
		      var firstDateShownInPanel = new Date(firstDateInStartMonth.setDate(firstDateInStartMonth.getDate() - firstDayInStartMonth));
		
		      //计算上个月剩余补充天数
		      for (var i = 0; i < firstDayInStartMonth; i++) {
		        var _changedDate = new Date(firstDateShownInPanel);
		        var date = new Date(_changedDate.setDate(_changedDate.getDate() + i));
		        dateArrInAWeek.push(t.renderDate(date, value));
		      }
		
		      // 计算当前月天数
		
		      while (changedDate.getMonth() == currentMonth) {
		        flexBoxKey++;
		        // 判断 dateArrInAWeek 数组是否已满 7 个，若满则推入 weekArr 数组
		        if (dateArrInAWeek.length == 7) {
		          weekArr.push(React.createElement(
		            'div',
		            { key: currentMonth + flexBoxKey, className: prefixClass('FBH') },
		            dateArrInAWeek
		          ));
		          dateArrInAWeek = [];
		        }
		        dateArrInAWeek.push(t.renderDate(new Date(changedDate), value));
		        changedDate.setDate(changedDate.getDate() + 1);
		      }
		
		      // 计算下个月剩余补充天数，如果下个月第一天恰好是周日，那么就没有必要渲染下个月了
		      // 把最后一个 dateArrInAWeek 数组推进 weekArr 数组
		      if (changedDate.getDay() == 0) {
		        weekArr.push(React.createElement(
		          'div',
		          { key: "last", className: prefixClass('FBH') },
		          dateArrInAWeek
		        ));
		      } else {
		        var delta = 7 - changedDate.getDay();
		        for (var _i = 0; _i < delta; _i++) {
		          dateArrInAWeek.push(t.renderDate(new Date(changedDate), value));
		          changedDate.setDate(changedDate.getDate() + 1);
		        }
		        weekArr.push(React.createElement(
		          'div',
		          { key: "last", className: prefixClass('FBH') },
		          dateArrInAWeek
		        ));
		      }
		
		      return weekArr;
		    }
		  }, {
		    key: 'renderHalfDayButton',
		    value: function renderHalfDayButton(date, value) {
		      if (!this.props.showHalfDay) return;
		
		      var t = this;
		      var active = t.state.active;
		
		      var type = t.getType(date, value);
		      var am = React.createElement(
		        'div',
		        { key: 'tMorning', className: prefixClass("day morning tap op ") + (type == 'AM' ? 'now' : ''),
		          onClick: t.handleTypeClick.bind(t, 'AM') },
		        React.createElement(
		          'span',
		          null,
		          t.locale['dayTipMap']['AM']
		        )
		      );
		      var pm = React.createElement(
		        'div',
		        { key: 'tAfternoon', className: prefixClass("day afternoon tap op ") + (type == 'PM' ? 'now' : ''),
		          onClick: t.handleTypeClick.bind(t, 'PM') },
		        React.createElement(
		          'span',
		          null,
		          t.locale['dayTipMap']['PM']
		        )
		      );
		      var full = React.createElement(
		        'div',
		        { key: 'tFullDay', className: prefixClass("day fullday tap op ") + (type == 'FULL' ? 'now' : ''),
		          onClick: t.handleTypeClick.bind(t, 'FULL') },
		        React.createElement(
		          'span',
		          null,
		          t.locale['dayTipMap']['FULL']
		        )
		      );
		
		      // 处理被选中的日期，需判断当前是起点还是终点，若 开始时间 == 结束时间 则是起点
		
		      //是否显示上午、下午
		      if (value.startDate.getTime() === value.endDate.getTime()) {
		        return [full, am, pm];
		      } else {
		        if (active == 'endDate') {
		          return [full, am];
		        } else {
		          return [full, pm];
		        }
		      }
		    }
		  }, {
		    key: 'renderTitle',
		    value: function renderTitle(value) {
		      var t = this;
		      var currentDate = t.state.currentDate;
		
		      var str = '';
		      switch (t.props.locale) {
		        case 'zh-cn':
		          str = currentDate.getFullYear() + '年' + (currentDate.getMonth() + 1) + '月';
		          break;
		        case 'en':
		          str = t.locale['monthTitle'][currentDate.getMonth()] + ' ' + currentDate.getFullYear();
		          break;
		      }
		      return str;
		    }
		  }, {
		    key: 'renderHalfDay',
		    value: function renderHalfDay() {
		      var _classnames4;
		
		      var t = this;
		      var value = t.processValue();
		      var active = t.state.active;
		
		      var left = t.renderHalfDayButton(value[active], value);
		      var selected = value[active].getDate();
		      return React.createElement(
		        'div',
		        { className: classnames(_defineProperty({}, prefixClass("half-wrap FBH FBAC"), true)) },
		        React.createElement(
		          'div',
		          { className: classnames((_classnames4 = {}, _defineProperty(_classnames4, prefixClass("selected-day"), true), _defineProperty(_classnames4, prefixClass("DN"), !t.props.showHalfDay), _classnames4)) },
		          selected
		        ),
		        left,
		        React.createElement('div', { className: prefixClass("FB1") })
		      );
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      var t = this;
		      var value = t.processValue();
		      var clearButton = '';
		      var ret = '';
		      var _t$props = t.props;
		      var show = _t$props.show;
		      var className = _t$props.className;
		      var singleMode = _t$props.singleMode;
		      var showHalfDay = _t$props.showHalfDay;
		
		
		      if (show) {
		        ret = this.renderDatePanel(value);
		      }
		
		      return React.createElement(
		        'div',
		        { className: prefixClass('month-panel') },
		        React.createElement(
		          'div',
		          { className: prefixClass('tool FBH FBAC') },
		          React.createElement('div', { className: prefixClass('FB1') }),
		          React.createElement(
		            'div',
		            { className: prefixClass('btn prev-month tap op'), onClick: t.handlePrev.bind(t) },
		            '<'
		          ),
		          React.createElement(
		            'span',
		            { className: prefixClass('text'), onClick: t.handleTitleClick.bind(t) },
		            this.renderTitle(value)
		          ),
		          React.createElement(
		            'div',
		            { className: prefixClass('btn next-month tap op'), onClick: t.handleNext.bind(t) },
		            '>'
		          ),
		          React.createElement('div', { className: prefixClass('FB1') })
		        ),
		        React.createElement(
		          'div',
		          { className: prefixClass('week FBH') },
		          t.locale['weekTitle'].map(function (item, index) {
		            return React.createElement(
		              'div',
		              { className: prefixClass('FB1 FBAC'), key: index },
		              item
		            );
		          })
		        ),
		        React.createElement(
		          'div',
		          { className: prefixClass('month') },
		          ret
		        ),
		        t.props.showHalfDay && t.renderHalfDay()
		      );
		    }
		  }]);
		
		  return Day;
		}(React.Component);
		
		Day.propTypes = {
		  show: React.PropTypes.bool, // 是否显示
		  singleMode: React.PropTypes.bool, // 是否是单选模式
		  showHalfDay: React.PropTypes.bool, // 是否显示半天
		  calendarCode: React.PropTypes.object, // 后端传来的 code
		  value: React.PropTypes.oneOfType([// 默认值
		  React.PropTypes.string, React.PropTypes.object]),
		  extraClass: React.PropTypes.oneOfType([// 默认值
		  React.PropTypes.string, React.PropTypes.func]),
		  onSelecting: React.PropTypes.func, //当某一天被点击是触发事件，如果其值为false则不执行
		  locale: React.PropTypes.string, // 国际化语言
		  onChange: React.PropTypes.func, // value 变化时触发的回调
		  onTitleClick: React.PropTypes.func // 点击标题时触发的回调，用于切换面板
		};
		
		Day.defaultProps = {
		  show: true,
		  singleMode: true,
		  showHalfDay: true,
		  locale: 'zh-cn',
		  calendarCode: {},
		  onChange: function onChange() {},
		  onSelecting: function onSelecting() {},
		  onTitleClick: function onTitleClick() {},
		  extraClass: ''
		};
		
		Day.displayName = "Day";
		
		module.exports = Day;
		
	
	
	/***/ },
	/* 80 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		/**
		 * CascadeSelectField Component Style for tingle
		 * @author caoke.ck
		 *
		 * Copyright 2014-2016, Tingle Team, Alinw.
		 * All rights reserved.
		 */
		
		module.exports = __webpack_require__(81);
		
	
	
	/***/ },
	/* 81 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		/**
		 * CascadeSelectField Component for tingle
		 * @author caoke.ck
		 *
		 * Copyright 2014-2016, Tingle Team.
		 * All rights reserved.
		 */
		var React = __webpack_require__(2);
		var classnames = __webpack_require__(45);
		
		var Context = __webpack_require__(47);
		var Slot = __webpack_require__(82);
		var Field = __webpack_require__(87);
		
		var CascadeSelectField = function (_React$Component) {
		    _inherits(CascadeSelectField, _React$Component);
		
		    function CascadeSelectField(props) {
		        _classCallCheck(this, CascadeSelectField);
		
		        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(CascadeSelectField).call(this, props));
		
		        var t = _this;
		
		        // 数据格式化
		        t.state = parseProps(props);
		        t.state.confirmedValue = props.value ? t.state.value : [];
		        return _this;
		    }
		
		    // 外部变更选中值
		
		
		    _createClass(CascadeSelectField, [{
		        key: 'componentWillReceiveProps',
		        value: function componentWillReceiveProps(nextProps) {
		            var t = this;
		            t.setState(parseProps(nextProps));
		        }
		    }, {
		        key: 'handleClick',
		        value: function handleClick() {
		            var t = this;
		            !t.props.readOnly && t.refs.slot.show();
		        }
		    }, {
		        key: 'handleChange',
		        value: function handleChange(value) {
		            var t = this;
		            t.setState(parseState(value, t.props.options));
		        }
		    }, {
		        key: 'handleConfirm',
		        value: function handleConfirm(value) {
		            var t = this;
		
		            // 确认选中项目
		            t.props.onSelect(value);
		        }
		    }, {
		        key: 'handleCancel',
		        value: function handleCancel() {
		            var t = this;
		            if (t.state.confirmedValue.length) {
		                t.setState(parseState(t.state.confirmedValue, t.props.options));
		            }
		        }
		    }, {
		        key: 'render',
		        value: function render() {
		            var t = this;
		            return React.createElement(
		                Field,
		                _extends({}, t.props, { icon: t.props.readOnly ? null : {
		                        className: Context.prefixClass('cascade-select-field-icon'),
		                        name: 'angle-right',
		                        width: 26,
		                        height: 26,
		                        onClick: t.handleClick.bind(t)
		                    },
		                    className: classnames(Context.prefixClass('cascade-select-field'), _defineProperty({}, t.props.className, !!t.props.className)) }),
		                React.createElement(
		                    'div',
		                    { onClick: t.handleClick.bind(t) },
		                    !t.state.confirmedValue.length ? React.createElement(
		                        'div',
		                        { className: Context.prefixClass('omit cascade-select-field-placeholder') },
		                        t.props.placeholder
		                    ) : '',
		                    React.createElement(
		                        'div',
		                        { className: Context.prefixClass('cascade-select-field-value FBH FBAC') },
		                        React.createElement(
		                            'span',
		                            { className: classnames(Context.prefixClass('FB1 omit'), _defineProperty({}, Context.prefixClass('cascade-select-field-readonly'), !!t.props.readOnly)) },
		                            t.props.formatter(t.state.confirmedValue)
		                        )
		                    )
		                ),
		                React.createElement(Slot, { ref: 'slot', title: t.props.label, confirmText: t.props.confirmText, cancelText: t.props.cancelText, data: t.state.options, value: t.state.value, onChange: t.handleChange.bind(t), onCancel: t.handleCancel.bind(t), onConfirm: t.handleConfirm.bind(t), columns: t.props.columns })
		            );
		        }
		    }]);
		
		    return CascadeSelectField;
		}(React.Component);
		
		CascadeSelectField.defaultProps = {
		    options: [],
		    value: [],
		    formatter: function formatter(value) {
		        return value.map(function (v) {
		            return v.text;
		        }).join('/');
		    },
		    onChange: function onChange() {},
		    onSelect: function onSelect() {},
		    readOnly: false,
		    placeholder: '',
		    columns: []
		};
		
		// http://facebook.github.io/react/docs/reusable-components.html
		CascadeSelectField.propTypes = {
		    className: React.PropTypes.string,
		    label: React.PropTypes.string.isRequired,
		    options: React.PropTypes.array,
		    value: React.PropTypes.array,
		    formatter: React.PropTypes.func,
		    onChange: React.PropTypes.func,
		    onSelect: React.PropTypes.func,
		    readOnly: React.PropTypes.bool,
		    placeholder: React.PropTypes.string,
		    confirmText: React.PropTypes.string,
		    cancelText: React.PropTypes.string,
		    columns: React.PropTypes.array
		};
		
		CascadeSelectField.displayName = 'CascadeSelectField';
		
		module.exports = CascadeSelectField;
		
		function parseProps(props) {
		    props = JSON.parse(JSON.stringify(props));
		    var _props = props;
		    var options = _props.options;
		    var value = _props.value;
		
		    var cursor = options;
		    options = [];
		    value = value || [];
		    var confirmedValue = value.length ? value : [];
		
		    var _loop = function _loop(deep) {
		        var index = 0;
		        options[deep] = cursor.map(function (o, i) {
		            var option = {
		                value: o.value,
		                text: o.label
		            };
		            var val = value[deep];
		            if ((typeof val === 'undefined' ? 'undefined' : _typeof(val)) == 'object' && 'value' in value[deep]) {
		                val = value[deep].value;
		            }
		            if (o.value == val) {
		                index = i;
		                value[deep] = option;
		            }
		            return option;
		        });
		        cursor = cursor[index] ? cursor[index].children : null;
		    };
		
		    for (var deep = 0; cursor && deep < props.columns.length; deep++) {
		        _loop(deep);
		    }
		    return {
		        options: options,
		        value: value,
		        confirmedValue: confirmedValue
		    };
		}
		
		function parseState(value, options) {
		    var cursor = options;
		    options = [];
		
		    var _loop2 = function _loop2(deep) {
		        var index = 0;
		        options[deep] = cursor.map(function (o, i) {
		            var option = {
		                value: o.value,
		                text: o.label
		            };
		            if (deep in value && o.value == value[deep].value) {
		                index = i;
		                value[deep] = option;
		            }
		            return option;
		        });
		        cursor = cursor[index] ? cursor[index].children : null;
		    };
		
		    for (var deep = 0; cursor; deep++) {
		        _loop2(deep);
		    }
		    return {
		        options: options,
		        value: value
		    };
		}
		
	
	
	/***/ },
	/* 82 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		/**
		 * Slot Component Style for tingle
		 * @author caoke.ck
		 *
		 * Copyright 2014-2016, Tingle Team, Alinw.
		 * All rights reserved.
		 */
		
		module.exports = __webpack_require__(83);
		
	
	
	/***/ },
	/* 83 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		/**
		 * Slot Component for tingle
		 * @author caoke.ck
		 *
		 * Copyright 2014-2016, Tingle Team.
		 * All rights reserved.
		 */
		
		var React = __webpack_require__(2);
		var classnames = __webpack_require__(45);
		var Context = __webpack_require__(47);
		var Layer = __webpack_require__(59);
		var Scroller = __webpack_require__(84);
		
		// 滑动效果的动画函数
		var LINEAR_EASE = {
		    style: 'linear',
		    fn: function fn(k) {
		        return k;
		    }
		};
		
		var isArray = function isArray(arr) {
		    return Object.prototype.toString.call(arr) === '[object Array]';
		};
		var equals = function equals(obj1, obj2) {
		    return JSON.stringify(obj1) === JSON.stringify(obj2);
		};
		
		var Slot = function (_React$Component) {
		    _inherits(Slot, _React$Component);
		
		    function Slot(props) {
		        _classCallCheck(this, Slot);
		
		        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Slot).call(this, props));
		
		        var t = _this;
		
		        // 初始状态
		        t.state = {
		            visible: false,
		            title: props.title || '',
		            data: props.data || [],
		            selectedIndex: t.findSelectedIndex(props)
		        };
		        return _this;
		    }
		
		    _createClass(Slot, [{
		        key: 'componentDidMount',
		        value: function componentDidMount() {
		            var t = this;
		
		            // 获取所有 scroller 的容器
		            var slotBody = t.refs.root.querySelector('.' + Context.prefixClass('slot-body'));
		
		            // 获取选项高度
		            t.findItemHeight(slotBody);
		
		            // tap 事件触发选中状态变更
		            slotBody.addEventListener('iscroll:tap', function (e) {
		                var className = e.target.className;
		                var reg = new RegExp(Context.prefixClass('slot-item(\\d+)_(\\d+)'));
		                var match = reg.exec(className);
		                if (match && className.indexOf(Context.prefixClass('slot-item-active')) === -1) {
		                    var column = parseInt(match[1]);
		                    var index = parseInt(match[2]);
		                    t.props.onChange(t.getData(column, index), column, index);
		                }
		            }, false);
		
		            // 初始化滚动的标记
		            t._willRefresh = true;
		        }
		    }, {
		        key: 'componentDidUpdate',
		        value: function componentDidUpdate() {
		            var t = this;
		
		            // 获取选项高度
		            t.findItemHeight();
		
		            // 可见的时候滚动到选中的选项
		            if (t.state.visible && t._willRefresh) {
		
		                t._willRefresh = false;
		                t.scrollAll(200);
		            }
		        }
		
		        // 减少渲染次数
		
		    }, {
		        key: 'componentWillReceiveProps',
		        value: function componentWillReceiveProps(nextProps) {
		            var t = this;
		
		            var data = nextProps.data;
		            var selectedIndex = t.findSelectedIndex(nextProps);
		
		            // 数据变化需要重新初始化 scroller
		            var state = {};
		            var willRefresh = false;
		            if (!equals(t.state.data, data)) {
		                state.data = data;
		                if (t.props.scrollMod == 'keep') {
		                    // 替换列后仍保留指定值的位置
		                    // 记录旧值在新数据中的索引
		                    t._selectedIndex = t.findSelectedIndex({
		                        data: data,
		                        value: t.state.selectedIndex.map(function (n, i) {
		                            return t.state.data[i][n];
		                        })
		                    });
		                    // 标记变更的列
		                    t._columnChanged = t.state.data.map(function (n, i) {
		                        return !equals(data[i], n);
		                    });
		                }
		                willRefresh = true;
		            }
		            if (!equals(t.state.selectedIndex, selectedIndex)) {
		                state.selectedIndex = selectedIndex;
		                willRefresh = true;
		            }
		            if (willRefresh) {
		                t._willRefresh = true;
		                t.setState(state);
		            }
		        }
		    }, {
		        key: 'findItemHeight',
		        value: function findItemHeight(slotBody) {
		            var t = this;
		            if (!t._itemHeight) {
		                slotBody = slotBody || t.refs.root.querySelector('.' + Context.prefixClass('slot-body'));
		                var li = slotBody.querySelector('li');
		                t._itemHeight = li ? parseFloat(getComputedStyle(li, null).height) : 0;
		            }
		        }
		    }, {
		        key: 'scrollAll',
		        value: function scrollAll(time) {
		            var t = this;
		            if (t.props.scrollMod == 'keep' && t._selectedIndex) {
		                t._selectedIndex.forEach(function (index, column) {
		                    var scroller = t.refs['scroller' + column].scroller;
		                    if (t._columnChanged[column]) {
		                        scroller.scrollTo(0, -index * t._itemHeight, 0, LINEAR_EASE);
		                    }
		                });
		                delete t._selectedIndex;
		                setTimeout(function () {
		                    t.state.selectedIndex.forEach(function (index, column) {
		                        var scroller = t.refs['scroller' + column].scroller;
		                        scroller.scrollTo(0, -index * t._itemHeight, time, LINEAR_EASE);
		                    });
		                }, 5);
		            } else {
		                t.state.selectedIndex.forEach(function (index, column) {
		                    var scroller = t.refs['scroller' + column].scroller;
		                    scroller.scrollTo(0, -index * t._itemHeight, time, LINEAR_EASE);
		                });
		            }
		        }
		    }, {
		        key: 'findSelectedIndex',
		        value: function findSelectedIndex(props) {
		            var data = props.data || [];
		            var value = props.value || [];
		            var selectedIndex = [];
		
		            // 遍历数据模型
		            data.forEach(function (columnData, column) {
		
		                selectedIndex[column] = 0;
		
		                // 遍历每一列
		                for (var i = 0; i < columnData.length; i++) {
		
		                    // 定位选中值
		                    if (value[column] && columnData[i].value === value[column].value) {
		                        selectedIndex[column] = i;
		                        break;
		                    }
		                }
		            });
		
		            return selectedIndex;
		        }
		    }, {
		        key: 'handleScrollStart',
		        value: function handleScrollStart() {
		            var t = this;
		            t.setState({
		                scrolling: true
		            });
		        }
		    }, {
		        key: 'handleScrollEnd',
		        value: function handleScrollEnd(column) {
		            var t = this;
		            t.setState({
		                scrolling: false
		            });
		            var scroller = t.refs['scroller' + column].scroller;
		            var height = t._itemHeight;
		            var remainder = Math.abs(scroller.y % height);
		            var index = scroller.y / height;
		
		            // 没有滚动到选项，需要继续滚动一段距离
		            if (remainder) {
		
		                var func = void 0;
		                if (scroller.distY > 0) {
		                    // 向下滚动
		                    if (remainder < height * 0.7) {
		                        func = 'ceil';
		                    } else {
		                        func = 'floor';
		                    }
		                } else {
		                    // 向上滚动
		                    if (remainder > height * 0.3) {
		                        func = 'floor';
		                    } else {
		                        func = 'ceil';
		                    }
		                }
		
		                index = Math[func](scroller.y / height);
		            }
		
		            // 在 onChange 中设置状态
		            index = Math.abs(index);
		            t.props.onChange(t.getData(column, index), column, index);
		        }
		    }, {
		        key: 'show',
		        value: function show() {
		            var _this2 = this;
		
		            this.setState({
		                visible: true
		            }, function () {
		                _this2.scrollAll(0);
		            });
		        }
		    }, {
		        key: 'hide',
		        value: function hide() {
		            this.setState({
		                visible: false
		            });
		        }
		    }, {
		        key: 'handleCancel',
		        value: function handleCancel() {
		            var t = this;
		            if (t.state.scrolling) {
		                return false;
		            }
		
		            try {
		                t.props.onCancel();
		            } finally {
		                t.hide();
		            }
		        }
		    }, {
		        key: 'handleConfirm',
		        value: function handleConfirm() {
		            var t = this;
		            if (t.state.scrolling) {
		                return false;
		            }
		
		            try {
		                t.props.onConfirm(t.getData());
		            } finally {
		                t.hide();
		            }
		        }
		
		        // 获取值的时候指定变更的列，为什么要这么做，是因为有变更后我不直接改 state！
		
		    }, {
		        key: 'getData',
		        value: function getData(sColumn, sIndex) {
		            var t = this;
		            var ret = [];
		            var _t$state = t.state;
		            var data = _t$state.data;
		            var selectedIndex = _t$state.selectedIndex;
		
		
		            selectedIndex.forEach(function (index, column) {
		                ret[column] = data[column][column === sColumn ? sIndex : index];
		            });
		
		            return ret;
		        }
		    }, {
		        key: 'render',
		        value: function render() {
		            var t = this;
		            var _t$props = t.props;
		            var className = _t$props.className;
		            var maskCloseable = _t$props.maskCloseable;
		            var cancelText = _t$props.cancelText;
		            var confirmText = _t$props.confirmText;
		
		            return React.createElement(
		                Layer,
		                { visible: t.state.visible, bottom: 0, onMaskClick: maskCloseable ? t.handleCancel.bind(t) : function () {
		                        return maskCloseable;
		                    } },
		                React.createElement(
		                    'div',
		                    { ref: 'root', className: classnames(Context.prefixClass('slot'), _defineProperty({}, className, !!className)) },
		                    React.createElement(
		                        'div',
		                        { className: Context.prefixClass('slot-header FBH FBAC') },
		                        React.createElement(
		                            'div',
		                            { className: Context.prefixClass('slot-cancel'), onClick: t.handleCancel.bind(t) },
		                            cancelText
		                        ),
		                        React.createElement(
		                            'div',
		                            { className: Context.prefixClass('FB1 FAC slot-title') },
		                            t.state.title
		                        ),
		                        React.createElement(
		                            'div',
		                            { className: classnames(Context.prefixClass('slot-confirm'), {
		                                    enable: !t.state.scrolling
		                                }), onClick: t.handleConfirm.bind(t) },
		                            confirmText
		                        )
		                    ),
		                    t.props.columns && t.props.columns.length ? React.createElement(
		                        'ul',
		                        { className: Context.prefixClass('slot-columns FBH') },
		                        t.props.columns.map(function (c, i) {
		                            return React.createElement(
		                                'li',
		                                { key: 'column' + i, className: Context.prefixClass('FB1 FAC') },
		                                c
		                            );
		                        })
		                    ) : '',
		                    React.createElement(
		                        'div',
		                        { className: Context.prefixClass('slot-body FBH FC9 PR') },
		                        t.state.data.map(function (m, i) {
		                            return React.createElement(
		                                Scroller,
		                                { ref: 'scroller' + i, key: 'scroller' + i, className: Context.prefixClass('FB1'), autoRefresh: t.state.visible, tap: 'iscroll:tap', onScrollStart: t.handleScrollStart.bind(t, i), onScrollEnd: t.handleScrollEnd.bind(t, i) },
		                                React.createElement(
		                                    'ul',
		                                    null,
		                                    React.createElement('li', null),
		                                    React.createElement('li', null),
		                                    m.map(function (n, j) {
		                                        return React.createElement(
		                                            'li',
		                                            { key: 'item' + i + '_' + j, className: classnames(Context.prefixClass('slot-item' + i + '_' + j), _defineProperty({}, Context.prefixClass('slot-item-active'), j === t.state.selectedIndex[i])) },
		                                            n.text
		                                        );
		                                    }),
		                                    React.createElement('li', null),
		                                    React.createElement('li', null)
		                                )
		                            );
		                        })
		                    )
		                )
		            );
		        }
		    }]);
		
		    return Slot;
		}(React.Component);
		
		Slot.defaultProps = {
		    title: '',
		    value: [],
		    maskCloseable: true,
		    data: [],
		    className: '',
		    confirmText: '完成',
		    cancelText: '取消',
		    onConfirm: function onConfirm() {},
		    onCancel: function onCancel() {},
		    onChange: function onChange() {},
		
		    scrollMod: 'reset',
		    columns: []
		};
		
		// http://facebook.github.io/react/docs/reusable-components.html
		Slot.propTypes = {
		    className: React.PropTypes.string,
		    title: React.PropTypes.string,
		    data: React.PropTypes.array.isRequired,
		    value: React.PropTypes.array,
		    maskCloseable: React.PropTypes.bool,
		    confirmText: React.PropTypes.string,
		    cancelText: React.PropTypes.string,
		    onConfirm: React.PropTypes.func,
		    onCancel: React.PropTypes.func,
		    onChange: React.PropTypes.func,
		    scrollMod: React.PropTypes.string,
		    columns: React.PropTypes.array
		};
		
		// 格式化单列数据
		Slot.formatColumnValue = function (columnData, value) {
		
		    // 兼容简单选中值
		    var columnValue = void 0;
		    if (typeof value !== 'undefined') {
		        if (value.hasOwnProperty('value')) {
		            columnValue = value.value;
		        } else {
		            columnValue = value;
		        }
		    }
		    value = undefined;
		
		    // 遍历每一项
		    for (var i = 0; i < columnData.length; i++) {
		        var cell = columnData[i];
		
		        // 兼容非对象的数据
		        if ((typeof cell === 'undefined' ? 'undefined' : _typeof(cell)) !== 'object') {
		            cell = columnData[i] = {
		                text: cell,
		                value: cell
		            };
		        }
		
		        // 补全缺失数据
		        if (!cell.hasOwnProperty('text')) {
		            cell.text = cell.value;
		        }
		        if (!cell.hasOwnProperty('value')) {
		            cell.value = cell.text;
		        }
		
		        // 定位选中值
		        if (cell.value === columnValue) {
		            value = cell;
		        }
		    }
		
		    // 默认选中第一项
		    if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object') {
		        value = columnData[0];
		    }
		
		    return {
		        columnData: columnData,
		        columnValue: value
		    };
		};
		
		// 格式化多列数据
		Slot.formatDataValue = function () {
		    var data = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];
		    var value = arguments.length <= 1 || arguments[1] === undefined ? [] : arguments[1];
		
		
		    // 兼容单列数据的缩略写法
		    if (!isArray(data[0])) {
		        data = [data];
		    }
		    if (!isArray(value)) {
		        value = [value];
		    }
		
		    // 遍历数据模型
		    data.forEach(function (columnData, column) {
		
		        // 格式化列数据
		        var ret = Slot.formatColumnValue(columnData, value[column]);
		        value[column] = ret.columnValue;
		    });
		
		    return {
		        data: data,
		        value: value
		    };
		};
		
		Slot.displayName = 'Slot';
		
		module.exports = Slot;
		
	
	
	/***/ },
	/* 84 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		/**
		 * Scroller Component Style for tingle
		 * @author gbk
		 *
		 * Copyright 2014-2016, Tingle Team, Alinw.
		 * All rights reserved.
		 */
		
		module.exports = __webpack_require__(85);
		
	
	
	/***/ },
	/* 85 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		/**
		 * Scroller Component for tingle
		 * @author gbk
		 *
		 * Copyright 2014-2016, Tingle Team.
		 * All rights reserved.
		 */
		var React = __webpack_require__(2);
		var classnames = __webpack_require__(45);
		var IScroll = __webpack_require__(86);
		var Context = __webpack_require__(47);
		
		var Scroller = function (_React$Component) {
		    _inherits(Scroller, _React$Component);
		
		    function Scroller(props) {
		        _classCallCheck(this, Scroller);
		
		        return _possibleConstructorReturn(this, Object.getPrototypeOf(Scroller).call(this, props));
		    }
		
		    _createClass(Scroller, [{
		        key: 'componentDidMount',
		        value: function componentDidMount() {
		            var t = this;
		
		            // 根节点的dom引用
		            t.el = ReactDOM.findDOMNode(t.refs.root);
		
		            // 初始化 iscroll
		            t.initScroll();
		        }
		    }, {
		        key: 'componentDidUnMount',
		        value: function componentDidUnMount() {
		
		            // 销毁 iscroll
		            this.scroller.destroy();
		        }
		    }, {
		        key: 'componentDidUpdate',
		        value: function componentDidUpdate() {
		            var t = this;
		
		            // 避免很频繁的调用
		            clearTimeout(t._timeout);
		            t._timeout = setTimeout(function () {
		
		                // 有些场景下不需要刷新
		                if (t.props.autoRefresh) {
		
		                    // 更新 iscroll
		                    t.scroller && t.scroller.refresh();
		                }
		            }, 10);
		        }
		    }, {
		        key: 'render',
		        value: function render() {
		            var t = this;
		
		            // iscroll 需要一个 wrapper，所以里面多加了一层 div
		            return React.createElement(
		                'div',
		                { className: classnames(Context.prefixClass('scroller'), _defineProperty({}, t.props.className, !!t.props.className)), ref: 'root' },
		                React.createElement(
		                    'div',
		                    { className: Context.prefixClass('DIB'),
		                        style: { minWidth: t.props.minWidth } },
		                    this.props.children
		                )
		            );
		        }
		    }, {
		        key: 'initScroll',
		        value: function initScroll() {
		            var t = this;
		
		            // 参数过滤，onXxx 是事件，否则是配置参数
		            var options = {};
		            var events = {};
		            for (var key in t.props) {
		                var matches = /^on([A-Z]\w*)$/.exec(key);
		                if (matches) {
		                    // 事件
		                    var evtName = matches[1].replace(/./, function (p) {
		                        return p.toLowerCase();
		                    });
		                    events[evtName] = t.props[key];
		                } else if (key !== 'className' && key !== 'autoRefresh' && key !== 'minWidth') {
		                    // 配置
		                    options[key] = t.props[key];
		                }
		            }
		
		            // iscroll 实例化
		            t.scroller = new IScroll(t.el, options);
		
		            // 事件挂载
		            for (var _key in events) {
		                t.scroller.on(_key, events[_key].bind(null, t.scroller));
		            }
		        }
		    }]);
		
		    return Scroller;
		}(React.Component);
		
		// 更多配置参数，详见 http://iscrolljs.com/ ，事件用 onXxx 的格式，例如 scrollEnd 事件对应的参数是 onScrollEnd
		
		
		Scroller.defaultProps = {
		    click: /chrome/i.test(navigator.userAgent), //iscroll 默认屏蔽内部的 click 事件，考虑到在 chrome 中调试没开模拟器的场景，允许响应 click 点击。 http://iscrolljs.com/#basic-features
		    autoRefresh: true,
		    minWidth: '100%'
		};
		
		// http://facebook.github.io/react/docs/reusable-components.html
		Scroller.propTypes = {
		    autoRefresh: React.PropTypes.bool,
		    className: React.PropTypes.string
		};
		
		module.exports = Scroller;
		
	
	
	/***/ },
	/* 86 */
	/***/ function(module, exports) {
	
		'use strict';
		
		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
		
		/*! iScroll v5.1.3 ~ (c) 2008-2014 Matteo Spinelli ~ http://cubiq.org/license */
		(function (window, document, Math) {
			var rAF = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {
				window.setTimeout(callback, 1000 / 60);
			};
		
			var utils = function () {
				var me = {};
		
				var _elementStyle = document.createElement('div').style;
				var _vendor = function () {
					var vendors = ['t', 'webkitT', 'MozT', 'msT', 'OT'],
					    transform,
					    i = 0,
					    l = vendors.length;
		
					for (; i < l; i++) {
						transform = vendors[i] + 'ransform';
						if (transform in _elementStyle) return vendors[i].substr(0, vendors[i].length - 1);
					}
		
					return false;
				}();
		
				function _prefixStyle(style) {
					if (_vendor === false) return false;
					if (_vendor === '') return style;
					return _vendor + style.charAt(0).toUpperCase() + style.substr(1);
				}
		
				me.getTime = Date.now || function getTime() {
					return new Date().getTime();
				};
		
				me.extend = function (target, obj) {
					for (var i in obj) {
						target[i] = obj[i];
					}
				};
		
				me.addEvent = function (el, type, fn, capture) {
					el.addEventListener(type, fn, !!capture);
				};
		
				me.removeEvent = function (el, type, fn, capture) {
					el.removeEventListener(type, fn, !!capture);
				};
		
				me.prefixPointerEvent = function (pointerEvent) {
					return window.MSPointerEvent ? 'MSPointer' + pointerEvent.charAt(9).toUpperCase() + pointerEvent.substr(10) : pointerEvent;
				};
		
				me.momentum = function (current, start, time, lowerMargin, wrapperSize, deceleration) {
					var distance = current - start,
					    speed = Math.abs(distance) / time,
					    destination,
					    duration;
		
					deceleration = deceleration === undefined ? 0.0006 : deceleration;
		
					destination = current + speed * speed / (2 * deceleration) * (distance < 0 ? -1 : 1);
					duration = speed / deceleration;
		
					if (destination < lowerMargin) {
						destination = wrapperSize ? lowerMargin - wrapperSize / 2.5 * (speed / 8) : lowerMargin;
						distance = Math.abs(destination - current);
						duration = distance / speed;
					} else if (destination > 0) {
						destination = wrapperSize ? wrapperSize / 2.5 * (speed / 8) : 0;
						distance = Math.abs(current) + destination;
						duration = distance / speed;
					}
		
					return {
						destination: Math.round(destination),
						duration: duration
					};
				};
		
				var _transform = _prefixStyle('transform');
		
				me.extend(me, {
					hasTransform: _transform !== false,
					hasPerspective: _prefixStyle('perspective') in _elementStyle,
					hasTouch: 'ontouchstart' in window,
					hasPointer: window.PointerEvent || window.MSPointerEvent, // IE10 is prefixed
					hasTransition: _prefixStyle('transition') in _elementStyle
				});
		
				// This should find all Android browsers lower than build 535.19 (both stock browser and webview)
				me.isBadAndroid = /Android /.test(window.navigator.appVersion) && !/Chrome\/\d/.test(window.navigator.appVersion);
		
				me.extend(me.style = {}, {
					transform: _transform,
					transitionTimingFunction: _prefixStyle('transitionTimingFunction'),
					transitionDuration: _prefixStyle('transitionDuration'),
					transitionDelay: _prefixStyle('transitionDelay'),
					transformOrigin: _prefixStyle('transformOrigin')
				});
		
				me.hasClass = function (e, c) {
					var re = new RegExp("(^|\\s)" + c + "(\\s|$)");
					return re.test(e.className);
				};
		
				me.addClass = function (e, c) {
					if (me.hasClass(e, c)) {
						return;
					}
		
					var newclass = e.className.split(' ');
					newclass.push(c);
					e.className = newclass.join(' ');
				};
		
				me.removeClass = function (e, c) {
					if (!me.hasClass(e, c)) {
						return;
					}
		
					var re = new RegExp("(^|\\s)" + c + "(\\s|$)", 'g');
					e.className = e.className.replace(re, ' ');
				};
		
				me.offset = function (el) {
					var left = -el.offsetLeft,
					    top = -el.offsetTop;
		
					// jshint -W084
					while (el = el.offsetParent) {
						left -= el.offsetLeft;
						top -= el.offsetTop;
					}
					// jshint +W084
		
					return {
						left: left,
						top: top
					};
				};
		
				me.preventDefaultException = function (el, exceptions) {
					for (var i in exceptions) {
						if (exceptions[i].test(el[i])) {
							return true;
						}
					}
		
					return false;
				};
		
				me.extend(me.eventType = {}, {
					touchstart: 1,
					touchmove: 1,
					touchend: 1,
		
					mousedown: 2,
					mousemove: 2,
					mouseup: 2,
		
					pointerdown: 3,
					pointermove: 3,
					pointerup: 3,
		
					MSPointerDown: 3,
					MSPointerMove: 3,
					MSPointerUp: 3
				});
		
				me.extend(me.ease = {}, {
					quadratic: {
						style: 'cubic-bezier(0.25, 0.46, 0.45, 0.94)',
						fn: function fn(k) {
							return k * (2 - k);
						}
					},
					circular: {
						style: 'cubic-bezier(0.1, 0.57, 0.1, 1)', // Not properly "circular" but this looks better, it should be (0.075, 0.82, 0.165, 1)
						fn: function fn(k) {
							return Math.sqrt(1 - --k * k);
						}
					},
					back: {
						style: 'cubic-bezier(0.175, 0.885, 0.32, 1.275)',
						fn: function fn(k) {
							var b = 4;
							return (k = k - 1) * k * ((b + 1) * k + b) + 1;
						}
					},
					bounce: {
						style: '',
						fn: function fn(k) {
							if ((k /= 1) < 1 / 2.75) {
								return 7.5625 * k * k;
							} else if (k < 2 / 2.75) {
								return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;
							} else if (k < 2.5 / 2.75) {
								return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;
							} else {
								return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;
							}
						}
					},
					elastic: {
						style: '',
						fn: function fn(k) {
							var f = 0.22,
							    e = 0.4;
		
							if (k === 0) {
								return 0;
							}
							if (k == 1) {
								return 1;
							}
		
							return e * Math.pow(2, -10 * k) * Math.sin((k - f / 4) * (2 * Math.PI) / f) + 1;
						}
					}
				});
		
				me.tap = function (e, eventName) {
					var ev = document.createEvent('Event');
					ev.initEvent(eventName, true, true);
					ev.pageX = e.pageX;
					ev.pageY = e.pageY;
					e.target.dispatchEvent(ev);
				};
		
				me.click = function (e) {
					var target = e.target,
					    ev;
		
					if (!/(SELECT|INPUT|TEXTAREA)/i.test(target.tagName)) {
						ev = document.createEvent('MouseEvents');
						ev.initMouseEvent('click', true, true, e.view, 1, target.screenX, target.screenY, target.clientX, target.clientY, e.ctrlKey, e.altKey, e.shiftKey, e.metaKey, 0, null);
		
						ev._constructed = true;
						target.dispatchEvent(ev);
					}
				};
		
				return me;
			}();
		
			function IScroll(el, options) {
				this.wrapper = typeof el == 'string' ? document.querySelector(el) : el;
				this.scroller = this.wrapper.children[0];
				this.scrollerStyle = this.scroller.style; // cache style for better performance
		
				this.options = {
		
					zoomMin: 1,
					zoomMax: 4, startZoom: 1,
		
					resizeScrollbars: true,
		
					mouseWheelSpeed: 20,
		
					snapThreshold: 0.334,
		
					// INSERT POINT: OPTIONS
		
					startX: 0,
					startY: 0,
					scrollY: true,
					directionLockThreshold: 5,
					momentum: true,
		
					bounce: true,
					bounceTime: 600,
					bounceEasing: '',
		
					preventDefault: true,
					preventDefaultException: { tagName: /^(INPUT|TEXTAREA|BUTTON|SELECT)$/ },
		
					HWCompositing: true,
					useTransition: true,
					useTransform: true
				};
		
				for (var i in options) {
					this.options[i] = options[i];
				}
		
				// Normalize options
				this.translateZ = this.options.HWCompositing && utils.hasPerspective ? ' translateZ(0)' : '';
		
				this.options.useTransition = utils.hasTransition && this.options.useTransition;
				this.options.useTransform = utils.hasTransform && this.options.useTransform;
		
				this.options.eventPassthrough = this.options.eventPassthrough === true ? 'vertical' : this.options.eventPassthrough;
				this.options.preventDefault = !this.options.eventPassthrough && this.options.preventDefault;
		
				// If you want eventPassthrough I have to lock one of the axes
				this.options.scrollY = this.options.eventPassthrough == 'vertical' ? false : this.options.scrollY;
				this.options.scrollX = this.options.eventPassthrough == 'horizontal' ? false : this.options.scrollX;
		
				// With eventPassthrough we also need lockDirection mechanism
				this.options.freeScroll = this.options.freeScroll && !this.options.eventPassthrough;
				this.options.directionLockThreshold = this.options.eventPassthrough ? 0 : this.options.directionLockThreshold;
		
				this.options.bounceEasing = typeof this.options.bounceEasing == 'string' ? utils.ease[this.options.bounceEasing] || utils.ease.circular : this.options.bounceEasing;
		
				this.options.resizePolling = this.options.resizePolling === undefined ? 60 : this.options.resizePolling;
		
				if (this.options.tap === true) {
					this.options.tap = 'tap';
				}
		
				if (this.options.shrinkScrollbars == 'scale') {
					this.options.useTransition = false;
				}
		
				this.options.invertWheelDirection = this.options.invertWheelDirection ? -1 : 1;
		
				if (this.options.probeType == 3) {
					this.options.useTransition = false;
				}
		
				// INSERT POINT: NORMALIZATION
		
				// Some defaults	
				this.x = 0;
				this.y = 0;
				this.directionX = 0;
				this.directionY = 0;
				this._events = {};
		
				this.scale = Math.min(Math.max(this.options.startZoom, this.options.zoomMin), this.options.zoomMax);
		
				// INSERT POINT: DEFAULTS
		
				this._init();
				this.refresh();
		
				this.scrollTo(this.options.startX, this.options.startY);
				this.enable();
			}
		
			IScroll.prototype = {
				version: '5.1.3',
		
				_init: function _init() {
					this._initEvents();
		
					if (this.options.zoom) {
						this._initZoom();
					}
		
					if (this.options.scrollbars || this.options.indicators) {
						this._initIndicators();
					}
		
					if (this.options.mouseWheel) {
						this._initWheel();
					}
		
					if (this.options.snap) {
						this._initSnap();
					}
		
					if (this.options.keyBindings) {
						this._initKeys();
					}
		
					// INSERT POINT: _init
				},
		
				destroy: function destroy() {
					this._initEvents(true);
		
					this._execEvent('destroy');
				},
		
				_transitionEnd: function _transitionEnd(e) {
					if (e.target != this.scroller || !this.isInTransition) {
						return;
					}
		
					this._transitionTime();
					if (!this.resetPosition(this.options.bounceTime)) {
						this.isInTransition = false;
						this._execEvent('scrollEnd');
					}
				},
		
				_start: function _start(e) {
					// React to left mouse button only
					if (utils.eventType[e.type] != 1) {
						if (e.button !== 0) {
							return;
						}
					}
		
					if (!this.enabled || this.initiated && utils.eventType[e.type] !== this.initiated) {
						return;
					}
		
					if (this.options.preventDefault && !utils.isBadAndroid && !utils.preventDefaultException(e.target, this.options.preventDefaultException)) {
						e.preventDefault();
					}
		
					var point = e.touches ? e.touches[0] : e,
					    pos;
		
					this.initiated = utils.eventType[e.type];
					this.moved = false;
					this.distX = 0;
					this.distY = 0;
					this.directionX = 0;
					this.directionY = 0;
					this.directionLocked = 0;
		
					this._transitionTime();
		
					this.startTime = utils.getTime();
		
					if (this.options.useTransition && this.isInTransition) {
						this.isInTransition = false;
						pos = this.getComputedPosition();
						this._translate(Math.round(pos.x), Math.round(pos.y));
						this._execEvent('scrollEnd');
					} else if (!this.options.useTransition && this.isAnimating) {
						this.isAnimating = false;
						this._execEvent('scrollEnd');
					}
		
					this.startX = this.x;
					this.startY = this.y;
					this.absStartX = this.x;
					this.absStartY = this.y;
					this.pointX = point.pageX;
					this.pointY = point.pageY;
		
					this._execEvent('beforeScrollStart');
				},
		
				_move: function _move(e) {
					if (!this.enabled || utils.eventType[e.type] !== this.initiated) {
						return;
					}
		
					if (this.options.preventDefault) {
						// increases performance on Android? TODO: check!
						e.preventDefault();
					}
		
					var point = e.touches ? e.touches[0] : e,
					    deltaX = point.pageX - this.pointX,
					    deltaY = point.pageY - this.pointY,
					    timestamp = utils.getTime(),
					    newX,
					    newY,
					    absDistX,
					    absDistY;
		
					this.pointX = point.pageX;
					this.pointY = point.pageY;
		
					this.distX += deltaX;
					this.distY += deltaY;
					absDistX = Math.abs(this.distX);
					absDistY = Math.abs(this.distY);
		
					// We need to move at least 10 pixels for the scrolling to initiate
					if (timestamp - this.endTime > 300 && absDistX < 10 && absDistY < 10) {
						return;
					}
		
					// If you are scrolling in one direction lock the other
					if (!this.directionLocked && !this.options.freeScroll) {
						if (absDistX > absDistY + this.options.directionLockThreshold) {
							this.directionLocked = 'h'; // lock horizontally
						} else if (absDistY >= absDistX + this.options.directionLockThreshold) {
								this.directionLocked = 'v'; // lock vertically
							} else {
									this.directionLocked = 'n'; // no lock
								}
					}
		
					if (this.directionLocked == 'h') {
						if (this.options.eventPassthrough == 'vertical') {
							e.preventDefault();
						} else if (this.options.eventPassthrough == 'horizontal') {
							this.initiated = false;
							return;
						}
		
						deltaY = 0;
					} else if (this.directionLocked == 'v') {
						if (this.options.eventPassthrough == 'horizontal') {
							e.preventDefault();
						} else if (this.options.eventPassthrough == 'vertical') {
							this.initiated = false;
							return;
						}
		
						deltaX = 0;
					}
		
					deltaX = this.hasHorizontalScroll ? deltaX : 0;
					deltaY = this.hasVerticalScroll ? deltaY : 0;
		
					newX = this.x + deltaX;
					newY = this.y + deltaY;
		
					// Slow down if outside of the boundaries
					if (newX > 0 || newX < this.maxScrollX) {
						newX = this.options.bounce ? this.x + deltaX / 3 : newX > 0 ? 0 : this.maxScrollX;
					}
					if (newY > 0 || newY < this.maxScrollY) {
						newY = this.options.bounce ? this.y + deltaY / 3 : newY > 0 ? 0 : this.maxScrollY;
					}
		
					this.directionX = deltaX > 0 ? -1 : deltaX < 0 ? 1 : 0;
					this.directionY = deltaY > 0 ? -1 : deltaY < 0 ? 1 : 0;
		
					if (!this.moved) {
						this._execEvent('scrollStart');
					}
		
					this.moved = true;
		
					this._translate(newX, newY);
		
					/* REPLACE START: _move */
		
					if (timestamp - this.startTime > 300) {
						this.startTime = timestamp;
						this.startX = this.x;
						this.startY = this.y;
		
						if (this.options.probeType == 1) {
							this._execEvent('scroll');
						}
					}
		
					if (this.options.probeType > 1) {
						this._execEvent('scroll');
					}
					/* REPLACE END: _move */
				},
		
				_end: function _end(e) {
					if (!this.enabled || utils.eventType[e.type] !== this.initiated) {
						return;
					}
		
					if (this.options.preventDefault && !utils.preventDefaultException(e.target, this.options.preventDefaultException)) {
						e.preventDefault();
					}
		
					var point = e.changedTouches ? e.changedTouches[0] : e,
					    momentumX,
					    momentumY,
					    duration = utils.getTime() - this.startTime,
					    newX = Math.round(this.x),
					    newY = Math.round(this.y),
					    distanceX = Math.abs(newX - this.startX),
					    distanceY = Math.abs(newY - this.startY),
					    time = 0,
					    easing = '';
		
					this.isInTransition = 0;
					this.initiated = 0;
					this.endTime = utils.getTime();
		
					// reset if we are outside of the boundaries
					if (this.resetPosition(this.options.bounceTime)) {
						return;
					}
		
					this.scrollTo(newX, newY); // ensures that the last position is rounded
		
					// we scrolled less than 10 pixels
					if (!this.moved) {
						if (this.options.tap) {
							utils.tap(e, this.options.tap);
						}
		
						if (this.options.click) {
							utils.click(e);
						}
		
						this._execEvent('scrollCancel');
						return;
					}
		
					if (this._events.flick && duration < 200 && distanceX < 100 && distanceY < 100) {
						this._execEvent('flick');
						return;
					}
		
					// start momentum animation if needed
					if (this.options.momentum && duration < 300) {
						momentumX = this.hasHorizontalScroll ? utils.momentum(this.x, this.startX, duration, this.maxScrollX, this.options.bounce ? this.wrapperWidth : 0, this.options.deceleration) : { destination: newX, duration: 0 };
						momentumY = this.hasVerticalScroll ? utils.momentum(this.y, this.startY, duration, this.maxScrollY, this.options.bounce ? this.wrapperHeight : 0, this.options.deceleration) : { destination: newY, duration: 0 };
						newX = momentumX.destination;
						newY = momentumY.destination;
						time = Math.max(momentumX.duration, momentumY.duration);
						this.isInTransition = 1;
					}
		
					if (this.options.snap) {
						var snap = this._nearestSnap(newX, newY);
						this.currentPage = snap;
						time = this.options.snapSpeed || Math.max(Math.max(Math.min(Math.abs(newX - snap.x), 1000), Math.min(Math.abs(newY - snap.y), 1000)), 300);
						newX = snap.x;
						newY = snap.y;
		
						this.directionX = 0;
						this.directionY = 0;
						easing = this.options.bounceEasing;
					}
		
					// INSERT POINT: _end
		
					if (newX != this.x || newY != this.y) {
						// change easing function when scroller goes out of the boundaries
						if (newX > 0 || newX < this.maxScrollX || newY > 0 || newY < this.maxScrollY) {
							easing = utils.ease.quadratic;
						}
		
						this.scrollTo(newX, newY, time, easing);
						return;
					}
		
					this._execEvent('scrollEnd');
				},
		
				_resize: function _resize() {
					var that = this;
		
					clearTimeout(this.resizeTimeout);
		
					this.resizeTimeout = setTimeout(function () {
						that.refresh();
					}, this.options.resizePolling);
				},
		
				resetPosition: function resetPosition(time) {
					var x = this.x,
					    y = this.y;
		
					time = time || 0;
		
					if (!this.hasHorizontalScroll || this.x > 0) {
						x = 0;
					} else if (this.x < this.maxScrollX) {
						x = this.maxScrollX;
					}
		
					if (!this.hasVerticalScroll || this.y > 0) {
						y = 0;
					} else if (this.y < this.maxScrollY) {
						y = this.maxScrollY;
					}
		
					if (x == this.x && y == this.y) {
						return false;
					}
		
					this.scrollTo(x, y, time, this.options.bounceEasing);
		
					return true;
				},
		
				disable: function disable() {
					this.enabled = false;
				},
		
				enable: function enable() {
					this.enabled = true;
				},
		
				refresh: function refresh() {
					var rf = this.wrapper.offsetHeight; // Force reflow
		
					this.wrapperWidth = this.wrapper.clientWidth;
					this.wrapperHeight = this.wrapper.clientHeight;
		
					/* REPLACE START: refresh */
					this.scrollerWidth = Math.round(this.scroller.offsetWidth * this.scale);
					this.scrollerHeight = Math.round(this.scroller.offsetHeight * this.scale);
		
					this.maxScrollX = this.wrapperWidth - this.scrollerWidth;
					this.maxScrollY = this.wrapperHeight - this.scrollerHeight;
					/* REPLACE END: refresh */
		
					this.hasHorizontalScroll = this.options.scrollX && this.maxScrollX < 0;
					this.hasVerticalScroll = this.options.scrollY && this.maxScrollY < 0;
		
					if (!this.hasHorizontalScroll) {
						this.maxScrollX = 0;
						this.scrollerWidth = this.wrapperWidth;
					}
		
					if (!this.hasVerticalScroll) {
						this.maxScrollY = 0;
						this.scrollerHeight = this.wrapperHeight;
					}
		
					this.endTime = 0;
					this.directionX = 0;
					this.directionY = 0;
		
					this.wrapperOffset = utils.offset(this.wrapper);
		
					this._execEvent('refresh');
		
					this.resetPosition();
		
					// INSERT POINT: _refresh
				},
		
				on: function on(type, fn) {
					if (!this._events[type]) {
						this._events[type] = [];
					}
		
					this._events[type].push(fn);
				},
		
				off: function off(type, fn) {
					if (!this._events[type]) {
						return;
					}
		
					var index = this._events[type].indexOf(fn);
		
					if (index > -1) {
						this._events[type].splice(index, 1);
					}
				},
		
				_execEvent: function _execEvent(type) {
					if (!this._events[type]) {
						return;
					}
		
					var i = 0,
					    l = this._events[type].length;
		
					if (!l) {
						return;
					}
		
					for (; i < l; i++) {
						this._events[type][i].apply(this, [].slice.call(arguments, 1));
					}
				},
		
				scrollBy: function scrollBy(x, y, time, easing) {
					x = this.x + x;
					y = this.y + y;
					time = time || 0;
		
					this.scrollTo(x, y, time, easing);
				},
		
				scrollTo: function scrollTo(x, y, time, easing) {
					easing = easing || utils.ease.circular;
		
					this.isInTransition = this.options.useTransition && time > 0;
		
					if (!time || this.options.useTransition && easing.style) {
						this._transitionTimingFunction(easing.style);
						this._transitionTime(time);
						this._translate(x, y);
					} else {
						this._animate(x, y, time, easing.fn);
					}
				},
		
				scrollToElement: function scrollToElement(el, time, offsetX, offsetY, easing) {
					el = el.nodeType ? el : this.scroller.querySelector(el);
		
					if (!el) {
						return;
					}
		
					var pos = utils.offset(el);
		
					pos.left -= this.wrapperOffset.left;
					pos.top -= this.wrapperOffset.top;
		
					// if offsetX/Y are true we center the element to the screen
					if (offsetX === true) {
						offsetX = Math.round(el.offsetWidth / 2 - this.wrapper.offsetWidth / 2);
					}
					if (offsetY === true) {
						offsetY = Math.round(el.offsetHeight / 2 - this.wrapper.offsetHeight / 2);
					}
		
					pos.left -= offsetX || 0;
					pos.top -= offsetY || 0;
		
					pos.left = pos.left > 0 ? 0 : pos.left < this.maxScrollX ? this.maxScrollX : pos.left;
					pos.top = pos.top > 0 ? 0 : pos.top < this.maxScrollY ? this.maxScrollY : pos.top;
		
					time = time === undefined || time === null || time === 'auto' ? Math.max(Math.abs(this.x - pos.left), Math.abs(this.y - pos.top)) : time;
		
					this.scrollTo(pos.left, pos.top, time, easing);
				},
		
				_transitionTime: function _transitionTime(time) {
					time = time || 0;
		
					this.scrollerStyle[utils.style.transitionDuration] = time + 'ms';
		
					if (!time && utils.isBadAndroid) {
						this.scrollerStyle[utils.style.transitionDuration] = '0.001s';
					}
		
					if (this.indicators) {
						for (var i = this.indicators.length; i--;) {
							this.indicators[i].transitionTime(time);
						}
					}
		
					// INSERT POINT: _transitionTime
				},
		
				_transitionTimingFunction: function _transitionTimingFunction(easing) {
					this.scrollerStyle[utils.style.transitionTimingFunction] = easing;
		
					if (this.indicators) {
						for (var i = this.indicators.length; i--;) {
							this.indicators[i].transitionTimingFunction(easing);
						}
					}
		
					// INSERT POINT: _transitionTimingFunction
				},
		
				_translate: function _translate(x, y) {
					if (this.options.useTransform) {
		
						/* REPLACE START: _translate */this.scrollerStyle[utils.style.transform] = 'translate(' + x + 'px,' + y + 'px) scale(' + this.scale + ') ' + this.translateZ; /* REPLACE END: _translate */
					} else {
							x = Math.round(x);
							y = Math.round(y);
							this.scrollerStyle.left = x + 'px';
							this.scrollerStyle.top = y + 'px';
						}
		
					this.x = x;
					this.y = y;
		
					if (this.indicators) {
						for (var i = this.indicators.length; i--;) {
							this.indicators[i].updatePosition();
						}
					}
		
					// INSERT POINT: _translate
				},
		
				_initEvents: function _initEvents(remove) {
					var eventType = remove ? utils.removeEvent : utils.addEvent,
					    target = this.options.bindToWrapper ? this.wrapper : window;
		
					eventType(window, 'orientationchange', this);
					eventType(window, 'resize', this);
		
					if (this.options.click) {
						eventType(this.wrapper, 'click', this, true);
					}
		
					if (!this.options.disableMouse) {
						eventType(this.wrapper, 'mousedown', this);
						eventType(target, 'mousemove', this);
						eventType(target, 'mousecancel', this);
						eventType(target, 'mouseup', this);
					}
		
					if (utils.hasPointer && !this.options.disablePointer) {
						eventType(this.wrapper, utils.prefixPointerEvent('pointerdown'), this);
						eventType(target, utils.prefixPointerEvent('pointermove'), this);
						eventType(target, utils.prefixPointerEvent('pointercancel'), this);
						eventType(target, utils.prefixPointerEvent('pointerup'), this);
					}
		
					if (utils.hasTouch && !this.options.disableTouch) {
						eventType(this.wrapper, 'touchstart', this);
						eventType(target, 'touchmove', this);
						eventType(target, 'touchcancel', this);
						eventType(target, 'touchend', this);
					}
		
					eventType(this.scroller, 'transitionend', this);
					eventType(this.scroller, 'webkitTransitionEnd', this);
					eventType(this.scroller, 'oTransitionEnd', this);
					eventType(this.scroller, 'MSTransitionEnd', this);
				},
		
				getComputedPosition: function getComputedPosition() {
					var matrix = window.getComputedStyle(this.scroller, null),
					    x,
					    y;
		
					if (this.options.useTransform) {
						matrix = matrix[utils.style.transform].split(')')[0].split(', ');
						x = +(matrix[12] || matrix[4]);
						y = +(matrix[13] || matrix[5]);
					} else {
						x = +matrix.left.replace(/[^-\d.]/g, '');
						y = +matrix.top.replace(/[^-\d.]/g, '');
					}
		
					return { x: x, y: y };
				},
		
				_initIndicators: function _initIndicators() {
					var interactive = this.options.interactiveScrollbars,
					    customStyle = typeof this.options.scrollbars != 'string',
					    indicators = [],
					    indicator;
		
					var that = this;
		
					this.indicators = [];
		
					if (this.options.scrollbars) {
						// Vertical scrollbar
						if (this.options.scrollY) {
							indicator = {
								el: createDefaultScrollbar('v', interactive, this.options.scrollbars),
								interactive: interactive,
								defaultScrollbars: true,
								customStyle: customStyle,
								resize: this.options.resizeScrollbars,
								shrink: this.options.shrinkScrollbars,
								fade: this.options.fadeScrollbars,
								listenX: false
							};
		
							this.wrapper.appendChild(indicator.el);
							indicators.push(indicator);
						}
		
						// Horizontal scrollbar
						if (this.options.scrollX) {
							indicator = {
								el: createDefaultScrollbar('h', interactive, this.options.scrollbars),
								interactive: interactive,
								defaultScrollbars: true,
								customStyle: customStyle,
								resize: this.options.resizeScrollbars,
								shrink: this.options.shrinkScrollbars,
								fade: this.options.fadeScrollbars,
								listenY: false
							};
		
							this.wrapper.appendChild(indicator.el);
							indicators.push(indicator);
						}
					}
		
					if (this.options.indicators) {
						// TODO: check concat compatibility
						indicators = indicators.concat(this.options.indicators);
					}
		
					for (var i = indicators.length; i--;) {
						this.indicators.push(new Indicator(this, indicators[i]));
					}
		
					// TODO: check if we can use array.map (wide compatibility and performance issues)
					function _indicatorsMap(fn) {
						for (var i = that.indicators.length; i--;) {
							fn.call(that.indicators[i]);
						}
					}
		
					if (this.options.fadeScrollbars) {
						this.on('scrollEnd', function () {
							_indicatorsMap(function () {
								this.fade();
							});
						});
		
						this.on('scrollCancel', function () {
							_indicatorsMap(function () {
								this.fade();
							});
						});
		
						this.on('scrollStart', function () {
							_indicatorsMap(function () {
								this.fade(1);
							});
						});
		
						this.on('beforeScrollStart', function () {
							_indicatorsMap(function () {
								this.fade(1, true);
							});
						});
					}
		
					this.on('refresh', function () {
						_indicatorsMap(function () {
							this.refresh();
						});
					});
		
					this.on('destroy', function () {
						_indicatorsMap(function () {
							this.destroy();
						});
		
						delete this.indicators;
					});
				},
		
				_initZoom: function _initZoom() {
					this.scrollerStyle[utils.style.transformOrigin] = '0 0';
				},
		
				_zoomStart: function _zoomStart(e) {
					var c1 = Math.abs(e.touches[0].pageX - e.touches[1].pageX),
					    c2 = Math.abs(e.touches[0].pageY - e.touches[1].pageY);
		
					this.touchesDistanceStart = Math.sqrt(c1 * c1 + c2 * c2);
					this.startScale = this.scale;
		
					this.originX = Math.abs(e.touches[0].pageX + e.touches[1].pageX) / 2 + this.wrapperOffset.left - this.x;
					this.originY = Math.abs(e.touches[0].pageY + e.touches[1].pageY) / 2 + this.wrapperOffset.top - this.y;
		
					this._execEvent('zoomStart');
				},
		
				_zoom: function _zoom(e) {
					if (!this.enabled || utils.eventType[e.type] !== this.initiated) {
						return;
					}
		
					if (this.options.preventDefault) {
						e.preventDefault();
					}
		
					var c1 = Math.abs(e.touches[0].pageX - e.touches[1].pageX),
					    c2 = Math.abs(e.touches[0].pageY - e.touches[1].pageY),
					    distance = Math.sqrt(c1 * c1 + c2 * c2),
					    scale = 1 / this.touchesDistanceStart * distance * this.startScale,
					    lastScale,
					    x,
					    y;
		
					this.scaled = true;
		
					if (scale < this.options.zoomMin) {
						scale = 0.5 * this.options.zoomMin * Math.pow(2.0, scale / this.options.zoomMin);
					} else if (scale > this.options.zoomMax) {
						scale = 2.0 * this.options.zoomMax * Math.pow(0.5, this.options.zoomMax / scale);
					}
		
					lastScale = scale / this.startScale;
					x = this.originX - this.originX * lastScale + this.startX;
					y = this.originY - this.originY * lastScale + this.startY;
		
					this.scale = scale;
		
					this._execEvent('zoom', scale);
					this.scrollTo(x, y, 0);
				},
		
				_zoomEnd: function _zoomEnd(e) {
					if (!this.enabled || utils.eventType[e.type] !== this.initiated) {
						return;
					}
		
					if (this.options.preventDefault) {
						e.preventDefault();
					}
		
					var newX, newY, lastScale;
		
					this.isInTransition = 0;
					this.initiated = 0;
		
					if (this.scale > this.options.zoomMax) {
						this.scale = this.options.zoomMax;
					} else if (this.scale < this.options.zoomMin) {
						this.scale = this.options.zoomMin;
					}
		
					// Update boundaries
					this.refresh();
		
					lastScale = this.scale / this.startScale;
		
					newX = this.originX - this.originX * lastScale + this.startX;
					newY = this.originY - this.originY * lastScale + this.startY;
		
					if (newX > 0) {
						newX = 0;
					} else if (newX < this.maxScrollX) {
						newX = this.maxScrollX;
					}
		
					if (newY > 0) {
						newY = 0;
					} else if (newY < this.maxScrollY) {
						newY = this.maxScrollY;
					}
		
					if (this.x != newX || this.y != newY) {
						this.scrollTo(newX, newY, this.options.bounceTime);
					}
		
					this.scaled = false;
		
					this._execEvent('zoomEnd');
				},
		
				zoom: function zoom(scale, x, y, time) {
					if (scale < this.options.zoomMin) {
						scale = this.options.zoomMin;
					} else if (scale > this.options.zoomMax) {
						scale = this.options.zoomMax;
					}
		
					if (scale == this.scale) {
						return;
					}
		
					var relScale = scale / this.scale;
		
					x = x === undefined ? this.wrapperWidth / 2 : x;
					y = y === undefined ? this.wrapperHeight / 2 : y;
					time = time === undefined ? 300 : time;
		
					x = x + this.wrapperOffset.left - this.x;
					y = y + this.wrapperOffset.top - this.y;
		
					x = x - x * relScale + this.x;
					y = y - y * relScale + this.y;
		
					this.scale = scale;
		
					this.refresh(); // update boundaries
		
					if (x > 0) {
						x = 0;
					} else if (x < this.maxScrollX) {
						x = this.maxScrollX;
					}
		
					if (y > 0) {
						y = 0;
					} else if (y < this.maxScrollY) {
						y = this.maxScrollY;
					}
		
					this.scrollTo(x, y, time);
				},
		
				_wheelZoom: function _wheelZoom(e) {
					var wheelDeltaY,
					    deltaScale,
					    that = this;
		
					// Execute the zoomEnd event after 400ms the wheel stopped scrolling
					clearTimeout(this.wheelTimeout);
					this.wheelTimeout = setTimeout(function () {
						that._execEvent('zoomEnd');
					}, 400);
		
					if ('deltaX' in e) {
						wheelDeltaY = -e.deltaY / Math.abs(e.deltaY);
					} else if ('wheelDeltaX' in e) {
						wheelDeltaY = e.wheelDeltaY / Math.abs(e.wheelDeltaY);
					} else if ('wheelDelta' in e) {
						wheelDeltaY = e.wheelDelta / Math.abs(e.wheelDelta);
					} else if ('detail' in e) {
						wheelDeltaY = -e.detail / Math.abs(e.wheelDelta);
					} else {
						return;
					}
		
					deltaScale = this.scale + wheelDeltaY / 5;
		
					this.zoom(deltaScale, e.pageX, e.pageY, 0);
				},
		
				_initWheel: function _initWheel() {
					utils.addEvent(this.wrapper, 'wheel', this);
					utils.addEvent(this.wrapper, 'mousewheel', this);
					utils.addEvent(this.wrapper, 'DOMMouseScroll', this);
		
					this.on('destroy', function () {
						utils.removeEvent(this.wrapper, 'wheel', this);
						utils.removeEvent(this.wrapper, 'mousewheel', this);
						utils.removeEvent(this.wrapper, 'DOMMouseScroll', this);
					});
				},
		
				_wheel: function _wheel(e) {
					if (!this.enabled) {
						return;
					}
		
					e.preventDefault();
					e.stopPropagation();
		
					var wheelDeltaX,
					    wheelDeltaY,
					    newX,
					    newY,
					    that = this;
		
					if (this.wheelTimeout === undefined) {
						that._execEvent('scrollStart');
					}
		
					// Execute the scrollEnd event after 400ms the wheel stopped scrolling
					clearTimeout(this.wheelTimeout);
					this.wheelTimeout = setTimeout(function () {
						that._execEvent('scrollEnd');
						that.wheelTimeout = undefined;
					}, 400);
		
					if ('deltaX' in e) {
						if (e.deltaMode === 1) {
							wheelDeltaX = -e.deltaX * this.options.mouseWheelSpeed;
							wheelDeltaY = -e.deltaY * this.options.mouseWheelSpeed;
						} else {
							wheelDeltaX = -e.deltaX;
							wheelDeltaY = -e.deltaY;
						}
					} else if ('wheelDeltaX' in e) {
						wheelDeltaX = e.wheelDeltaX / 120 * this.options.mouseWheelSpeed;
						wheelDeltaY = e.wheelDeltaY / 120 * this.options.mouseWheelSpeed;
					} else if ('wheelDelta' in e) {
						wheelDeltaX = wheelDeltaY = e.wheelDelta / 120 * this.options.mouseWheelSpeed;
					} else if ('detail' in e) {
						wheelDeltaX = wheelDeltaY = -e.detail / 3 * this.options.mouseWheelSpeed;
					} else {
						return;
					}
		
					wheelDeltaX *= this.options.invertWheelDirection;
					wheelDeltaY *= this.options.invertWheelDirection;
		
					if (!this.hasVerticalScroll) {
						wheelDeltaX = wheelDeltaY;
						wheelDeltaY = 0;
					}
		
					if (this.options.snap) {
						newX = this.currentPage.pageX;
						newY = this.currentPage.pageY;
		
						if (wheelDeltaX > 0) {
							newX--;
						} else if (wheelDeltaX < 0) {
							newX++;
						}
		
						if (wheelDeltaY > 0) {
							newY--;
						} else if (wheelDeltaY < 0) {
							newY++;
						}
		
						this.goToPage(newX, newY);
		
						return;
					}
		
					newX = this.x + Math.round(this.hasHorizontalScroll ? wheelDeltaX : 0);
					newY = this.y + Math.round(this.hasVerticalScroll ? wheelDeltaY : 0);
		
					if (newX > 0) {
						newX = 0;
					} else if (newX < this.maxScrollX) {
						newX = this.maxScrollX;
					}
		
					if (newY > 0) {
						newY = 0;
					} else if (newY < this.maxScrollY) {
						newY = this.maxScrollY;
					}
		
					this.scrollTo(newX, newY, 0);
		
					if (this.options.probeType > 1) {
						this._execEvent('scroll');
					}
		
					// INSERT POINT: _wheel
				},
		
				_initSnap: function _initSnap() {
					this.currentPage = {};
		
					if (typeof this.options.snap == 'string') {
						this.options.snap = this.scroller.querySelectorAll(this.options.snap);
					}
		
					this.on('refresh', function () {
						var i = 0,
						    l,
						    m = 0,
						    n,
						    cx,
						    cy,
						    x = 0,
						    y,
						    stepX = this.options.snapStepX || this.wrapperWidth,
						    stepY = this.options.snapStepY || this.wrapperHeight,
						    el;
		
						this.pages = [];
		
						if (!this.wrapperWidth || !this.wrapperHeight || !this.scrollerWidth || !this.scrollerHeight) {
							return;
						}
		
						if (this.options.snap === true) {
							cx = Math.round(stepX / 2);
							cy = Math.round(stepY / 2);
		
							while (x > -this.scrollerWidth) {
								this.pages[i] = [];
								l = 0;
								y = 0;
		
								while (y > -this.scrollerHeight) {
									this.pages[i][l] = {
										x: Math.max(x, this.maxScrollX),
										y: Math.max(y, this.maxScrollY),
										width: stepX,
										height: stepY,
										cx: x - cx,
										cy: y - cy
									};
		
									y -= stepY;
									l++;
								}
		
								x -= stepX;
								i++;
							}
						} else {
							el = this.options.snap;
							l = el.length;
							n = -1;
		
							for (; i < l; i++) {
								if (i === 0 || el[i].offsetLeft <= el[i - 1].offsetLeft) {
									m = 0;
									n++;
								}
		
								if (!this.pages[m]) {
									this.pages[m] = [];
								}
		
								x = Math.max(-el[i].offsetLeft, this.maxScrollX);
								y = Math.max(-el[i].offsetTop, this.maxScrollY);
								cx = x - Math.round(el[i].offsetWidth / 2);
								cy = y - Math.round(el[i].offsetHeight / 2);
		
								this.pages[m][n] = {
									x: x,
									y: y,
									width: el[i].offsetWidth,
									height: el[i].offsetHeight,
									cx: cx,
									cy: cy
								};
		
								if (x > this.maxScrollX) {
									m++;
								}
							}
						}
		
						this.goToPage(this.currentPage.pageX || 0, this.currentPage.pageY || 0, 0);
		
						// Update snap threshold if needed
						if (this.options.snapThreshold % 1 === 0) {
							this.snapThresholdX = this.options.snapThreshold;
							this.snapThresholdY = this.options.snapThreshold;
						} else {
							this.snapThresholdX = Math.round(this.pages[this.currentPage.pageX][this.currentPage.pageY].width * this.options.snapThreshold);
							this.snapThresholdY = Math.round(this.pages[this.currentPage.pageX][this.currentPage.pageY].height * this.options.snapThreshold);
						}
					});
		
					this.on('flick', function () {
						var time = this.options.snapSpeed || Math.max(Math.max(Math.min(Math.abs(this.x - this.startX), 1000), Math.min(Math.abs(this.y - this.startY), 1000)), 300);
		
						this.goToPage(this.currentPage.pageX + this.directionX, this.currentPage.pageY + this.directionY, time);
					});
				},
		
				_nearestSnap: function _nearestSnap(x, y) {
					if (!this.pages.length) {
						return { x: 0, y: 0, pageX: 0, pageY: 0 };
					}
		
					var i = 0,
					    l = this.pages.length,
					    m = 0;
		
					// Check if we exceeded the snap threshold
					if (Math.abs(x - this.absStartX) < this.snapThresholdX && Math.abs(y - this.absStartY) < this.snapThresholdY) {
						return this.currentPage;
					}
		
					if (x > 0) {
						x = 0;
					} else if (x < this.maxScrollX) {
						x = this.maxScrollX;
					}
		
					if (y > 0) {
						y = 0;
					} else if (y < this.maxScrollY) {
						y = this.maxScrollY;
					}
		
					for (; i < l; i++) {
						if (x >= this.pages[i][0].cx) {
							x = this.pages[i][0].x;
							break;
						}
					}
		
					l = this.pages[i].length;
		
					for (; m < l; m++) {
						if (y >= this.pages[0][m].cy) {
							y = this.pages[0][m].y;
							break;
						}
					}
		
					if (i == this.currentPage.pageX) {
						i += this.directionX;
		
						if (i < 0) {
							i = 0;
						} else if (i >= this.pages.length) {
							i = this.pages.length - 1;
						}
		
						x = this.pages[i][0].x;
					}
		
					if (m == this.currentPage.pageY) {
						m += this.directionY;
		
						if (m < 0) {
							m = 0;
						} else if (m >= this.pages[0].length) {
							m = this.pages[0].length - 1;
						}
		
						y = this.pages[0][m].y;
					}
		
					return {
						x: x,
						y: y,
						pageX: i,
						pageY: m
					};
				},
		
				goToPage: function goToPage(x, y, time, easing) {
					easing = easing || this.options.bounceEasing;
		
					if (x >= this.pages.length) {
						x = this.pages.length - 1;
					} else if (x < 0) {
						x = 0;
					}
		
					if (y >= this.pages[x].length) {
						y = this.pages[x].length - 1;
					} else if (y < 0) {
						y = 0;
					}
		
					var posX = this.pages[x][y].x,
					    posY = this.pages[x][y].y;
		
					time = time === undefined ? this.options.snapSpeed || Math.max(Math.max(Math.min(Math.abs(posX - this.x), 1000), Math.min(Math.abs(posY - this.y), 1000)), 300) : time;
		
					this.currentPage = {
						x: posX,
						y: posY,
						pageX: x,
						pageY: y
					};
		
					this.scrollTo(posX, posY, time, easing);
				},
		
				next: function next(time, easing) {
					var x = this.currentPage.pageX,
					    y = this.currentPage.pageY;
		
					x++;
		
					if (x >= this.pages.length && this.hasVerticalScroll) {
						x = 0;
						y++;
					}
		
					this.goToPage(x, y, time, easing);
				},
		
				prev: function prev(time, easing) {
					var x = this.currentPage.pageX,
					    y = this.currentPage.pageY;
		
					x--;
		
					if (x < 0 && this.hasVerticalScroll) {
						x = 0;
						y--;
					}
		
					this.goToPage(x, y, time, easing);
				},
		
				_initKeys: function _initKeys(e) {
					// default key bindings
					var keys = {
						pageUp: 33,
						pageDown: 34,
						end: 35,
						home: 36,
						left: 37,
						up: 38,
						right: 39,
						down: 40
					};
					var i;
		
					// if you give me characters I give you keycode
					if (_typeof(this.options.keyBindings) == 'object') {
						for (i in this.options.keyBindings) {
							if (typeof this.options.keyBindings[i] == 'string') {
								this.options.keyBindings[i] = this.options.keyBindings[i].toUpperCase().charCodeAt(0);
							}
						}
					} else {
						this.options.keyBindings = {};
					}
		
					for (i in keys) {
						this.options.keyBindings[i] = this.options.keyBindings[i] || keys[i];
					}
		
					utils.addEvent(window, 'keydown', this);
		
					this.on('destroy', function () {
						utils.removeEvent(window, 'keydown', this);
					});
				},
		
				_key: function _key(e) {
					if (!this.enabled) {
						return;
					}
		
					var snap = this.options.snap,
					    // we are using this alot, better to cache it
					newX = snap ? this.currentPage.pageX : this.x,
					    newY = snap ? this.currentPage.pageY : this.y,
					    now = utils.getTime(),
					    prevTime = this.keyTime || 0,
					    acceleration = 0.250,
					    pos;
		
					if (this.options.useTransition && this.isInTransition) {
						pos = this.getComputedPosition();
		
						this._translate(Math.round(pos.x), Math.round(pos.y));
						this.isInTransition = false;
					}
		
					this.keyAcceleration = now - prevTime < 200 ? Math.min(this.keyAcceleration + acceleration, 50) : 0;
		
					switch (e.keyCode) {
						case this.options.keyBindings.pageUp:
							if (this.hasHorizontalScroll && !this.hasVerticalScroll) {
								newX += snap ? 1 : this.wrapperWidth;
							} else {
								newY += snap ? 1 : this.wrapperHeight;
							}
							break;
						case this.options.keyBindings.pageDown:
							if (this.hasHorizontalScroll && !this.hasVerticalScroll) {
								newX -= snap ? 1 : this.wrapperWidth;
							} else {
								newY -= snap ? 1 : this.wrapperHeight;
							}
							break;
						case this.options.keyBindings.end:
							newX = snap ? this.pages.length - 1 : this.maxScrollX;
							newY = snap ? this.pages[0].length - 1 : this.maxScrollY;
							break;
						case this.options.keyBindings.home:
							newX = 0;
							newY = 0;
							break;
						case this.options.keyBindings.left:
							newX += snap ? -1 : 5 + this.keyAcceleration >> 0;
							break;
						case this.options.keyBindings.up:
							newY += snap ? 1 : 5 + this.keyAcceleration >> 0;
							break;
						case this.options.keyBindings.right:
							newX -= snap ? -1 : 5 + this.keyAcceleration >> 0;
							break;
						case this.options.keyBindings.down:
							newY -= snap ? 1 : 5 + this.keyAcceleration >> 0;
							break;
						default:
							return;
					}
		
					if (snap) {
						this.goToPage(newX, newY);
						return;
					}
		
					if (newX > 0) {
						newX = 0;
						this.keyAcceleration = 0;
					} else if (newX < this.maxScrollX) {
						newX = this.maxScrollX;
						this.keyAcceleration = 0;
					}
		
					if (newY > 0) {
						newY = 0;
						this.keyAcceleration = 0;
					} else if (newY < this.maxScrollY) {
						newY = this.maxScrollY;
						this.keyAcceleration = 0;
					}
		
					this.scrollTo(newX, newY, 0);
		
					this.keyTime = now;
				},
		
				_animate: function _animate(destX, destY, duration, easingFn) {
					var that = this,
					    startX = this.x,
					    startY = this.y,
					    startTime = utils.getTime(),
					    destTime = startTime + duration;
		
					function step() {
						var now = utils.getTime(),
						    newX,
						    newY,
						    easing;
		
						if (now >= destTime) {
							that.isAnimating = false;
							that._translate(destX, destY);
		
							if (!that.resetPosition(that.options.bounceTime)) {
								that._execEvent('scrollEnd');
							}
		
							return;
						}
		
						now = (now - startTime) / duration;
						easing = easingFn(now);
						newX = (destX - startX) * easing + startX;
						newY = (destY - startY) * easing + startY;
						that._translate(newX, newY);
		
						if (that.isAnimating) {
							rAF(step);
						}
		
						if (that.options.probeType == 3) {
							that._execEvent('scroll');
						}
					}
		
					this.isAnimating = true;
					step();
				},
				handleEvent: function handleEvent(e) {
					switch (e.type) {
						case 'touchstart':
						case 'pointerdown':
						case 'MSPointerDown':
						case 'mousedown':
							this._start(e);
		
							if (this.options.zoom && e.touches && e.touches.length > 1) {
								this._zoomStart(e);
							}
							break;
						case 'touchmove':
						case 'pointermove':
						case 'MSPointerMove':
						case 'mousemove':
							if (this.options.zoom && e.touches && e.touches[1]) {
								this._zoom(e);
								return;
							}
							this._move(e);
							break;
						case 'touchend':
						case 'pointerup':
						case 'MSPointerUp':
						case 'mouseup':
						case 'touchcancel':
						case 'pointercancel':
						case 'MSPointerCancel':
						case 'mousecancel':
							if (this.scaled) {
								this._zoomEnd(e);
								return;
							}
							this._end(e);
							break;
						case 'orientationchange':
						case 'resize':
							this._resize();
							break;
						case 'transitionend':
						case 'webkitTransitionEnd':
						case 'oTransitionEnd':
						case 'MSTransitionEnd':
							this._transitionEnd(e);
							break;
						case 'wheel':
						case 'DOMMouseScroll':
						case 'mousewheel':
							if (this.options.wheelAction == 'zoom') {
								this._wheelZoom(e);
								return;
							}
							this._wheel(e);
							break;
						case 'keydown':
							this._key(e);
							break;
					}
				}
		
			};
			function createDefaultScrollbar(direction, interactive, type) {
				var scrollbar = document.createElement('div'),
				    indicator = document.createElement('div');
		
				if (type === true) {
					scrollbar.style.cssText = 'position:absolute;z-index:9999';
					indicator.style.cssText = '-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;position:absolute;background:rgba(0,0,0,0.5);border:1px solid rgba(255,255,255,0.9);border-radius:3px';
				}
		
				indicator.className = 'iScrollIndicator';
		
				if (direction == 'h') {
					if (type === true) {
						scrollbar.style.cssText += ';height:7px;left:2px;right:2px;bottom:0';
						indicator.style.height = '100%';
					}
					scrollbar.className = 'iScrollHorizontalScrollbar';
				} else {
					if (type === true) {
						scrollbar.style.cssText += ';width:7px;bottom:2px;top:2px;right:1px';
						indicator.style.width = '100%';
					}
					scrollbar.className = 'iScrollVerticalScrollbar';
				}
		
				scrollbar.style.cssText += ';overflow:hidden';
		
				if (!interactive) {
					scrollbar.style.pointerEvents = 'none';
				}
		
				scrollbar.appendChild(indicator);
		
				return scrollbar;
			}
		
			function Indicator(scroller, options) {
				this.wrapper = typeof options.el == 'string' ? document.querySelector(options.el) : options.el;
				this.wrapperStyle = this.wrapper.style;
				this.indicator = this.wrapper.children[0];
				this.indicatorStyle = this.indicator.style;
				this.scroller = scroller;
		
				this.options = {
					listenX: true,
					listenY: true,
					interactive: false,
					resize: true,
					defaultScrollbars: false,
					shrink: false,
					fade: false,
					speedRatioX: 0,
					speedRatioY: 0
				};
		
				for (var i in options) {
					this.options[i] = options[i];
				}
		
				this.sizeRatioX = 1;
				this.sizeRatioY = 1;
				this.maxPosX = 0;
				this.maxPosY = 0;
		
				if (this.options.interactive) {
					if (!this.options.disableTouch) {
						utils.addEvent(this.indicator, 'touchstart', this);
						utils.addEvent(window, 'touchend', this);
					}
					if (!this.options.disablePointer) {
						utils.addEvent(this.indicator, utils.prefixPointerEvent('pointerdown'), this);
						utils.addEvent(window, utils.prefixPointerEvent('pointerup'), this);
					}
					if (!this.options.disableMouse) {
						utils.addEvent(this.indicator, 'mousedown', this);
						utils.addEvent(window, 'mouseup', this);
					}
				}
		
				if (this.options.fade) {
					this.wrapperStyle[utils.style.transform] = this.scroller.translateZ;
					this.wrapperStyle[utils.style.transitionDuration] = utils.isBadAndroid ? '0.001s' : '0ms';
					this.wrapperStyle.opacity = '0';
				}
			}
		
			Indicator.prototype = {
				handleEvent: function handleEvent(e) {
					switch (e.type) {
						case 'touchstart':
						case 'pointerdown':
						case 'MSPointerDown':
						case 'mousedown':
							this._start(e);
							break;
						case 'touchmove':
						case 'pointermove':
						case 'MSPointerMove':
						case 'mousemove':
							this._move(e);
							break;
						case 'touchend':
						case 'pointerup':
						case 'MSPointerUp':
						case 'mouseup':
						case 'touchcancel':
						case 'pointercancel':
						case 'MSPointerCancel':
						case 'mousecancel':
							this._end(e);
							break;
					}
				},
		
				destroy: function destroy() {
					if (this.options.interactive) {
						utils.removeEvent(this.indicator, 'touchstart', this);
						utils.removeEvent(this.indicator, utils.prefixPointerEvent('pointerdown'), this);
						utils.removeEvent(this.indicator, 'mousedown', this);
		
						utils.removeEvent(window, 'touchmove', this);
						utils.removeEvent(window, utils.prefixPointerEvent('pointermove'), this);
						utils.removeEvent(window, 'mousemove', this);
		
						utils.removeEvent(window, 'touchend', this);
						utils.removeEvent(window, utils.prefixPointerEvent('pointerup'), this);
						utils.removeEvent(window, 'mouseup', this);
					}
		
					if (this.options.defaultScrollbars) {
						this.wrapper.parentNode.removeChild(this.wrapper);
					}
				},
		
				_start: function _start(e) {
					var point = e.touches ? e.touches[0] : e;
		
					e.preventDefault();
					e.stopPropagation();
		
					this.transitionTime();
		
					this.initiated = true;
					this.moved = false;
					this.lastPointX = point.pageX;
					this.lastPointY = point.pageY;
		
					this.startTime = utils.getTime();
		
					if (!this.options.disableTouch) {
						utils.addEvent(window, 'touchmove', this);
					}
					if (!this.options.disablePointer) {
						utils.addEvent(window, utils.prefixPointerEvent('pointermove'), this);
					}
					if (!this.options.disableMouse) {
						utils.addEvent(window, 'mousemove', this);
					}
		
					this.scroller._execEvent('beforeScrollStart');
				},
		
				_move: function _move(e) {
					var point = e.touches ? e.touches[0] : e,
					    deltaX,
					    deltaY,
					    newX,
					    newY,
					    timestamp = utils.getTime();
		
					if (!this.moved) {
						this.scroller._execEvent('scrollStart');
					}
		
					this.moved = true;
		
					deltaX = point.pageX - this.lastPointX;
					this.lastPointX = point.pageX;
		
					deltaY = point.pageY - this.lastPointY;
					this.lastPointY = point.pageY;
		
					newX = this.x + deltaX;
					newY = this.y + deltaY;
		
					this._pos(newX, newY);
		
					if (this.scroller.options.probeType == 1 && timestamp - this.startTime > 300) {
						this.startTime = timestamp;
						this.scroller._execEvent('scroll');
					} else if (this.scroller.options.probeType > 1) {
						this.scroller._execEvent('scroll');
					}
		
					// INSERT POINT: indicator._move
		
					e.preventDefault();
					e.stopPropagation();
				},
		
				_end: function _end(e) {
					if (!this.initiated) {
						return;
					}
		
					this.initiated = false;
		
					e.preventDefault();
					e.stopPropagation();
		
					utils.removeEvent(window, 'touchmove', this);
					utils.removeEvent(window, utils.prefixPointerEvent('pointermove'), this);
					utils.removeEvent(window, 'mousemove', this);
		
					if (this.scroller.options.snap) {
						var snap = this.scroller._nearestSnap(this.scroller.x, this.scroller.y);
		
						var time = this.options.snapSpeed || Math.max(Math.max(Math.min(Math.abs(this.scroller.x - snap.x), 1000), Math.min(Math.abs(this.scroller.y - snap.y), 1000)), 300);
		
						if (this.scroller.x != snap.x || this.scroller.y != snap.y) {
							this.scroller.directionX = 0;
							this.scroller.directionY = 0;
							this.scroller.currentPage = snap;
							this.scroller.scrollTo(snap.x, snap.y, time, this.scroller.options.bounceEasing);
						}
					}
		
					if (this.moved) {
						this.scroller._execEvent('scrollEnd');
					}
				},
		
				transitionTime: function transitionTime(time) {
					time = time || 0;
					this.indicatorStyle[utils.style.transitionDuration] = time + 'ms';
		
					if (!time && utils.isBadAndroid) {
						this.indicatorStyle[utils.style.transitionDuration] = '0.001s';
					}
				},
		
				transitionTimingFunction: function transitionTimingFunction(easing) {
					this.indicatorStyle[utils.style.transitionTimingFunction] = easing;
				},
		
				refresh: function refresh() {
					this.transitionTime();
		
					if (this.options.listenX && !this.options.listenY) {
						this.indicatorStyle.display = this.scroller.hasHorizontalScroll ? 'block' : 'none';
					} else if (this.options.listenY && !this.options.listenX) {
						this.indicatorStyle.display = this.scroller.hasVerticalScroll ? 'block' : 'none';
					} else {
						this.indicatorStyle.display = this.scroller.hasHorizontalScroll || this.scroller.hasVerticalScroll ? 'block' : 'none';
					}
		
					if (this.scroller.hasHorizontalScroll && this.scroller.hasVerticalScroll) {
						utils.addClass(this.wrapper, 'iScrollBothScrollbars');
						utils.removeClass(this.wrapper, 'iScrollLoneScrollbar');
		
						if (this.options.defaultScrollbars && this.options.customStyle) {
							if (this.options.listenX) {
								this.wrapper.style.right = '8px';
							} else {
								this.wrapper.style.bottom = '8px';
							}
						}
					} else {
						utils.removeClass(this.wrapper, 'iScrollBothScrollbars');
						utils.addClass(this.wrapper, 'iScrollLoneScrollbar');
		
						if (this.options.defaultScrollbars && this.options.customStyle) {
							if (this.options.listenX) {
								this.wrapper.style.right = '2px';
							} else {
								this.wrapper.style.bottom = '2px';
							}
						}
					}
		
					var r = this.wrapper.offsetHeight; // force refresh
		
					if (this.options.listenX) {
						this.wrapperWidth = this.wrapper.clientWidth;
						if (this.options.resize) {
							this.indicatorWidth = Math.max(Math.round(this.wrapperWidth * this.wrapperWidth / (this.scroller.scrollerWidth || this.wrapperWidth || 1)), 8);
							this.indicatorStyle.width = this.indicatorWidth + 'px';
						} else {
							this.indicatorWidth = this.indicator.clientWidth;
						}
		
						this.maxPosX = this.wrapperWidth - this.indicatorWidth;
		
						if (this.options.shrink == 'clip') {
							this.minBoundaryX = -this.indicatorWidth + 8;
							this.maxBoundaryX = this.wrapperWidth - 8;
						} else {
							this.minBoundaryX = 0;
							this.maxBoundaryX = this.maxPosX;
						}
		
						this.sizeRatioX = this.options.speedRatioX || this.scroller.maxScrollX && this.maxPosX / this.scroller.maxScrollX;
					}
		
					if (this.options.listenY) {
						this.wrapperHeight = this.wrapper.clientHeight;
						if (this.options.resize) {
							this.indicatorHeight = Math.max(Math.round(this.wrapperHeight * this.wrapperHeight / (this.scroller.scrollerHeight || this.wrapperHeight || 1)), 8);
							this.indicatorStyle.height = this.indicatorHeight + 'px';
						} else {
							this.indicatorHeight = this.indicator.clientHeight;
						}
		
						this.maxPosY = this.wrapperHeight - this.indicatorHeight;
		
						if (this.options.shrink == 'clip') {
							this.minBoundaryY = -this.indicatorHeight + 8;
							this.maxBoundaryY = this.wrapperHeight - 8;
						} else {
							this.minBoundaryY = 0;
							this.maxBoundaryY = this.maxPosY;
						}
		
						this.maxPosY = this.wrapperHeight - this.indicatorHeight;
						this.sizeRatioY = this.options.speedRatioY || this.scroller.maxScrollY && this.maxPosY / this.scroller.maxScrollY;
					}
		
					this.updatePosition();
				},
		
				updatePosition: function updatePosition() {
					var x = this.options.listenX && Math.round(this.sizeRatioX * this.scroller.x) || 0,
					    y = this.options.listenY && Math.round(this.sizeRatioY * this.scroller.y) || 0;
		
					if (!this.options.ignoreBoundaries) {
						if (x < this.minBoundaryX) {
							if (this.options.shrink == 'scale') {
								this.width = Math.max(this.indicatorWidth + x, 8);
								this.indicatorStyle.width = this.width + 'px';
							}
							x = this.minBoundaryX;
						} else if (x > this.maxBoundaryX) {
							if (this.options.shrink == 'scale') {
								this.width = Math.max(this.indicatorWidth - (x - this.maxPosX), 8);
								this.indicatorStyle.width = this.width + 'px';
								x = this.maxPosX + this.indicatorWidth - this.width;
							} else {
								x = this.maxBoundaryX;
							}
						} else if (this.options.shrink == 'scale' && this.width != this.indicatorWidth) {
							this.width = this.indicatorWidth;
							this.indicatorStyle.width = this.width + 'px';
						}
		
						if (y < this.minBoundaryY) {
							if (this.options.shrink == 'scale') {
								this.height = Math.max(this.indicatorHeight + y * 3, 8);
								this.indicatorStyle.height = this.height + 'px';
							}
							y = this.minBoundaryY;
						} else if (y > this.maxBoundaryY) {
							if (this.options.shrink == 'scale') {
								this.height = Math.max(this.indicatorHeight - (y - this.maxPosY) * 3, 8);
								this.indicatorStyle.height = this.height + 'px';
								y = this.maxPosY + this.indicatorHeight - this.height;
							} else {
								y = this.maxBoundaryY;
							}
						} else if (this.options.shrink == 'scale' && this.height != this.indicatorHeight) {
							this.height = this.indicatorHeight;
							this.indicatorStyle.height = this.height + 'px';
						}
					}
		
					this.x = x;
					this.y = y;
		
					if (this.scroller.options.useTransform) {
						this.indicatorStyle[utils.style.transform] = 'translate(' + x + 'px,' + y + 'px)' + this.scroller.translateZ;
					} else {
						this.indicatorStyle.left = x + 'px';
						this.indicatorStyle.top = y + 'px';
					}
				},
		
				_pos: function _pos(x, y) {
					if (x < 0) {
						x = 0;
					} else if (x > this.maxPosX) {
						x = this.maxPosX;
					}
		
					if (y < 0) {
						y = 0;
					} else if (y > this.maxPosY) {
						y = this.maxPosY;
					}
		
					x = this.options.listenX ? Math.round(x / this.sizeRatioX) : this.scroller.x;
					y = this.options.listenY ? Math.round(y / this.sizeRatioY) : this.scroller.y;
		
					this.scroller.scrollTo(x, y);
				},
		
				fade: function fade(val, hold) {
					if (hold && !this.visible) {
						return;
					}
		
					clearTimeout(this.fadeTimeout);
					this.fadeTimeout = null;
		
					var time = val ? 250 : 500,
					    delay = val ? 0 : 300;
		
					val = val ? '1' : '0';
		
					this.wrapperStyle[utils.style.transitionDuration] = time + 'ms';
		
					this.fadeTimeout = setTimeout(function (val) {
						this.wrapperStyle.opacity = val;
						this.visible = +val;
					}.bind(this, val), delay);
				}
			};
		
			IScroll.utils = utils;
		
			if (typeof module != 'undefined' && module.exports) {
				module.exports = IScroll;
			} else {
				window.IScroll = IScroll;
			}
		})(window, document, Math);
		
	
	
	/***/ },
	/* 87 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		/**
		 * Field Component Style for tingle
		 * @author jiasong.js
		 *
		 * Copyright 2014-2016, Tingle Team, Alinw.
		 * All rights reserved.
		 */
		
		module.exports = __webpack_require__(88);
		
	
	
	/***/ },
	/* 88 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		/**
		 * Field Component for tingle
		 * @author gnosaij
		 *
		 * Copyright 2014-2016, Tingle Team.
		 * All rights reserved.
		 */
		var React = __webpack_require__(2);
		var classnames = __webpack_require__(45);
		var Icon = __webpack_require__(89);
		var Context = __webpack_require__(47);
		
		var prefixClass = Context.prefixClass;
		
		var Field = function (_React$Component) {
		    _inherits(Field, _React$Component);
		
		    function Field(props) {
		        _classCallCheck(this, Field);
		
		        return _possibleConstructorReturn(this, Object.getPrototypeOf(Field).call(this, props));
		    }
		
		    _createClass(Field, [{
		        key: 'render',
		        value: function render() {
		            var _classnames2;
		
		            var t = this;
		            var requiredTag = React.createElement(Icon, { name: 'field-required', className: prefixClass('field-layout-label-required'), width: 6, height: 6, fill: 'red' });
		            return React.createElement(
		                'div',
		                { className: classnames(prefixClass('field'), _defineProperty({}, t.props.className, !!t.props.className)) },
		                t.props.label && t.props.layout === 'v' && React.createElement(
		                    'div',
		                    { className: prefixClass('field-layout-v-label') },
		                    t.props.label,
		                    this.props.required && requiredTag
		                ),
		                React.createElement(
		                    'div',
		                    { className: classnames(prefixClass('field-box FBH'), (_classnames2 = {}, _defineProperty(_classnames2, prefixClass('TE'), t.props.tappable), _defineProperty(_classnames2, prefixClass('FBAC'), !t.props.multiLine), _classnames2)) },
		                    t.props.label && t.props.layout === 'h' && React.createElement(
		                        'div',
		                        { className: prefixClass('field-layout-h-label') },
		                        t.props.label,
		                        this.props.required && requiredTag
		                    ),
		                    React.createElement(
		                        'div',
		                        { className: classnames(prefixClass('FB1 PR'), _defineProperty({}, prefixClass('field-multi'), t.props.multiLine)) },
		                        t.props.children
		                    ),
		                    t.props.icon && t.props.icon.name && React.createElement(
		                        'div',
		                        { className: prefixClass('FBH FBAC field-icon') },
		                        React.createElement(Icon, t.props.icon)
		                    )
		                )
		            );
		        }
		    }]);
		
		    return Field;
		}(React.Component);
		
		Field.defaultProps = {
		    label: '',
		    tappable: false,
		    required: false,
		    multiLine: false,
		    icon: {},
		    layout: 'h'
		};
		
		// http://facebook.github.io/react/docs/reusable-components.html
		Field.propTypes = {
		    label: React.PropTypes.string,
		    icon: React.PropTypes.object,
		    required: React.PropTypes.bool,
		    tappable: React.PropTypes.bool,
		    multiLine: React.PropTypes.bool,
		    layout: React.PropTypes.oneOf(['h', 'v'])
		};
		
		Field.displayName = 'Field';
		
		module.exports = Field;
		
	
	
	/***/ },
	/* 89 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		/**
		 * Icon Component Style for tingle
		 * @author fushan
		 *
		 * Copyright 2014-2016, Tingle Team, Alinw.
		 * All rights reserved.
		 */
		
		module.exports = __webpack_require__(90);
		
	
	
	/***/ },
	/* 90 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		/**
		 * Icon Component for tinglejs
		 * @auther hanyu
		 *
		 * Copyright 2014-2016, Tingle Team.
		 * All rights reserved.
		 */
		var React = __webpack_require__(2);
		var classnames = __webpack_require__(45);
		var svg4everybody = __webpack_require__(91);
		var webkitUA = /\bAppleWebKit\/(\d+)\b/;
		
		var _require = __webpack_require__(47);
		
		var prefixClass = _require.prefixClass;
		
		var Icon = function (_React$Component) {
		    _inherits(Icon, _React$Component);
		
		    function Icon(props) {
		        _classCallCheck(this, Icon);
		
		        return _possibleConstructorReturn(this, Object.getPrototypeOf(Icon).call(this, props));
		    }
		
		    _createClass(Icon, [{
		        key: 'componentDidMount',
		        value: function componentDidMount() {
		            var webkitUAVersion = (navigator.userAgent.match(webkitUA) || [])[1];
		            svg4everybody({
		                polyfill: webkitUAVersion === '600' || webkitUAVersion < 537
		            });
		        }
		    }, {
		        key: 'render',
		        value: function render() {
		            var t = this;
		
		            var _t$props = t.props;
		            var className = _t$props.className;
		            var width = _t$props.width;
		            var height = _t$props.height;
		            var fill = _t$props.fill;
		
		            var other = _objectWithoutProperties(_t$props, ['className', 'width', 'height', 'fill']);
		
		            return React.createElement(
		                'div',
		                { onClick: t.props.onClick.bind(t), className: classnames(prefixClass('icon'), _defineProperty({}, className, !!className)) },
		                React.createElement(
		                    'svg',
		                    _extends({ className: prefixClass('icon-svg'), fill: fill, width: width, height: height }, other),
		                    React.createElement('use', { xlinkHref: '#' + t.props.name })
		                ),
		                React.createElement('div', { className: prefixClass('icon-mask') })
		            );
		        }
		    }]);
		
		    return Icon;
		}(React.Component);
		
		Icon.defaultProps = {
		    className: '',
		    name: '',
		    width: 32,
		    height: 32,
		    fill: '#000',
		    onClick: function onClick() {}
		};
		
		// http://facebook.github.io/react/docs/reusable-components.html
		Icon.propTypes = {
		    className: React.PropTypes.string,
		    name: React.PropTypes.string.isRequired,
		    width: React.PropTypes.number,
		    height: React.PropTypes.number,
		    fill: React.PropTypes.string,
		    onClick: React.PropTypes.func
		};
		
		Icon.displayName = 'Icon';
		
		module.exports = Icon;
		
	
	
	/***/ },
	/* 91 */
	/***/ function(module, exports) {
	
		'use strict';
		
		/*! svg4everybody v2.0.3 | github.com/jonathantneal/svg4everybody */
		// https://github.com/jonathantneal/svg4everybody.git
		function embed(svg, target) {
			// if the target exists
			if (target) {
				// create a document fragment to hold the contents of the target
				var fragment = document.createDocumentFragment();
		
				// cache the closest matching viewBox
				var viewBox = !svg.getAttribute('viewBox') && target.getAttribute('viewBox');
		
				// conditionally set the viewBox on the svg
				if (viewBox) {
					svg.setAttribute('viewBox', viewBox);
				}
		
				// clone the target
				var clone = target.cloneNode(true);
		
				// copy the contents of the clone into the fragment
				while (clone.childNodes.length) {
					fragment.appendChild(clone.firstChild);
				}
		
				// append the fragment into the svg
				svg.appendChild(fragment);
			}
		}
		
		function loadreadystatechange(xhr) {
			// listen to changes in the request
			xhr.onreadystatechange = function () {
				// if the request is ready
				if (xhr.readyState === 4) {
					// get the cached html document
					var cachedDocument = xhr._cachedDocument;
		
					// ensure the cached html document based on the xhr response
					if (!cachedDocument) {
						cachedDocument = xhr._cachedDocument = document.implementation.createHTMLDocument('');
		
						cachedDocument.body.innerHTML = xhr.responseText;
		
						xhr._cachedTarget = {};
					}
		
					// clear the xhr embeds list and embed each item
					xhr._embeds.splice(0).map(function (item) {
						// get the cached target
						var target = xhr._cachedTarget[item.id];
		
						// ensure the cached target
						if (!target) {
							target = xhr._cachedTarget[item.id] = cachedDocument.getElementById(item.id);
						}
		
						// embed the target into the svg
						embed(item.svg, target);
					});
				}
			};
		
			// test the ready state change immediately
			xhr.onreadystatechange();
		}
		
		function svg4everybody(rawopts) {
			var opts = Object(rawopts);
		
			// create legacy support variables
			var nosvg;
			var fallback;
		
			// set whether the polyfill will be activated or not
			var polyfill;
			var olderIEUA = /\bMSIE [1-8]\.0\b/;
			var newerIEUA = /\bTrident\/[567]\b|\bMSIE (?:9|10)\.0\b/;
			var webkitUA = /\bAppleWebKit\/(\d+)\b/;
			var olderEdgeUA = /\bEdge\/12\.(\d+)\b/;
		
			if ('polyfill' in opts) {
				polyfill = opts.polyfill;
			} else {
				polyfill = newerIEUA.test(navigator.userAgent) || (navigator.userAgent.match(olderEdgeUA) || [])[1] < 10547 || (navigator.userAgent.match(webkitUA) || [])[1] < 537;
			}
		
			// create xhr requests object
			var requests = {};
		
			// use request animation frame or a timeout to search the dom for svgs
			var requestAnimationFrame = window.requestAnimationFrame || setTimeout;
		
			// get a live collection of use elements on the page
			var uses = document.getElementsByTagName('use');
		
			function oninterval() {
				// get the cached <use> index
				var index = 0;
		
				// while the index exists in the live <use> collection
				while (index < uses.length) {
					// get the current <use>
					var use = uses[index];
		
					// get the current <svg>
					var svg = use.parentNode;
		
					if (svg && /svg/i.test(svg.nodeName)) {
						var src = use.getAttribute('xlink:href');
		
						if (polyfill) {
							if (!opts.validate || opts.validate(src, svg, use)) {
								// remove the <use> element
								svg.removeChild(use);
		
								// parse the src and get the url and id
								var srcSplit = src.split('#');
								var url = srcSplit.shift();
								var id = srcSplit.join('#');
		
								// if the link is external
								if (url.length) {
									// get the cached xhr request
									var xhr = requests[url];
		
									// ensure the xhr request exists
									if (!xhr) {
										xhr = requests[url] = new XMLHttpRequest();
		
										xhr.open('GET', url);
		
										xhr.send();
		
										xhr._embeds = [];
									}
		
									// add the svg and id as an item to the xhr embeds list
									xhr._embeds.push({
										svg: svg,
										id: id
									});
		
									// prepare the xhr ready state change event
									loadreadystatechange(xhr);
								} else {
									// embed the local id into the svg
									embed(svg, document.getElementById(id));
								}
							}
						}
					} else {
						// increase the index when the previous value was not "valid"
						++index;
					}
				}
		
				// continue the interval
				requestAnimationFrame(oninterval, 67);
			}
		
			// conditionally start the interval if the polyfill is active
			if (polyfill) {
				oninterval();
			}
		}
		
		module.exports = svg4everybody;
		
	
	
	/***/ },
	/* 92 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		/**
		 * CheckboxField Component Style for tingle
		 * @author shanchao
		 *
		 * Copyright 2014-2016, Tingle Team, Alinw.
		 * All rights reserved.
		 */
		
		module.exports = __webpack_require__(93);
		
	
	
	/***/ },
	/* 93 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		/**
		 * CheckboxField Component for tingle
		 * @author shanchao
		 *
		 * Copyright 2014-2016, Tingle Team.
		 * All rights reserved.
		 */
		var React = __webpack_require__(2);
		var classnames = __webpack_require__(45);
		var Icon = __webpack_require__(89);
		var Context = __webpack_require__(47);
		var Group = __webpack_require__(94);
		
		var prefixClass = Context.prefixClass;
		
		var CheckboxField = function (_React$Component) {
		    _inherits(CheckboxField, _React$Component);
		
		    function CheckboxField(props) {
		        _classCallCheck(this, CheckboxField);
		
		        return _possibleConstructorReturn(this, (CheckboxField.__proto__ || Object.getPrototypeOf(CheckboxField)).call(this, props));
		    }
		
		    _createClass(CheckboxField, [{
		        key: 'clickAction',
		        value: function clickAction(value, item, index, data) {
		            var t = this;
		            var onChange = t.props.onChange;
		
		            var disable = item.disable;
		            if (disable) {
		                return;
		            }
		            item.checked = !item.checked;
		            onChange && onChange(value, index, data);
		            t.forceUpdate();
		        }
		    }, {
		        key: 'render',
		        value: function render() {
		            var t = this;
		            var props = t.props;
		            var className = props.className;
		            var checkboxArray = props.data;
		            var groupListArgument = props.groupListArgument;
		            var groupListFlag = props.groupListFlag;
		            var label = props.label;
		
		            var requiredTag = React.createElement(Icon, { name: 'field-required', className: prefixClass('field-layout-label-required'), width: 6, height: 6, fill: 'red' });
		
		            var checkboxArrayComponent = checkboxArray.map(function (item, index, data) {
		                var checked = item.checked;
		                var disable = item.disable;
		                var value = item.value;
		
		
		                var iconName = checked ? "check-round" : "";
		                var iconClassName = classnames(prefixClass("checkbox-field-icon"), { "checked": checked }, { "noChecked": !checked }, { "disable": disable });
		
		                var textClassName = classnames(prefixClass("checkbox-field-text FBH FBAC"), { "disable": disable });
		
		                var iconTag = checked ? React.createElement(Icon, { key: 'check-round', width: 22, height: 22, name: 'check-round', className: iconClassName }) : React.createElement('div', { className: iconClassName });
		
		                var finalItemJSX = React.createElement(
		                    'div',
		                    { onClick: t.clickAction.bind(t, value, item, index, checkboxArray), key: index,
		                        className: prefixClass("checkbox-field-row FBAC FBH") },
		                    React.createElement(
		                        'div',
		                        { className: prefixClass("checkbox-field-icon-div FBH FBAC") },
		                        iconTag
		                    ),
		                    React.createElement(
		                        'div',
		                        { ref: "text" + index, className: textClassName },
		                        item.text
		                    )
		                );
		                return finalItemJSX;
		            });
		
		            var finalJSX = React.createElement(
		                Group,
		                { className: classnames(prefixClass('checkbox-field'), _defineProperty({}, className, !!className)) },
		                label == '' ? null : React.createElement(
		                    Group.Head,
		                    { className: classnames(prefixClass('checkbox-label')) },
		                    label,
		                    this.props.required && requiredTag
		                ),
		                React.createElement(
		                    Group.List,
		                    groupListArgument,
		                    checkboxArrayComponent
		                )
		            );
		
		            if (!groupListFlag) {
		                finalJSX = React.createElement(
		                    'div',
		                    { ref: 'root', className: classnames(prefixClass('checkbox-field'), _defineProperty({}, className, !!className)) },
		                    checkboxArrayComponent
		                );
		            }
		            return finalJSX;
		        }
		    }, {
		        key: 'getData',
		        value: function getData() {
		            var t = this;
		            return t.props.data;
		        }
		    }]);
		
		    return CheckboxField;
		}(React.Component);
		
		CheckboxField.defaultProps = {
		    data: [],
		    onChange: function onChange() {},
		    groupListFlag: true,
		    groupListArgument: {
		        lineIndent: 0,
		        itemIndent: 15
		    },
		    label: ''
		};
		
		// http://facebook.github.io/react/docs/reusable-components.html
		CheckboxField.propTypes = {
		    className: React.PropTypes.string,
		    data: React.PropTypes.array,
		    onChange: React.PropTypes.func,
		    groupListFlag: React.PropTypes.bool,
		    groupListArgument: React.PropTypes.object
		};
		
		CheckboxField.displayName = 'CheckboxField';
		
		module.exports = CheckboxField;
		
	
	
	/***/ },
	/* 94 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		/**
		 * Group Component Style for tingle
		 * @author jiasong.js
		 *
		 * Copyright 2014-2016, Tingle Team, Alinw.
		 * All rights reserved.
		 */
		
		module.exports = __webpack_require__(95);
		
	
	
	/***/ },
	/* 95 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Group Component for tingle
		 * @author gnosaij
		 *
		 * Copyright 2014-2016, Tingle Team.
		 * All rights reserved.
		 */
		"use strict";
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		var React = __webpack_require__(2);
		var classnames = __webpack_require__(45);
		var Context = __webpack_require__(47);
		var Head = __webpack_require__(96);
		var List = __webpack_require__(97);
		
		var Group = function Group(props) {
		    return React.createElement(
		        'div',
		        { className: classnames(Context.prefixClass('group'), _defineProperty({}, props.className, !!props.className)) },
		        props.children
		    );
		};
		
		Group.displayName = 'Group';
		
		Group.propTypes = {
		    className: React.PropTypes.string
		};
		
		Group.defaultProps = {};
		
		Group.Head = Head;
		Group.List = List;
		
		module.exports = Group;
		
	
	
	/***/ },
	/* 96 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Group.Head Component for tingle
		 * @author gnosaij
		 *
		 * Copyright 2014-2016, Tingle Team, Alinw.
		 * All rights reserved.
		 */
		"use strict";
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		var React = __webpack_require__(2);
		var classnames = __webpack_require__(45);
		var Context = __webpack_require__(47);
		
		var Head = function Head(props) {
		    return React.createElement(
		        'div',
		        { className: classnames(Context.prefixClass('group-head'), _defineProperty({}, props.className, !!props.className)) },
		        props.children
		    );
		};
		
		Head.displayName = 'Group.Head';
		
		Head.propTypes = {
		    className: React.PropTypes.string
		};
		
		Head.defaultProps = {};
		
		module.exports = Head;
		
	
	
	/***/ },
	/* 97 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		/**
		 * Group.List Component for tingle
		 * @author gnosaij
		 *
		 * Copyright 2014-2016, Tingle Team, Alinw.
		 * All rights reserved.
		 */
		var React = __webpack_require__(2);
		var classnames = __webpack_require__(45);
		var Context = __webpack_require__(47);
		
		var _require = __webpack_require__(46);
		
		var createStyleContext = _require.createStyleContext;
		var unitize = _require.unitize;
		
		
		var isEmptyValue = function isEmptyValue(v) {
		    return v === null || v === undefined || v === '';
		};
		
		var prefixClass = Context.prefixClass;
		var style = createStyleContext(prefixClass('group-list'));
		
		var List = function (_React$Component) {
		    _inherits(List, _React$Component);
		
		    function List(props) {
		        _classCallCheck(this, List);
		
		        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(List).call(this, props));
		
		        var t = _this;
		        t._lineIndentClassName = [];
		        t._itemIndentClassName = [];
		
		        props.lineIndent && t.addIndent('Line');
		        props.itemIndent && t.addIndent('Item');
		        return _this;
		    }
		
		    // 由props属性转换成css样式规则 并插入到页面
		
		
		    _createClass(List, [{
		        key: 'addIndent',
		        value: function addIndent(type) {
		            var t = this;
		            var indentArray = [].concat(t.props[type.toLowerCase() + 'Indent']);
		
		            var className = [];
		            className.push(t['make' + type + 'IndentClassName']('left', unitize(indentArray[0])));
		            className.push(t['make' + type + 'IndentClassName']('right', unitize(indentArray[1])));
		
		            t['_' + type + 'IndentClassName'] = className.join(' ');
		        }
		
		        /**
		         * 生成间隔线缩进对应的`classClass`值和`CSS`样式
		         * @param side {String} Left|Right
		         * @param value {String} `CSS`样式的长度值
		         * @returns {String} 生成的`className`字符串
		         */
		
		    }, {
		        key: 'makeLineIndentClassName',
		        value: function makeLineIndentClassName(side, value) {
		            if (!value) {
		                return;
		            }
		            var t = this;
		            var lowerSide = side.toLowerCase();
		            var indent = side + '-' + value;
		            style.add('line-indent-' + indent, '\n            .' + prefixClass('group-list') + '.line-indent-' + indent + ' .' + prefixClass('group-list-item') + ':after{\n                ' + lowerSide + ': ' + value + '\n            }\n        ');
		            return 'line-indent-' + indent;
		        }
		
		        /**
		         * 生成Item缩进对应的`classClass`值和`CSS`样式
		         * @param side {String} Left|Right
		         * @param value {String} `CSS`样式的长度值
		         * @returns {String} 生成的`className`字符串
		         */
		
		    }, {
		        key: 'makeItemIndentClassName',
		        value: function makeItemIndentClassName(side, value) {
		            if (!value) {
		                return;
		            }
		            var t = this;
		            var lowerSide = side.toLowerCase();
		            var indent = side + '-' + value;
		            style.add('item-indent-' + indent, '\n            .' + prefixClass('group-list') + '.item-indent-' + indent + ' .' + prefixClass('group-list-item') + '{\n                padding-' + lowerSide + ': ' + value + '\n            }\n        ');
		            return 'item-indent-' + indent;
		        }
		    }, {
		        key: 'render',
		        value: function render() {
		            var _classnames;
		
		            var t = this;
		            return React.createElement(
		                'div',
		                { className: classnames(prefixClass('group-list'), (_classnames = {}, _defineProperty(_classnames, t.props.className, !!t.props.className), _defineProperty(_classnames, t._LineIndentClassName, !!t._LineIndentClassName), _defineProperty(_classnames, t._ItemIndentClassName, !!t._ItemIndentClassName), _defineProperty(_classnames, prefixClass('BT1'), !t.props.borderTopNone), _classnames)) },
		                React.Children.map(t.props.children, function (Item) {
		                    // 需要过滤掉空值的item
		                    return !isEmptyValue(Item) ? React.createElement(
		                        'div',
		                        { className: prefixClass('group-list-item') },
		                        Item
		                    ) : null;
		                })
		            );
		        }
		    }]);
		
		    return List;
		}(React.Component);
		
		List.displayName = 'Group.List';
		
		var indentType = React.PropTypes.oneOfType([React.PropTypes.number, React.PropTypes.string, React.PropTypes.array]);
		
		List.propTypes = {
		    className: React.PropTypes.string,
		    lineIndent: indentType,
		    itemIndent: indentType,
		    borderTopNone: React.PropTypes.bool
		};
		
		List.defaultProps = {
		    borderTopNone: false
		};
		
		module.exports = List;
		
	
	
	/***/ },
	/* 98 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		/**
		 * DatetimeField Component Style for tingle
		 * @author caoke.ck
		 *
		 * Copyright 2014-2016, Tingle Team, Alinw.
		 * All rights reserved.
		 */
		
		module.exports = __webpack_require__(99);
		
	
	
	/***/ },
	/* 99 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		/**
		 * DatetimeField Component for tingle
		 * @author caoke.ck
		 *
		 * Copyright 2014-2016, Tingle Team.
		 * All rights reserved.
		 */
		var React = __webpack_require__(2);
		var classnames = __webpack_require__(45);
		
		var Context = __webpack_require__(47);
		var Slot = __webpack_require__(82);
		var Icon = __webpack_require__(89);
		var Field = __webpack_require__(87);
		
		if (!React.addons || !React.addons.update) {
		    console.warning('Please use react with addons!');
		}
		
		var DatetimeField = function (_React$Component) {
		    _inherits(DatetimeField, _React$Component);
		
		    function DatetimeField(props) {
		        _classCallCheck(this, DatetimeField);
		
		        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(DatetimeField).call(this, props));
		
		        var t = _this;
		
		        // 使用当前时间或传入时间作为默认值
		        var currentValue = parseValue(props.value);
		
		        // 形成候选项
		        var options = [makeArray(currentValue[0] - 80, currentValue[0] + 20), makeArray(1, 12).map(function (v) {
		            return { text: '' + v, value: v - 1 };
		        }), getDates(currentValue[0], currentValue[1]), makeArray(0, 23), makeArray(0, 59), makeArray(0, 59)];
		        currentValue = slice(currentValue, props);
		        options = slice(options, props);
		
		        // 数据格式化
		        var ret = Slot.formatDataValue(options, currentValue);
		        t.state = {
		            data: ret.data,
		            value: currentValue,
		            confirmedValue: props.value ? ret.value : []
		        };
		        return _this;
		    }
		
		    // 外部变更选中值
		
		
		    _createClass(DatetimeField, [{
		        key: 'componentWillReceiveProps',
		        value: function componentWillReceiveProps(nextProps) {
		            var t = this;
		            var value = nextProps.value;
		            if (value) {
		                t.setValue(slice(parseValue(nextProps.value), nextProps), true);
		            } else {
		                t.setState({
		                    confirmedValue: []
		                });
		            }
		        }
		    }, {
		        key: 'handleClick',
		        value: function handleClick() {
		            var t = this;
		            !t.props.readOnly && t.refs.slot.show();
		        }
		    }, {
		        key: 'handleChange',
		        value: function handleChange(value, column, index) {
		            var t = this;
		            var dates = void 0;
		            if (value.length > 2) {
		                if (column === 1) {
		
		                    // 改变了月份，会导致月内天数的改变
		                    dates = getDates(value[0].value, value[1].value);
		                } else if (column === 0 && value[1].value === 1) {
		
		                    // 改变了年份，会导致 2 月天数的改变
		                    dates = getDates(value[0].value, 1);
		                }
		            }
		            if (dates) {
		
		                // 同时变更日期和选中项
		                var ret = Slot.formatColumnValue(dates, value[2]);
		                value[2] = ret.columnValue;
		                t.setState(React.addons.update(t.state, {
		                    data: _defineProperty({}, 2, {
		                        $set: ret.columnData
		                    }),
		                    value: {
		                        $set: value
		                    }
		                }));
		            } else {
		
		                // 仅改变了选中项
		                t.setState({
		                    value: value
		                });
		            }
		        }
		    }, {
		        key: 'handleConfirm',
		        value: function handleConfirm(value) {
		            var t = this;
		            var argv = value.map(function (v) {
		                return v.value;
		            });
		            for (var i = 0; i < 6; i++) {
		                argv[i] = argv[i] || (i === 2 ? 1 : 0);
		            }
		            var date = new (Function.prototype.bind.apply(Date, [null].concat(argv)))();
		
		            // 确认选中项目
		            t.props.onSelect(date.getTime());
		        }
		    }, {
		        key: 'handleCancel',
		        value: function handleCancel() {
		            var t = this;
		            if (t.state.confirmedValue && t.state.confirmedValue.length) {
		                t.setValue(t.state.confirmedValue);
		            }
		        }
		    }, {
		        key: 'setValue',
		        value: function setValue(val, confirm) {
		            var t = this;
		
		            var _Slot$formatDataValue = Slot.formatDataValue(t.state.data, val);
		
		            var value = _Slot$formatDataValue.value;
		
		            var changes = void 0;
		
		            if (value.length > 2) {
		                // 为确保有对应的日期，需要重新设置日期
		                var dates = getDates(value[0].value, value[1].value);
		                var ret = Slot.formatColumnValue(dates);
		                changes = {
		                    data: _defineProperty({}, 2, {
		                        $set: ret.columnData
		                    }),
		                    value: {
		                        $set: value
		                    }
		                };
		            } else {
		                changes = {
		                    value: {
		                        $set: value
		                    }
		                };
		            }
		            if (confirm) {
		                changes.confirmedValue = {
		                    $set: value
		                };
		            }
		            t.setState(React.addons.update(t.state, changes));
		        }
		    }, {
		        key: 'render',
		        value: function render() {
		            var t = this;
		            var options = [];
		            return React.createElement(
		                Field,
		                _extends({}, t.props, { icon: t.props.readOnly ? null : {
		                        className: Context.prefixClass('datetime-field-icon'),
		                        name: 'angle-right',
		                        width: 26,
		                        height: 26,
		                        onClick: t.handleClick.bind(t)
		                    },
		                    className: classnames(Context.prefixClass('datetime-field'), _defineProperty({}, t.props.className, !!t.props.className)) }),
		                React.createElement(
		                    'div',
		                    { onClick: t.handleClick.bind(t) },
		                    !t.state.confirmedValue[0] ? React.createElement(
		                        'div',
		                        { className: Context.prefixClass('omit datetime-field-placeholder') },
		                        t.props.placeholder
		                    ) : '',
		                    React.createElement(
		                        'div',
		                        { className: Context.prefixClass('datetime-field-value FBH FBAC') },
		                        React.createElement(
		                            'span',
		                            { className: classnames(Context.prefixClass('FB1 omit'), _defineProperty({}, Context.prefixClass('datetime-field-readonly'), !!t.props.readOnly)) },
		                            t.props.formatter(t.state.confirmedValue)
		                        )
		                    )
		                ),
		                React.createElement(Slot, { ref: 'slot', title: t.props.label, confirmText: t.props.confirmText, cancelText: t.props.cancelText, data: t.state.data, value: t.state.value, onChange: t.handleChange.bind(t), onCancel: t.handleCancel.bind(t), onConfirm: t.handleConfirm.bind(t), columns: t.props.columns })
		            );
		        }
		    }]);
		
		    return DatetimeField;
		}(React.Component);
		
		DatetimeField.defaultProps = {
		    formatter: function formatter(value) {
		        var arr = value.map(function (v) {
		            return v.text < 10 ? '0' + v.text : v.text;
		        });
		        if (arr.length < 4) {
		            return arr.join('-');
		        } else {
		            return arr.slice(0, 3).join('-') + ' ' + arr.slice(3).join(':');
		        }
		    },
		    onSelect: function onSelect() {},
		    readOnly: false,
		    placeholder: '',
		    columns: ['年', '月', '日', '时', '分', '秒']
		};
		
		// http://facebook.github.io/react/docs/reusable-components.html
		DatetimeField.propTypes = {
		    className: React.PropTypes.string,
		    label: React.PropTypes.string.isRequired,
		    value: React.PropTypes.number,
		    formatter: React.PropTypes.func,
		    onSelect: React.PropTypes.func,
		    readOnly: React.PropTypes.bool,
		    placeholder: React.PropTypes.string,
		    confirmText: React.PropTypes.string,
		    cancelText: React.PropTypes.string,
		    columns: React.PropTypes.array
		};
		
		DatetimeField.displayName = 'DatetimeField';
		
		module.exports = DatetimeField;
		
		// 是否是闰年的判断
		function isLeapYear(year) {
		    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;
		}
		
		function makeArray(start, end) {
		    for (var arr = [], i = start; i <= end; i++) {
		        arr.push(i);
		    }
		    return arr;
		}
		
		// 获取某个月份的日期选项
		function getDates(year, month) {
		    var dates = [];
		    switch ('1 1010110101'.split('')[month]) {
		        case '1':
		            // 大月
		            return makeArray(1, 31);
		        case '0':
		            // 小月
		            return makeArray(1, 30);
		        case ' ':
		            // 闰年 2 月 和 平年 2 月
		            return isLeapYear(year) ? makeArray(1, 29) : makeArray(1, 28);
		    }
		}
		
		function parseValue(value) {
		    var date = value ? new Date(parseInt(value)) : new Date();
		    return [date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds()];
		}
		
		function slice(array, props) {
		    return array.slice(0, props.columns.length);
		}
		
	
	
	/***/ },
	/* 100 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		/**
		 * Dialog Component Style for tingle
		 * @author cm
		 *
		 * Copyright 2014-2016, Tingle Team, Alinw.
		 * All rights reserved.
		 */
		
		module.exports = __webpack_require__(101);
		
	
	
	/***/ },
	/* 101 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		/**
		 * Dialog Component for tingle
		 * @author minjie,cm
		 *
		 * Copyright 2014-2016, Tingle Team, Alinw.
		 * All rights reserved.
		 */
		var React = __webpack_require__(2);
		var classnames = __webpack_require__(45);
		var Context = __webpack_require__(47);
		var i18nHelper = __webpack_require__(102);
		var lang = __webpack_require__(103);
		var ReactCSSTransitionGroup = React.addons.CSSTransitionGroup;
		var prefixClass = Context.prefixClass;
		
		
		var TYPES = ['alert', 'confirm'];
		
		var EMPTY_FUNC = function EMPTY_FUNC() {};
		
		var i18n = function i18n() {
		    var locale = arguments.length <= 0 || arguments[0] === undefined ? 'zh_CN' : arguments[0];
		    return i18nHelper(lang[locale] || lang.zh_CN);
		};
		
		var Dialog = function (_React$Component) {
		    _inherits(Dialog, _React$Component);
		
		    function Dialog(props) {
		        _classCallCheck(this, Dialog);
		
		        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Dialog).call(this, props));
		
		        var buttons = [{
		            content: props.confirmText || i18n(props.locale)('ok'),
		            callback: props.onConfirm || EMPTY_FUNC,
		            primary: true
		        }];
		
		        if (_this.props.type === TYPES[1]) {
		            buttons = [{
		                content: _this.props.cancelText || i18n(props.locale)('cancel'),
		                callback: _this.props.onCancel || EMPTY_FUNC
		            }, {
		                content: _this.props.confirmText || i18n(props.locale)('ok'),
		                callback: _this.props.onConfirm || EMPTY_FUNC,
		                primary: true
		            }];
		        }
		
		        _this.state = {
		            title: props.title,
		            content: props.content, // 为快捷 API 提供的，Dialog React 方式使用，直接渲染 children
		            buttons: buttons,
		            show: props.show
		        };
		        return _this;
		    }
		
		    _createClass(Dialog, [{
		        key: 'componentWillReceiveProps',
		        value: function componentWillReceiveProps(nextProps) {
		            this.setState({
		                show: nextProps.show,
		                title: nextProps.title
		            });
		        }
		    }, {
		        key: '_show',
		        value: function _show(options) {
		            var state = this.state;
		            var prop = options ? options : this.props;
		
		            state.show = true;
		            state.title = prop.title;
		            state.content = prop.content;
		            state.buttons = prop.buttons;
		
		            this.setState(state);
		        }
		
		        // deprecated
		
		    }, {
		        key: 'hide',
		        value: function hide() {
		            this.setState({ show: false });
		        }
		
		        // deprecated
		
		    }, {
		        key: 'show',
		        value: function show() {
		            this.setState({ show: true });
		        }
		    }, {
		        key: 'handleClick',
		        value: function handleClick(callback) {
		            if (callback() !== false) {
		                this.hide();
		            }
		        }
		    }, {
		        key: 'render',
		        value: function render() {
		            var _classSet;
		
		            var t = this;
		            var btn = '';
		            var _t$props = t.props;
		            var className = _t$props.className;
		            var children = _t$props.children;
		
		            var other = _objectWithoutProperties(_t$props, ['className', 'children']);
		
		            var _t$state = t.state;
		            var title = _t$state.title;
		            var buttons = _t$state.buttons;
		            var content = _t$state.content;
		
		            var classSet = (_classSet = {}, _defineProperty(_classSet, prefixClass('dialog'), true), _defineProperty(_classSet, t.props.className, !!t.props.className), _classSet);
		            var btnsCount = buttons.length;
		
		            btn = buttons && buttons.map(function (item, i) {
		                var _classnames;
		
		                var callback = item.callback || function () {
		                    return true;
		                };
		                return React.createElement(
		                    'div',
		                    { key: 'tDialogButtonKey' + i,
		                        className: classnames(prefixClass('FB1 dialog-button TE'), (_classnames = {}, _defineProperty(_classnames, prefixClass('dialog-primary'), item.primary), _defineProperty(_classnames, prefixClass('dialog-secondary'), !item.primary), _defineProperty(_classnames, prefixClass('dialog-brbl5'), i === 0 || btnsCount === 1), _defineProperty(_classnames, prefixClass('dialog-brbr5'), i === 1 || i === btnsCount - 1), _classnames)),
		                        onClick: t.handleClick.bind(t, callback) },
		                    i18n(t.props.locale)(item.content)
		                );
		            });
		
		            var displayContent = children;
		            if (content) {
		                displayContent = content;
		            }
		
		            return React.createElement(
		                ReactCSSTransitionGroup,
		                {
		                    transitionName: prefixClass('dialog-fade'),
		                    transitionEnterTimeout: 300, transitionLeaveTimeout: 300,
		                    transitionAppear: true, transitionAppearTimeout: 300 },
		                this.state.show ? React.createElement(
		                    'div',
		                    { className: prefixClass('dialog-overlay') },
		                    React.createElement(
		                        'div',
		                        { className: prefixClass('dialog-overlay-inner') },
		                        React.createElement(
		                            'div',
		                            { className: classnames(classSet) },
		                            title ? React.createElement(
		                                'h1',
		                                { className: prefixClass('dialog-title') },
		                                title
		                            ) : '',
		                            React.createElement(
		                                'div',
		                                { className: prefixClass('dialog-content') },
		                                displayContent
		                            ),
		                            React.createElement(
		                                'div',
		                                { className: prefixClass('dialog-operation TE FBH') },
		                                btn
		                            )
		                        )
		                    )
		                ) : null
		            );
		        }
		    }]);
		
		    return Dialog;
		}(React.Component);
		
		Dialog.defaultProps = {
		    title: '',
		    content: '',
		    onConfirm: null,
		    onCancel: null,
		    type: 'alert',
		    show: true,
		    locale: 'zh_CN',
		    buttons: [{
		        content: 'ok',
		        callback: function callback() {},
		
		        primary: true
		    }]
		};
		
		// http://facebook.github.io/react/docs/reusable-components.html
		Dialog.propTypes = {
		    title: React.PropTypes.string,
		    content: React.PropTypes.string,
		    onConfirm: React.PropTypes.func,
		    onCancel: React.PropTypes.func,
		    type: React.PropTypes.string,
		    buttons: React.PropTypes.array,
		    show: React.PropTypes.bool,
		    locale: React.PropTypes.string
		};
		
		var WRAPPER_ID = '__TingleGlobalDialog__';
		var doc = document;
		
		Dialog.global = null;
		
		var show = function show(options) {
		    if (!Dialog.global) {
		        var wrapper = doc.getElementById(WRAPPER_ID);
		
		        var other = _objectWithoutProperties(options, []);
		
		        if (!wrapper) {
		            wrapper = doc.createElement('div');
		            wrapper.id = WRAPPER_ID;
		            doc.body.appendChild(wrapper);
		        }
		
		        Dialog.global = ReactDOM.render(React.createElement(Dialog, other), wrapper);
		    }
		    ;
		    Dialog.global._show(options);
		};
		
		Dialog.hide = function () {
		    Dialog.global && Dialog.global.hide();
		};
		
		Dialog.alert = function (options) {
		    options.buttons = [{
		        content: options.confirmText || i18n(options.locale)('ok'),
		        callback: options.onConfirm,
		        primary: true
		    }];
		    show(options);
		};
		
		Dialog.confirm = function (options) {
		    options.buttons = [{
		        content: options.cancelText || i18n(options.locale)('cancel'),
		        callback: options.onCancel
		    }, {
		        content: options.confirmText || i18n(options.locale)('ok'),
		        callback: options.onConfirm,
		        primary: true
		    }];
		    show(options);
		};
		
		Dialog.displayName = 'Dialog';
		
		module.exports = Dialog;
		
	
	
	/***/ },
	/* 102 */
	/***/ function(module, exports) {
	
		/*
		 * @Author: caoke
		 * @Date:   2015-09-18 13:37:01
		 * @Last Modified by:   caoke
		 * @Last Modified time: 2016-01-15 16:51:50
		 */
		
		module.exports = generateI18nHelper;
		
		// i18n helper generator
		function generateI18nHelper() {
		
		    // language resource
		    var lang = {};
		
		    // split arguments
		    var args = toArray(arguments);
		
		    // merge all resources to lang
		    for (var i = 0; i < args.length; i++) {
		        var arg = args[i];
		        for (var j in arg) {
		            lang[j] = arg[j];
		        }
		    }
		
		    var i18nHelper = function() {
		
		        // split arguments
		        var args = toArray(arguments);
		
		        // first argument is key
		        var key = notNull(args[0]);
		        var value = notNull(lang[key]);
		
		        // use key when key-value doesn't exist
		        var result = key in lang ? value : notNull(i18nHelper.keyNotFound(key));
		
		        // replace the arguments whatever match is
		        return result.indexOf('{') !== -1 ? replaceWithArgs(result, args) : result;
		    };
		
		    // key not found handler
		    i18nHelper.keyNotFound = function(key) {
		        return key;
		    };
		
		    return i18nHelper;
		}
		
		// replace placeholders with arguments
		function replaceWithArgs(str, args) {
		    return str.replace(/\{(\d+)\}/mg, function (p, index) {
		
		        // index in array
		        if (index in args) {
		            return args[index];
		        } else {
		
		            // fallback is blank string
		            return '';
		        }
		    });
		}
		
		// key not found handler
		function keyNotFound(key) {
		    return key;
		}
		
		// arguments to array
		function toArray(o) {
		    return Array.prototype.slice.call(o, 0);
		}
		
		// object to string, null or undefined will return empty string
		function notNull(o) {
		    if (o === undefined || o === null) {
		        return '';
		    }
		    return '' + o;
		}
	
	
	/***/ },
	/* 103 */
	/***/ function(module, exports) {
	
		'use strict';
		
		module.exports = {
		    en_US: {
		        ok: 'OK',
		        cancel: 'Cancel'
		    },
		    zh_CN: {
		        ok: '确定',
		        cancel: '取消'
		    }
		};
		
	
	
	/***/ },
	/* 104 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		/**
		 * Gallery Component Style for tingle
		 * @author cm
		 *
		 * Copyright 2014-2016, Tingle Team, Alinw.
		 * All rights reserved.
		 */
		
		module.exports = __webpack_require__(105);
		
	
	
	/***/ },
	/* 105 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		/**
		 * Gallery Component for tingle
		 * @author cm
		 *
		 * Copyright 2014-2016, Tingle Team.
		 * All rights reserved.
		 */
		var React = __webpack_require__(2);
		var classnames = __webpack_require__(45);
		var Slide = __webpack_require__(106);
		var Context = __webpack_require__(47);
		
		var prefixClass = function prefixClass(name) {
		    return Context.prefixClass ? Context.prefixClass(name) : 't-' + name;
		};
		
		var Gallery = function (_React$Component) {
		    _inherits(Gallery, _React$Component);
		
		    function Gallery(props) {
		        _classCallCheck(this, Gallery);
		
		        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Gallery).call(this, props));
		
		        _this.state = {
		            images: _this.props.images,
		            displayImages: [] // 懒加载图片缓存区
		        };
		        _this.currentIndex = _this.props.active || 0;
		        return _this;
		    }
		
		    _createClass(Gallery, [{
		        key: 'componentDidMount',
		        value: function componentDidMount() {
		            this._detectLazyImages();
		        }
		    }, {
		        key: 'componentWillReceiveProps',
		        value: function componentWillReceiveProps(nextProps) {
		            this.setState({
		                images: nextProps.images
		            });
		        }
		    }, {
		        key: '_onSlideEnd',
		        value: function _onSlideEnd(o) {
		            this.currentIndex = o.index;
		            this._detectLazyImages();
		            this.props.onSlideEnd && this.props.onSlideEnd.call(this, o);
		        }
		    }, {
		        key: '_detectLazyImages',
		        value: function _detectLazyImages() {
		            var currentIndex = this.currentIndex;
		            var prevIndex = currentIndex > 0 ? currentIndex - 1 : this.state.images.length - 1;
		            var nextIndex = currentIndex >= this.state.images.length - 1 ? 0 : currentIndex + 1;
		            var displayImages = this.state.displayImages;
		
		            var changed = false;
		            if (displayImages.indexOf(currentIndex) === -1) {
		                displayImages.push(currentIndex);
		                changed = true;
		            }
		            if (displayImages.indexOf(prevIndex) === -1) {
		                displayImages.push(prevIndex);
		                changed = true;
		            }
		            if (displayImages.indexOf(nextIndex) === -1) {
		                displayImages.push(nextIndex);
		                changed = true;
		            }
		            if (changed) {
		                this.setState(displayImages);
		            }
		        }
		    }, {
		        key: '_onItemClick',
		        value: function _onItemClick(o) {
		            var href = this.state.images[o.index].href;
		            var onGalleryClick = this.props.onGalleryClick;
		
		            if (onGalleryClick) {
		                onGalleryClick(o.index, this.state.images[o.index]);
		            } else if (href) {
		                window.location.href = href;
		            }
		        }
		
		        /*
		         lazy load 策略
		         加载当前显示图片的前一个跟后一个
		         // 获取前一个 index
		         // 获取后一个 index
		         // 如果存在不曾加载的图片，就 changeState
		         */
		
		    }, {
		        key: 'render',
		        value: function render() {
		            var _classnames,
		                _this2 = this;
		
		            if (!this.state.images.length) {
		                return React.createElement('div', null);
		            }
		
		            var t = this;
		            var _props = this.props;
		            var images = _props.images;
		            var onSlideEnd = _props.onSlideEnd;
		            var className = _props.className;
		
		            var otherProps = _objectWithoutProperties(_props, ['images', 'onSlideEnd', 'className']);
		
		            var displayImages = this.state.displayImages;
		
		            className = classnames((_classnames = {}, _defineProperty(_classnames, this.props.className, !!this.props.className), _defineProperty(_classnames, prefixClass('gallery'), true), _classnames));
		
		            return React.createElement(
		                Slide,
		                _extends({ ref: 'root', className: className,
		                    onSlideClick: this._onItemClick.bind(this),
		                    onSlideEnd: this._onSlideEnd.bind(this) }, otherProps),
		                this.state.images.map(function (item, i) {
		                    var url = _this2.props.lazyLoad ? '' : item.src;
		                    var style = {};
		                    if (displayImages.indexOf(i) > -1) {
		                        url = item.src;
		                    }
		                    if (url) {
		                        style = { backgroundImage: 'url(' + url + ')' };
		                    }
		
		                    return React.createElement(
		                        'div',
		                        { className: prefixClass('gallery-item'),
		                            key: i,
		                            style: style },
		                        item.name ? React.createElement(
		                            'span',
		                            { className: prefixClass('gallery-item-name') },
		                            item.name
		                        ) : null
		                    );
		                })
		            );
		        }
		    }]);
		
		    return Gallery;
		}(React.Component);
		
		Gallery.defaultProps = {
		    className: '',
		    images: [],
		    lazyLoad: true,
		    onGalleryClick: null
		};
		
		// http://facebook.github.io/react/docs/reusable-components.html
		Gallery.propTypes = {
		    className: React.PropTypes.string,
		    images: React.PropTypes.array,
		    lazyLoad: React.PropTypes.bool,
		    onGalleryClick: React.PropTypes.func
		};
		
		Gallery.displayName = 'Gallery';
		
		module.exports = Gallery;
		
	
	
	/***/ },
	/* 106 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		/**
		 * Slide Component Style for tingle
		 * @author cm
		 *
		 * Copyright 2014-2016, Tingle Team, Alinw.
		 * All rights reserved.
		 */
		
		module.exports = __webpack_require__(107);
		
	
	
	/***/ },
	/* 107 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		/**
		* Slide Component for tingle
		* @author gnosaij,cm
		*
		* Copyright 2014-2016, Tingle Team, Alinw.
		* All rights reserved.
		*/
		var React = __webpack_require__(2);
		var classnames = __webpack_require__(45);
		var Context = __webpack_require__(47);
		var SlideNav = __webpack_require__(108);
		
		var prefixClass = function prefixClass(name) {
		    return Context.prefixClass ? Context.prefixClass(name) : 't-' + name;
		};
		
		var TOUCH_START = Context.TOUCH_START;
		var TOUCH_MOVE = Context.TOUCH_MOVE;
		var TOUCH_END = Context.TOUCH_END;
		var TOUCH_CANCEL = Context.TOUCH_CANCEL;
		var support3D = Context.support3D;
		var supportTouch = Context.supportTouch;
		var isPC = Context.isPC;
		var noop = Context.noop;
		var RESIZE = Context.RESIZE;
		
		
		var win = window;
		var doc = document;
		var OFFSET = 'offset';
		var POS_MAP = {
		    '-1': '_prevEl',
		    '0': '_currentEl',
		    '1': '_nextEl'
		};
		
		// 创建translate字符串
		// TODO: translate(0,0) translateZ(0);
		var makeTranslate = function () {
		    var prefix = support3D ? 'translate3d(' : 'translate(';
		    var suffix = support3D ? ', 0)' : ')';
		    var join = ',';
		
		    function v(n) {
		        n = '' + (n || 0);
		        n = n.indexOf('%') > -1 ? n : n + 'px';
		        return n;
		    }
		
		    return function (x, y) {
		        return prefix + v(x) + join + v(y) + suffix;
		    };
		}();
		
		// 获取兼容PC和Device的event对象的page属性
		var getCursorPage = supportTouch ? function (event, page) {
		    return event.changedTouches[0][page];
		} : function (event, page) {
		    return event[page];
		};
		
		var Slide = function (_React$Component) {
		    _inherits(Slide, _React$Component);
		
		    function Slide(props) {
		        _classCallCheck(this, Slide);
		
		        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Slide).call(this, props));
		
		        var t = _this;
		
		        // 切换动画的时长
		        _this.duration = 200;
		
		        // 能够触发切换的偏移量
		        _this.effectiveDelta = Math.floor(window.innerWidth / 1.8);
		
		        // 当偏移量不足时，使用速度来决定是否移动 单位：px/s
		        _this.speed = 300;
		
		        _this.state = {
		            auto: props.auto,
		            // 当前item的索引值 以0开始
		            index: props.active,
		            disabled: false
		        };
		
		        // 当屏幕旋转的时候，修正布局
		        win.addEventListener(RESIZE, t, false);
		        return _this;
		    }
		
		    _createClass(Slide, [{
		        key: 'componentWillMount',
		        value: function componentWillMount() {
		            var t = this;
		            t._getLength();
		        }
		    }, {
		        key: 'componentDidMount',
		        value: function componentDidMount() {
		            var t = this;
		
		            t.el = t.refs.root;
		
		            // 确定容器宽度
		            t.width = isPC ? t.el.clientWidth : win.innerWidth;
		
		            t._setContext();
		        }
		    }, {
		        key: 'componentDidUpdate',
		        value: function componentDidUpdate(prevProps) {
		            var t = this;
		            var oldChildrenLength = prevProps.children.length;
		            var newChildrenLength = this.props.children.length;
		            if (newChildrenLength != oldChildrenLength) {
		                t._getLength();
		                t._setContext(prevProps);
		            }
		        }
		    }, {
		        key: 'componentWillUnmount',
		        value: function componentWillUnmount() {
		            var t = this;
		            if (t.length > 1) {
		                t.el.removeEventListener(TOUCH_START, t, false);
		            }
		            win.removeEventListener(RESIZE, t, false);
		            clearTimeout(t._autoSlideTimer);
		        }
		
		        /**
		        * 获取 slide 列表的真正长度，主要是考虑 children
		        * 长度是 1 和 2 的情况下
		        */
		
		    }, {
		        key: '_getLength',
		        value: function _getLength() {
		            var t = this;
		            var originLength = React.Children.count(t.props.children);
		
		            // TODO: check
		            if (originLength === 1) {
		                t.setState({
		                    disabled: true
		                });
		            }
		
		            // item的长度经处理后不存在为2的情况
		            else if (originLength === 2) {
		                    t._dummy = true;
		                    t._realIndex = {
		                        '0': 0,
		                        '1': 1,
		                        '2': 0,
		                        '3': 1
		                    };
		                }
		
		            // 处理以后的长度，即item的个数
		            t.length = t._dummy ? 4 : originLength;
		        }
		
		        /**
		        * 根据 slide 列表长度设置正确的内部变量
		        *
		        */
		
		    }, {
		        key: '_setContext',
		        value: function _setContext(prevProps) {
		            var t = this;
		
		            // 由于子元素数量有变化，先解绑与数量相关的监听，再根据数量重新绑定。
		            t.el.removeEventListener(TOUCH_START, t, false);
		            clearTimeout(t._autoSlideTimer);
		
		            // 至少有2张slide时，才初始化事件
		            if (t.length > 1) {
		                t.el.addEventListener(TOUCH_START, t, false);
		            } else {
		                t.el.addEventListener('click', function () {
		                    t.props.onSlideClick({
		                        index: 0,
		                        item: t._currentEl,
		                        data: t.props.children[0]
		                    });
		                });
		            }
		
		            // 前一个，当前的，后一个item的element引用
		            t._prevEl = null;
		            t._currentEl = null;
		            t._nextEl = null;
		
		            t._deltaX = 0;
		            t._minIndex = 0;
		            t._maxIndex = t.length - 1;
		            if (!prevProps) {
		                t.props.onMount(t);
		            } else {
		                t.setState({
		                    index: t.props.index
		                });
		            }
		            if (t.length != 0) {
		                t._goto(t.state.index, true);
		                t._autoSlide();
		            }
		        }
		    }, {
		        key: '_autoSlide',
		        value: function _autoSlide() {
		            var t = this;
		            if (!t.state.auto) return;
		            t._autoSlideTimer = setTimeout(function () {
		                t.goNext();
		                t._autoSlide();
		            }, 4000);
		        }
		
		        /**
		        * @param {number} index 目标位置的索引值
		        * @param {boolean} callFromDidMount 是否是在 componentDidMount 中被调用的
		        */
		
		    }, {
		        key: '_goto',
		        value: function _goto(posIndex, callFromDidMount) {
		            var t = this;
		            callFromDidMount = !!callFromDidMount;
		
		            if (t.length === 1 || callFromDidMount) {
		                // `_getItemReady` 方法被调用之前，需要先更新 `currentPosIndex` 的值
		                t.currentPosIndex = posIndex;
		                t._getItemReady(0);
		
		                if (t.length > 2) {
		                    t._getItemReady(1);
		                    t._getItemReady(-1);
		                }
		
		                t._slideEnd();
		            } else if (!callFromDidMount) {
		
		                // 通过goNext/goPrev调用的_goto，一直有方向(_dir)值 向左:-1 / 向右:1
		                if (t._dir) {
		                    t._getItemUnready(t._dir === 1 ? t._nextEl : t._prevEl);
		                    t._moveItem(t._currentEl, t._dir);
		                    t._moveItem(t._dir === 1 ? t._prevEl : t._nextEl, t._dir);
		
		                    // `_getItemReady`方法被调用之前，需要先更新`currentPosIndex`的值
		                    t.currentPosIndex = posIndex;
		                    t._getItemReady(t._dir * -1);
		
		                    setTimeout(function () {
		                        t._slideEnd();
		                    }, t.duration);
		                }
		
		                // 归位的情况：移动距离小于有效距离时
		                else if (posIndex === t.currentPosIndex) {
		                        // 归位当前item
		                        t._moveItem(t._currentEl, 0);
		                        // 归位进入屏幕的另一个item
		                        // 说明:任意一个时间点,出现在屏幕内的item数量最多为2个,要么左边,要么右边,取决于移动方向
		                        if (t._moveBack) {
		                            t._moveItem(t._moveBack, 0);
		                        }
		                        // 当resize时
		                        else {
		                                t._moveItem(t._prevEl, 0);
		                                t._moveItem(t._nextEl, 0);
		                            }
		                    }
		            }
		
		            t._moveBack = null;
		            t._dir = null;
		        }
		    }, {
		        key: 'goNext',
		        value: function goNext() {
		            var t = this;
		            // 方向是向左(-1)，要展现的是后一张(1)
		            t._dir = -1;
		            t._goto(t._getPosIndex(1));
		        }
		    }, {
		        key: 'goPrev',
		        value: function goPrev() {
		            var t = this;
		            // 方向是向右(1)，要展现的是前一张(-1)
		            t._dir = 1;
		            t._goto(t._getPosIndex(-1));
		        }
		
		        /**
		        * 移动item到新的位置
		        * @param {element} item
		        * @param {number} dir 移动的方向 -1:向左移动 / 1:向右移动 / 0:移动到原位
		        */
		
		    }, {
		        key: '_moveItem',
		        value: function _moveItem(item, dir) {
		            var t = this;
		            item.style.webkitTransitionDuration = t.duration + 'ms';
		
		            var newOffset = +item.getAttribute(OFFSET) + dir;
		
		            t._setItemX(item, t._getPosX(newOffset));
		
		            // 如果进行了切换行为，即dir为-1或1
		            if (dir) {
		                item.setAttribute(OFFSET, newOffset);
		                t[POS_MAP[newOffset]] = item;
		            }
		        }
		
		        /**
		        * 根据指定的偏移量，找到对应的item，将其切换到可移动状态
		        * @param {number} offset -1:前一个位置 / 0:当前位置 / 1: 后一个位置
		        * @note 任何时刻，可移动状态的item数量只有三个
		        * @note 该方法依赖`currentPosIndex`和`offset`查找目标`item`，
		        *       而`_getItemUnready`方法直接给定了`item`，不需要依赖`currentPosIndex`和`offset`
		        */
		
		    }, {
		        key: '_getItemReady',
		        value: function _getItemReady(offset) {
		            var t = this;
		            var targetPosIndex = t._getPosIndex(offset);
		            var item = t.refs['item' + targetPosIndex];
		            item.classList.add('ready');
		            item.setAttribute(OFFSET, offset);
		            item.style.webkitTransform = makeTranslate(t._getPosX(offset));
		            t[POS_MAP[offset]] = item;
		        }
		
		        /**
		        * 将指定的item切换到不可移动状态，即不参与切换行为。
		        * @param {element} item 要改变状态的item
		        * @note 这个函数虽然含义上和_setItemReady对应，但参数直接只用item，
		        *  是出于性能考虑，因为调用该函数的时候，都是明确知道目标item的。
		        */
		
		    }, {
		        key: '_getItemUnready',
		        value: function _getItemUnready(item) {
		            var t = this;
		            item.classList.remove('ready');
		            item.removeAttribute(OFFSET);
		            item.style.webkitTransitionDuration = '0';
		            item.style.webkitTransform = 'none';
		        }
		
		        /**
		        * 获取指定的offset所对应的X坐标值(0点在当前item的左边缘)
		        * @param {number} offset -1:前一个位置 / 0:当前位置 / 1: 后一个位置
		        */
		
		    }, {
		        key: '_getPosX',
		        value: function _getPosX(offset) {
		            var t = this;
		            return offset === -1 ? -t.width : offset === 1 ? t.width : 0;
		        }
		
		        /**
		        *
		        */
		
		    }, {
		        key: '_setItemX',
		        value: function _setItemX(item, x) {
		            this[POS_MAP[item.getAttribute(OFFSET)] + 'X'] = x;
		            item.style.webkitTransform = makeTranslate(x);
		        }
		
		        /**
		        * 获取前一个或后一个位置的索引值，相对值是currentPosIndex
		        * @param {number} offset -1:取前一个位置 / 0:取当前位置 / 1: 取后一个位置
		        */
		
		    }, {
		        key: '_getPosIndex',
		        value: function _getPosIndex(offset) {
		            var t = this,
		                index = void 0;
		            if (offset === -1) {
		                index = t.currentPosIndex === t._minIndex ? t._maxIndex : t.currentPosIndex - 1;
		            } else if (offset === 1) {
		                index = t.currentPosIndex === t._maxIndex ? t._minIndex : t.currentPosIndex + 1;
		            } else if (offset === 0) {
		                index = t.currentPosIndex;
		            } else {
		                throw new Error('error offset');
		            }
		            return index;
		        }
		    }, {
		        key: 'handleEvent',
		        value: function handleEvent(e) {
		            var t = this;
		            switch (e.type) {
		                case TOUCH_START:
		                    t._touchStart(e);
		                    break;
		                case TOUCH_MOVE:
		                    t._touchMove(e);
		                    break;
		                case TOUCH_END:
		                    t._touchEnd(e);
		                    break;
		                case TOUCH_CANCEL:
		                    t._touchEnd(e);
		                case RESIZE:
		                    t._resize(e);
		                    break;
		            }
		        }
		    }, {
		        key: '_touchStart',
		        value: function _touchStart(e) {
		            // 只响应单指操作
		            if (supportTouch && e.touches.length > 1) {
		                return;
		            }
		
		            var t = this;
		
		            clearTimeout(t._autoSlideTimer);
		
		            // 恢复到0 拖拽过程中快速响应移动距离
		            t._prevEl.style.webkitTransitionDuration = '0ms';
		            t._currentEl.style.webkitTransitionDuration = '0ms';
		            t._nextEl.style.webkitTransitionDuration = '0ms';
		
		            // 移动初始值
		            t._prevElX = t._getPosX(-1);
		            t._currentElX = t._getPosX(0);
		            t._nextElX = t._getPosX(1);
		
		            // 浏览器默认滚动
		            t.browserScrolling = false;
		
		            // 是否是切换状态 此时忽略浏览器默认的滚动行为
		            t.sliding = false;
		
		            t.startPageX = getCursorPage(e, 'pageX');
		            t.startPageY = getCursorPage(e, 'pageY');
		            t.basePageX = t.startPageX;
		            t.startTime = e.timeStamp;
		
		            doc.addEventListener(TOUCH_MOVE, t, false);
		            doc.addEventListener(TOUCH_END, t, false);
		        }
		    }, {
		        key: '_touchMove',
		        value: function _touchMove(e) {
		            // 只响应单指操作
		            if (supportTouch && e.touches.length > 1) {
		                return;
		            }
		
		            var t = this;
		
		            // 如果浏览器默认滚动行为已被触发，则不执行Slider的滚动
		            if (t.browserScrolling) {
		                return;
		            }
		
		            var pageX = getCursorPage(e, 'pageX'),
		                pageY = getCursorPage(e, 'pageY'),
		                distX = void 0,
		                newPrevX = void 0,
		                newCurrentX = void 0,
		                newNextX = void 0,
		                deltaY = void 0;
		
		            t.deltaX = pageX - t.startPageX;
		
		            // 如果slide开始滚动
		            if (t.sliding) {
		                e.preventDefault();
		                e.stopPropagation();
		
		                // 任意时刻的位移值
		                distX = pageX - t.basePageX;
		
		                // 当不是循环模式的时候，第一张和最后一张添加粘性
		                if (t.props.loop === false && (distX >= 0 && t.currentPosIndex === t._minIndex || distX < 0 && t.currentPosIndex === t._maxIndex || distX < 0 && t._dummy && t.currentPosIndex === 1)) {
		                    distX = distX - distX / 1.3;
		                }
		
		                // 位移后的X坐标
		                newPrevX = t._prevElX + distX;
		                newCurrentX = t._currentElX + distX;
		                newNextX = t._nextElX + distX;
		
		                // 更新DOM位置
		                t._setItemX(t._prevEl, newPrevX);
		                t._setItemX(t._currentEl, newCurrentX);
		                t._setItemX(t._nextEl, newNextX);
		
		                if (t.deltaX >= 0) {
		                    t._moveBack = t._prevEl;
		                } else {
		                    t._moveBack = t._nextEl;
		                }
		            } else {
		                deltaY = pageY - t.startPageY;
		
		                // 如果X轴的移动距离先达到5px，则执行Slider的滚动
		                // 如果Y轴的移动距离先达到5px，则执行浏览器默认的页面滚动
		                if (Math.abs(t.deltaX) > 5) {
		                    e.preventDefault();
		                    e.stopPropagation();
		                    t.sliding = true;
		                } else if (Math.abs(deltaY) > 5) {
		                    t.browserScrolling = true;
		                }
		            }
		
		            t.basePageX = pageX;
		        }
		    }, {
		        key: '_touchEnd',
		        value: function _touchEnd(e) {
		            // 只响应单指操作
		            if (supportTouch && e.touches.length > 1) {
		                return;
		            }
		
		            var t = this;
		
		            // 如果浏览器默认滚动行为已被触发，则不执行Slider的滚动
		            if (t.browserScrolling) {
		                return;
		            }
		
		            t.browserScrolling = false;
		
		            var endTime = e.timeStamp;
		            var speed = Math.floor(t.deltaX / (t.startTime - endTime) * 1000);
		
		            // 向右滑动
		            if (t.deltaX > t.effectiveDelta || speed < -t.speed) {
		                if (t.props.loop === false && t.currentPosIndex === t._minIndex) {
		                    t._goto(t.currentPosIndex);
		                } else {
		                    t.goPrev();
		                }
		            }
		
		            // 向左滑动
		            else if (t.deltaX < -t.effectiveDelta || speed > t.speed) {
		                    if (t.props.loop === false && (t.currentPosIndex === t._maxIndex || t._dummy && t.currentPosIndex === 1)) {
		                        t._goto(t.currentPosIndex);
		                    } else {
		                        t.goNext();
		                    }
		                }
		
		                // 点击
		                else if (endTime - t.startTime < 500 && Math.abs(t.deltaX >> 0) < 5) {
		                        t._slideClick();
		                    }
		
		                    // 保持原有位置
		                    else {
		                            t._goto(t.currentPosIndex);
		                        }
		
		            t.deltaX = 0;
		
		            doc.removeEventListener(TOUCH_MOVE, t, false);
		            doc.removeEventListener(TOUCH_END, t, false);
		
		            t._autoSlide();
		        }
		    }, {
		        key: '_slideClick',
		        value: function _slideClick() {
		            var t = this;
		            var realIndex = t._getRealIndex(t.currentPosIndex);
		            t.props.onSlideClick({
		                index: realIndex,
		                item: t._currentEl,
		                data: t.props.children[realIndex]
		            });
		        }
		    }, {
		        key: '_slideEnd',
		        value: function _slideEnd() {
		            var t = this;
		            var realIndex = t._getRealIndex(t.currentPosIndex);
		            t.props.onSlideEnd({
		                index: realIndex,
		                item: t._currentEl,
		                data: t.props.children[realIndex]
		            });
		            // https://facebook.github.io/react/docs/component-api.html#forceupdate
		            // 通常情况下我们不使用 forcecUpdate，但我们需要 slide 过程中的中间变量
		            // 而非最终 state 去触发插件的更新，因此这里我们用到了 forceUpdate。
		            t.forceUpdate();
		        }
		    }, {
		        key: '_getRealIndex',
		        value: function _getRealIndex(posIndex) {
		            var t = this;
		            return t._dummy ? t._realIndex[posIndex] : posIndex;
		        }
		
		        /**
		        * 当屏幕旋转时，更新基本数据 && 再次定位
		        */
		
		    }, {
		        key: '_resize',
		        value: function _resize() {
		            var t = this;
		            t.width = isPC ? t.el.clientWidth : win.innerWidth;
		            t._goto(t.currentPosIndex);
		        }
		
		        /**
		        * 渲染items 当item数量为2时，该方法会被调用两次，第二次函数为true，以实现循环轮播
		        * @param {boolean} dummyMode 是否是在渲染补位的item，
		        * @note 只有当`props.children`的长度为2时，才需要进行补位
		        */
		
		    }, {
		        key: '_renderItems',
		        value: function _renderItems(dummyMode) {
		            var t = this;
		            return t.props.children.map(function (Child, index) {
		                return React.createElement(
		                    'div',
		                    { ref: "item" + (index + (dummyMode ? 2 : 0)), key: index + (dummyMode ? 2 : 0),
		                        className: prefixClass('slide-item') + ' ' + prefixClass('slide-item') + t._getRealIndex(index) },
		                    Child
		                );
		            });
		        }
		    }, {
		        key: 'render',
		        value: function render() {
		            var _classnames;
		
		            var t = this;
		            return React.createElement(
		                'div',
		                { ref: 'root', className: classnames((_classnames = {}, _defineProperty(_classnames, '' + prefixClass('slide'), true), _defineProperty(_classnames, '' + prefixClass('slide-off'), t.state.disabled), _defineProperty(_classnames, t.props.className, !!t.props.className), _classnames)) },
		                React.createElement(
		                    'div',
		                    { className: prefixClass('3D') + ' ' + prefixClass('slide-view'), style: { height: t.props.height } },
		                    t._renderItems(),
		                    t._dummy && t._renderItems(true)
		                ),
		                t.props.showNav && t.length > 1 && React.createElement(SlideNav, { active: t._getRealIndex(t.currentPosIndex), num: t.props.children.length })
		            );
		        }
		    }]);
		
		    return Slide;
		}(React.Component);
		
		Slide.propTypes = {
		    className: React.PropTypes.string,
		    height: React.PropTypes.oneOfType([React.PropTypes.number, React.PropTypes.string]),
		    active: React.PropTypes.number,
		    auto: React.PropTypes.bool,
		    loop: React.PropTypes.bool,
		    showNav: React.PropTypes.bool,
		    onMount: React.PropTypes.func,
		    onSlideEnd: React.PropTypes.func,
		    onSlideClick: React.PropTypes.func
		};
		
		Slide.defaultProps = {
		    height: '5rem',
		    active: 0,
		    auto: false,
		    loop: true,
		    showNav: false,
		    onMount: noop,
		    onSlideEnd: noop,
		    onSlideClick: noop
		};
		
		Slide.displayName = 'Slide';
		
		module.exports = Slide;
		
	
	
	/***/ },
	/* 108 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		/**
		* Slide Component for tingle
		* @author gnosaij
		*
		* Copyright 2014-2015, Tingle Team, Alinw.
		* All rights reserved.
		*/
		var React = __webpack_require__(2);
		var classnames = __webpack_require__(45);
		var Context = __webpack_require__(47);
		
		var prefixClass = function prefixClass(name) {
		    return Context.prefixClass ? Context.prefixClass(name) : 't-' + name;
		};
		
		var SlideNav = function (_React$Component) {
		    _inherits(SlideNav, _React$Component);
		
		    function SlideNav(props) {
		        _classCallCheck(this, SlideNav);
		
		        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(SlideNav).call(this, props));
		
		        _this.state = {};
		        return _this;
		    }
		
		    _createClass(SlideNav, [{
		        key: 'render',
		        value: function render() {
		            var t = this;
		            var arr = [];
		            for (var i = 0; i < t.props.num; i++) {
		                var _classnames;
		
		                arr.push(React.createElement('div', { key: i, className: classnames((_classnames = {}, _defineProperty(_classnames, '' + prefixClass('M2 slide-nav-item'), true), _defineProperty(_classnames, "active", i == t.props.active), _classnames)) }));
		            }
		            return React.createElement(
		                'div',
		                { className: '' + prefixClass('slide-nav FBH FBAC FBJC') },
		                arr
		            );
		        }
		    }]);
		
		    return SlideNav;
		}(React.Component);
		
		SlideNav.defaultProps = {
		    num: 0,
		    active: 0
		};
		
		// http://facebook.github.io/react/docs/reusable-components.html
		SlideNav.propTypes = {
		    num: React.PropTypes.number,
		    active: React.PropTypes.number
		};
		
		SlideNav.displayName = 'SlideNav';
		
		module.exports = SlideNav;
		
	
	
	/***/ },
	/* 109 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		/**
		 * Grid Component Style for tingle
		 * @author cm
		 *
		 * Copyright 2014-2016, Tingle Team, Alinw.
		 * All rights reserved.
		 */
		
		module.exports = __webpack_require__(110);
		
	
	
	/***/ },
	/* 110 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		/**
		* Collection Component for tingle
		* @author gnosaij
		*
		* Copyright 2014-2016, Tingle Team, Alinw.
		* All rights reserved.
		*/
		var classnames = __webpack_require__(45);
		var Context = __webpack_require__(47);
		
		var _require = __webpack_require__(51);
		
		var VBox = _require.VBox;
		
		var Row = __webpack_require__(111);
		
		var prefixClass = Context.prefixClass;
		
		var Grid = function (_React$Component) {
		    _inherits(Grid, _React$Component);
		
		    function Grid(props) {
		        _classCallCheck(this, Grid);
		
		        return _possibleConstructorReturn(this, (Grid.__proto__ || Object.getPrototypeOf(Grid)).call(this, props));
		    }
		
		    /**
		    * 将子元素的索引值根据列数划分成组
		    * @returns {Array}
		    */
		
		
		    _createClass(Grid, [{
		        key: 'cutIndexesIntoRows',
		        value: function cutIndexesIntoRows() {
		            var t = this;
		            var rowIndexes = [];
		            var childrenCount = React.Children.count(t.props.children);
		            var dummyIndexArray = [];
		            var dummyIndex = 0;
		            while (childrenCount-- > 0) {
		                dummyIndexArray.push(dummyIndex++);
		            }
		
		            while (dummyIndexArray.length) {
		                rowIndexes.push(dummyIndexArray.splice(0, t.props.col));
		            }
		
		            return rowIndexes;
		        }
		    }, {
		        key: 'render',
		        value: function render() {
		            var _classnames;
		
		            var t = this;
		            // react0.14
		            var children = React.Children.toArray(t.props.children);
		
		            var rows = t.cutIndexesIntoRows();
		            var _t$props = t.props;
		            var className = _t$props.className;
		            var noLine = _t$props.noLine;
		
		            var rowProps = _objectWithoutProperties(_t$props, ['className', 'noLine']);
		
		            return React.createElement(
		                'div',
		                { className: classnames(prefixClass('grid'), (_classnames = {}, _defineProperty(_classnames, className, !!className), _defineProperty(_classnames, prefixClass('no-line'), noLine), _defineProperty(_classnames, prefixClass('grid-touchable'), this.props.touchable), _classnames)) },
		                rows.map(function (indexes, i) {
		                    return React.createElement(
		                        Row,
		                        _extends({}, rowProps, { key: i }),
		                        indexes.map(function (index) {
		                            return children[index];
		                        })
		                    );
		                })
		            );
		        }
		    }]);
		
		    return Grid;
		}(React.Component);
		
		Grid.defaultProps = {
		    className: '',
		    col: 4,
		    square: false,
		    noLine: false,
		    itemHAlign: 'center',
		    itemVAlign: 'center',
		    touchable: false
		};
		
		// http://facebook.github.io/react/docs/reusable-components.html
		Grid.propTypes = {
		    className: React.PropTypes.string,
		    // 列数
		    col: React.PropTypes.number,
		    // 是否自适应单元格的高度 使单元格成为正方形
		    square: React.PropTypes.bool,
		    // 是否隐藏分割线
		    noLine: React.PropTypes.bool,
		    // 单个格子的水平对其方式
		    itemHAlign: VBox.propTypes.hAlign,
		    // 单个格子的垂直对其方式
		    itemVAlign: VBox.propTypes.vAlign,
		    // 单元格是否可点击
		    touchable: React.PropTypes.bool
		};
		
		Grid.displayName = 'Grid';
		
		module.exports = Grid;
		
	
	
	/***/ },
	/* 111 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var classnames = __webpack_require__(45);
		var Context = __webpack_require__(47);
		
		var _require = __webpack_require__(51);
		
		var VBox = _require.VBox;
		
		
		var prefixClass = Context.prefixClass;
		
		var Row = function (_React$Component) {
		    _inherits(Row, _React$Component);
		
		    function Row(props) {
		        _classCallCheck(this, Row);
		
		        return _possibleConstructorReturn(this, (Row.__proto__ || Object.getPrototypeOf(Row)).call(this, props));
		    }
		
		    // 根据`col`的设置，补充空的`item`
		
		
		    _createClass(Row, [{
		        key: 'fillEmptyItem',
		        value: function fillEmptyItem(n) {
		            if (n === 0) {
		                return null;
		            }
		
		            var t = this;
		            var ret = [];
		
		            while (n-- > 0) {
		                ret.push(React.createElement(VBox, { flex: 1, hAlign: t.props.itemHAlign, vAlign: t.props.itemVAlign, className: prefixClass('grid-item'),
		                    style: t.props.square ? { height: '' + 10 / t.props.col + 'rem' } : {} }));
		            }
		            return React.Children.toArray(ret);
		        }
		    }, {
		        key: 'render',
		        value: function render() {
		            var t = this;
		            var toFilledItemNumber = t.props.col - React.Children.count(t.props.children);
		
		            return React.createElement(
		                'div',
		                { className: prefixClass('grid-row') + ' ' + prefixClass('FBH') },
		                React.Children.map(t.props.children, function (child, i) {
		                    return React.createElement(
		                        VBox,
		                        { flex: 1, hAlign: t.props.itemHAlign, vAlign: t.props.itemVAlign,
		                            className: prefixClass('grid-item'), key: i,
		                            style: t.props.square ? { height: '' + 10 / t.props.col + 'rem' } : {} },
		                        child
		                    );
		                }),
		                t.fillEmptyItem(toFilledItemNumber)
		            );
		        }
		    }]);
		
		    return Row;
		}(React.Component);
		
		Row.defaultProps = {
		    col: 4,
		    square: false
		};
		
		Row.propTypes = {
		    col: React.PropTypes.number,
		    square: React.PropTypes.bool,
		    // 单个格子的水平对其方式
		    itemHAlign: VBox.propTypes.hAlign,
		    // 单个格子的垂直对其方式
		    itemVAlign: VBox.propTypes.vAlign
		};
		
		module.exports = Row;
		
	
	
	/***/ },
	/* 112 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		/**
		 * List Component Style for tingle
		 * @author muxin
		 *
		 * Copyright 2014-2016, Tingle Team, Alinw.
		 * All rights reserved.
		 */
		
		module.exports = __webpack_require__(113);
		
	
	
	/***/ },
	/* 113 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		/**
		 * List Component for tingle
		 * @author muxin
		 *
		 * Copyright 2014-2016, Tingle Team.
		 * All rights reserved.
		 */
		var React = __webpack_require__(2);
		var classnames = __webpack_require__(45);
		var Context = __webpack_require__(47);
		var Icon = __webpack_require__(89);
		var Group = __webpack_require__(94);
		var Boxs = __webpack_require__(51);
		var HBox = Boxs.HBox;
		var VBox = Boxs.VBox;
		var Box = Boxs.Box;
		
		var TOUCH_START = Context.TOUCH_START,
		    TOUCH_MOVE = Context.TOUCH_MOVE,
		    TOUCH_END = Context.TOUCH_END,
		    TOUCH_CANCEL = Context.TOUCH_CANCEL,
		    support3D = Context.support3D,
		    supportTouch = Context.supportTouch,
		    isPC = Context.isPC,
		    noop = Context.noop,
		    RESIZE = Context.RESIZE;
		
		
		var doc = document;
		
		// 获取兼容PC和Device的event对象的page属性
		var getCursorPage = supportTouch ? function (event, page) {
		
		    return event.targetTouches[0][page] || event.changedTouches[0][page];
		} : function (event, page) {
		
		    return event[page];
		};
		
		var List = function (_React$Component) {
		    _inherits(List, _React$Component);
		
		    function List(props) {
		        _classCallCheck(this, List);
		
		        var _this = _possibleConstructorReturn(this, (List.__proto__ || Object.getPrototypeOf(List)).call(this, props));
		
		        var t = _this;
		        var datas = t.props.data || [];
		
		        if (datas.length) {
		
		            datas.map(function (d, i) {
		
		                d.keyIndex = "index" + i;
		                d.listLeft = 0;
		            });
		        }
		
		        _this.state = {
		            data: datas,
		            isCanMove: true, //当前能不能进行滑动
		            startX: 0, //鼠标开始的X轴位置
		            startY: 0, //鼠标开始的Y轴位置
		            endX: 0, //鼠标释放的位置
		            delateX: 0, //鼠标滑动的水平距离
		            listLeft: 0,
		            isMove: false
		        };
		        return _this;
		    }
		
		    _createClass(List, [{
		        key: 'componentDidMount',
		        value: function componentDidMount() {}
		    }, {
		        key: 'componentWillReceiveProps',
		        value: function componentWillReceiveProps(nextProp) {
		
		            if (nextProp.data && nextProp.data.length) {
		
		                nextProp.data.map(function (d, i) {
		
		                    d.keyIndex = "index" + i;
		                    d.listLeft = 0;
		                });
		
		                this.setState({
		                    data: nextProp.data
		                });
		            }
		        }
		    }, {
		        key: 'touchstartHandle',
		        value: function touchstartHandle(e) {
		
		            var t = this;
		            var data = t.state.data;
		            var id = e.currentTarget.id;
		            var isCanMove = t.state.isCanMove;
		
		            data.map(function (d, i) {
		
		                if (d.keyIndex !== id && Math.abs(d.listLeft) > 0) {
		
		                    isCanMove = false;
		                }
		
		                d.listLeft = 0;
		            });
		
		            // 只响应单指操作
		            if (supportTouch && e.touches.length > 1) {
		
		                return;
		            }
		
		            e.currentTarget.style.transitionDuration = '.05s';
		
		            // 获取当前触点的X轴的偏移量
		            var touchPageX = getCursorPage(e, 'pageX');
		            var touchPageY = getCursorPage(e, 'pageY');
		
		            t.setState({
		                data: data,
		                startX: touchPageX,
		                startY: touchPageY,
		                isCanMove: isCanMove
		            });
		        }
		    }, {
		        key: 'touchmoveHandle',
		        value: function touchmoveHandle(e) {
		
		            var t = this;
		            var translateX = void 0;
		            var data = t.state.data;
		            var id = e.currentTarget.id;
		            var isCanMove = t.state.isCanMove;
		            var deltaX = void 0;
		            var deltaY = void 0;
		
		            // 只响应单指操作
		            if (supportTouch && e.touches.length > 1) {
		
		                return;
		            }
		
		            e.currentTarget.style.transitionDuration = '.1s';
		
		            var touchPageX = getCursorPage(e, 'pageX');
		            var touchPageY = getCursorPage(e, 'pageY');
		
		            deltaX = touchPageX - t.state.startX;
		            deltaY = touchPageY - t.state.startY;
		
		            var change = Math.min(Math.max(-82, deltaX), 0);
		
		            // 如果X轴的移动距离先达到5px并且Y轴的移动距离小于5px，则执行list的滑动
		            // 如果Y轴的移动距离先达到5px，则执行浏览器默认的页面滚动
		            if (Math.abs(deltaX) > 5 && Math.abs(deltaY) < 5) {
		
		                data.map(function (d, i) {
		
		                    if (d.keyIndex === id) {
		
		                        if (isCanMove) {
		
		                            d.listLeft = change;
		                        } else {
		
		                            d.listLeft = 0;
		                            e.currentTarget.addEventListener('touchmove', function (event) {
		
		                                event.preventDefault();
		                            }, false);
		                        }
		                    }
		                });
		
		                e.preventDefault();
		                e.stopPropagation();
		
		                t.setState({
		                    endX: touchPageX,
		                    delateX: change,
		                    listLeft: change,
		                    data: data,
		                    isCanMove: isCanMove
		                });
		            }
		        }
		    }, {
		        key: 'touchendHandle',
		        value: function touchendHandle(e) {
		
		            var t = this;
		            var left = void 0;
		            var data = t.state.data;
		            var isCanMove = t.state.isCanMove;
		            var id = e.currentTarget.id;
		            var new_left = 0;
		
		            // 只响应单指操作
		            if (supportTouch && e.touches.length > 1) {
		
		                return;
		            }
		
		            e.currentTarget.style.transitionDuration = '.2s';
		
		            data.map(function (d, i) {
		
		                if (d.keyIndex === id) {
		
		                    left = parseInt(d.listLeft);
		                }
		            });
		
		            if (left < -5) {
		
		                new_left = -82;
		            } else if (left = 0) {
		
		                new_left = 0;
		            } else if (left > 5) {
		
		                new_left = 82;
		            }
		
		            var arr = [];
		
		            data.map(function (d, i) {
		
		                if (d.keyIndex !== id) {
		
		                    d.listLeft = 0;
		                    isCanMove = true;
		                } else {
		
		                    d.listLeft = new_left;
		                }
		            });
		
		            t.setState({
		                listLeft: new_left,
		                data: data,
		                isCanMove: isCanMove
		            });
		
		            if (new_left < 0) {
		
		                t.setState({
		                    isMove: true
		                });
		            }
		        }
		    }, {
		        key: 'delete',
		        value: function _delete(dataItem, e) {
		
		            var t = this;
		
		            e.preventDefault();
		            t.props.onDelete(e, dataItem);
		
		            // let data = t.state.data;
		            // let id = event.currentTarget.id;
		
		            // data.map((d,i) => {
		
		            //     if(d.keyIndex === id) {
		
		            //         data.splice(i,1);
		            //     }
		            // })
		
		            // t.setState({
		            //     data : data
		            // })
		        }
		    }, {
		        key: 'prevent_default',
		        value: function prevent_default(e) {
		
		            e.preventDefault();
		        }
		    }, {
		        key: 'clickHandle',
		        value: function clickHandle(dataItem, e) {
		
		            var t = this;
		
		            if (t.state.isMove) {
		
		                t.setState({
		                    isMove: false
		                });
		            } else {
		
		                t.props.onClick(e, dataItem);
		            }
		        }
		    }, {
		        key: 'clickPhotoHandle',
		        value: function clickPhotoHandle(imgUrl, e) {
		
		            var t = this;
		
		            e.stopPropagation();
		            t.props.clickPhoto(e, imgUrl);
		        }
		    }, {
		        key: 'render',
		        value: function render() {
		
		            var t = this;
		            var _t$props = t.props,
		                className = _t$props.className,
		                layout = _t$props.layout,
		                isDelete = _t$props.isDelete,
		                hasRightIcon = _t$props.hasRightIcon,
		                iconName = _t$props.iconName,
		                iconWidth = _t$props.iconWidth,
		                demoTitle = _t$props.demoTitle;
		
		            var data = t.state.data;
		            var isCanMove = t.state.isCanMove;
		            var list = null;
		            var Events = {};
		
		            if (isDelete) {
		
		                Events = {
		                    onTouchStart: t.touchstartHandle.bind(t),
		                    onTouchMove: t.touchmoveHandle.bind(t),
		                    onTouchEnd: t.touchendHandle.bind(t)
		                };
		            }
		
		            if (data.length) {
		
		                list = data.map(function (dataItem, index) {
		                    return React.createElement(
		                        'div',
		                        { key: index },
		                        React.createElement(
		                            'div',
		                            _extends({ className: Context.prefixClass('list-wrap')
		                            }, Events, {
		                                style: { left: dataItem.listLeft + 'px' },
		                                id: dataItem.keyIndex,
		                                onClick: t.clickHandle.bind(t, dataItem),
		                                ref: 'listItemBox' }),
		                            React.createElement(
		                                HBox,
		                                { vAlign: 'center' },
		                                React.createElement(
		                                    HBox,
		                                    { flex: 1, className: classnames(_defineProperty({}, Context.prefixClass('list-img-right'), layout === 'right')) },
		                                    dataItem.imgUrl && React.createElement(
		                                        VBox,
		                                        { vAlign: 'center', onClick: t.clickPhotoHandle.bind(t, dataItem.imgUrl) },
		                                        React.createElement('img', { src: dataItem.imgUrl, className: Context.prefixClass('list-img') })
		                                    ),
		                                    React.createElement(
		                                        Box,
		                                        { className: Context.prefixClass('list-text-content'), flex: 1 },
		                                        React.createElement(
		                                            'p',
		                                            { className: Context.prefixClass('list-title omit') },
		                                            dataItem.title,
		                                            dataItem.date && React.createElement(
		                                                'span',
		                                                { className: Context.prefixClass('list-title-date') },
		                                                dataItem.date
		                                            )
		                                        ),
		                                        dataItem.text && React.createElement(
		                                            'p',
		                                            { className: Context.prefixClass('list-text omit') },
		                                            dataItem.text
		                                        )
		                                    )
		                                ),
		                                hasRightIcon && React.createElement(
		                                    Box,
		                                    null,
		                                    React.createElement(Icon, { name: iconName, width: iconWidth, fill: '#ccc', className: Context.prefixClass('list-arrow') })
		                                )
		                            )
		                        ),
		                        React.createElement(
		                            'div',
		                            { className: Context.prefixClass('list-behind') },
		                            React.createElement(
		                                'a',
		                                { href: '#', className: Context.prefixClass('list-delete-btn'), id: dataItem.keyIndex, onClick: t.delete.bind(t, dataItem) },
		                                React.createElement(
		                                    'span',
		                                    { className: Context.prefixClass('list-delete-btn-text') },
		                                    '\u5220\u9664'
		                                )
		                            )
		                        )
		                    );
		                });
		
		                return React.createElement(
		                    Group,
		                    { className: classnames(Context.prefixClass('list'), _defineProperty({}, className, !!className)) },
		                    React.createElement(
		                        Group.Head,
		                        { className: 't-demo-title' },
		                        demoTitle
		                    ),
		                    React.createElement(
		                        Group.List,
		                        { lineIndent: 10 },
		                        list
		                    )
		                );
		            } else {
		                return null;
		            }
		        }
		    }]);
		
		    return List;
		}(React.Component);
		
		List.defaultProps = {
		    className: '',
		    layout: 'left',
		    hasRightIcon: true,
		    iconName: 'angle-right',
		    iconWidth: 20,
		    data: [],
		    isDelete: false,
		    demoTitle: '',
		    onClick: function onClick() {},
		    clickPhoto: function clickPhoto() {},
		    onDelete: function onDelete() {}
		};
		
		// http://facebook.github.io/react/docs/reusable-components.html
		List.propTypes = {
		    className: React.PropTypes.string,
		    layout: React.PropTypes.string,
		    iconName: React.PropTypes.string,
		    iconWidth: React.PropTypes.number,
		    data: React.PropTypes.array,
		    hasRightIcon: React.PropTypes.bool,
		    onClick: React.PropTypes.func,
		    clickPhoto: React.PropTypes.func,
		    onDelete: React.PropTypes.func
		};
		
		List.displayName = 'List';
		
		module.exports = List;
		
	
	
	/***/ },
	/* 114 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		/**
		 * NavBar Component Style for tingle
		 * @author ruiyang.dry
		 *
		 * Copyright 2014-2016, Tingle Team, Alinw.
		 * All rights reserved.
		 */
		
		module.exports = __webpack_require__(115);
		
	
	
	/***/ },
	/* 115 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		/**
		 * NavBar Component for tingle
		 * @author ruiyang.dry
		 *
		 * Copyright 2014-2016, Tingle Team.
		 * All rights reserved.
		 */
		var classnames = __webpack_require__(45);
		
		var Context = __webpack_require__(47);
		
		var Icon = __webpack_require__(89);
		
		var prefixClass = Context.prefixClass;
		
		var NavBar = function (_React$Component) {
		    _inherits(NavBar, _React$Component);
		
		    function NavBar(props) {
		        _classCallCheck(this, NavBar);
		
		        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(NavBar).call(this, props));
		
		        _this.state = {
		            isShow: _this.props.isShow
		        };
		        return _this;
		    }
		
		    _createClass(NavBar, [{
		        key: 'handleBackClick',
		        value: function handleBackClick() {
		            this.props.onLeftClick();
		        }
		    }, {
		        key: 'handleOptionClick',
		        value: function handleOptionClick() {
		            this.props.onRightClick();
		        }
		    }, {
		        key: 'handleCloseView',
		        value: function handleCloseView() {
		            this.props.closeViewClick();
		        }
		    }, {
		        key: 'render',
		        value: function render() {
		            var t = this;
		            return React.createElement(
		                'div',
		                { ref: 'root', className: classnames(prefixClass('nav-bar'), _defineProperty({}, t.props.className, !!t.props.className)) },
		                React.createElement(
		                    'div',
		                    { className: prefixClass('nav-bar-left FAL') },
		                    React.createElement(
		                        'div',
		                        { className: prefixClass("nav-bar-left-option"), onClick: this.handleBackClick.bind(this) },
		                        React.createElement(Icon, { className: prefixClass("nav-bar-arrow-left"), name: 'angle-left' }),
		                        React.createElement(
		                            'span',
		                            null,
		                            '返回'
		                        )
		                    ),
		                    this.state.isShow ? React.createElement(
		                        'span',
		                        { className: prefixClass("nav-bar-close"),
		                            onClick: this.handleCloseView.bind(this) },
		                        '关闭'
		                    ) : null
		                ),
		                React.createElement(
		                    'div',
		                    { className: prefixClass('nav-bar-center nav-bar-center-text omit3 FAC') },
		                    this.props.title
		                ),
		                React.createElement(
		                    'div',
		                    { className: prefixClass('nav-bar-right FAR'), onClick: this.handleOptionClick.bind(this) },
		                    React.createElement(
		                        'span',
		                        { className: prefixClass("nav-bar-right-text") },
		                        this.props.rightText
		                    )
		                )
		            );
		        }
		    }]);
		
		    return NavBar;
		}(React.Component);
		
		NavBar.defaultProps = {
		    className: '',
		    title: '',
		    rightText: '更多',
		    isShow: true,
		    onLeftClick: function onLeftClick() {},
		    onRightClick: function onRightClick() {},
		    closeViewClick: function closeViewClick() {}
		};
		
		// http://facebook.github.io/react/docs/reusable-components.html
		NavBar.propTypes = {
		    className: React.PropTypes.string,
		    title: React.PropTypes.string,
		    rightText: React.PropTypes.string,
		    onLeftClick: React.PropTypes.func,
		    onRightClick: React.PropTypes.func,
		    closeViewClick: React.PropTypes.func,
		    isShow: React.PropTypes.bool
		};
		
		NavBar.displayName = 'NavBar';
		
		module.exports = NavBar;
		
	
	
	/***/ },
	/* 116 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		/**
		 * Note Component Style for tingle
		 * @author Kuncheng Zhao
		 *
		 * Copyright 2014-2016, Tingle Team, Alinw.
		 * All rights reserved.
		 */
		
		module.exports = __webpack_require__(117);
		
	
	
	/***/ },
	/* 117 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		/**
		 * Note Component for tingle
		 * @author Kuncheng Zhao, zhouqan.yezq
		 *
		 * Copyright 2014-2016, Tingle Team.
		 * All rights reserved.
		 */
		var classnames = __webpack_require__(45);
		var Icon = __webpack_require__(89);
		var Context = __webpack_require__(47);
		
		var prefixClass = Context.prefixClass;
		
		var Note = function (_React$Component) {
		    _inherits(Note, _React$Component);
		
		    function Note(props) {
		        _classCallCheck(this, Note);
		
		        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Note).call(this, props));
		
		        _this.state = {
		            closed: false
		        };
		        return _this;
		    }
		
		    _createClass(Note, [{
		        key: 'handleClose',
		        value: function handleClose(e) {
		            this.props.closable && this.doClose();
		            this.props.onClose.call(this, e);
		        }
		    }, {
		        key: 'doClose',
		        value: function doClose() {
		            this.setState({
		                closed: true
		            });
		        }
		
		        /**
		         * 当closable为true的时候，展现关闭模式
		         * 当closable为false的时候，展现查看详情模式
		         */
		
		    }, {
		        key: 'render',
		        value: function render() {
		            var t = this;
		            var type = 'note-' + t.props.type;
		            var html = React.createElement(
		                'div',
		                { ref: 'root', className: classnames(prefixClass('FBH FBAC'), _defineProperty({}, t.props.className, !!t.props.className), prefixClass('note')) },
		                React.createElement(Icon, { name: type, width: 22, height: 22 }),
		                React.createElement(
		                    'div',
		                    { className: prefixClass('note-message FB1 omit') },
		                    this.props.message
		                ),
		                React.createElement(
		                    'div',
		                    { className: prefixClass('FBH note-close'), onClick: t.handleClose.bind(t) },
		                    t.props.closeText,
		                    React.createElement(Icon, { name: t.props.closable ? 'cross' : 'angle-right',
		                        width: 20, height: 20 })
		                )
		            );
		
		            return this.state.closed ? null : html;
		        }
		    }]);
		
		    return Note;
		}(React.Component);
		
		Note.defaultProps = {
		    type: 'message',
		    closable: false,
		    closeText: '',
		    message: '',
		    onClose: function onClose() {}
		};
		
		// http://facebook.github.io/react/docs/reusable-components.html
		
		Note.propTypes = {
		    className: React.PropTypes.string,
		    type: React.PropTypes.oneOf(['message', 'warning']),
		    message: React.PropTypes.string,
		    onClose: React.PropTypes.func,
		    closeText: React.PropTypes.string
		};
		
		Note.displayName = 'Note';
		
		module.exports = Note;
		
	
	
	/***/ },
	/* 118 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		/**
		 * PhotoField Component Style for tingle
		 * @author 
		 *
		 * Copyright 2014-2016, Tingle Team, Alinw.
		 * All rights reserved.
		 */
		
		module.exports = __webpack_require__(119);
		
	
	
	/***/ },
	/* 119 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		/**
		 * PhotoField Component for tingle
		 * @author
		 * alex.mm
		 * Copyright 2014-2016, Tingle Team.
		 * All rights reserved.
		 */
		
		/* eslint-disable */
		var React = __webpack_require__(2);
		var classnames = __webpack_require__(45);
		
		var Context = __webpack_require__(47);
		var PhotoFieldItem = __webpack_require__(120);
		var Icon = __webpack_require__(89);
		
		var noop = function noop() {};
		
		var prefixClass = Context.prefixClass;
		
		var Ali = window.Ali || {};
		
		var PhotoField = function (_React$Component) {
		    _inherits(PhotoField, _React$Component);
		
		    function PhotoField(props) {
		        _classCallCheck(this, PhotoField);
		
		        var _this = _possibleConstructorReturn(this, (PhotoField.__proto__ || Object.getPrototypeOf(PhotoField)).call(this, props));
		
		        _this.state = {
		            width: 100 / props.columns + '%'
		        };
		        return _this;
		    }
		
		    _createClass(PhotoField, [{
		        key: 'onPickHandler',
		        value: function onPickHandler() {
		            var _this2 = this;
		
		            if (this.props.readOnly) {
		                return;
		            }
		            var option = {
		                multiple: !!this.props.multiple,
		                max: this.props.max
		            };
		            if (Ali.isDingDing) {
		                if (!this.props.corpId) {
		                    Ali.alert({
		                        message: this.props.locale === 'zh_CN' ? 'corpId 不能为空' : 'corpId is required',
		                        okButton: this.props.locale === 'zh_CN' ? '确定' : 'OK'
		                    });
		                    return;
		                }
		                option.corpId = this.props.corpId;
		                Ali.photo(option, function (result) {
		                    if (result && !result.errorCode) {
		                        _this2.props.onChange({
		                            value: result.photos
		                        });
		                    } else {
		                        Ali.alert({
		                            message: result.errorMessage,
		                            okButton: _this2.props.locale === 'zh_CN' ? '确定' : 'OK'
		                        });
		                    }
		                });
		            }
		        }
		    }, {
		        key: 'renderPhotoList',
		        value: function renderPhotoList() {
		            var t = this;
		            var photoItem = t.props.photoList.map(function (item, index) {
		                var props = {
		                    index: index,
		                    url: item.url,
		                    name: item.name,
		                    width: t.state.width,
		                    columns: t.props.columns,
		                    readOnly: t.props.readOnly,
		                    onDeleteImage: t.handleDeleteImage.bind(t),
		                    onPreviewImage: t.handlePreview.bind(t)
		                };
		                return React.createElement(PhotoFieldItem, _extends({}, props, { key: index }));
		            });
		            return React.createElement(
		                'div',
		                { className: classnames(prefixClass('photo-list'), _defineProperty({}, prefixClass('hide'), !photoItem.length)) },
		                photoItem
		            );
		        }
		    }, {
		        key: 'handleDeleteImage',
		        value: function handleDeleteImage(index) {
		            this.props.onDelete(index);
		        }
		
		        // 点击预览
		
		    }, {
		        key: 'handlePreview',
		        value: function handlePreview(index) {
		            var t = this;
		            var urls = t.props.photoList.map(function (item) {
		                var u = item.url;
		                return { u: u };
		            });
		
		            Ali.imageViewer({
		                images: urls,
		                init: index
		            }, function (result) {
		                console.log(result);
		            });
		        }
		    }, {
		        key: 'render',
		        value: function render() {
		            var _classnames2;
		
		            var t = this;
		            var requiredTag = React.createElement(Icon, { name: 'field-required', className: prefixClass('field-layout-label-required'), width: 6, height: 6, fill: 'red' });
		            return React.createElement(
		                'div',
		                { className: classnames(prefixClass('photo-field'), (_classnames2 = {}, _defineProperty(_classnames2, t.props.className, !!t.props.className), _defineProperty(_classnames2, prefixClass('hide'), t.props.hide), _defineProperty(_classnames2, 'readOnly', t.props.readOnly), _classnames2)) },
		                t.props.label && t.props.layout === 'v' && React.createElement(
		                    'div',
		                    { className: prefixClass('field-layout-v-label') },
		                    t.props.label,
		                    this.props.required && requiredTag
		                ),
		                React.createElement(
		                    'div',
		                    { onClick: t.onPickHandler.bind(t), className: classnames(prefixClass('field-box FBH'), _defineProperty({}, prefixClass('TE'), !!t.props.tappable)) },
		                    t.props.label && t.props.layout === 'h' && React.createElement(
		                        'div',
		                        { className: prefixClass('field-layout-h-label') },
		                        t.props.label,
		                        this.props.required && requiredTag
		                    ),
		                    React.createElement(
		                        'div',
		                        { className: prefixClass('FB1 PR') },
		                        React.createElement(
		                            'div',
		                            { className: classnames(prefixClass('omit select-field-placeholder'), _defineProperty({}, prefixClass('hide'), this.props.photoList.length || t.props.readOnly)) },
		                            this.props.placeholder
		                        )
		                    ),
		                    !t.props.readOnly && Ali.isDingDing && React.createElement(
		                        'div',
		                        { className: prefixClass('icon FBH FBAC photo-icon') },
		                        React.createElement(Icon, { className: prefixClass('icon-svg'), name: 'photo', fill: t.props.fill, width: 26, height: 26 })
		                    )
		                ),
		                this.renderPhotoList()
		            );
		        }
		    }]);
		
		    return PhotoField;
		}(React.Component);
		
		PhotoField.defaultProps = {
		    columns: 3,
		    multiple: true, // 是否同时上传多张照片
		    layout: 'h',
		    label: '',
		    max: 9, // 钉钉组件一次性最多选择上传3张照片
		    maxUpload: 12, // 总共上传图片总数
		    readOnly: false,
		    onChange: noop,
		    photoList: [],
		    fill: '#ccc',
		    locale: 'zh_CN'
		};
		
		// http://facebook.github.io/react/docs/reusable-components.html
		PhotoField.propTypes = {
		    icon: React.PropTypes.object,
		    columns: React.PropTypes.number,
		    multiple: React.PropTypes.bool,
		    corpId: React.PropTypes.string,
		    placeholder: React.PropTypes.string,
		    locale: React.PropTypes.string,
		    label: React.PropTypes.string,
		    max: React.PropTypes.number,
		    maxUpload: React.PropTypes.number,
		    photoList: React.PropTypes.array,
		    readOnly: React.PropTypes.bool,
		    onChange: React.PropTypes.func,
		    onDelete: React.PropTypes.func
		};
		
		PhotoField.displayName = 'PhotoField';
		
		module.exports = PhotoField;
		
	
	
	/***/ },
	/* 120 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var React = __webpack_require__(2);
		var Context = __webpack_require__(47);
		var prefixClass = Context.prefixClass;
		
		var PhotoFieldItem = function (_React$Component) {
		    _inherits(PhotoFieldItem, _React$Component);
		
		    function PhotoFieldItem() {
		        _classCallCheck(this, PhotoFieldItem);
		
		        return _possibleConstructorReturn(this, (PhotoFieldItem.__proto__ || Object.getPrototypeOf(PhotoFieldItem)).apply(this, arguments));
		    }
		
		    _createClass(PhotoFieldItem, [{
		        key: 'handlePreview',
		        value: function handlePreview() {
		            this.props.onPreviewImage(this.props.index);
		        }
		    }, {
		        key: 'handleDelete',
		        value: function handleDelete() {
		            this.props.onDeleteImage(this.props.index);
		        }
		    }, {
		        key: 'render',
		        value: function render() {
		            var t = this;
		            return React.createElement(
		                'div',
		                { className: prefixClass('PR FL photo-item'), style: { width: t.props.width } },
		                React.createElement('img', { src: '//gw.alicdn.com/tps/TB18GJsIpXXXXatXFXXXXXXXXXX.png',
		                    preview: t.props.pic,
		                    style: { backgroundImage: 'url(' + t.props.url + ')' }, alt: t.props.name,
		                    onClick: t.handlePreview.bind(t)
		                }),
		                !t.props.readOnly && React.createElement('div', { className: prefixClass('PA photo-delete'), onClick: t.handleDelete.bind(t) })
		            );
		        }
		    }]);
		
		    return PhotoFieldItem;
		}(React.Component);
		
		PhotoFieldItem.defaultProps = {
		    readOnly: false
		};
		
		PhotoFieldItem.propTypes = {
		    index: React.PropTypes.number,
		    readOnly: React.PropTypes.bool,
		    onPreviewImage: React.PropTypes.func,
		    onDeleteImage: React.PropTypes.func
		};
		
		module.exports = PhotoFieldItem;
		
	
	
	/***/ },
	/* 121 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		/**
		 * Rate Component Style for tingle
		 * @author quanyun.mqy
		 *
		 * Copyright 2014-2016, Tingle Team, Alinw.
		 * All rights reserved.
		 */
		
		module.exports = __webpack_require__(122);
		
	
	
	/***/ },
	/* 122 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _classnames2 = __webpack_require__(45);
		
		var _classnames3 = _interopRequireDefault(_classnames2);
		
		var _tingleStyle = __webpack_require__(46);
		
		var _tingleContext = __webpack_require__(47);
		
		var _tingleContext2 = _interopRequireDefault(_tingleContext);
		
		var _tingleIcon = __webpack_require__(89);
		
		var _tingleIcon2 = _interopRequireDefault(_tingleIcon);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
		                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Rate Component for tingle
		                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author quanyun.mqy
		                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
		                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2014-2016, Tingle Team.
		                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * All rights reserved.
		                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */
		
		
		var Rate = function (_React$Component) {
		    _inherits(Rate, _React$Component);
		
		    function Rate() {
		        _classCallCheck(this, Rate);
		
		        return _possibleConstructorReturn(this, (Rate.__proto__ || Object.getPrototypeOf(Rate)).apply(this, arguments));
		    }
		
		    _createClass(Rate, [{
		        key: 'handleItemClick',
		        value: function handleItemClick(v) {
		            this.props.onChange(v);
		        }
		
		        // http://facebook.github.io/react/docs/reusable-components.html
		
		    }, {
		        key: 'render',
		        value: function render() {
		            var t = this;
		            var items = [];
		            for (var i = 1; i <= t.props.totalScore; i++) {
		                var item = React.createElement(
		                    'div',
		                    { className: (0, _classnames3.default)(_tingleContext2.default.prefixClass('rate-item'), {
		                            't-DIB': true,
		                            't-PR': true,
		                            active: i <= t.props.score
		                        }), key: i, onClick: t.handleItemClick.bind(t, i), style: {
		                            width: (0, _tingleStyle.unitize)(t.props.height),
		                            height: (0, _tingleStyle.unitize)(t.props.height),
		                            paddingLeft: (0, _tingleStyle.unitize)(t.props.gap / 2),
		                            paddingRight: (0, _tingleStyle.unitize)(t.props.gap / 2)
		                        }
		                    },
		                    React.createElement(_tingleIcon2.default, { name: 'star', fill: '#dbdbdb', className: (0, _classnames3.default)(_tingleContext2.default.prefixClass('rate-icon')) })
		                );
		                items.push(item);
		            }
		            return React.createElement(
		                'div',
		                { ref: 'root', className: (0, _classnames3.default)(_tingleContext2.default.prefixClass('rate'), _defineProperty({
		                        't-FBH': true
		                    }, t.props.className, !!t.props.className)) },
		                items
		            );
		        }
		    }]);
		
		    return Rate;
		}(React.Component);
		
		Rate.displayName = 'Rate';
		Rate.defaultProps = {
		    totalScore: 5,
		    score: 0,
		    height: 30,
		    gap: 10,
		    onChange: function onChange() {}
		};
		Rate.propTypes = {
		    className: React.PropTypes.string,
		    totalScore: React.PropTypes.number,
		    score: React.PropTypes.number,
		    height: React.PropTypes.oneOfType([React.PropTypes.number, React.PropTypes.string]),
		    gap: React.PropTypes.oneOfType([React.PropTypes.number, React.PropTypes.string]),
		    onChange: React.PropTypes.func
		};
		exports.default = Rate;
		module.exports = exports['default'];
		
	
	
	/***/ },
	/* 123 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		/**
		 * RadioField Component Style for tingle
		 * @author shanchao
		 *
		 * Copyright 2014-2016, Tingle Team, Alinw.
		 * All rights reserved.
		 */
		
		module.exports = __webpack_require__(124);
		
	
	
	/***/ },
	/* 124 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _react = __webpack_require__(2);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _classnames5 = __webpack_require__(45);
		
		var _classnames6 = _interopRequireDefault(_classnames5);
		
		var _tingleIcon = __webpack_require__(89);
		
		var _tingleIcon2 = _interopRequireDefault(_tingleIcon);
		
		var _tingleContext = __webpack_require__(47);
		
		var _tingleContext2 = _interopRequireDefault(_tingleContext);
		
		var _tingleGroup = __webpack_require__(94);
		
		var _tingleGroup2 = _interopRequireDefault(_tingleGroup);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
		                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * RadioField Component for tingle
		                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author shanchao
		                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
		                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2014-2016, Tingle Team.
		                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * All rights reserved.
		                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */
		
		
		var prefixClass = _tingleContext2.default.prefixClass;
		
		var RadioField = function (_React$Component) {
		  _inherits(RadioField, _React$Component);
		
		  function RadioField(props) {
		    _classCallCheck(this, RadioField);
		
		    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(RadioField).call(this, props));
		
		    _this.state = {};
		    return _this;
		  }
		
		  _createClass(RadioField, [{
		    key: 'clickAction',
		    value: function clickAction(value, item, index, data) {
		      var t = this;
		      var _t$props = t.props;
		      var radioArray = _t$props.data;
		      var onChange = _t$props.onChange;
		
		
		      var disable = item.disable;
		      if (disable) {
		        return;
		      }
		      radioArray.map(function (radioItem) {
		        radioItem.checked = false;
		        return radioItem;
		      });
		      item.checked = !item.checked;
		      if (onChange) {
		        onChange(value, index, data);
		      }
		      t.forceUpdate();
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      var t = this;
		      var _t$props2 = t.props;
		      var rootClassName = _t$props2.rootClassName;
		      var className = _t$props2.className;
		      var radioArray = _t$props2.data;
		      var groupListArgument = _t$props2.groupListArgument;
		      var groupListFlag = _t$props2.groupListFlag;
		      var label = _t$props2.label;
		
		
		      var radioArrayComponent = radioArray.map(function (item, index, data) {
		        var checked = item.checked;
		        var disable = item.disable;
		        var value = item.value;
		
		        var textClassName = (0, _classnames6.default)(prefixClass('radio-field-text FBAC FBH FB1'), { disable: disable });
		        var iconClassName = (0, _classnames6.default)(prefixClass('radio-field-icon'), { noChecked: !checked }, { checked: checked }, { disable: disable });
		        return _react2.default.createElement(
		          'div',
		          { onClick: t.clickAction.bind(t, value, item, index, data),
		            key: index, className: prefixClass('radio-field-row FBAC FBH')
		          },
		          _react2.default.createElement(
		            'div',
		            { ref: 'text' + index, className: textClassName },
		            item.text
		          ),
		          _react2.default.createElement(
		            'div',
		            { className: prefixClass('radio-field-icon-div FBAC FBH') },
		            _react2.default.createElement(_tingleIcon2.default, { width: 20, height: 20, name: "check", className: iconClassName })
		          )
		        );
		      });
		
		      var finalJSX = _react2.default.createElement(
		        _tingleGroup2.default,
		        { className: (0, _classnames6.default)(prefixClass('checkbox-field'), _defineProperty({}, rootClassName, !!rootClassName), _defineProperty({}, className, !!className)) },
		        label === '' ? null : _react2.default.createElement(
		          _tingleGroup2.default.Head,
		          { className: (0, _classnames6.default)(prefixClass('checkbox-label')) },
		          label
		        ),
		        _react2.default.createElement(
		          _tingleGroup2.default.List,
		          groupListArgument,
		          radioArrayComponent
		        )
		      );
		
		      if (!groupListFlag) {
		        finalJSX = _react2.default.createElement(
		          'div',
		          { ref: 'root', className: (0, _classnames6.default)(prefixClass('checkbox-field'), _defineProperty({}, rootClassName, !!rootClassName), _defineProperty({}, className, !!className)) },
		          radioArrayComponent
		        );
		      }
		
		      return finalJSX;
		    }
		  }]);
		
		  return RadioField;
		}(_react2.default.Component);
		
		RadioField.defaultProps = {
		  data: [],
		  onChange: function onChange() {},
		
		  groupListFlag: true,
		  groupListArgument: {
		    lineIndent: 0,
		    itemIndent: 15
		  },
		  label: ''
		};
		
		// http://facebook.github.io/react/docs/reusable-components.html
		RadioField.propTypes = {
		  className: _react2.default.PropTypes.string,
		  data: _react2.default.PropTypes.array,
		  onChange: _react2.default.PropTypes.func,
		  groupListFlag: _react2.default.PropTypes.bool,
		  groupListArgument: _react2.default.PropTypes.object
		};
		
		RadioField.displayName = 'RadioField';
		
		module.exports = RadioField;
		
	
	
	/***/ },
	/* 125 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		/**
		 * SearchBar Component Style for tingle
		 * @author zhouquan.yezq
		 *
		 * Copyright 2014-2016, Tingle Team, Alinw.
		 * All rights reserved.
		 */
		
		module.exports = __webpack_require__(126);
		
	
	
	/***/ },
	/* 126 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		/**
		 * SearchBar Component for tingle
		 * @author zhouquan.yezq
		 *
		 * Copyright 2014-2016, Tingle Team.
		 * All rights reserved.
		 */
		var classnames = __webpack_require__(45);
		var debounce = __webpack_require__(127);
		
		var Context = __webpack_require__(47);
		var Icon = __webpack_require__(89);
		var locale = __webpack_require__(131);
		var SearchHistory = __webpack_require__(132);
		
		var addUrlParam = function addUrlParam(name, value) {
		    var currentUrl = location.href;
		    var reg;
		    if (/\?/g.test(currentUrl)) {
		        reg = new RegExp(name + '=[-\\w]{4,25}', 'g');
		        if (reg.test(currentUrl)) {
		            currentUrl = currentUrl.replace(reg, name + "=" + value);
		        } else {
		            currentUrl += "&" + name + "=" + value;
		        }
		    } else {
		        currentUrl += "?" + name + "=" + value;
		    }
		    return currentUrl;
		};
		
		var SearchBar = function (_React$Component) {
		    _inherits(SearchBar, _React$Component);
		
		    function SearchBar(props) {
		        _classCallCheck(this, SearchBar);
		
		        var _this = _possibleConstructorReturn(this, (SearchBar.__proto__ || Object.getPrototypeOf(SearchBar)).call(this, props));
		
		        _this.state = {
		            isActive: false, // whether in search mode
		            keyword: ''
		        };
		        _this.lastSearch = '';
		        _this.listener = _this.exitStatusSearch.bind(_this);
		        _this.doDebouceSearch = debounce(_this.doSearch, props.searchDelay);
		        return _this;
		    }
		
		    _createClass(SearchBar, [{
		        key: 'componentWillUnmount',
		        value: function componentWillUnmount() {
		            document.body.style.overflow = '';
		        }
		    }, {
		        key: 'onChange',
		        value: function onChange(e) {
		            var value = e.target.value.trim();
		            var t = this;
		            this.setState({
		                keyword: value
		            }, function () {
		                if (t.props.instantSearch) {
		                    t.doDebouceSearch('input');
		                }
		            });
		            t.props.onChange(value, 'input', e);
		        }
		    }, {
		        key: 'onKeyUp',
		        value: function onKeyUp(e) {
		            var value = e.target.value.trim();
		            if (e.keyCode === 13 && value) {
		                this.doSearch('click', value);
		                this.refs.input.blur();
		            }
		        }
		    }, {
		        key: 'doSearch',
		        value: function doSearch(from, keyword) {
		            var t = this;
		            keyword = keyword || t.state.keyword;
		            if (from !== 'input' && t.props.hasHistory) {
		                t.refs.history.addItem(keyword);
		            }
		            if (keyword === t.lastSearch) {
		                return;
		            }
		            t.lastSearch = keyword;
		            t.props.onSearch(keyword);
		        }
		    }, {
		        key: 'clearKeyword',
		        value: function clearKeyword() {
		            var t = this;
		            t.setState({
		                keyword: ''
		            });
		            t.refs.input.focus();
		            t.props.onChange('', 'clear', null);
		        }
		    }, {
		        key: 'enterSearch',
		        value: function enterSearch() {
		            var t = this;
		            if (t.props.disabled) {
		                return;
		            }
		            t.setState({
		                isActive: true
		            });
		            t.refs.input.focus();
		            history.pushState(null, '', addUrlParam('SEARCH_BAR', Date.now()));
		            window.addEventListener("popstate", this.listener, false);
		            document.body.style.overflow = 'hidden';
		            t.props.onEnter();
		        }
		    }, {
		        key: 'exitSearch',
		        value: function exitSearch() {
		            history.go(-1);
		        }
		    }, {
		        key: 'exitStatusSearch',
		        value: function exitStatusSearch() {
		            var t = this;
		            t.setState({
		                isActive: false,
		                keyword: ''
		            });
		            t.refs.input.blur();
		            window.removeEventListener("popstate", this.listener, false);
		            document.body.style.overflow = '';
		            t.props.onExit();
		        }
		    }, {
		        key: 'onHistorySelect',
		        value: function onHistorySelect(value) {
		            var t = this;
		            t.setState({
		                keyword: value
		            }, function () {
		                t.doSearch('history');
		            });
		        }
		    }, {
		        key: 'renderHistory',
		        value: function renderHistory() {
		            var t = this;
		            if (!t.props.hasHistory) {
		                return null;
		            }
		            return React.createElement(SearchHistory, { ref: 'history',
		                locale: t.props.locale,
		                name: t.props.historyName,
		                className: classnames({ 'active': !t.state.keyword }),
		                onSelect: t.onHistorySelect.bind(t)
		            });
		        }
		    }, {
		        key: 'renderResult',
		        value: function renderResult() {
		            var t = this;
		            return React.createElement(
		                'div',
		                { className: classnames(Context.prefixClass('search-bar-result'), {
		                        'active': t.state.keyword
		                    }) },
		                t.props.children
		            );
		        }
		    }, {
		        key: 'render',
		        value: function render() {
		            var _classnames;
		
		            var t = this;
		            var i18n = locale[t.props.locale];
		            var placeholder = t.props.placeholder;
		            if ((typeof placeholder === 'undefined' ? 'undefined' : _typeof(placeholder)) === 'object' && placeholder !== null) {
		                placeholder = placeholder[t.props.locale];
		            }
		            return React.createElement(
		                'div',
		                { ref: 'root', className: classnames(Context.prefixClass('search-bar'), (_classnames = {}, _defineProperty(_classnames, t.props.className, !!t.props.className), _defineProperty(_classnames, t.props.locale, !!t.props.locale), _defineProperty(_classnames, 'active', t.state.isActive), _classnames)) },
		                React.createElement(
		                    'div',
		                    { className: classnames(Context.prefixClass('search-bar-wrapper'), _defineProperty({}, t.props.className, !!t.props.className)) },
		                    React.createElement(
		                        'div',
		                        { className: Context.prefixClass('search-bar-box') },
		                        t.state.isActive ? null : React.createElement(
		                            'div',
		                            { className: Context.prefixClass('search-bar-holder-wrapper'),
		                                onClick: t.enterSearch.bind(t) },
		                            React.createElement(
		                                'div',
		                                { className: Context.prefixClass('search-bar-holder') },
		                                React.createElement(Icon, { name: 'search', className: Context.prefixClass('search-bar-icon-search'),
		                                    width: this.props.iconWidth, height: this.props.iconHeight,
		                                    fill: this.props.iconColor }),
		                                placeholder
		                            )
		                        ),
		                        React.createElement(Icon, { name: 'search', className: Context.prefixClass('search-bar-icon-search'),
		                            width: this.props.iconWidth, height: this.props.iconHeight, fill: this.props.iconColor }),
		                        React.createElement(
		                            'form',
		                            { action: 'javascript:void(0)' },
		                            React.createElement('input', { ref: 'input', type: 'search',
		                                className: Context.prefixClass('search-bar-input'),
		                                value: t.state.keyword,
		                                onChange: t.onChange.bind(t),
		                                onKeyUp: t.onKeyUp.bind(t),
		                                placeholder: t.state.isActive ? placeholder : '' })
		                        ),
		                        React.createElement(Icon, { name: 'cross-round', onClick: t.clearKeyword.bind(t),
		                            className: classnames(Context.prefixClass('search-bar-icon-cross'), {
		                                'active': t.state.keyword
		                            }),
		                            width: this.props.iconWidth, height: this.props.iconHeight, fill: this.props.iconColor })
		                    ),
		                    React.createElement(
		                        'span',
		                        { className: Context.prefixClass('search-bar-btn'),
		                            onClick: t.exitSearch.bind(t)
		                        },
		                        i18n['cancel']
		                    )
		                ),
		                t.state.isActive ? React.createElement(
		                    'div',
		                    { className: Context.prefixClass('search-bar-list') },
		                    t.renderHistory(),
		                    t.renderResult()
		                ) : null
		            );
		        }
		    }]);
		
		    return SearchBar;
		}(React.Component);
		
		var noop = function noop() {};
		
		SearchBar.defaultProps = {
		    iconWidth: 20,
		    iconHeight: 20,
		    iconColor: "#bcbcbc",
		    locale: 'zh_CN',
		    placeholder: {
		        'zh_CN': '搜索',
		        'en_US': 'Search'
		    },
		    hasHistory: true,
		    instantSearch: true, // whether trigger search when  input change
		    searchDelay: 350, // debounce time for search action
		    disabled: false,
		    onChange: noop,
		    onSearch: noop,
		    onEnter: noop,
		    onExit: noop
		};
		
		// http://facebook.github.io/react/docs/reusable-components.html
		SearchBar.propTypes = {
		    locale: React.PropTypes.string,
		    placeholder: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.object]),
		    hasHistory: React.PropTypes.bool,
		    historyName: React.PropTypes.string,
		    instantSearch: React.PropTypes.bool,
		    searchDelay: React.PropTypes.number,
		    onChange: React.PropTypes.func,
		    onSearch: React.PropTypes.func,
		    onEnter: React.PropTypes.func,
		    onExit: React.PropTypes.func,
		    disabled: React.PropTypes.bool
		};
		
		SearchBar.displayName = 'SearchBar';
		
		module.exports = SearchBar;
		
	
	
	/***/ },
	/* 127 */
	/***/ function(module, exports, __webpack_require__) {
	
		var isObject = __webpack_require__(38),
		    now = __webpack_require__(128),
		    toNumber = __webpack_require__(129);
		
		/** Error message constants. */
		var FUNC_ERROR_TEXT = 'Expected a function';
		
		/* Built-in method references for those with the same name as other `lodash` methods. */
		var nativeMax = Math.max,
		    nativeMin = Math.min;
		
		/**
		 * Creates a debounced function that delays invoking `func` until after `wait`
		 * milliseconds have elapsed since the last time the debounced function was
		 * invoked. The debounced function comes with a `cancel` method to cancel
		 * delayed `func` invocations and a `flush` method to immediately invoke them.
		 * Provide `options` to indicate whether `func` should be invoked on the
		 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
		 * with the last arguments provided to the debounced function. Subsequent
		 * calls to the debounced function return the result of the last `func`
		 * invocation.
		 *
		 * **Note:** If `leading` and `trailing` options are `true`, `func` is
		 * invoked on the trailing edge of the timeout only if the debounced function
		 * is invoked more than once during the `wait` timeout.
		 *
		 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
		 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
		 *
		 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
		 * for details over the differences between `_.debounce` and `_.throttle`.
		 *
		 * @static
		 * @memberOf _
		 * @since 0.1.0
		 * @category Function
		 * @param {Function} func The function to debounce.
		 * @param {number} [wait=0] The number of milliseconds to delay.
		 * @param {Object} [options={}] The options object.
		 * @param {boolean} [options.leading=false]
		 *  Specify invoking on the leading edge of the timeout.
		 * @param {number} [options.maxWait]
		 *  The maximum time `func` is allowed to be delayed before it's invoked.
		 * @param {boolean} [options.trailing=true]
		 *  Specify invoking on the trailing edge of the timeout.
		 * @returns {Function} Returns the new debounced function.
		 * @example
		 *
		 * // Avoid costly calculations while the window size is in flux.
		 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
		 *
		 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
		 * jQuery(element).on('click', _.debounce(sendMail, 300, {
		 *   'leading': true,
		 *   'trailing': false
		 * }));
		 *
		 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
		 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
		 * var source = new EventSource('/stream');
		 * jQuery(source).on('message', debounced);
		 *
		 * // Cancel the trailing debounced invocation.
		 * jQuery(window).on('popstate', debounced.cancel);
		 */
		function debounce(func, wait, options) {
		  var lastArgs,
		      lastThis,
		      maxWait,
		      result,
		      timerId,
		      lastCallTime,
		      lastInvokeTime = 0,
		      leading = false,
		      maxing = false,
		      trailing = true;
		
		  if (typeof func != 'function') {
		    throw new TypeError(FUNC_ERROR_TEXT);
		  }
		  wait = toNumber(wait) || 0;
		  if (isObject(options)) {
		    leading = !!options.leading;
		    maxing = 'maxWait' in options;
		    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
		    trailing = 'trailing' in options ? !!options.trailing : trailing;
		  }
		
		  function invokeFunc(time) {
		    var args = lastArgs,
		        thisArg = lastThis;
		
		    lastArgs = lastThis = undefined;
		    lastInvokeTime = time;
		    result = func.apply(thisArg, args);
		    return result;
		  }
		
		  function leadingEdge(time) {
		    // Reset any `maxWait` timer.
		    lastInvokeTime = time;
		    // Start the timer for the trailing edge.
		    timerId = setTimeout(timerExpired, wait);
		    // Invoke the leading edge.
		    return leading ? invokeFunc(time) : result;
		  }
		
		  function remainingWait(time) {
		    var timeSinceLastCall = time - lastCallTime,
		        timeSinceLastInvoke = time - lastInvokeTime,
		        result = wait - timeSinceLastCall;
		
		    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
		  }
		
		  function shouldInvoke(time) {
		    var timeSinceLastCall = time - lastCallTime,
		        timeSinceLastInvoke = time - lastInvokeTime;
		
		    // Either this is the first call, activity has stopped and we're at the
		    // trailing edge, the system time has gone backwards and we're treating
		    // it as the trailing edge, or we've hit the `maxWait` limit.
		    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
		      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
		  }
		
		  function timerExpired() {
		    var time = now();
		    if (shouldInvoke(time)) {
		      return trailingEdge(time);
		    }
		    // Restart the timer.
		    timerId = setTimeout(timerExpired, remainingWait(time));
		  }
		
		  function trailingEdge(time) {
		    timerId = undefined;
		
		    // Only invoke if we have `lastArgs` which means `func` has been
		    // debounced at least once.
		    if (trailing && lastArgs) {
		      return invokeFunc(time);
		    }
		    lastArgs = lastThis = undefined;
		    return result;
		  }
		
		  function cancel() {
		    if (timerId !== undefined) {
		      clearTimeout(timerId);
		    }
		    lastInvokeTime = 0;
		    lastArgs = lastCallTime = lastThis = timerId = undefined;
		  }
		
		  function flush() {
		    return timerId === undefined ? result : trailingEdge(now());
		  }
		
		  function debounced() {
		    var time = now(),
		        isInvoking = shouldInvoke(time);
		
		    lastArgs = arguments;
		    lastThis = this;
		    lastCallTime = time;
		
		    if (isInvoking) {
		      if (timerId === undefined) {
		        return leadingEdge(lastCallTime);
		      }
		      if (maxing) {
		        // Handle invocations in a tight loop.
		        timerId = setTimeout(timerExpired, wait);
		        return invokeFunc(lastCallTime);
		      }
		    }
		    if (timerId === undefined) {
		      timerId = setTimeout(timerExpired, wait);
		    }
		    return result;
		  }
		  debounced.cancel = cancel;
		  debounced.flush = flush;
		  return debounced;
		}
		
		module.exports = debounce;
	
	
	/***/ },
	/* 128 */
	/***/ function(module, exports, __webpack_require__) {
	
		var root = __webpack_require__(17);
		
		/**
		 * Gets the timestamp of the number of milliseconds that have elapsed since
		 * the Unix epoch (1 January 1970 00:00:00 UTC).
		 *
		 * @static
		 * @memberOf _
		 * @since 2.4.0
		 * @category Date
		 * @returns {number} Returns the timestamp.
		 * @example
		 *
		 * _.defer(function(stamp) {
		 *   console.log(_.now() - stamp);
		 * }, _.now());
		 * // => Logs the number of milliseconds it took for the deferred invocation.
		 */
		var now = function() {
		  return root.Date.now();
		};
		
		module.exports = now;
	
	
	/***/ },
	/* 129 */
	/***/ function(module, exports, __webpack_require__) {
	
		var isObject = __webpack_require__(38),
		    isSymbol = __webpack_require__(130);
		
		/** Used as references for various `Number` constants. */
		var NAN = 0 / 0;
		
		/** Used to match leading and trailing whitespace. */
		var reTrim = /^\s+|\s+$/g;
		
		/** Used to detect bad signed hexadecimal string values. */
		var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
		
		/** Used to detect binary string values. */
		var reIsBinary = /^0b[01]+$/i;
		
		/** Used to detect octal string values. */
		var reIsOctal = /^0o[0-7]+$/i;
		
		/** Built-in method references without a dependency on `root`. */
		var freeParseInt = parseInt;
		
		/**
		 * Converts `value` to a number.
		 *
		 * @static
		 * @memberOf _
		 * @since 4.0.0
		 * @category Lang
		 * @param {*} value The value to process.
		 * @returns {number} Returns the number.
		 * @example
		 *
		 * _.toNumber(3.2);
		 * // => 3.2
		 *
		 * _.toNumber(Number.MIN_VALUE);
		 * // => 5e-324
		 *
		 * _.toNumber(Infinity);
		 * // => Infinity
		 *
		 * _.toNumber('3.2');
		 * // => 3.2
		 */
		function toNumber(value) {
		  if (typeof value == 'number') {
		    return value;
		  }
		  if (isSymbol(value)) {
		    return NAN;
		  }
		  if (isObject(value)) {
		    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
		    value = isObject(other) ? (other + '') : other;
		  }
		  if (typeof value != 'string') {
		    return value === 0 ? value : +value;
		  }
		  value = value.replace(reTrim, '');
		  var isBinary = reIsBinary.test(value);
		  return (isBinary || reIsOctal.test(value))
		    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
		    : (reIsBadHex.test(value) ? NAN : +value);
		}
		
		module.exports = toNumber;
	
	
	/***/ },
	/* 130 */
	/***/ function(module, exports, __webpack_require__) {
	
		var baseGetTag = __webpack_require__(15),
		    isObjectLike = __webpack_require__(21);
		
		/** `Object#toString` result references. */
		var symbolTag = '[object Symbol]';
		
		/**
		 * Checks if `value` is classified as a `Symbol` primitive or object.
		 *
		 * @static
		 * @memberOf _
		 * @since 4.0.0
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
		 * @example
		 *
		 * _.isSymbol(Symbol.iterator);
		 * // => true
		 *
		 * _.isSymbol('abc');
		 * // => false
		 */
		function isSymbol(value) {
		  return typeof value == 'symbol' ||
		    (isObjectLike(value) && baseGetTag(value) == symbolTag);
		}
		
		module.exports = isSymbol;
	
	
	/***/ },
	/* 131 */
	/***/ function(module, exports) {
	
		'use strict';
		
		var locale = {
		    'zh_CN': {
		        'cancel': '取消',
		        'clear': '清空',
		        'history': '搜索历史'
		    },
		    'en_US': {
		        'cancel': 'Cancel',
		        'clear': 'Clear',
		        'history': 'Search History'
		    }
		};
		
		module.exports = locale;
		
	
	
	/***/ },
	/* 132 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		/**
		 * SearchHistory Component for tingle
		 * @author zhouquan.yezq
		 *
		 * Copyright 2014-2016, Tingle Team.
		 * All rights reserved.
		 */
		var classnames = __webpack_require__(45);
		var debounce = __webpack_require__(127);
		
		var Context = __webpack_require__(47);
		var locale = __webpack_require__(131);
		
		var Storage = {
		
		    _toJSON: function _toJSON(data) {
		        return JSON.stringify(data);
		    },
		
		    _fromJSON: function _fromJSON(data) {
		        try {
		            data = JSON.parse(data);
		        } catch (e) {
		            data = null;
		        }
		        return data;
		    },
		
		    getItem: function getItem(key) {
		        return this._fromJSON(localStorage.getItem(key));
		    },
		
		    setItem: function setItem(key, data) {
		        return localStorage.setItem(key, this._toJSON(data));
		    },
		
		    removeItem: function removeItem(key) {
		        localStorage.removeItem(key);
		    }
		};
		
		var SearchHistory = function (_React$Component) {
		    _inherits(SearchHistory, _React$Component);
		
		    function SearchHistory(props) {
		        _classCallCheck(this, SearchHistory);
		
		        var _this = _possibleConstructorReturn(this, (SearchHistory.__proto__ || Object.getPrototypeOf(SearchHistory)).call(this, props));
		
		        _this.state = {};
		        _this.HISTORY_KEY = props.name;
		        return _this;
		    }
		
		    _createClass(SearchHistory, [{
		        key: 'getHistory',
		        value: function getHistory() {
		            var list = Storage.getItem(this.HISTORY_KEY) || [];
		            return list.slice(0, this.props.displayCount);
		        }
		    }, {
		        key: 'addItem',
		        value: function addItem(keyword) {
		            // add new history item
		            var t = this;
		            var list = t.getHistory();
		            var index = list.indexOf(keyword);
		            if (index !== -1) {
		                list.splice(index, 1);
		            }
		            list.unshift(keyword);
		            Storage.setItem(t.HISTORY_KEY, list);
		        }
		    }, {
		        key: 'clearHistory',
		        value: function clearHistory() {
		            var t = this;
		            Storage.removeItem(t.HISTORY_KEY);
		            this.setState({
		                historyList: []
		            });
		        }
		    }, {
		        key: 'onSelect',
		        value: function onSelect(keyword) {
		            this.props.onSelect && this.props.onSelect(keyword);
		        }
		    }, {
		        key: 'render',
		        value: function render() {
		            var t = this;
		            var list = t.getHistory();
		            if (list.length === 0) {
		                return null;
		            }
		            var i18n = locale[t.props.locale];
		            return React.createElement(
		                'div',
		                { className: classnames(Context.prefixClass('search-bar-history'), t.props.className) },
		                React.createElement(
		                    'div',
		                    { className: Context.prefixClass('search-bar-history-header') },
		                    i18n['history'],
		                    React.createElement(
		                        'span',
		                        { className: Context.prefixClass('search-bar-history-action'),
		                            onClick: t.clearHistory.bind(t) },
		                        i18n['clear']
		                    )
		                ),
		                React.createElement(
		                    'ul',
		                    { className: Context.prefixClass('search-bar-history-list') },
		                    list.map(function (item, idx) {
		                        return React.createElement(
		                            'li',
		                            { key: idx },
		                            React.createElement(
		                                'span',
		                                { onClick: t.onSelect.bind(t, item) },
		                                item
		                            )
		                        );
		                    })
		                )
		            );
		        }
		    }]);
		
		    return SearchHistory;
		}(React.Component);
		
		SearchHistory.defaultProps = {
		    name: 'SEARCH_BAR_HISTORY',
		    keyword: '',
		    displayCount: 8
		};
		
		// http://facebook.github.io/react/docs/reusable-components.html
		SearchHistory.propTypes = {
		    onSelect: React.PropTypes.func,
		    name: React.PropTypes.string,
		    keyword: React.PropTypes.string,
		    displayCount: React.PropTypes.number
		};
		
		SearchHistory.displayName = 'SearchHistory';
		
		module.exports = SearchHistory;
		
	
	
	/***/ },
	/* 133 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		/**
		 * SelectField Component Style for tingle
		 * @author caoke.ck
		 *
		 * Copyright 2014-2016, Tingle Team, Alinw.
		 * All rights reserved.
		 */
		
		module.exports = __webpack_require__(134);
		
	
	
	/***/ },
	/* 134 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		/**
		 * SelectField Component for tingle
		 * @author caoke.ck
		 *
		 * Copyright 2014-2016, Tingle Team.
		 * All rights reserved.
		 */
		var React = __webpack_require__(2);
		var classnames = __webpack_require__(45);
		var Context = __webpack_require__(47);
		var Slot = __webpack_require__(82);
		var Icon = __webpack_require__(89);
		var Field = __webpack_require__(87);
		
		var SelectField = function (_React$Component) {
		    _inherits(SelectField, _React$Component);
		
		    function SelectField(props) {
		        _classCallCheck(this, SelectField);
		
		        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(SelectField).call(this, props));
		
		        var t = _this;
		        var value = props.value;
		        t.state = {
		            value: [value],
		            confirmedValue: [value]
		        };
		        return _this;
		    }
		
		    // 外部变更选中值
		
		
		    _createClass(SelectField, [{
		        key: 'componentWillReceiveProps',
		        value: function componentWillReceiveProps(nextProps) {
		            var t = this;
		            var value = nextProps.value;
		            t.setState({
		                value: [value],
		                confirmedValue: [value]
		            });
		        }
		    }, {
		        key: 'handleClick',
		        value: function handleClick() {
		            var t = this;
		            !t.props.readOnly && t.refs.slot.show();
		        }
		    }, {
		        key: 'handleChange',
		        value: function handleChange(value) {
		            this.setState({
		                value: value
		            });
		        }
		    }, {
		        key: 'handleConfirm',
		        value: function handleConfirm(value) {
		            this.props.onSelect(value[0]);
		        }
		    }, {
		        key: 'handleCancel',
		        value: function handleCancel() {
		            var t = this;
		            t.setState({
		                value: t.state.confirmedValue
		            });
		        }
		    }, {
		        key: 'render',
		        value: function render() {
		            var t = this;
		            return React.createElement(
		                Field,
		                _extends({}, t.props, { icon: {
		                        className: Context.prefixClass('select-field-icon'),
		                        name: 'angle-right',
		                        width: 26,
		                        height: 26,
		                        onClick: t.handleClick.bind(t)
		                    },
		                    className: classnames(Context.prefixClass('select-field'), _defineProperty({}, t.props.className, !!t.props.className)) }),
		                React.createElement(
		                    'div',
		                    { onClick: t.handleClick.bind(t) },
		                    !t.state.confirmedValue[0] ? React.createElement(
		                        'div',
		                        { className: Context.prefixClass('omit select-field-placeholder') },
		                        t.props.placeholder
		                    ) : '',
		                    React.createElement(
		                        'div',
		                        { className: Context.prefixClass('select-field-value FBH FBAC') },
		                        React.createElement(
		                            'span',
		                            { className: classnames(Context.prefixClass('FB1 omit'), _defineProperty({}, Context.prefixClass('select-field-readonly'), !!t.props.readOnly)) },
		                            t.props.formatter(t.state.confirmedValue[0])
		                        )
		                    )
		                ),
		                React.createElement(Slot, { ref: 'slot', title: t.props.label, confirmText: t.props.confirmText, cancelText: t.props.cancelText, data: [t.props.options], value: t.state.value, onChange: t.handleChange.bind(t), onCancel: t.handleCancel.bind(t), onConfirm: t.handleConfirm.bind(t) })
		            );
		        }
		    }]);
		
		    return SelectField;
		}(React.Component);
		
		SelectField.defaultProps = {
		    options: [],
		    formatter: function formatter(value) {
		        return value ? value.text : '';
		    },
		    onSelect: function onSelect() {},
		    readOnly: false,
		    placeholder: ''
		};
		
		// http://facebook.github.io/react/docs/reusable-components.html
		SelectField.propTypes = {
		    className: React.PropTypes.string,
		    label: React.PropTypes.string.isRequired,
		    options: React.PropTypes.array.isRequired,
		    value: React.PropTypes.object,
		    formatter: React.PropTypes.func,
		    onSelect: React.PropTypes.func,
		    readOnly: React.PropTypes.bool,
		    placeholder: React.PropTypes.string
		};
		
		SelectField.displayName = "SelectField";
		
		module.exports = SelectField;
		
	
	
	/***/ },
	/* 135 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		/**
		 * ScrollList Component Style for tingle
		 * @author zhouquan.yezq
		 *
		 * Copyright 2014-2016, Tingle Team, Alinw.
		 * All rights reserved.
		 */
		
		module.exports = __webpack_require__(136);
	
	/***/ },
	/* 136 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _PushLoader = __webpack_require__(137);
		
		var _PushLoader2 = _interopRequireDefault(_PushLoader);
		
		var _PullLoader = __webpack_require__(138);
		
		var _PullLoader2 = _interopRequireDefault(_PullLoader);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		/**
		 * ScrollList Component for tingle
		 * @author zhouquan.yezq
		 *
		 * Copyright 2014-2016, Tingle Team.
		 * All rights reserved.
		 */
		
		var classnames = __webpack_require__(45);
		var Context = __webpack_require__(47);
		var ReactIScroll = __webpack_require__(139);
		var iScroll = __webpack_require__(140);
		var _React = React;
		var PropTypes = _React.PropTypes;
		
		var DataSourceParser = __webpack_require__(141);
		var equal = __webpack_require__(73);
		var assign = __webpack_require__(144);
		var _ = __webpack_require__(146);
		
		
		var LS = window.localStorage || {};
		var LS_CACHE_KEY = 'SCROLL_LIST_CACHE_KEY_';
		
		var ScrollList = function (_React$Component) {
		    _inherits(ScrollList, _React$Component);
		
		    function ScrollList(props) {
		        _classCallCheck(this, ScrollList);
		
		        // 用于缓存的 ID
		        var _this = _possibleConstructorReturn(this, (ScrollList.__proto__ || Object.getPrototypeOf(ScrollList)).call(this, props));
		
		        _this.cacheId = props.cacheId;
		        _this.needFirstScreenCache = props.needFirstScreenCache;
		        _this.page = props.page || 0;
		        _this.pageSize = props.pageSize || 10;
		        _this.params = props.params;
		        _this.lastPage = _this.page;
		        _this.state = {
		            data: [],
		            pushLoaderDataGetted: false, // 已经加载过数据
		            pushLoaderStatus: 'default',
		            pullLoaderStatus: 'default',
		            scrollInnerMinHeight: '101%',
		            cachedChildren: {},
		            showTip: true
		        };
		
		        _this.noData = false;
		        return _this;
		    }
		
		    _createClass(ScrollList, [{
		        key: 'gFunction',
		        value: function gFunction(fbody) {
		            var eventHandler = fbody;
		            var code = '\n            var __cb = ' + eventHandler + ';\n            if (typeof __cb === \'function\') {\n                return __cb(d);\n            }\n            __cb = null;\n            ';
		            return new Function('d', code);
		        }
		    }, {
		        key: 'clearCache',
		        value: function clearCache() {
		            this.state.cachedChildren = {};
		        }
		    }, {
		        key: 'componentDidMount',
		        value: function componentDidMount() {
		            var _this2 = this;
		
		            var dataSource = this.props.dataSource;
		
		            this.parser = DataSourceParser(dataSource, {
		                willFetch: function willFetch(vars, config) {
		                    var _d = vars.data;
		
		                    var page = _this2.page;
		                    var pageSize = _this2.pageSize;
		
		                    //参数中添加this.params中的内容,从props.params中同步
		                    assign(_d, _this2.params || {});
		
		                    _d.currentPage = page; //遵守之前的标准
		                    _d.pageSize = pageSize; //遵守之前的标准
		
		                    if (typeof dataSource.willFetch == 'string') {
		                        dataSource.willFetch = _this2.gFunction(dataSource.willFetch);
		                    }
		                    vars.data = dataSource.willFetch(_d || {});
		                }
		            });
		            if (!this.props.scrollLoad) {
		                this.refs.iscroll.withIScroll(function (iscroll) {
		                    iscroll.disable();
		                });
		            }
		
		            this.refs.iscroll.withIScroll(function (instance) {
		                _this2.refs.pullLoader.acceptIScrollInstance(instance);
		                _this2.refs.pushLoader.acceptIScrollInstance(instance);
		            });
		
		            var offsetHeight = this.refs.root.offsetHeight;
		            this.setState({
		                scrollInnerMinHeight: (offsetHeight ? offsetHeight : this.props.listHeight) + 54
		            });
		        }
		    }, {
		        key: 'componentWillReceiveProps',
		        value: function componentWillReceiveProps(nextProps) {
		            if (!equal(this.props.params, nextProps.params)) {
		                this.params = nextProps.params;
		                //this.page = nextProps.params.currentPage || this.page;
		                this.pageSize = nextProps.params.pageSize || this.pageSize;
		                this.onReload();
		            }
		        }
		    }, {
		        key: 'fetchData',
		        value: function fetchData() {
		            var me = this;
		            return new Promise(function (resolve, reject) {
		                if (!me.parser) {
		                    reject();
		                    return false;
		                }
		
		                me.parser(me.props).then(function (content) {
		                    if (me.isNoData(content)) {
		                        me.noData = true;
		                    }
		
		                    resolve(content);
		                }, reject);
		            });
		        }
		    }, {
		        key: 'isNoData',
		        value: function isNoData(content) {
		            return !_.isArray(content) || _.isEmpty(content);
		        }
		
		        // iterate the data & render the child attach with props
		        // note the repeat just accept the one root child
		
		    }, {
		        key: 'renderChild',
		        value: function renderChild() {
		            try {
		                var props = this.props,
		                    child = props.children,
		                    rchild = void 0,
		                    oChild = void 0,
		                    _data = this.state.data;
		
		                if (!props.children || props.children.length < 1) {
		                    return null;
		                }
		
		                rchild = child.length ? child.slice(-1)[0] : child;
		
		                if (_data && _data instanceof Array) {
		                    return React.createElement(
		                        'div',
		                        { className: '' },
		                        this.renderOtherChild(oChild),
		                        this.repeatChild(_data, rchild)
		                    );
		                }
		            } catch (e) {
		                console.info(e);
		            }
		        }
		
		        // ScrollList会接受多个child,但只会对最后一个child使用iscroll渲染,其它child正常渲染
		
		    }, {
		        key: 'renderOtherChild',
		        value: function renderOtherChild() {
		            var child = this.props.children;
		            if (child.length) {
		                child = child.slice(0, child.length - 1);
		            } else {
		                child = [];
		            }
		            return child.map(function (item, index) {
		                return React.cloneElement(item, {
		                    key: index,
		                    index: index
		                });
		            });
		        }
		    }, {
		        key: 'repeatChild',
		        value: function repeatChild(_data, child) {
		            var cache = this.props.cache;
		            var cached = this.state.cachedChildren;
		
		            return _data.map(cache ? function (item, index) {
		                if (!cached[index]) {
		                    cached[index] = React.cloneElement(child, _extends({
		                        key: index,
		                        index: index,
		                        first: index == 0,
		                        last: index == _data.length - 1,
		                        odd: (index + 1) % 2 !== 0,
		                        data: item
		                    }, item));
		                }
		                return cached[index];
		            } : function (item, index) {
		                return React.cloneElement(child, _extends({
		                    key: index,
		                    index: index,
		                    first: index == 0,
		                    last: index == _data.length - 1,
		                    odd: (index + 1) % 2 !== 0,
		                    data: item
		                }, item));
		            });
		        }
		    }, {
		        key: 'onScrollRefresh',
		        value: function onScrollRefresh() {
		            this.refs.pullLoader.resetPositionIfNeeded();
		        }
		    }, {
		        key: 'render',
		        value: function render() {
		            var iScrollOptions = this.props.options;
		
		            return React.createElement(
		                'div',
		                { ref: 'root', className: classnames(Context.prefixClass('scroll-list'), _defineProperty({}, this.props.className, !!this.props.className)) },
		                React.createElement(
		                    ReactIScroll,
		                    {
		                        key: 'iscroll',
		                        ref: 'iscroll',
		                        iScroll: iScroll,
		                        options: iScrollOptions,
		                        onRefresh: this.onScrollRefresh.bind(this)
		                    },
		                    React.createElement(
		                        'div',
		                        {
		                            ref: 'inner',
		                            className: Context.prefixClass('scroll-list-inner'),
		                            style: { 'minHeight': this.state.scrollInnerMinHeight }
		                        },
		                        React.createElement(_PullLoader2.default, _extends({
		                            ref: 'pullLoader'
		                        }, this.props, {
		                            status: this.state.pullLoaderStatus,
		                            onPullLoad: this.onReload.bind(this)
		                        })),
		                        this.renderChild(),
		                        React.createElement(_PushLoader2.default, _extends({ ref: 'pushLoader'
		                        }, this.props, {
		                            dataGetted: this.state.pushLoaderDataGetted,
		                            allData: this.state.data,
		                            status: this.state.pushLoaderStatus,
		                            pullStatus: this.state.pullLoaderStatus,
		                            showTip: this.state.showTip,
		                            onLoadMore: this.loadMore.bind(this) }))
		                    )
		                )
		            );
		        }
		
		        // 在顶部下拉重新加载数据
		
		    }, {
		        key: 'onReload',
		        value: function onReload(loaded) {
		            var _this3 = this;
		
		            this.noData = false;
		            this.lastPage = this.page;
		            this.page = 1;
		
		            this.setState({
		                pushLoaderStatus: 'loading',
		                pullLoaderStatus: this.state.pushLoaderDataGetted ? 'loading' : 'default'
		            });
		
		            this.fetchData().then(function (data) {
		                loaded && loaded();
		
		                _this3.clearCache();
		                _this3.setState({
		                    pullLoaderStatus: '',
		                    data: data || [],
		                    pushLoaderDataGetted: true,
		                    showTip: true,
		                    pushLoaderStatus: data.length ? 'default' : 'nodata'
		                }, function () {
		                    var showTip = _this3.state.scrollInnerMinHeight < _this3.refs.inner.offsetHeight - 54;
		                    if (showTip) {
		                        _this3.refs.pushLoader.maybeVisible();
		                    } else {
		                        _this3.setState({
		                            showTip: false
		                        });
		                    }
		                });
		            }, function (err) {
		                _this3.page = _this3.lastPage;
		                _this3.setState({
		                    pullLoaderStatus: ''
		                });
		
		                console.log(err);
		            });
		        }
		
		        // 在底部上拉加载下一屏数据
		
		    }, {
		        key: 'loadMore',
		        value: function loadMore(loaded) {
		            var _this4 = this;
		
		            //加载下一页数据
		            if (this.noData) {
		                return false;
		            }
		
		            var isFirstPage = this.page === 0;
		            this.lastPage = this.page;
		            this.page = this.page + 1;
		
		            this.setState({
		                pushLoaderStatus: 'loading'
		            });
		
		            if (isFirstPage && this.needFirstScreenCache) {
		                try {
		                    var cachedData = JSON.parse(LS.getItem('' + LS_CACHE_KEY + this.cacheId));
		                    if (cachedData && cachedData.length) {
		                        this.setState({
		                            data: cachedData,
		                            pushLoaderStatus: 'default',
		                            pushLoaderDataGetted: true
		                        }, function () {
		                            // should clear children cache to avoid bug.
		                            _this4.clearCache();
		                        });
		                    }
		                } catch (e) {
		                    console.error(e.stack);
		                }
		            }
		
		            this.fetchData().then(function (data) {
		                loaded && loaded(!data.length);
		                _this4.setState({
		                    data: isFirstPage && _this4.needFirstScreenCache ? data : _.concat([], _this4.state.data, data),
		                    pushLoaderStatus: !data.length ? 'nodata' : 'default',
		                    pushLoaderDataGetted: true,
		                    showTip: _this4.state.scrollInnerMinHeight < _this4.refs.inner.offsetHeight - 54
		                });
		                try {
		                    if (isFirstPage && _this4.needFirstScreenCache) {
		                        LS.setItem('' + LS_CACHE_KEY + _this4.cacheId, JSON.stringify(data));
		                    }
		                } catch (e) {
		                    console.error(e.stack);
		                }
		            }, function (err) {
		                _this4.page = _this4.lastPage;
		                _this4.setState({
		                    pushLoaderStatus: 'error'
		                });
		                console.log(err);
		            });
		        }
		    }]);
		
		    return ScrollList;
		}(React.Component);
		
		ScrollList.defaultProps = {
		    className: '',
		    params: {},
		    options: {
		        //iscroll 默认屏蔽内部的 click 事件，先简单使用这种方式解决 chrome 和 Android 无法点击的问题
		        //后面要使用这种方式改进 `addEventListener('iscroll:tap', function(e) {})`
		        click: /chrome/i.test(navigator.userAgent),
		        scrollbars: false,
		        // y: -24
		        probeType: 3
		    },
		    scrollLoad: true, // 是否支持滚动,来自设计器配置
		    pageSize: 10,
		    //beforeFetch: x => {},
		    loadingTip: '加载中...',
		    noDataTip: '暂无数据',
		    noDataImage: 'https://img.alicdn.com/tps/TB1K6mHNpXXXXXiXpXXXXXXXXXX-1000-1000.svg',
		    noMoreDataTip: '没有更多了',
		    pullLoadTip: '下拉显示更多',
		    pushLoadTip: '上拉显示更多',
		    errorTip: '获取数据失败',
		    cache: true,
		    needFirstScreenCache: false
		};
		
		// http://facebook.github.io/react/docs/reusable-components.html
		ScrollList.propTypes = {
		    className: PropTypes.string,
		    scrollLoad: PropTypes.bool,
		    //beforeFetch: PropTypes.func,
		    loadingTip: PropTypes.string,
		    noDataTip: PropTypes.string,
		    noDataImage: PropTypes.string,
		    noMoreDataTip: PropTypes.string,
		    pullLoadTip: PropTypes.string,
		    pushLoadTip: PropTypes.string,
		    errorTip: PropTypes.string,
		    pageSize: PropTypes.number,
		    params: PropTypes.object,
		    needFirstScreenCache: PropTypes.bool,
		    cacheId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
		    options: PropTypes.object,
		    cache: PropTypes.bool
		};
		
		ScrollList.displayName = 'ScrollList';
		
		module.exports = ScrollList;
	
	/***/ },
	/* 137 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _react = __webpack_require__(2);
		
		var _react2 = _interopRequireDefault(_react);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var classnames = __webpack_require__(45);
		
		var PushLoader = function (_React$Component) {
		    _inherits(PushLoader, _React$Component);
		
		    function PushLoader(props) {
		        _classCallCheck(this, PushLoader);
		
		        var _this = _possibleConstructorReturn(this, (PushLoader.__proto__ || Object.getPrototypeOf(PushLoader)).call(this, props));
		
		        _this.state = {
		            status: ''
		        };
		
		        _this.maybeVisible = _this.maybeVisible.bind(_this);
		        return _this;
		    }
		
		    _createClass(PushLoader, [{
		        key: 'acceptIScrollInstance',
		        value: function acceptIScrollInstance(iscroll) {
		            var _this2 = this;
		
		            if (this.iscroll && this.iscroll !== iscroll) {
		                this.detachScrollEvents();
		            }
		            this.iScroll = iscroll;
		            this.iScroll.on('scrollEnd', this.maybeVisible);
		            this._iscrollAttached = true;
		            setTimeout(function () {
		                _this2.maybeVisible();
		            });
		        }
		    }, {
		        key: 'detachScrollEvents',
		        value: function detachScrollEvents() {
		            if (this._iscrollAttached) {
		                this.iscroll.off('scrollEnd', this.maybeVisible);
		                this._iscrollAttached = false;
		            }
		        }
		
		        // 检测处于是否处于屏幕可见区域
		
		    }, {
		        key: 'detectVisible',
		        value: function detectVisible() {
		            var root = this.refs.root;
		            var scrollY = this.iScroll && this.iScroll.y || 0;
		            var scrollHeight = this.iScroll && this.iScroll.wrapperHeight || 0;
		            // console.log(scrollY, scrollHeight, root.parentNode.offsetHeight);
		            // 处于可见区域
		            return Math.abs(scrollY) + scrollHeight >= root.parentNode.offsetHeight - 20;
		        }
		    }, {
		        key: 'componentWillReceiveProps',
		        value: function componentWillReceiveProps(nextProps) {
		            if (this.props.status !== nextProps.status) {
		                this.setState({
		                    status: nextProps.status
		                });
		
		                // 从加载中的状态退出来,也就是一屏数据加载完成后,检测一下
		                if (this.props.status === 'loading' && (!nextProps.status || nextProps.status === 'default')) {
		                    this.maybeVisible();
		                }
		            }
		        }
		    }, {
		        key: 'componentDidMount',
		        value: function componentDidMount() {
		            // const me = this;
		            // this.maybeVisible();
		        }
		    }, {
		        key: 'maybeVisible',
		        value: function maybeVisible() {
		            var me = this;
		            var iscroll = me.iScroll;
		            var root = me.refs.root;
		            var pullLoaderHeight = 54;
		            var scrollBottom = -(root.parentNode.offsetHeight - iscroll.wrapperHeight - pullLoaderHeight);
		
		            if (me.props.showTip && iscroll.y < scrollBottom && scrollBottom <= 0) {
		                if (iscroll.y < scrollBottom - 30) {
		                    if (me.state.status !== 'error' && me.state.status !== 'nodata') {
		                        if (me.loading) {
		                            return;
		                        }
		                        me.loading = true;
		                        me.props.onLoadMore(function (nodata) {
		                            nodata && iscroll.scrollTo(0, scrollBottom);
		                            me.loading = false;
		                        });
		                    } else {
		                        setTimeout(function () {
		                            //没有数据或出错信息显示0.5秒后复原
		                            iscroll.scrollTo(0, scrollBottom > -pullLoaderHeight ? -pullLoaderHeight : scrollBottom);
		                        }, 500);
		                    }
		                } else {
		                    //往上推没有超过30px就直接复原
		                    iscroll.scrollTo(0, scrollBottom);
		                }
		            }
		        }
		    }, {
		        key: 'componentWillUnmount',
		        value: function componentWillUnmount() {
		            if (this.iScroll) {
		                this.iScroll.off('scrollEnd', this.maybeVisible);
		            }
		        }
		    }, {
		        key: 'render',
		        value: function render() {
		            var isDefault = this.state.status === 'default';
		            var isLoading = this.state.status === 'loading';
		            var isError = this.state.status === 'error';
		            var isNoData = this.state.status === 'nodata';
		            var isPullLoding = this.props.pullStatus === 'loading';
		
		            var icon = void 0;
		            var text = '';
		
		            // 全部数据为空,则显示空图片
		            if (this.props.dataGetted && !this.props.allData.length) {
		                icon = _react2.default.createElement('div', { className: 'empty-icon', style: { 'backgroundImage': 'url(' + this.props.noDataImage + ')' } });
		                text = this.props.noDataTip;
		            }
		
		            if (isLoading) {
		                icon = _react2.default.createElement('span', { className: 'loading' });
		                text = this.props.loadingTip;
		            }
		
		            if (isError) {
		                text = this.props.errorTip;
		            }
		
		            if (isNoData && this.props.allData.length && this.props.showTip) {
		                text = this.props.noMoreDataTip;
		            }
		
		            if (isDefault && this.props.showTip) {
		                text = this.props.pushLoadTip;
		            }
		
		            if (isPullLoding) {
		                icon = null;
		                text = null;
		            }
		
		            return _react2.default.createElement(
		                'div',
		                { ref: 'root', className: classnames({
		                        'loading-container': true,
		                        'push-loader': true,
		                        'error': isError,
		                        'nodata': isNoData,
		                        'loading': isLoading
		                    }) },
		                icon,
		                _react2.default.createElement(
		                    'span',
		                    { className: 'pushloader-text loading-word' },
		                    text
		                )
		            );
		        }
		    }]);
		
		    return PushLoader;
		}(_react2.default.Component);
		
		PushLoader.propTypes = {
		    status: _react2.default.PropTypes.string, // nodata error loading default
		    loadingTip: _react2.default.PropTypes.string,
		    noDataTip: _react2.default.PropTypes.string,
		    noMoreDataTip: _react2.default.PropTypes.string,
		    pushLoadTip: _react2.default.PropTypes.string,
		    errorTip: _react2.default.PropTypes.string
		};
		PushLoader.defaultProps = {
		    onLoadMore: function onLoadMore() {}
		};
		exports.default = PushLoader;
	
	/***/ },
	/* 138 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _react = __webpack_require__(2);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _reactDom = __webpack_require__(42);
		
		var _reactDom2 = _interopRequireDefault(_reactDom);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var classnames = __webpack_require__(45);
		
		var PullLoader = function (_React$Component) {
		    _inherits(PullLoader, _React$Component);
		
		    function PullLoader(props) {
		        _classCallCheck(this, PullLoader);
		
		        var _this = _possibleConstructorReturn(this, (PullLoader.__proto__ || Object.getPrototypeOf(PullLoader)).call(this, props));
		
		        _this.state = {
		            status: 'default'
		        };
		
		        _this.onScrollStart = _this.onScrollStart.bind(_this);
		        _this.onScrollEnd = _this.onScrollEnd.bind(_this);
		        return _this;
		    }
		
		    _createClass(PullLoader, [{
		        key: 'acceptIScrollInstance',
		        value: function acceptIScrollInstance(iscroll) {
		            // reset if accept new iscroll instance
		            if (this.iscroll && this.iscroll !== iscroll) {
		                this.detachScrollEvents();
		            }
		
		            this.iscroll = iscroll;
		            this.attachScrollEvents();
		            this.resetPosition();
		            this._iscrollAttached = true;
		        }
		    }, {
		        key: 'attachScrollEvents',
		        value: function attachScrollEvents() {
		            this.iscroll.on('scrollStart', this.onScrollStart);
		            this.iscroll.on('scrollEnd', this.onScrollEnd);
		        }
		    }, {
		        key: 'detachScrollEvents',
		        value: function detachScrollEvents() {
		            if (this._iscrollAttached) {
		                this.iscroll.off('scrollStart', this.onScrollStart);
		                this.iscroll.off('scrollEnd', this.onScrollEnd);
		                this._iscrollAttached = false;
		            }
		        }
		    }, {
		        key: 'getOffsetHeight',
		        value: function getOffsetHeight() {
		            var element = _reactDom2.default.findDOMNode(this);
		            var offsetHeight = element.offsetHeight;
		            return offsetHeight;
		        }
		    }, {
		        key: 'resetPosition',
		        value: function resetPosition() {
		            this.iscroll.scrollTo(0, this.getOffsetHeight() * -1, 0);
		        }
		    }, {
		        key: 'resetPositionIfNeeded',
		        value: function resetPositionIfNeeded() {
		            // todo
		            var iscroll = this.iscroll;
		            var offsetHeight = this.getOffsetHeight();
		            var y = iscroll.y;
		            var offsetY = offsetHeight * -1;
		            if (y > offsetY) {
		                var isLoading = this.props.status === 'loading';
		                if (!isLoading) {
		                    iscroll.scrollTo(0, offsetY);
		                }
		            }
		        }
		    }, {
		        key: 'onScrollStart',
		        value: function onScrollStart() {}
		    }, {
		        key: 'onScrollEnd',
		        value: function onScrollEnd() {
		            var me = this;
		            var iscroll = this.iscroll;
		            var pullLoaderHeight = 54;
		
		            if (iscroll.y > -12 && iscroll.directionY === -1) {
		                me.props.onPullLoad(function () {
		                    me.resetPosition();
		                });
		            } else if (iscroll.y > -pullLoaderHeight) {
		                me.resetPosition();
		            }
		        }
		    }, {
		        key: 'shouldComponentUpdate',
		        value: function shouldComponentUpdate(nextProps) {
		            return this.props.status !== nextProps.status;
		        }
		    }, {
		        key: 'componentDidUpdate',
		        value: function componentDidUpdate(prevProps) {
		            if (this.props.status !== prevProps.status) {
		
		                if (prevProps.status === 'loading') {
		                    this.resetPosition();
		                } else if (this.props.status === 'loading') {
		                    this.iscroll.scrollTo(0, 0);
		                }
		            }
		        }
		    }, {
		        key: 'componentWillUnmount',
		        value: function componentWillUnmount() {
		            this.detachScrollEvents();
		        }
		    }, {
		        key: 'render',
		        value: function render() {
		            var isLoading = this.props.status === 'loading';
		            var icon = void 0;
		            var text = this.props.pullLoadTip;
		            if (isLoading) {
		                icon = _react2.default.createElement('span', { className: 'loading' });
		                text = this.props.loadingTip;
		            }
		            return _react2.default.createElement(
		                'div',
		                { ref: 'root', className: classnames({
		                        'loading-container': true,
		                        'pull-loader': true
		                    }) },
		                icon,
		                _react2.default.createElement(
		                    'span',
		                    { ref: 'pullText', className: 'loading-word' },
		                    text
		                )
		            );
		        }
		    }]);
		
		    return PullLoader;
		}(_react2.default.Component);
		
		PullLoader.propTypes = {
		    status: _react2.default.PropTypes.string, // nodata error loading default
		    loadingTip: _react2.default.PropTypes.string
		};
		PullLoader.defaultProps = {
		    onPullLoad: function onPullLoad() {}
		};
		exports.default = PullLoader;
	
	/***/ },
	/* 139 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) {
		  for (var i = 1; i < arguments.length; i++) {
		    var source = arguments[i];for (var key in source) {
		      if (Object.prototype.hasOwnProperty.call(source, key)) {
		        target[key] = source[key];
		      }
		    }
		  }return target;
		};
		
		var _slicedToArray = function () {
		  function sliceIterator(arr, i) {
		    var _arr = [];var _n = true;var _d = false;var _e = undefined;try {
		      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
		        _arr.push(_s.value);if (i && _arr.length === i) break;
		      }
		    } catch (err) {
		      _d = true;_e = err;
		    } finally {
		      try {
		        if (!_n && _i["return"]) _i["return"]();
		      } finally {
		        if (_d) throw _e;
		      }
		    }return _arr;
		  }return function (arr, i) {
		    if (Array.isArray(arr)) {
		      return arr;
		    } else if (Symbol.iterator in Object(arr)) {
		      return sliceIterator(arr, i);
		    } else {
		      throw new TypeError("Invalid attempt to destructure non-iterable instance");
		    }
		  };
		}();
		
		function _defaults(obj, defaults) {
		  var keys = Object.getOwnPropertyNames(defaults);for (var i = 0; i < keys.length; i++) {
		    var key = keys[i];var value = Object.getOwnPropertyDescriptor(defaults, key);if (value && value.configurable && obj[key] === undefined) {
		      Object.defineProperty(obj, key, value);
		    }
		  }return obj;
		}
		
		function _classCallCheck(instance, Constructor) {
		  if (!(instance instanceof Constructor)) {
		    throw new TypeError("Cannot call a class as a function");
		  }
		}
		
		function _possibleConstructorReturn(self, call) {
		  if (!self) {
		    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
		  }return call && ((typeof call === "undefined" ? "undefined" : _typeof(call)) === "object" || typeof call === "function") ? call : self;
		}
		
		function _inherits(subClass, superClass) {
		  if (typeof superClass !== "function" && superClass !== null) {
		    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof(superClass)));
		  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass);
		}
		
		var React = __webpack_require__(2);
		var ReactDOM = __webpack_require__(42);
		var equal = __webpack_require__(73);
		var PropTypes = React.PropTypes;
		
		// Events available on iScroll instance
		// [`iScroll event name`, `react component event name`]
		
		var availableEvents = [['beforeScrollStart', "onBeforeScrollStart"], ['scrollCancel', "onScrollCancel"], ['scrollStart', "onScrollStart"], ['scroll', "onScroll"], ['scrollEnd', "onScrollEnd"], ['flick', "onFlick"], ['zoomStart', "onZoomStart"], ['zoomEnd', "onZoomEnd"]];
		
		var iScrollPropType = function iScrollPropType(props, propName, componentName) {
		  var iScroll = props[propName];
		  var proto = iScroll && iScroll.prototype;
		
		  if (!iScroll || !proto || !proto.version || !proto.scrollTo) {
		    return new Error(componentName + ": iScroll not passed to component props.");
		  } else {
		    if (!/^5\..*/.test(proto.version)) {
		      console.warn(componentName + ": different version than 5.x.y of iScroll is required. Some features won't work properly.");
		    }
		
		    if (props.options && props.options.zoom && !proto.zoom) {
		      console.warn(componentName + ": options.zoom is set, but iscroll-zoom version is not required. Zoom feature won't work properly.");
		    }
		  }
		};
		
		// Generate propTypes with event function validating
		var propTypes = {
		  defer: React.PropTypes.oneOfType([React.PropTypes.bool, React.PropTypes.number]),
		  options: PropTypes.object,
		  iScroll: iScrollPropType,
		  onRefresh: PropTypes.func
		};
		
		for (var i = 0; i < availableEvents.length; i++) {
		  propTypes[availableEvents[i][1]] = PropTypes.func;
		}
		
		var ReactIScroll = function (_React$Component) {
		  _inherits(ReactIScroll, _React$Component);
		
		  function ReactIScroll(props) {
		    _classCallCheck(this, ReactIScroll);
		
		    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));
		
		    _this._queuedCallbacks = [];
		    _this._iScrollBindedEvents = {};
		    return _this;
		  }
		
		  ReactIScroll.prototype.componentDidMount = function componentDidMount() {
		    this._initializeIScroll();
		  };
		
		  ReactIScroll.prototype.componentWillUnmount = function componentWillUnmount() {
		    this._teardownIScroll();
		  };
		
		  // There is no state, we can compare only props.
		
		
		  ReactIScroll.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {
		    return !equal(this.props, nextProps);
		  };
		
		  // Check if iScroll options has changed and recreate instance with new one
		
		
		  ReactIScroll.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
		    var _this2 = this;
		
		    // If options are same, iScroll behaviour will not change. Just refresh events and trigger refresh
		    if (equal(prevProps.options, this.props.options)) {
		      this._updateIScrollEvents(prevProps, this.props);
		      this.refresh();
		
		      // If options changed, we will destroy iScroll instance and create new one with same scroll position
		      // TODO test if this will work with indicators
		    } else {
		      this.withIScroll(true, function (iScrollInstance) {
		        // Save current state
		        var x = iScrollInstance.x;
		        var y = iScrollInstance.y;
		        var scale = iScrollInstance.scale;
		
		        // Destroy current and Create new instance of iScroll
		
		        _this2._teardownIScroll();
		        _this2._initializeIScroll();
		
		        _this2.withIScroll(true, function (newIScrollInstance) {
		          // Restore previous state
		          if (scale && newIScrollInstance.zoom) newIScrollInstance.zoom(scale, 0, 0, 0);
		
		          newIScrollInstance.scrollTo(x, y);
		        });
		      });
		    }
		  };
		
		  ReactIScroll.prototype.getIScroll = function getIScroll() {
		    return this._iScrollInstance;
		  };
		
		  ReactIScroll.prototype.getIScrollInstance = function getIScrollInstance() {
		    console.warn("Function 'getIScrollInstance' is deprecated. Instead use 'getIScroll'");
		    return this._iScrollInstance;
		  };
		
		  ReactIScroll.prototype.withIScroll = function withIScroll(waitForInit, callback) {
		    if (!callback && typeof waitForInit == "function") {
		      callback = waitForInit;
		    }
		
		    if (this.getIScroll()) {
		      callback(this.getIScroll());
		    } else if (waitForInit === true) {
		      this._queuedCallbacks.push(callback);
		    }
		  };
		
		  ReactIScroll.prototype.refresh = function refresh() {
		    this.withIScroll(function (iScrollInstance) {
		      return iScrollInstance.refresh();
		    });
		  };
		
		  ReactIScroll.prototype._runInitializeIScroll = function _runInitializeIScroll() {
		    var _this3 = this;
		
		    var _props = this.props;
		    var iScroll = _props.iScroll;
		    var options = _props.options;
		
		    // Create iScroll instance with given options
		
		    var iScrollInstance = new iScroll(ReactDOM.findDOMNode(this), options);
		    this._iScrollInstance = iScrollInstance;
		
		    // TODO there should be new event 'onInitialize'
		    // this._triggerRefreshEvent()
		
		    // Patch iScroll instance .refresh() function to trigger our onRefresh event
		    var origRefresh = iScrollInstance.refresh;
		
		    iScrollInstance.refresh = function () {
		      origRefresh.apply(iScrollInstance);
		      _this3._triggerRefreshEvent();
		    };
		
		    // Bind iScroll events
		    this._bindIScrollEvents();
		
		    this._callQueuedCallbacks();
		  };
		
		  ReactIScroll.prototype._initializeIScroll = function _initializeIScroll() {
		    var _this4 = this;
		
		    var defer = this.props.defer;
		
		    if (!defer) {
		      this._runInitializeIScroll();
		    } else {
		      setTimeout(function () {
		        return _this4._runInitializeIScroll();
		      }, defer);
		    }
		  };
		
		  ReactIScroll.prototype._callQueuedCallbacks = function _callQueuedCallbacks() {
		    var callbacks = this._queuedCallbacks,
		        len = callbacks.length;
		
		    this._queuedCallbacks = [];
		
		    for (var _i = 0; _i < len; _i++) {
		      callbacks[_i](this.getIScroll());
		    }
		  };
		
		  ReactIScroll.prototype._teardownIScroll = function _teardownIScroll() {
		    if (this._iScrollInstance) {
		      this._iScrollInstance.destroy();
		      this._iScrollInstance = undefined;
		    }
		  };
		
		  ReactIScroll.prototype._bindIScrollEvents = function _bindIScrollEvents() {
		    // Bind events on iScroll instance
		    this._iScrollBindedEvents = {};
		    this._updateIScrollEvents({}, this.props);
		  };
		
		  // Iterate through available events and update one by one
		
		
		  ReactIScroll.prototype._updateIScrollEvents = function _updateIScrollEvents(prevProps, nextProps) {
		    var len = availableEvents.length;
		
		    for (var _i2 = 0; _i2 < len; _i2++) {
		      var _availableEvents$_i = _slicedToArray(availableEvents[_i2], 2);
		
		      var iScrollEventName = _availableEvents$_i[0];
		      var reactEventName = _availableEvents$_i[1];
		
		      this._updateIScrollEvent(iScrollEventName, prevProps[reactEventName], nextProps[reactEventName]);
		    }
		  };
		
		  // Unbind and/or Bind event if it was changed during update
		
		
		  ReactIScroll.prototype._updateIScrollEvent = function _updateIScrollEvent(iScrollEventName, prevEvent, currentEvent) {
		    var _this5 = this;
		
		    if (prevEvent !== currentEvent) {
		      this.withIScroll(true, function (iScrollInstance) {
		        var currentEvents = _this5._iScrollBindedEvents;
		
		        if (prevEvent) {
		          iScrollInstance.off(iScrollEventName, currentEvents[iScrollEventName]);
		          currentEvents[iScrollEventName] = undefined;
		        }
		
		        if (currentEvent) {
		          var wrappedCallback = function wrappedCallback() {
		            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		              args[_key] = arguments[_key];
		            }
		
		            currentEvent.apply(undefined, [iScrollInstance].concat(args));
		          };
		
		          iScrollInstance.on(iScrollEventName, wrappedCallback);
		          currentEvents[iScrollEventName] = wrappedCallback;
		        }
		      });
		    }
		  };
		
		  ReactIScroll.prototype._triggerRefreshEvent = function _triggerRefreshEvent() {
		    var onRefresh = this.props.onRefresh;
		
		    if (onRefresh) {
		      this.withIScroll(function (iScrollInstance) {
		        return onRefresh(iScrollInstance);
		      });
		    }
		  };
		
		  ReactIScroll.prototype.render = function render() {
		    // Keep only html properties
		    var htmlProps = {};
		
		    for (var prop in this.props) {
		      if (!propTypes[prop] && prop !== "children") {
		        htmlProps[prop] = this.props[prop];
		      }
		    }
		
		    return React.createElement('div', _extends({ key: 'iscroll' }, htmlProps), this.props.children);
		  };
		
		  return ReactIScroll;
		}(React.Component);
		
		ReactIScroll.displayName = 'ReactIScroll';
		ReactIScroll.propTypes = propTypes;
		ReactIScroll.defaultProps = {
		  defer: 0,
		  options: {},
		  style: {
		    flex: 1,
		    position: "relative",
		    height: "100%",
		    width: "100%",
		    overflow: "hidden"
		  },
		  bounceEasing: 'elastic',
		  bounceTime: 100
		};
		exports.default = ReactIScroll;
		module.exports = exports['default'];
	
	/***/ },
	/* 140 */
	/***/ function(module, exports, __webpack_require__) {
	
		var __WEBPACK_AMD_DEFINE_RESULT__;/*! iScroll v5.2.0 ~ (c) 2008-2016 Matteo Spinelli ~ http://cubiq.org/license */
		(function (window, document, Math) {
		var rAF = window.requestAnimationFrame	||
			window.webkitRequestAnimationFrame	||
			window.mozRequestAnimationFrame		||
			window.oRequestAnimationFrame		||
			window.msRequestAnimationFrame		||
			function (callback) { window.setTimeout(callback, 1000 / 60); };
		
		var utils = (function () {
			var me = {};
		
			var _elementStyle = document.createElement('div').style;
			var _vendor = (function () {
				var vendors = ['t', 'webkitT', 'MozT', 'msT', 'OT'],
					transform,
					i = 0,
					l = vendors.length;
		
				for ( ; i < l; i++ ) {
					transform = vendors[i] + 'ransform';
					if ( transform in _elementStyle ) return vendors[i].substr(0, vendors[i].length-1);
				}
		
				return false;
			})();
		
			function _prefixStyle (style) {
				if ( _vendor === false ) return false;
				if ( _vendor === '' ) return style;
				return _vendor + style.charAt(0).toUpperCase() + style.substr(1);
			}
		
			me.getTime = Date.now || function getTime () { return new Date().getTime(); };
		
			me.extend = function (target, obj) {
				for ( var i in obj ) {
					target[i] = obj[i];
				}
			};
		
			me.addEvent = function (el, type, fn, capture) {
				el.addEventListener(type, fn, !!capture);
			};
		
			me.removeEvent = function (el, type, fn, capture) {
				el.removeEventListener(type, fn, !!capture);
			};
		
			me.prefixPointerEvent = function (pointerEvent) {
				return window.MSPointerEvent ?
					'MSPointer' + pointerEvent.charAt(7).toUpperCase() + pointerEvent.substr(8):
					pointerEvent;
			};
		
			me.momentum = function (current, start, time, lowerMargin, wrapperSize, deceleration) {
				var distance = current - start,
					speed = Math.abs(distance) / time,
					destination,
					duration;
		
				deceleration = deceleration === undefined ? 0.0006 : deceleration;
		
				destination = current + ( speed * speed ) / ( 2 * deceleration ) * ( distance < 0 ? -1 : 1 );
				duration = speed / deceleration;
		
				if ( destination < lowerMargin ) {
					destination = wrapperSize ? lowerMargin - ( wrapperSize / 2.5 * ( speed / 8 ) ) : lowerMargin;
					distance = Math.abs(destination - current);
					duration = distance / speed;
				} else if ( destination > 0 ) {
					destination = wrapperSize ? wrapperSize / 2.5 * ( speed / 8 ) : 0;
					distance = Math.abs(current) + destination;
					duration = distance / speed;
				}
		
				return {
					destination: Math.round(destination),
					duration: duration
				};
			};
		
			var _transform = _prefixStyle('transform');
		
			me.extend(me, {
				hasTransform: _transform !== false,
				hasPerspective: _prefixStyle('perspective') in _elementStyle,
				hasTouch: 'ontouchstart' in window,
				hasPointer: !!(window.PointerEvent || window.MSPointerEvent), // IE10 is prefixed
				hasTransition: _prefixStyle('transition') in _elementStyle
			});
		
			/*
			This should find all Android browsers lower than build 535.19 (both stock browser and webview)
			- galaxy S2 is ok
		    - 2.3.6 : `AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1`
		    - 4.0.4 : `AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30`
		   - galaxy S3 is badAndroid (stock brower, webview)
		     `AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30`
		   - galaxy S4 is badAndroid (stock brower, webview)
		     `AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30`
		   - galaxy S5 is OK
		     `AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Mobile Safari/537.36 (Chrome/)`
		   - galaxy S6 is OK
		     `AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Mobile Safari/537.36 (Chrome/)`
		  */
			me.isBadAndroid = (function() {
				var appVersion = window.navigator.appVersion;
				// Android browser is not a chrome browser.
				if (/Android/.test(appVersion) && !(/Chrome\/\d/.test(appVersion))) {
					var safariVersion = appVersion.match(/Safari\/(\d+.\d)/);
					if(safariVersion && typeof safariVersion === "object" && safariVersion.length >= 2) {
						return parseFloat(safariVersion[1]) < 535.19;
					} else {
						return true;
					}
				} else {
					return false;
				}
			})();
		
			me.extend(me.style = {}, {
				transform: _transform,
				transitionTimingFunction: _prefixStyle('transitionTimingFunction'),
				transitionDuration: _prefixStyle('transitionDuration'),
				transitionDelay: _prefixStyle('transitionDelay'),
				transformOrigin: _prefixStyle('transformOrigin')
			});
		
			me.hasClass = function (e, c) {
				var re = new RegExp("(^|\\s)" + c + "(\\s|$)");
				return re.test(e.className);
			};
		
			me.addClass = function (e, c) {
				if ( me.hasClass(e, c) ) {
					return;
				}
		
				var newclass = e.className.split(' ');
				newclass.push(c);
				e.className = newclass.join(' ');
			};
		
			me.removeClass = function (e, c) {
				if ( !me.hasClass(e, c) ) {
					return;
				}
		
				var re = new RegExp("(^|\\s)" + c + "(\\s|$)", 'g');
				e.className = e.className.replace(re, ' ');
			};
		
			me.offset = function (el) {
				var left = -el.offsetLeft,
					top = -el.offsetTop;
		
				// jshint -W084
				while (el = el.offsetParent) {
					left -= el.offsetLeft;
					top -= el.offsetTop;
				}
				// jshint +W084
		
				return {
					left: left,
					top: top
				};
			};
		
			me.preventDefaultException = function (el, exceptions) {
				for ( var i in exceptions ) {
					if ( exceptions[i].test(el[i]) ) {
						return true;
					}
				}
		
				return false;
			};
		
			me.extend(me.eventType = {}, {
				touchstart: 1,
				touchmove: 1,
				touchend: 1,
		
				mousedown: 2,
				mousemove: 2,
				mouseup: 2,
		
				pointerdown: 3,
				pointermove: 3,
				pointerup: 3,
		
				MSPointerDown: 3,
				MSPointerMove: 3,
				MSPointerUp: 3
			});
		
			me.extend(me.ease = {}, {
				quadratic: {
					style: 'cubic-bezier(0.25, 0.46, 0.45, 0.94)',
					fn: function (k) {
						return k * ( 2 - k );
					}
				},
				circular: {
					style: 'cubic-bezier(0.1, 0.57, 0.1, 1)',	// Not properly "circular" but this looks better, it should be (0.075, 0.82, 0.165, 1)
					fn: function (k) {
						return Math.sqrt( 1 - ( --k * k ) );
					}
				},
				back: {
					style: 'cubic-bezier(0.175, 0.885, 0.32, 1.275)',
					fn: function (k) {
						var b = 4;
						return ( k = k - 1 ) * k * ( ( b + 1 ) * k + b ) + 1;
					}
				},
				bounce: {
					style: '',
					fn: function (k) {
						if ( ( k /= 1 ) < ( 1 / 2.75 ) ) {
							return 7.5625 * k * k;
						} else if ( k < ( 2 / 2.75 ) ) {
							return 7.5625 * ( k -= ( 1.5 / 2.75 ) ) * k + 0.75;
						} else if ( k < ( 2.5 / 2.75 ) ) {
							return 7.5625 * ( k -= ( 2.25 / 2.75 ) ) * k + 0.9375;
						} else {
							return 7.5625 * ( k -= ( 2.625 / 2.75 ) ) * k + 0.984375;
						}
					}
				},
				elastic: {
					style: '',
					fn: function (k) {
						var f = 0.22,
							e = 0.4;
		
						if ( k === 0 ) { return 0; }
						if ( k == 1 ) { return 1; }
		
						return ( e * Math.pow( 2, - 10 * k ) * Math.sin( ( k - f / 4 ) * ( 2 * Math.PI ) / f ) + 1 );
					}
				}
			});
		
			me.tap = function (e, eventName) {
				var ev = document.createEvent('Event');
				ev.initEvent(eventName, true, true);
				ev.pageX = e.pageX;
				ev.pageY = e.pageY;
				e.target.dispatchEvent(ev);
			};
		
			me.click = function (e) {
				var target = e.target,
					ev;
		
				if ( !(/(SELECT|INPUT|TEXTAREA)/i).test(target.tagName) ) {
					ev = document.createEvent('MouseEvents');
					ev.initMouseEvent('click', true, true, e.view, 1,
						target.screenX, target.screenY, target.clientX, target.clientY,
						e.ctrlKey, e.altKey, e.shiftKey, e.metaKey,
						0, null);
		
					ev._constructed = true;
					target.dispatchEvent(ev);
				}
			};
		
			return me;
		})();
		function IScroll (el, options) {
			this.wrapper = typeof el == 'string' ? document.querySelector(el) : el;
			this.scroller = this.wrapper.children[0];
			this.scrollerStyle = this.scroller.style;		// cache style for better performance
		
			this.options = {
		
				resizeScrollbars: true,
		
				mouseWheelSpeed: 20,
		
				snapThreshold: 0.334,
		
		// INSERT POINT: OPTIONS
				disablePointer : !utils.hasPointer,
				disableTouch : utils.hasPointer || !utils.hasTouch,
				disableMouse : utils.hasPointer || utils.hasTouch,
				startX: 0,
				startY: 0,
				scrollY: true,
				directionLockThreshold: 5,
				momentum: true,
		
				bounce: true,
				bounceTime: 600,
				bounceEasing: '',
		
				preventDefault: true,
				preventDefaultException: { tagName: /^(INPUT|TEXTAREA|BUTTON|SELECT)$/ },
		
				HWCompositing: true,
				useTransition: true,
				useTransform: true,
				bindToWrapper: typeof window.onmousedown === "undefined"
			};
		
			for ( var i in options ) {
				this.options[i] = options[i];
			}
		
			// Normalize options
			this.translateZ = this.options.HWCompositing && utils.hasPerspective ? ' translateZ(0)' : '';
		
			this.options.useTransition = utils.hasTransition && this.options.useTransition;
			this.options.useTransform = utils.hasTransform && this.options.useTransform;
		
			this.options.eventPassthrough = this.options.eventPassthrough === true ? 'vertical' : this.options.eventPassthrough;
			this.options.preventDefault = !this.options.eventPassthrough && this.options.preventDefault;
		
			// If you want eventPassthrough I have to lock one of the axes
			this.options.scrollY = this.options.eventPassthrough == 'vertical' ? false : this.options.scrollY;
			this.options.scrollX = this.options.eventPassthrough == 'horizontal' ? false : this.options.scrollX;
		
			// With eventPassthrough we also need lockDirection mechanism
			this.options.freeScroll = this.options.freeScroll && !this.options.eventPassthrough;
			this.options.directionLockThreshold = this.options.eventPassthrough ? 0 : this.options.directionLockThreshold;
		
			this.options.bounceEasing = typeof this.options.bounceEasing == 'string' ? utils.ease[this.options.bounceEasing] || utils.ease.circular : this.options.bounceEasing;
		
			this.options.resizePolling = this.options.resizePolling === undefined ? 60 : this.options.resizePolling;
		
			if ( this.options.tap === true ) {
				this.options.tap = 'tap';
			}
		
			if ( this.options.shrinkScrollbars == 'scale' ) {
				this.options.useTransition = false;
			}
		
			this.options.invertWheelDirection = this.options.invertWheelDirection ? -1 : 1;
		
		// INSERT POINT: NORMALIZATION
		
			// Some defaults
			this.x = 0;
			this.y = 0;
			this.directionX = 0;
			this.directionY = 0;
			this._events = {};
		
		// INSERT POINT: DEFAULTS
		
			this._init();
			this.refresh();
		
			this.scrollTo(this.options.startX, this.options.startY);
			this.enable();
		}
		
		IScroll.prototype = {
			version: '5.2.0',
		
			_init: function () {
				this._initEvents();
		
				if ( this.options.scrollbars || this.options.indicators ) {
					this._initIndicators();
				}
		
				if ( this.options.mouseWheel ) {
					this._initWheel();
				}
		
				if ( this.options.snap ) {
					this._initSnap();
				}
		
				if ( this.options.keyBindings ) {
					this._initKeys();
				}
		
		// INSERT POINT: _init
		
			},
		
			destroy: function () {
				this._initEvents(true);
				clearTimeout(this.resizeTimeout);
		 		this.resizeTimeout = null;
				this._execEvent('destroy');
			},
		
			_transitionEnd: function (e) {
				if ( e.target != this.scroller || !this.isInTransition ) {
					return;
				}
		
				this._transitionTime();
				if ( !this.resetPosition(this.options.bounceTime) ) {
					this.isInTransition = false;
					this._execEvent('scrollEnd');
				}
			},
		
			_start: function (e) {
				// React to left mouse button only
				if ( utils.eventType[e.type] != 1 ) {
				  // for button property
				  // http://unixpapa.com/js/mouse.html
				  var button;
			    if (!e.which) {
			      /* IE case */
			      button = (e.button < 2) ? 0 :
			               ((e.button == 4) ? 1 : 2);
			    } else {
			      /* All others */
			      button = e.button;
			    }
					if ( button !== 0 ) {
						return;
					}
				}
		
				if ( !this.enabled || (this.initiated && utils.eventType[e.type] !== this.initiated) ) {
					return;
				}
		
				if ( this.options.preventDefault && !utils.isBadAndroid && !utils.preventDefaultException(e.target, this.options.preventDefaultException) ) {
					e.preventDefault();
				}
		
				var point = e.touches ? e.touches[0] : e,
					pos;
		
				this.initiated	= utils.eventType[e.type];
				this.moved		= false;
				this.distX		= 0;
				this.distY		= 0;
				this.directionX = 0;
				this.directionY = 0;
				this.directionLocked = 0;
		
				this.startTime = utils.getTime();
		
				if ( this.options.useTransition && this.isInTransition ) {
					this._transitionTime();
					this.isInTransition = false;
					pos = this.getComputedPosition();
					this._translate(Math.round(pos.x), Math.round(pos.y));
					this._execEvent('scrollEnd');
				} else if ( !this.options.useTransition && this.isAnimating ) {
					this.isAnimating = false;
					this._execEvent('scrollEnd');
				}
		
				this.startX    = this.x;
				this.startY    = this.y;
				this.absStartX = this.x;
				this.absStartY = this.y;
				this.pointX    = point.pageX;
				this.pointY    = point.pageY;
		
				this._execEvent('beforeScrollStart');
			},
		
			_move: function (e) {
				if ( !this.enabled || utils.eventType[e.type] !== this.initiated ) {
					return;
				}
		
				if ( this.options.preventDefault ) {	// increases performance on Android? TODO: check!
					e.preventDefault();
				}
		
				var point		= e.touches ? e.touches[0] : e,
					deltaX		= point.pageX - this.pointX,
					deltaY		= point.pageY - this.pointY,
					timestamp	= utils.getTime(),
					newX, newY,
					absDistX, absDistY;
		
				this.pointX		= point.pageX;
				this.pointY		= point.pageY;
		
				this.distX		+= deltaX;
				this.distY		+= deltaY;
				absDistX		= Math.abs(this.distX);
				absDistY		= Math.abs(this.distY);
		
				// We need to move at least 10 pixels for the scrolling to initiate
				if ( timestamp - this.endTime > 300 && (absDistX < 10 && absDistY < 10) ) {
					return;
				}
		
				// If you are scrolling in one direction lock the other
				if ( !this.directionLocked && !this.options.freeScroll ) {
					if ( absDistX > absDistY + this.options.directionLockThreshold ) {
						this.directionLocked = 'h';		// lock horizontally
					} else if ( absDistY >= absDistX + this.options.directionLockThreshold ) {
						this.directionLocked = 'v';		// lock vertically
					} else {
						this.directionLocked = 'n';		// no lock
					}
				}
		
				if ( this.directionLocked == 'h' ) {
					if ( this.options.eventPassthrough == 'vertical' ) {
						e.preventDefault();
					} else if ( this.options.eventPassthrough == 'horizontal' ) {
						this.initiated = false;
						return;
					}
		
					deltaY = 0;
				} else if ( this.directionLocked == 'v' ) {
					if ( this.options.eventPassthrough == 'horizontal' ) {
						e.preventDefault();
					} else if ( this.options.eventPassthrough == 'vertical' ) {
						this.initiated = false;
						return;
					}
		
					deltaX = 0;
				}
		
				deltaX = this.hasHorizontalScroll ? deltaX : 0;
				deltaY = this.hasVerticalScroll ? deltaY : 0;
		
				newX = this.x + deltaX;
				newY = this.y + deltaY;
		
				// Slow down if outside of the boundaries
				if ( newX > 0 || newX < this.maxScrollX ) {
					newX = this.options.bounce ? this.x + deltaX / 3 : newX > 0 ? 0 : this.maxScrollX;
				}
				if ( newY > 0 || newY < this.maxScrollY ) {
					newY = this.options.bounce ? this.y + deltaY / 3 : newY > 0 ? 0 : this.maxScrollY;
				}
		
				this.directionX = deltaX > 0 ? -1 : deltaX < 0 ? 1 : 0;
				this.directionY = deltaY > 0 ? -1 : deltaY < 0 ? 1 : 0;
		
				if ( !this.moved ) {
					this._execEvent('scrollStart');
				}
		
				this.moved = true;
		
				this._translate(newX, newY);
		
		/* REPLACE START: _move */
		
				if ( timestamp - this.startTime > 300 ) {
					this.startTime = timestamp;
					this.startX = this.x;
					this.startY = this.y;
				}
		
		/* REPLACE END: _move */
		
			},
		
			_end: function (e) {
				if ( !this.enabled || utils.eventType[e.type] !== this.initiated ) {
					return;
				}
		
				if ( this.options.preventDefault && !utils.preventDefaultException(e.target, this.options.preventDefaultException) ) {
					e.preventDefault();
				}
		
				var point = e.changedTouches ? e.changedTouches[0] : e,
					momentumX,
					momentumY,
					duration = utils.getTime() - this.startTime,
					newX = Math.round(this.x),
					newY = Math.round(this.y),
					distanceX = Math.abs(newX - this.startX),
					distanceY = Math.abs(newY - this.startY),
					time = 0,
					easing = '';
		
				this.isInTransition = 0;
				this.initiated = 0;
				this.endTime = utils.getTime();
		
				// reset if we are outside of the boundaries
				if ( this.resetPosition(this.options.bounceTime) ) {
					return;
				}
		
				this.scrollTo(newX, newY);	// ensures that the last position is rounded
		
				// we scrolled less than 10 pixels
				if ( !this.moved ) {
					if ( this.options.tap ) {
						utils.tap(e, this.options.tap);
					}
		
					if ( this.options.click ) {
						utils.click(e);
					}
		
					this._execEvent('scrollCancel');
					return;
				}
		
				if ( this._events.flick && duration < 200 && distanceX < 100 && distanceY < 100 ) {
					this._execEvent('flick');
					return;
				}
		
				// start momentum animation if needed
				if ( this.options.momentum && duration < 300 ) {
					momentumX = this.hasHorizontalScroll ? utils.momentum(this.x, this.startX, duration, this.maxScrollX, this.options.bounce ? this.wrapperWidth : 0, this.options.deceleration) : { destination: newX, duration: 0 };
					momentumY = this.hasVerticalScroll ? utils.momentum(this.y, this.startY, duration, this.maxScrollY, this.options.bounce ? this.wrapperHeight : 0, this.options.deceleration) : { destination: newY, duration: 0 };
					newX = momentumX.destination;
					newY = momentumY.destination;
					time = Math.max(momentumX.duration, momentumY.duration);
					this.isInTransition = 1;
				}
		
		
				if ( this.options.snap ) {
					var snap = this._nearestSnap(newX, newY);
					this.currentPage = snap;
					time = this.options.snapSpeed || Math.max(
							Math.max(
								Math.min(Math.abs(newX - snap.x), 1000),
								Math.min(Math.abs(newY - snap.y), 1000)
							), 300);
					newX = snap.x;
					newY = snap.y;
		
					this.directionX = 0;
					this.directionY = 0;
					easing = this.options.bounceEasing;
				}
		
		// INSERT POINT: _end
		
				if ( newX != this.x || newY != this.y ) {
					// change easing function when scroller goes out of the boundaries
					if ( newX > 0 || newX < this.maxScrollX || newY > 0 || newY < this.maxScrollY ) {
						easing = utils.ease.quadratic;
					}
		
					this.scrollTo(newX, newY, time, easing);
					return;
				}
		
				this._execEvent('scrollEnd');
			},
		
			_resize: function () {
				var that = this;
		
				clearTimeout(this.resizeTimeout);
		
				this.resizeTimeout = setTimeout(function () {
					that.refresh();
				}, this.options.resizePolling);
			},
		
			resetPosition: function (time) {
				var x = this.x,
					y = this.y;
		
				time = time || 0;
		
				if ( !this.hasHorizontalScroll || this.x > 0 ) {
					x = 0;
				} else if ( this.x < this.maxScrollX ) {
					x = this.maxScrollX;
				}
		
				if ( !this.hasVerticalScroll || this.y > 0 ) {
					y = 0;
				} else if ( this.y < this.maxScrollY ) {
					y = this.maxScrollY;
				}
		
				if ( x == this.x && y == this.y ) {
					return false;
				}
		
				this.scrollTo(x, y, time, this.options.bounceEasing);
		
				return true;
			},
		
			disable: function () {
				this.enabled = false;
			},
		
			enable: function () {
				this.enabled = true;
			},
		
			refresh: function () {
				var rf = this.wrapper.offsetHeight;		// Force reflow
		
				this.wrapperWidth	= this.wrapper.clientWidth;
				this.wrapperHeight	= this.wrapper.clientHeight;
		
		/* REPLACE START: refresh */
		
				this.scrollerWidth	= this.scroller.offsetWidth;
				this.scrollerHeight	= this.scroller.offsetHeight;
		
				this.maxScrollX		= this.wrapperWidth - this.scrollerWidth;
				this.maxScrollY		= this.wrapperHeight - this.scrollerHeight;
		
		/* REPLACE END: refresh */
		
				this.hasHorizontalScroll	= this.options.scrollX && this.maxScrollX < 0;
				this.hasVerticalScroll		= this.options.scrollY && this.maxScrollY < 0;
		
				if ( !this.hasHorizontalScroll ) {
					this.maxScrollX = 0;
					this.scrollerWidth = this.wrapperWidth;
				}
		
				if ( !this.hasVerticalScroll ) {
					this.maxScrollY = 0;
					this.scrollerHeight = this.wrapperHeight;
				}
		
				this.endTime = 0;
				this.directionX = 0;
				this.directionY = 0;
		
				this.wrapperOffset = utils.offset(this.wrapper);
		
				this._execEvent('refresh');
		
				this.resetPosition();
		
		// INSERT POINT: _refresh
		
			},
		
			on: function (type, fn) {
				if ( !this._events[type] ) {
					this._events[type] = [];
				}
		
				this._events[type].push(fn);
			},
		
			off: function (type, fn) {
				if ( !this._events[type] ) {
					return;
				}
		
				var index = this._events[type].indexOf(fn);
		
				if ( index > -1 ) {
					this._events[type].splice(index, 1);
				}
			},
		
			_execEvent: function (type) {
				if ( !this._events[type] ) {
					return;
				}
		
				var i = 0,
					l = this._events[type].length;
		
				if ( !l ) {
					return;
				}
		
				for ( ; i < l; i++ ) {
					this._events[type][i].apply(this, [].slice.call(arguments, 1));
				}
			},
		
			scrollBy: function (x, y, time, easing) {
				x = this.x + x;
				y = this.y + y;
				time = time || 0;
		
				this.scrollTo(x, y, time, easing);
			},
		
			scrollTo: function (x, y, time, easing) {
				easing = easing || utils.ease.circular;
		
				this.isInTransition = this.options.useTransition && time > 0;
				var transitionType = this.options.useTransition && easing.style;
				if ( !time || transitionType ) {
						if(transitionType) {
							this._transitionTimingFunction(easing.style);
							this._transitionTime(time);
						}
					this._translate(x, y);
				} else {
					this._animate(x, y, time, easing.fn);
				}
			},
		
			scrollToElement: function (el, time, offsetX, offsetY, easing) {
				el = el.nodeType ? el : this.scroller.querySelector(el);
		
				if ( !el ) {
					return;
				}
		
				var pos = utils.offset(el);
		
				pos.left -= this.wrapperOffset.left;
				pos.top  -= this.wrapperOffset.top;
		
				// if offsetX/Y are true we center the element to the screen
				if ( offsetX === true ) {
					offsetX = Math.round(el.offsetWidth / 2 - this.wrapper.offsetWidth / 2);
				}
				if ( offsetY === true ) {
					offsetY = Math.round(el.offsetHeight / 2 - this.wrapper.offsetHeight / 2);
				}
		
				pos.left -= offsetX || 0;
				pos.top  -= offsetY || 0;
		
				pos.left = pos.left > 0 ? 0 : pos.left < this.maxScrollX ? this.maxScrollX : pos.left;
				pos.top  = pos.top  > 0 ? 0 : pos.top  < this.maxScrollY ? this.maxScrollY : pos.top;
		
				time = time === undefined || time === null || time === 'auto' ? Math.max(Math.abs(this.x-pos.left), Math.abs(this.y-pos.top)) : time;
		
				this.scrollTo(pos.left, pos.top, time, easing);
			},
		
			_transitionTime: function (time) {
				time = time || 0;
		
				var durationProp = utils.style.transitionDuration;
				this.scrollerStyle[durationProp] = time + 'ms';
		
				if ( !time && utils.isBadAndroid ) {
					this.scrollerStyle[durationProp] = '0.0001ms';
					// remove 0.0001ms
					var self = this;
					rAF(function() {
						if(self.scrollerStyle[durationProp] === '0.0001ms') {
							self.scrollerStyle[durationProp] = '0s';
						}
					});
				}
		
		
				if ( this.indicators ) {
					for ( var i = this.indicators.length; i--; ) {
						this.indicators[i].transitionTime(time);
					}
				}
		
		
		// INSERT POINT: _transitionTime
		
			},
		
			_transitionTimingFunction: function (easing) {
				this.scrollerStyle[utils.style.transitionTimingFunction] = easing;
		
		
				if ( this.indicators ) {
					for ( var i = this.indicators.length; i--; ) {
						this.indicators[i].transitionTimingFunction(easing);
					}
				}
		
		
		// INSERT POINT: _transitionTimingFunction
		
			},
		
			_translate: function (x, y) {
				if ( this.options.useTransform ) {
		
		/* REPLACE START: _translate */
		
					this.scrollerStyle[utils.style.transform] = 'translate(' + x + 'px,' + y + 'px)' + this.translateZ;
		
		/* REPLACE END: _translate */
		
				} else {
					x = Math.round(x);
					y = Math.round(y);
					this.scrollerStyle.left = x + 'px';
					this.scrollerStyle.top = y + 'px';
				}
		
				this.x = x;
				this.y = y;
		
		
			if ( this.indicators ) {
				for ( var i = this.indicators.length; i--; ) {
					this.indicators[i].updatePosition();
				}
			}
		
		
		// INSERT POINT: _translate
		
			},
		
			_initEvents: function (remove) {
				var eventType = remove ? utils.removeEvent : utils.addEvent,
					target = this.options.bindToWrapper ? this.wrapper : window;
		
				eventType(window, 'orientationchange', this);
				eventType(window, 'resize', this);
		
				if ( this.options.click ) {
					eventType(this.wrapper, 'click', this, true);
				}
		
				if ( !this.options.disableMouse ) {
					eventType(this.wrapper, 'mousedown', this);
					eventType(target, 'mousemove', this);
					eventType(target, 'mousecancel', this);
					eventType(target, 'mouseup', this);
				}
		
				if ( utils.hasPointer && !this.options.disablePointer ) {
					eventType(this.wrapper, utils.prefixPointerEvent('pointerdown'), this);
					eventType(target, utils.prefixPointerEvent('pointermove'), this);
					eventType(target, utils.prefixPointerEvent('pointercancel'), this);
					eventType(target, utils.prefixPointerEvent('pointerup'), this);
				}
		
				if ( utils.hasTouch && !this.options.disableTouch ) {
					eventType(this.wrapper, 'touchstart', this);
					eventType(target, 'touchmove', this);
					eventType(target, 'touchcancel', this);
					eventType(target, 'touchend', this);
				}
		
				eventType(this.scroller, 'transitionend', this);
				eventType(this.scroller, 'webkitTransitionEnd', this);
				eventType(this.scroller, 'oTransitionEnd', this);
				eventType(this.scroller, 'MSTransitionEnd', this);
			},
		
			getComputedPosition: function () {
				var matrix = window.getComputedStyle(this.scroller, null),
					x, y;
		
				if ( this.options.useTransform ) {
					matrix = matrix[utils.style.transform].split(')')[0].split(', ');
					x = +(matrix[12] || matrix[4]);
					y = +(matrix[13] || matrix[5]);
				} else {
					x = +matrix.left.replace(/[^-\d.]/g, '');
					y = +matrix.top.replace(/[^-\d.]/g, '');
				}
		
				return { x: x, y: y };
			},
			_initIndicators: function () {
				var interactive = this.options.interactiveScrollbars,
					customStyle = typeof this.options.scrollbars != 'string',
					indicators = [],
					indicator;
		
				var that = this;
		
				this.indicators = [];
		
				if ( this.options.scrollbars ) {
					// Vertical scrollbar
					if ( this.options.scrollY ) {
						indicator = {
							el: createDefaultScrollbar('v', interactive, this.options.scrollbars),
							interactive: interactive,
							defaultScrollbars: true,
							customStyle: customStyle,
							resize: this.options.resizeScrollbars,
							shrink: this.options.shrinkScrollbars,
							fade: this.options.fadeScrollbars,
							listenX: false
						};
		
						this.wrapper.appendChild(indicator.el);
						indicators.push(indicator);
					}
		
					// Horizontal scrollbar
					if ( this.options.scrollX ) {
						indicator = {
							el: createDefaultScrollbar('h', interactive, this.options.scrollbars),
							interactive: interactive,
							defaultScrollbars: true,
							customStyle: customStyle,
							resize: this.options.resizeScrollbars,
							shrink: this.options.shrinkScrollbars,
							fade: this.options.fadeScrollbars,
							listenY: false
						};
		
						this.wrapper.appendChild(indicator.el);
						indicators.push(indicator);
					}
				}
		
				if ( this.options.indicators ) {
					// TODO: check concat compatibility
					indicators = indicators.concat(this.options.indicators);
				}
		
				for ( var i = indicators.length; i--; ) {
					this.indicators.push( new Indicator(this, indicators[i]) );
				}
		
				// TODO: check if we can use array.map (wide compatibility and performance issues)
				function _indicatorsMap (fn) {
					if (that.indicators) {
						for ( var i = that.indicators.length; i--; ) {
							fn.call(that.indicators[i]);
						}
					}
				}
		
				if ( this.options.fadeScrollbars ) {
					this.on('scrollEnd', function () {
						_indicatorsMap(function () {
							this.fade();
						});
					});
		
					this.on('scrollCancel', function () {
						_indicatorsMap(function () {
							this.fade();
						});
					});
		
					this.on('scrollStart', function () {
						_indicatorsMap(function () {
							this.fade(1);
						});
					});
		
					this.on('beforeScrollStart', function () {
						_indicatorsMap(function () {
							this.fade(1, true);
						});
					});
				}
		
		
				this.on('refresh', function () {
					_indicatorsMap(function () {
						this.refresh();
					});
				});
		
				this.on('destroy', function () {
					_indicatorsMap(function () {
						this.destroy();
					});
		
					delete this.indicators;
				});
			},
		
			_initWheel: function () {
				utils.addEvent(this.wrapper, 'wheel', this);
				utils.addEvent(this.wrapper, 'mousewheel', this);
				utils.addEvent(this.wrapper, 'DOMMouseScroll', this);
		
				this.on('destroy', function () {
					clearTimeout(this.wheelTimeout);
					this.wheelTimeout = null;
					utils.removeEvent(this.wrapper, 'wheel', this);
					utils.removeEvent(this.wrapper, 'mousewheel', this);
					utils.removeEvent(this.wrapper, 'DOMMouseScroll', this);
				});
			},
		
			_wheel: function (e) {
				if ( !this.enabled ) {
					return;
				}
		
				e.preventDefault();
		
				var wheelDeltaX, wheelDeltaY,
					newX, newY,
					that = this;
		
				if ( this.wheelTimeout === undefined ) {
					that._execEvent('scrollStart');
				}
		
				// Execute the scrollEnd event after 400ms the wheel stopped scrolling
				clearTimeout(this.wheelTimeout);
				this.wheelTimeout = setTimeout(function () {
					if(!that.options.snap) {
						that._execEvent('scrollEnd');
					}
					that.wheelTimeout = undefined;
				}, 400);
		
				if ( 'deltaX' in e ) {
					if (e.deltaMode === 1) {
						wheelDeltaX = -e.deltaX * this.options.mouseWheelSpeed;
						wheelDeltaY = -e.deltaY * this.options.mouseWheelSpeed;
					} else {
						wheelDeltaX = -e.deltaX;
						wheelDeltaY = -e.deltaY;
					}
				} else if ( 'wheelDeltaX' in e ) {
					wheelDeltaX = e.wheelDeltaX / 120 * this.options.mouseWheelSpeed;
					wheelDeltaY = e.wheelDeltaY / 120 * this.options.mouseWheelSpeed;
				} else if ( 'wheelDelta' in e ) {
					wheelDeltaX = wheelDeltaY = e.wheelDelta / 120 * this.options.mouseWheelSpeed;
				} else if ( 'detail' in e ) {
					wheelDeltaX = wheelDeltaY = -e.detail / 3 * this.options.mouseWheelSpeed;
				} else {
					return;
				}
		
				wheelDeltaX *= this.options.invertWheelDirection;
				wheelDeltaY *= this.options.invertWheelDirection;
		
				if ( !this.hasVerticalScroll ) {
					wheelDeltaX = wheelDeltaY;
					wheelDeltaY = 0;
				}
		
				if ( this.options.snap ) {
					newX = this.currentPage.pageX;
					newY = this.currentPage.pageY;
		
					if ( wheelDeltaX > 0 ) {
						newX--;
					} else if ( wheelDeltaX < 0 ) {
						newX++;
					}
		
					if ( wheelDeltaY > 0 ) {
						newY--;
					} else if ( wheelDeltaY < 0 ) {
						newY++;
					}
		
					this.goToPage(newX, newY);
		
					return;
				}
		
				newX = this.x + Math.round(this.hasHorizontalScroll ? wheelDeltaX : 0);
				newY = this.y + Math.round(this.hasVerticalScroll ? wheelDeltaY : 0);
		
				this.directionX = wheelDeltaX > 0 ? -1 : wheelDeltaX < 0 ? 1 : 0;
				this.directionY = wheelDeltaY > 0 ? -1 : wheelDeltaY < 0 ? 1 : 0;
		
				if ( newX > 0 ) {
					newX = 0;
				} else if ( newX < this.maxScrollX ) {
					newX = this.maxScrollX;
				}
		
				if ( newY > 0 ) {
					newY = 0;
				} else if ( newY < this.maxScrollY ) {
					newY = this.maxScrollY;
				}
		
				this.scrollTo(newX, newY, 0);
		
		// INSERT POINT: _wheel
			},
		
			_initSnap: function () {
				this.currentPage = {};
		
				if ( typeof this.options.snap == 'string' ) {
					this.options.snap = this.scroller.querySelectorAll(this.options.snap);
				}
		
				this.on('refresh', function () {
					var i = 0, l,
						m = 0, n,
						cx, cy,
						x = 0, y,
						stepX = this.options.snapStepX || this.wrapperWidth,
						stepY = this.options.snapStepY || this.wrapperHeight,
						el;
		
					this.pages = [];
		
					if ( !this.wrapperWidth || !this.wrapperHeight || !this.scrollerWidth || !this.scrollerHeight ) {
						return;
					}
		
					if ( this.options.snap === true ) {
						cx = Math.round( stepX / 2 );
						cy = Math.round( stepY / 2 );
		
						while ( x > -this.scrollerWidth ) {
							this.pages[i] = [];
							l = 0;
							y = 0;
		
							while ( y > -this.scrollerHeight ) {
								this.pages[i][l] = {
									x: Math.max(x, this.maxScrollX),
									y: Math.max(y, this.maxScrollY),
									width: stepX,
									height: stepY,
									cx: x - cx,
									cy: y - cy
								};
		
								y -= stepY;
								l++;
							}
		
							x -= stepX;
							i++;
						}
					} else {
						el = this.options.snap;
						l = el.length;
						n = -1;
		
						for ( ; i < l; i++ ) {
							if ( i === 0 || el[i].offsetLeft <= el[i-1].offsetLeft ) {
								m = 0;
								n++;
							}
		
							if ( !this.pages[m] ) {
								this.pages[m] = [];
							}
		
							x = Math.max(-el[i].offsetLeft, this.maxScrollX);
							y = Math.max(-el[i].offsetTop, this.maxScrollY);
							cx = x - Math.round(el[i].offsetWidth / 2);
							cy = y - Math.round(el[i].offsetHeight / 2);
		
							this.pages[m][n] = {
								x: x,
								y: y,
								width: el[i].offsetWidth,
								height: el[i].offsetHeight,
								cx: cx,
								cy: cy
							};
		
							if ( x > this.maxScrollX ) {
								m++;
							}
						}
					}
		
					this.goToPage(this.currentPage.pageX || 0, this.currentPage.pageY || 0, 0);
		
					// Update snap threshold if needed
					if ( this.options.snapThreshold % 1 === 0 ) {
						this.snapThresholdX = this.options.snapThreshold;
						this.snapThresholdY = this.options.snapThreshold;
					} else {
						this.snapThresholdX = Math.round(this.pages[this.currentPage.pageX][this.currentPage.pageY].width * this.options.snapThreshold);
						this.snapThresholdY = Math.round(this.pages[this.currentPage.pageX][this.currentPage.pageY].height * this.options.snapThreshold);
					}
				});
		
				this.on('flick', function () {
					var time = this.options.snapSpeed || Math.max(
							Math.max(
								Math.min(Math.abs(this.x - this.startX), 1000),
								Math.min(Math.abs(this.y - this.startY), 1000)
							), 300);
		
					this.goToPage(
						this.currentPage.pageX + this.directionX,
						this.currentPage.pageY + this.directionY,
						time
					);
				});
			},
		
			_nearestSnap: function (x, y) {
				if ( !this.pages.length ) {
					return { x: 0, y: 0, pageX: 0, pageY: 0 };
				}
		
				var i = 0,
					l = this.pages.length,
					m = 0;
		
				// Check if we exceeded the snap threshold
				if ( Math.abs(x - this.absStartX) < this.snapThresholdX &&
					Math.abs(y - this.absStartY) < this.snapThresholdY ) {
					return this.currentPage;
				}
		
				if ( x > 0 ) {
					x = 0;
				} else if ( x < this.maxScrollX ) {
					x = this.maxScrollX;
				}
		
				if ( y > 0 ) {
					y = 0;
				} else if ( y < this.maxScrollY ) {
					y = this.maxScrollY;
				}
		
				for ( ; i < l; i++ ) {
					if ( x >= this.pages[i][0].cx ) {
						x = this.pages[i][0].x;
						break;
					}
				}
		
				l = this.pages[i].length;
		
				for ( ; m < l; m++ ) {
					if ( y >= this.pages[0][m].cy ) {
						y = this.pages[0][m].y;
						break;
					}
				}
		
				if ( i == this.currentPage.pageX ) {
					i += this.directionX;
		
					if ( i < 0 ) {
						i = 0;
					} else if ( i >= this.pages.length ) {
						i = this.pages.length - 1;
					}
		
					x = this.pages[i][0].x;
				}
		
				if ( m == this.currentPage.pageY ) {
					m += this.directionY;
		
					if ( m < 0 ) {
						m = 0;
					} else if ( m >= this.pages[0].length ) {
						m = this.pages[0].length - 1;
					}
		
					y = this.pages[0][m].y;
				}
		
				return {
					x: x,
					y: y,
					pageX: i,
					pageY: m
				};
			},
		
			goToPage: function (x, y, time, easing) {
				easing = easing || this.options.bounceEasing;
		
				if ( x >= this.pages.length ) {
					x = this.pages.length - 1;
				} else if ( x < 0 ) {
					x = 0;
				}
		
				if ( y >= this.pages[x].length ) {
					y = this.pages[x].length - 1;
				} else if ( y < 0 ) {
					y = 0;
				}
		
				var posX = this.pages[x][y].x,
					posY = this.pages[x][y].y;
		
				time = time === undefined ? this.options.snapSpeed || Math.max(
					Math.max(
						Math.min(Math.abs(posX - this.x), 1000),
						Math.min(Math.abs(posY - this.y), 1000)
					), 300) : time;
		
				this.currentPage = {
					x: posX,
					y: posY,
					pageX: x,
					pageY: y
				};
		
				this.scrollTo(posX, posY, time, easing);
			},
		
			next: function (time, easing) {
				var x = this.currentPage.pageX,
					y = this.currentPage.pageY;
		
				x++;
		
				if ( x >= this.pages.length && this.hasVerticalScroll ) {
					x = 0;
					y++;
				}
		
				this.goToPage(x, y, time, easing);
			},
		
			prev: function (time, easing) {
				var x = this.currentPage.pageX,
					y = this.currentPage.pageY;
		
				x--;
		
				if ( x < 0 && this.hasVerticalScroll ) {
					x = 0;
					y--;
				}
		
				this.goToPage(x, y, time, easing);
			},
		
			_initKeys: function (e) {
				// default key bindings
				var keys = {
					pageUp: 33,
					pageDown: 34,
					end: 35,
					home: 36,
					left: 37,
					up: 38,
					right: 39,
					down: 40
				};
				var i;
		
				// if you give me characters I give you keycode
				if ( typeof this.options.keyBindings == 'object' ) {
					for ( i in this.options.keyBindings ) {
						if ( typeof this.options.keyBindings[i] == 'string' ) {
							this.options.keyBindings[i] = this.options.keyBindings[i].toUpperCase().charCodeAt(0);
						}
					}
				} else {
					this.options.keyBindings = {};
				}
		
				for ( i in keys ) {
					this.options.keyBindings[i] = this.options.keyBindings[i] || keys[i];
				}
		
				utils.addEvent(window, 'keydown', this);
		
				this.on('destroy', function () {
					utils.removeEvent(window, 'keydown', this);
				});
			},
		
			_key: function (e) {
				if ( !this.enabled ) {
					return;
				}
		
				var snap = this.options.snap,	// we are using this alot, better to cache it
					newX = snap ? this.currentPage.pageX : this.x,
					newY = snap ? this.currentPage.pageY : this.y,
					now = utils.getTime(),
					prevTime = this.keyTime || 0,
					acceleration = 0.250,
					pos;
		
				if ( this.options.useTransition && this.isInTransition ) {
					pos = this.getComputedPosition();
		
					this._translate(Math.round(pos.x), Math.round(pos.y));
					this.isInTransition = false;
				}
		
				this.keyAcceleration = now - prevTime < 200 ? Math.min(this.keyAcceleration + acceleration, 50) : 0;
		
				switch ( e.keyCode ) {
					case this.options.keyBindings.pageUp:
						if ( this.hasHorizontalScroll && !this.hasVerticalScroll ) {
							newX += snap ? 1 : this.wrapperWidth;
						} else {
							newY += snap ? 1 : this.wrapperHeight;
						}
						break;
					case this.options.keyBindings.pageDown:
						if ( this.hasHorizontalScroll && !this.hasVerticalScroll ) {
							newX -= snap ? 1 : this.wrapperWidth;
						} else {
							newY -= snap ? 1 : this.wrapperHeight;
						}
						break;
					case this.options.keyBindings.end:
						newX = snap ? this.pages.length-1 : this.maxScrollX;
						newY = snap ? this.pages[0].length-1 : this.maxScrollY;
						break;
					case this.options.keyBindings.home:
						newX = 0;
						newY = 0;
						break;
					case this.options.keyBindings.left:
						newX += snap ? -1 : 5 + this.keyAcceleration>>0;
						break;
					case this.options.keyBindings.up:
						newY += snap ? 1 : 5 + this.keyAcceleration>>0;
						break;
					case this.options.keyBindings.right:
						newX -= snap ? -1 : 5 + this.keyAcceleration>>0;
						break;
					case this.options.keyBindings.down:
						newY -= snap ? 1 : 5 + this.keyAcceleration>>0;
						break;
					default:
						return;
				}
		
				if ( snap ) {
					this.goToPage(newX, newY);
					return;
				}
		
				if ( newX > 0 ) {
					newX = 0;
					this.keyAcceleration = 0;
				} else if ( newX < this.maxScrollX ) {
					newX = this.maxScrollX;
					this.keyAcceleration = 0;
				}
		
				if ( newY > 0 ) {
					newY = 0;
					this.keyAcceleration = 0;
				} else if ( newY < this.maxScrollY ) {
					newY = this.maxScrollY;
					this.keyAcceleration = 0;
				}
		
				this.scrollTo(newX, newY, 0);
		
				this.keyTime = now;
			},
		
			_animate: function (destX, destY, duration, easingFn) {
				var that = this,
					startX = this.x,
					startY = this.y,
					startTime = utils.getTime(),
					destTime = startTime + duration;
		
				function step () {
					var now = utils.getTime(),
						newX, newY,
						easing;
		
					if ( now >= destTime ) {
						that.isAnimating = false;
						that._translate(destX, destY);
		
						if ( !that.resetPosition(that.options.bounceTime) ) {
							that._execEvent('scrollEnd');
						}
		
						return;
					}
		
					now = ( now - startTime ) / duration;
					easing = easingFn(now);
					newX = ( destX - startX ) * easing + startX;
					newY = ( destY - startY ) * easing + startY;
					that._translate(newX, newY);
		
					if ( that.isAnimating ) {
						rAF(step);
					}
				}
		
				this.isAnimating = true;
				step();
			},
			handleEvent: function (e) {
				switch ( e.type ) {
					case 'touchstart':
					case 'pointerdown':
					case 'MSPointerDown':
					case 'mousedown':
						this._start(e);
						break;
					case 'touchmove':
					case 'pointermove':
					case 'MSPointerMove':
					case 'mousemove':
						this._move(e);
						break;
					case 'touchend':
					case 'pointerup':
					case 'MSPointerUp':
					case 'mouseup':
					case 'touchcancel':
					case 'pointercancel':
					case 'MSPointerCancel':
					case 'mousecancel':
						this._end(e);
						break;
					case 'orientationchange':
					case 'resize':
						this._resize();
						break;
					case 'transitionend':
					case 'webkitTransitionEnd':
					case 'oTransitionEnd':
					case 'MSTransitionEnd':
						this._transitionEnd(e);
						break;
					case 'wheel':
					case 'DOMMouseScroll':
					case 'mousewheel':
						this._wheel(e);
						break;
					case 'keydown':
						this._key(e);
						break;
					case 'click':
						if ( this.enabled && !e._constructed ) {
							e.preventDefault();
							e.stopPropagation();
						}
						break;
				}
			}
		};
		function createDefaultScrollbar (direction, interactive, type) {
			var scrollbar = document.createElement('div'),
				indicator = document.createElement('div');
		
			if ( type === true ) {
				scrollbar.style.cssText = 'position:absolute;z-index:9999';
				indicator.style.cssText = '-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;position:absolute;background:rgba(0,0,0,0.5);border:1px solid rgba(255,255,255,0.9);border-radius:3px';
			}
		
			indicator.className = 'iScrollIndicator';
		
			if ( direction == 'h' ) {
				if ( type === true ) {
					scrollbar.style.cssText += ';height:7px;left:2px;right:2px;bottom:0';
					indicator.style.height = '100%';
				}
				scrollbar.className = 'iScrollHorizontalScrollbar';
			} else {
				if ( type === true ) {
					scrollbar.style.cssText += ';width:7px;bottom:2px;top:2px;right:1px';
					indicator.style.width = '100%';
				}
				scrollbar.className = 'iScrollVerticalScrollbar';
			}
		
			scrollbar.style.cssText += ';overflow:hidden';
		
			if ( !interactive ) {
				scrollbar.style.pointerEvents = 'none';
			}
		
			scrollbar.appendChild(indicator);
		
			return scrollbar;
		}
		
		function Indicator (scroller, options) {
			this.wrapper = typeof options.el == 'string' ? document.querySelector(options.el) : options.el;
			this.wrapperStyle = this.wrapper.style;
			this.indicator = this.wrapper.children[0];
			this.indicatorStyle = this.indicator.style;
			this.scroller = scroller;
		
			this.options = {
				listenX: true,
				listenY: true,
				interactive: false,
				resize: true,
				defaultScrollbars: false,
				shrink: false,
				fade: false,
				speedRatioX: 0,
				speedRatioY: 0
			};
		
			for ( var i in options ) {
				this.options[i] = options[i];
			}
		
			this.sizeRatioX = 1;
			this.sizeRatioY = 1;
			this.maxPosX = 0;
			this.maxPosY = 0;
		
			if ( this.options.interactive ) {
				if ( !this.options.disableTouch ) {
					utils.addEvent(this.indicator, 'touchstart', this);
					utils.addEvent(window, 'touchend', this);
				}
				if ( !this.options.disablePointer ) {
					utils.addEvent(this.indicator, utils.prefixPointerEvent('pointerdown'), this);
					utils.addEvent(window, utils.prefixPointerEvent('pointerup'), this);
				}
				if ( !this.options.disableMouse ) {
					utils.addEvent(this.indicator, 'mousedown', this);
					utils.addEvent(window, 'mouseup', this);
				}
			}
		
			if ( this.options.fade ) {
				this.wrapperStyle[utils.style.transform] = this.scroller.translateZ;
				var durationProp = utils.style.transitionDuration;
				this.wrapperStyle[durationProp] = utils.isBadAndroid ? '0.0001ms' : '0ms';
				// remove 0.0001ms
				var self = this;
				if(utils.isBadAndroid) {
					rAF(function() {
						if(self.wrapperStyle[durationProp] === '0.0001ms') {
							self.wrapperStyle[durationProp] = '0s';
						}
					});
				}
				this.wrapperStyle.opacity = '0';
			}
		}
		
		Indicator.prototype = {
			handleEvent: function (e) {
				switch ( e.type ) {
					case 'touchstart':
					case 'pointerdown':
					case 'MSPointerDown':
					case 'mousedown':
						this._start(e);
						break;
					case 'touchmove':
					case 'pointermove':
					case 'MSPointerMove':
					case 'mousemove':
						this._move(e);
						break;
					case 'touchend':
					case 'pointerup':
					case 'MSPointerUp':
					case 'mouseup':
					case 'touchcancel':
					case 'pointercancel':
					case 'MSPointerCancel':
					case 'mousecancel':
						this._end(e);
						break;
				}
			},
		
			destroy: function () {
				if ( this.options.fadeScrollbars ) {
					clearTimeout(this.fadeTimeout);
					this.fadeTimeout = null;
				}
				if ( this.options.interactive ) {
					utils.removeEvent(this.indicator, 'touchstart', this);
					utils.removeEvent(this.indicator, utils.prefixPointerEvent('pointerdown'), this);
					utils.removeEvent(this.indicator, 'mousedown', this);
		
					utils.removeEvent(window, 'touchmove', this);
					utils.removeEvent(window, utils.prefixPointerEvent('pointermove'), this);
					utils.removeEvent(window, 'mousemove', this);
		
					utils.removeEvent(window, 'touchend', this);
					utils.removeEvent(window, utils.prefixPointerEvent('pointerup'), this);
					utils.removeEvent(window, 'mouseup', this);
				}
		
				if ( this.options.defaultScrollbars ) {
					this.wrapper.parentNode.removeChild(this.wrapper);
				}
			},
		
			_start: function (e) {
				var point = e.touches ? e.touches[0] : e;
		
				e.preventDefault();
				e.stopPropagation();
		
				this.transitionTime();
		
				this.initiated = true;
				this.moved = false;
				this.lastPointX	= point.pageX;
				this.lastPointY	= point.pageY;
		
				this.startTime	= utils.getTime();
		
				if ( !this.options.disableTouch ) {
					utils.addEvent(window, 'touchmove', this);
				}
				if ( !this.options.disablePointer ) {
					utils.addEvent(window, utils.prefixPointerEvent('pointermove'), this);
				}
				if ( !this.options.disableMouse ) {
					utils.addEvent(window, 'mousemove', this);
				}
		
				this.scroller._execEvent('beforeScrollStart');
			},
		
			_move: function (e) {
				var point = e.touches ? e.touches[0] : e,
					deltaX, deltaY,
					newX, newY,
					timestamp = utils.getTime();
		
				if ( !this.moved ) {
					this.scroller._execEvent('scrollStart');
				}
		
				this.moved = true;
		
				deltaX = point.pageX - this.lastPointX;
				this.lastPointX = point.pageX;
		
				deltaY = point.pageY - this.lastPointY;
				this.lastPointY = point.pageY;
		
				newX = this.x + deltaX;
				newY = this.y + deltaY;
		
				this._pos(newX, newY);
		
		// INSERT POINT: indicator._move
		
				e.preventDefault();
				e.stopPropagation();
			},
		
			_end: function (e) {
				if ( !this.initiated ) {
					return;
				}
		
				this.initiated = false;
		
				e.preventDefault();
				e.stopPropagation();
		
				utils.removeEvent(window, 'touchmove', this);
				utils.removeEvent(window, utils.prefixPointerEvent('pointermove'), this);
				utils.removeEvent(window, 'mousemove', this);
		
				if ( this.scroller.options.snap ) {
					var snap = this.scroller._nearestSnap(this.scroller.x, this.scroller.y);
		
					var time = this.options.snapSpeed || Math.max(
							Math.max(
								Math.min(Math.abs(this.scroller.x - snap.x), 1000),
								Math.min(Math.abs(this.scroller.y - snap.y), 1000)
							), 300);
		
					if ( this.scroller.x != snap.x || this.scroller.y != snap.y ) {
						this.scroller.directionX = 0;
						this.scroller.directionY = 0;
						this.scroller.currentPage = snap;
						this.scroller.scrollTo(snap.x, snap.y, time, this.scroller.options.bounceEasing);
					}
				}
		
				if ( this.moved ) {
					this.scroller._execEvent('scrollEnd');
				}
			},
		
			transitionTime: function (time) {
				time = time || 0;
				var durationProp = utils.style.transitionDuration;
				this.indicatorStyle[durationProp] = time + 'ms';
		
				if ( !time && utils.isBadAndroid ) {
					this.indicatorStyle[durationProp] = '0.0001ms';
					// remove 0.0001ms
					var self = this;
					rAF(function() {
						if(self.indicatorStyle[durationProp] === '0.0001ms') {
							self.indicatorStyle[durationProp] = '0s';
						}
					});
				}
			},
		
			transitionTimingFunction: function (easing) {
				this.indicatorStyle[utils.style.transitionTimingFunction] = easing;
			},
		
			refresh: function () {
				this.transitionTime();
		
				if ( this.options.listenX && !this.options.listenY ) {
					this.indicatorStyle.display = this.scroller.hasHorizontalScroll ? 'block' : 'none';
				} else if ( this.options.listenY && !this.options.listenX ) {
					this.indicatorStyle.display = this.scroller.hasVerticalScroll ? 'block' : 'none';
				} else {
					this.indicatorStyle.display = this.scroller.hasHorizontalScroll || this.scroller.hasVerticalScroll ? 'block' : 'none';
				}
		
				if ( this.scroller.hasHorizontalScroll && this.scroller.hasVerticalScroll ) {
					utils.addClass(this.wrapper, 'iScrollBothScrollbars');
					utils.removeClass(this.wrapper, 'iScrollLoneScrollbar');
		
					if ( this.options.defaultScrollbars && this.options.customStyle ) {
						if ( this.options.listenX ) {
							this.wrapper.style.right = '8px';
						} else {
							this.wrapper.style.bottom = '8px';
						}
					}
				} else {
					utils.removeClass(this.wrapper, 'iScrollBothScrollbars');
					utils.addClass(this.wrapper, 'iScrollLoneScrollbar');
		
					if ( this.options.defaultScrollbars && this.options.customStyle ) {
						if ( this.options.listenX ) {
							this.wrapper.style.right = '2px';
						} else {
							this.wrapper.style.bottom = '2px';
						}
					}
				}
		
				var r = this.wrapper.offsetHeight;	// force refresh
		
				if ( this.options.listenX ) {
					this.wrapperWidth = this.wrapper.clientWidth;
					if ( this.options.resize ) {
						this.indicatorWidth = Math.max(Math.round(this.wrapperWidth * this.wrapperWidth / (this.scroller.scrollerWidth || this.wrapperWidth || 1)), 8);
						this.indicatorStyle.width = this.indicatorWidth + 'px';
					} else {
						this.indicatorWidth = this.indicator.clientWidth;
					}
		
					this.maxPosX = this.wrapperWidth - this.indicatorWidth;
		
					if ( this.options.shrink == 'clip' ) {
						this.minBoundaryX = -this.indicatorWidth + 8;
						this.maxBoundaryX = this.wrapperWidth - 8;
					} else {
						this.minBoundaryX = 0;
						this.maxBoundaryX = this.maxPosX;
					}
		
					this.sizeRatioX = this.options.speedRatioX || (this.scroller.maxScrollX && (this.maxPosX / this.scroller.maxScrollX));
				}
		
				if ( this.options.listenY ) {
					this.wrapperHeight = this.wrapper.clientHeight;
					if ( this.options.resize ) {
						this.indicatorHeight = Math.max(Math.round(this.wrapperHeight * this.wrapperHeight / (this.scroller.scrollerHeight || this.wrapperHeight || 1)), 8);
						this.indicatorStyle.height = this.indicatorHeight + 'px';
					} else {
						this.indicatorHeight = this.indicator.clientHeight;
					}
		
					this.maxPosY = this.wrapperHeight - this.indicatorHeight;
		
					if ( this.options.shrink == 'clip' ) {
						this.minBoundaryY = -this.indicatorHeight + 8;
						this.maxBoundaryY = this.wrapperHeight - 8;
					} else {
						this.minBoundaryY = 0;
						this.maxBoundaryY = this.maxPosY;
					}
		
					this.maxPosY = this.wrapperHeight - this.indicatorHeight;
					this.sizeRatioY = this.options.speedRatioY || (this.scroller.maxScrollY && (this.maxPosY / this.scroller.maxScrollY));
				}
		
				this.updatePosition();
			},
		
			updatePosition: function () {
				var x = this.options.listenX && Math.round(this.sizeRatioX * this.scroller.x) || 0,
					y = this.options.listenY && Math.round(this.sizeRatioY * this.scroller.y) || 0;
		
				if ( !this.options.ignoreBoundaries ) {
					if ( x < this.minBoundaryX ) {
						if ( this.options.shrink == 'scale' ) {
							this.width = Math.max(this.indicatorWidth + x, 8);
							this.indicatorStyle.width = this.width + 'px';
						}
						x = this.minBoundaryX;
					} else if ( x > this.maxBoundaryX ) {
						if ( this.options.shrink == 'scale' ) {
							this.width = Math.max(this.indicatorWidth - (x - this.maxPosX), 8);
							this.indicatorStyle.width = this.width + 'px';
							x = this.maxPosX + this.indicatorWidth - this.width;
						} else {
							x = this.maxBoundaryX;
						}
					} else if ( this.options.shrink == 'scale' && this.width != this.indicatorWidth ) {
						this.width = this.indicatorWidth;
						this.indicatorStyle.width = this.width + 'px';
					}
		
					if ( y < this.minBoundaryY ) {
						if ( this.options.shrink == 'scale' ) {
							this.height = Math.max(this.indicatorHeight + y * 3, 8);
							this.indicatorStyle.height = this.height + 'px';
						}
						y = this.minBoundaryY;
					} else if ( y > this.maxBoundaryY ) {
						if ( this.options.shrink == 'scale' ) {
							this.height = Math.max(this.indicatorHeight - (y - this.maxPosY) * 3, 8);
							this.indicatorStyle.height = this.height + 'px';
							y = this.maxPosY + this.indicatorHeight - this.height;
						} else {
							y = this.maxBoundaryY;
						}
					} else if ( this.options.shrink == 'scale' && this.height != this.indicatorHeight ) {
						this.height = this.indicatorHeight;
						this.indicatorStyle.height = this.height + 'px';
					}
				}
		
				this.x = x;
				this.y = y;
		
				if ( this.scroller.options.useTransform ) {
					this.indicatorStyle[utils.style.transform] = 'translate(' + x + 'px,' + y + 'px)' + this.scroller.translateZ;
				} else {
					this.indicatorStyle.left = x + 'px';
					this.indicatorStyle.top = y + 'px';
				}
			},
		
			_pos: function (x, y) {
				if ( x < 0 ) {
					x = 0;
				} else if ( x > this.maxPosX ) {
					x = this.maxPosX;
				}
		
				if ( y < 0 ) {
					y = 0;
				} else if ( y > this.maxPosY ) {
					y = this.maxPosY;
				}
		
				x = this.options.listenX ? Math.round(x / this.sizeRatioX) : this.scroller.x;
				y = this.options.listenY ? Math.round(y / this.sizeRatioY) : this.scroller.y;
		
				this.scroller.scrollTo(x, y);
			},
		
			fade: function (val, hold) {
				if ( hold && !this.visible ) {
					return;
				}
		
				clearTimeout(this.fadeTimeout);
				this.fadeTimeout = null;
		
				var time = val ? 250 : 500,
					delay = val ? 0 : 300;
		
				val = val ? '1' : '0';
		
				this.wrapperStyle[utils.style.transitionDuration] = time + 'ms';
		
				this.fadeTimeout = setTimeout((function (val) {
					this.wrapperStyle.opacity = val;
					this.visible = +val;
				}).bind(this, val), delay);
			}
		};
		
		IScroll.utils = utils;
		
		if ( typeof module != 'undefined' && module.exports ) {
			module.exports = IScroll;
		} else if ( true ) {
		        !(__WEBPACK_AMD_DEFINE_RESULT__ = function () { return IScroll; }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.IScroll = IScroll;
		}
		
		})(window, document, Math);
	
	
	/***/ },
	/* 141 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _nattyFetch = __webpack_require__(142);
		
		var _nattyFetch2 = _interopRequireDefault(_nattyFetch);
		
		var _objectAssign = __webpack_require__(144);
		
		var _objectAssign2 = _interopRequireDefault(_objectAssign);
		
		var _vuFunctionParser = __webpack_require__(145);
		
		var _vuFunctionParser2 = _interopRequireDefault(_vuFunctionParser);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function processDataSourceParams(dataSourceProps, componentProps) {
		  var params = {};
		
		  dataSourceProps.forEach(function (item) {
		    var name = item.name;
		    var value = item.value;
		    var isVariable = item.isVariable;
		
		    if (isVariable) {
		      value = componentProps[value];
		    }
		    params[name] = value;
		  });
		
		  return params;
		}
		
		function parser(dataSource, nattyOptions) {
		  var isData = dataSource.type === "DATA";
		  var isRpc = dataSource.type === "URL";
		  var isJsonp = dataSource.method === 'JSONP';
		
		  if (isData) {
		    //静态数据源，直接返回data
		    return function () {
		      return Promise.resolve(dataSource.data);
		    };
		  } else {
		    //动态数据源，构造rpcOption请求数据
		    return function (props) {
		      var rpcOption = {
		        url: dataSource.url,
		        jsonp: isJsonp,
		        method: isJsonp ? "GET" : dataSource.method,
		        data: processDataSourceParams(dataSource.params || [], props || {}),
		        withCredentials: false,
		        willFetch: dataSource.willFetch ? (0, _vuFunctionParser2.default)(dataSource.willFetch) : function () {},
		        process: dataSource.process ? (0, _vuFunctionParser2.default)(dataSource.process) : undefined
		      };
		
		      rpcOption = (0, _objectAssign2.default)({}, rpcOption, nattyOptions || {});
		
		      if (!rpcOption.url) {
		        return Promise.reject("数据源url缺失，请检查配置是否正确");
		      }
		
		      var context = _nattyFetch2.default.context();
		      context.create({
		        'dataSource': rpcOption
		      });
		
		      return context.api.dataSource();
		    };
		  }
		}
		
		exports.default = parser;
		module.exports = exports['default'];
	
	/***/ },
	/* 142 */
	/***/ function(module, exports, __webpack_require__) {
	
		/*! natty-fetch.js v2.2.0 | MIT License | https://github.com/jias/natty-fetch */
		(function (global, factory) {
		   true ? module.exports = factory(__webpack_require__(143)) :
		  typeof define === 'function' && define.amd ? define(['natty-storage'], factory) :
		  (global.nattyFetch = factory(global.nattyStorage));
		}(this, (function (nattyStorage) { 'use strict';
		
		nattyStorage = 'default' in nattyStorage ? nattyStorage['default'] : nattyStorage;
		
		/**
		 * src/util.js
		 *
		 * @license MIT License
		 * @author jias (https://github.com/jias/natty-fetch)
		 */
		var hasWindow$1 = 'undefined' !== typeof window;
		var doc = hasWindow$1 ? document : null;
		var escape = encodeURIComponent;
		var NULL$1 = null;
		var TRUE$1 = true;
		var FALSE$1 = !TRUE$1;
		var UNDEFINED = 'undefined';
		var EMPTY$1 = '';
		
		var toString = Object.prototype.toString;
		var ARRAY_TYPE = '[object Array]';
		var OBJECT_TYPE = '[object Object]';
		
		/**
		 * 伪造的`promise`对象
		 * NOTE 伪造的promise对象要支持链式调用 保证和`new Promise`返回的对象行为一致
		 *      dummyPromise.then().catch().finally()
		 */
		var dummyPromise$1 = {
		    dummy: TRUE$1
		};
		
		dummyPromise$1.then = dummyPromise$1['catch'] = function () {
		    // NOTE 这里用了剪头函数 不能用`return this`
		    return dummyPromise$1;
		};
		
		/**
		 * 判断是否是IE8~11, 不包含Edge
		 * @returns {boolean}
		 * @note IE11下 window.ActiveXObject的值很怪异, 所以需要追加 'ActiveXObject' in window 来判断
		 */
		var isIE = hasWindow$1 && (!!window.ActiveXObject || 'ActiveXObject' in window);
		
		function noop$1(v) {
		    return v;
		}
		
		/**
		 * 变换两个参数的函数到多个参数
		 * @param  {Function} fn 基函数
		 * @return {Function} 变换后的函数
		 * @demo
		 *      function add(x, y) { return x+y; }
		 *      add = redo(add);
		 *      add(1,2,3) => 6
		 */
		function redo(fn) {
		    return function () {
		        var args = arguments;
		        var ret = fn(args[0], args[1]);
		        for (var i = 2, l = args.length; i < l; i++) {
		            ret = fn(ret, args[i]);
		        }
		        return ret;
		    }
		}
		
		var random = Math.random;
		var floor = Math.floor;
		function makeRandom() {
		    return floor(random() * 9e9);
		}
		
		var absoluteUrlReg = /^(https?:)?\/\//;
		function isAbsoluteUrl$1(url) {
		    return !!url.match(absoluteUrlReg);
		}
		
		var relativeUrlReg = /^[\.\/]/;
		function isRelativeUrl$1(url) {
		    return !!url.match(relativeUrlReg);
		}
		
		var BOOLEAN = 'boolean';
		function isBoolean$1(v) {
		    return typeof v === BOOLEAN;
		}
		
		var STRING = 'string';
		function isString$1(v) {
		    return typeof v === STRING;
		}
		
		var FUNCTION = 'function';
		function isFunction$1(v) {
		    return typeof v === FUNCTION;
		}
		
		function runAsFn$1(v) {
		    return isFunction$1(v) ? v() : v;
		}
		
		var NUMBER = 'number';
		function isNumber(v) {
		    return !isNaN(v) && typeof v === NUMBER;
		}
		
		var OBJECT = 'object';
		function isObject(v) {
		    return typeof v === OBJECT && v !== NULL$1;
		}
		
		function isWindow(v) {
		    return v !== NULL$1 && v === v.window;
		}
		
		// 参考了zepto
		function isPlainObject$1(v) {
		    return v !== NULL$1 && isObject(v) && !isWindow(v) && Object.getPrototypeOf(v) === Object.prototype;
		}
		
		function isEmptyObject$1(v) {
		    var count = 0;
		    for (var i in v) {
		        if (v.hasOwnProperty(i)) {
		            count++;
		        }
		    }
		    return count === 0;
		}
		
		function isArray$1(v) {
		    return toString.call(v) === ARRAY_TYPE;
		}
		
		/**
		 * 判断是否跨域
		 * @type {Element}
		 * @note 需要特别关注IE8~11的行为是不一样的!!!
		 */
		var originA;
		if(doc) {
		    originA = doc.createElement('a');
		    originA.href = location.href;
		}
		function isCrossDomain(url) {
		
		    var requestA = doc.createElement('a');
		    requestA.href = url;
		
		    // 如果`url`的值不包含`protocol`和`host`(比如相对路径), 在标准浏览器下, 会自定补全`requestA`对象的`protocal`和`host`属性.
		    // 但在IE8~11下, 不会自动补全. 即`requestA.protocol`和`requestA.host`的值都是空的.
		    // 在IE11的不同小版本下, requestA.protocol的值有的是`:`, 有的是空字符串, 太奇葩啦!
		    return originA.hostname !== requestA.hostname || originA.port !== requestA.port || originA.protocol !== requestA.protocol;
		}
		
		/**
		 * 对象扩展
		 * @param  {Object} receiver
		 * @param  {Object} supplier
		 * @return {Object} 扩展后的receiver对象
		 * @note 这个extend方法是定制的, 不要拷贝到其他地方用!!!
		 * @note 这个extend方法是深拷贝方式的!!!
		 */
		function _extend(receiver, supplier, deepCopy) {
		    if ( receiver === void 0 ) receiver = {};
		    if ( supplier === void 0 ) supplier = {};
		    if ( deepCopy === void 0 ) deepCopy = FALSE$1;
		
		    for (var key in supplier) {
		        // `supplier`中不是未定义的键 都可以执行扩展
		        if (supplier.hasOwnProperty(key) && supplier[key] !== undefined) {
		            if (deepCopy === TRUE$1) {
		                if (isArray$1(supplier[key])) {
		                    receiver[key] = [].concat(supplier[key]);
		                } else if (isPlainObject$1(supplier[key])) {
		                    receiver[key] = extend$1({}, supplier[key]);
		                } else {
		                    receiver[key] = supplier[key];
		                }
		            } else {
		                receiver[key] = supplier[key];
		            }
		        }
		    }
		    return receiver;
		}
		
		var extend$1 = redo(_extend);
		function likeArray(v) {
		    if (!v) {
		        return false;
		    }
		    return typeof v.length === NUMBER;
		}
		
		/**
		 *
		 * @param v {Array|Object} 遍历目标对象
		 * @param fn {Function} 遍历器 会被传入两个参数, 分别是`value`和`key`
		 */
		function each(v, fn) {
		    var i, l;
		    if (likeArray(v)) {
		        for (i = 0, l = v.length; i < l; i++) {
		            if (fn.call(v[i], v[i], i) === false) { return; }
		        }
		    } else {
		        for (i in v) {
		            if (fn.call(v[i], v[i], i) === false) { return; }
		        }
		    }
		}
		
		/**
		 * 将对象的`键`排序后 返回一个新对象
		 *
		 * @param obj {Object} 被操作的对象
		 * @returns {Object} 返回的新对象
		 * @case 这个函数用于对比两次请求的参数是否一致
		 */
		function sortPlainObjectKey$1(obj) {
		    var clone = {};
		    var key;
		    var keyArray = [];
		    for (key in obj) {
		        if (obj.hasOwnProperty(key)) {
		            keyArray.push(key);
		            if (isPlainObject$1(obj[key])) {
		                obj[key] = sortPlainObjectKey$1(obj[key]);
		            }
		        }
		    }
		    keyArray.sort();
		    for (var i=0, l=keyArray.length; i<l; i++) {
		        clone[keyArray[i]] = obj[keyArray[i]];
		    }
		    return clone;
		}
		
		function serialize(params, obj, traditional, scope) {
		    var type, array = isArray$1(obj), hash = isPlainObject$1(obj);
		    each(obj, function(value, key) {
		        type = toString.call(value);
		        if (scope) {
		            key = traditional ? scope : scope + '[' + (hash || type == OBJECT_TYPE || type == ARRAY_TYPE ? key : '') + ']';
		        }
		
		        // 递归
		        if (!scope && array) {
		            params.add(value.name, value.value);
		        }
		        // recurse into nested objects
		        else if (type == ARRAY_TYPE || (!traditional && type == OBJECT_TYPE)) {
		            serialize(params, value, traditional, key);
		        } else {
		            params.add(key, value);
		        }
		    });
		}
		
		/**
		 * 功能和`Zepto.param`一样
		 * @param obj {Object}
		 * @param traditional {Boolean}
		 * @returns {string}
		 * $.param({ foo: { one: 1, two: 2 }}) // "foo[one]=1&foo[two]=2)"
		 * $.param({ ids: [1,2,3] })           // "ids[]=1&ids[]=2&ids[]=3"
		 * $.param({ ids: [1,2,3] }, true)     // "ids=1&ids=2&ids=3"
		 * $.param({ foo: 'bar', nested: { will: 'not be ignored' }})    // "foo=bar&nested[will]=not+be+ignored"
		 * $.param({ foo: 'bar', nested: { will: 'be ignored' }}, true)  // "foo=bar&nested=[object+Object]"
		 * $.param({ id: function(){ return 1 + 2 } })  // "id=3"
		 */
		function param(obj, traditional) {
		    var params = [];
		    params.add = function (key, value) {
		        if (isFunction$1(value)) { value = value(); }
		        if (value == NULL$1) { value = ''; }
		        params.push(escape(key) + '=' + escape(value));
		    };
		    serialize(params, obj, traditional);
		    return params.join('&').replace(/%20/g, '+');
		}
		
		function decodeParam(str) {
		    return decodeURIComponent(str.replace(/\+/g, ' '));
		}
		
		// 给URL追加查询字符串
		function appendQueryString(url, obj, urlStamp, traditional) {
		    // 是否添加时间戳
		    if (urlStamp) {
		        obj[isBoolean$1(urlStamp) ? '_stamp' : urlStamp] = +new Date();
		    }
		    var queryString = param(obj, traditional);
		
		    if (queryString) {
		        return url + (~url.indexOf('?') ? '&' : '?') + queryString;
		    } else {
		        return url;
		    }
		}
		
		var util = Object.freeze({
			hasWindow: hasWindow$1,
			doc: doc,
			escape: escape,
			NULL: NULL$1,
			TRUE: TRUE$1,
			FALSE: FALSE$1,
			UNDEFINED: UNDEFINED,
			EMPTY: EMPTY$1,
			dummyPromise: dummyPromise$1,
			isIE: isIE,
			noop: noop$1,
			redo: redo,
			makeRandom: makeRandom,
			isAbsoluteUrl: isAbsoluteUrl$1,
			isRelativeUrl: isRelativeUrl$1,
			isBoolean: isBoolean$1,
			isString: isString$1,
			isFunction: isFunction$1,
			runAsFn: runAsFn$1,
			isNumber: isNumber,
			isObject: isObject,
			isWindow: isWindow,
			isPlainObject: isPlainObject$1,
			isEmptyObject: isEmptyObject$1,
			isArray: isArray$1,
			isCrossDomain: isCrossDomain,
			extend: extend$1,
			likeArray: likeArray,
			each: each,
			sortPlainObjectKey: sortPlainObjectKey$1,
			serialize: serialize,
			param: param,
			decodeParam: decodeParam,
			appendQueryString: appendQueryString
		});
		
		/**
		 * src/defer.js
		 *
		 * @license MIT License
		 * @author jias (https://github.com/jias/natty-fetch)
		 */
		var Defer = function Defer(Promise) {
		  var t = this;
		  t.promise = new Promise(function (resolve, reject) {
		    t._resolve = resolve;
		    t._reject = reject;
		  });
		};
		
		Defer.prototype.resolve = function resolve (value) {
		  this._resolve.call(this.promise, value);
		};
		
		Defer.prototype.reject = function reject (reason) {
		  this._reject.call(this.promise, reason);
		};
		
		/**
		 * src/event.js
		 *
		 * @license MIT License
		 * @author jias (https://github.com/jias/natty-fetch)
		 */
		var PREFIX = '_';
		function rename (type) { return PREFIX + type; }
		
		var event = {
		    on : function () {
		        var t    = this;
		        var args = arguments;
		        if (typeof args[0] === 'string' && typeof args[1] === 'function') {
		            var type = rename(args[0]);
		            t[type]  = t[type] || [];
		            t[type].push(args[1]);
		        } else if (typeof args[0] === 'object') {
		            var hash = args[0];
		            for (var i in hash) {
		                t.on(i, hash[i]);
		            }
		        }
		    },
		    off : function (type, fn) {
		        var t = this;
		        var type = rename(type);
		        if (!fn) {
		            delete t[type];
		        } else {
		            var fns = t[type];
		            fns.splice(fns.indexOf(fn), 1);
		            if (!t[type].length) { delete t[type]; }
		        }
		    },
		    // @param {array} args
		    fire : function (type, args, context) {
		        var t = this;
		        var fns = t[rename(type)];
		        if (!fns) { return 'NO_EVENT'; }
		        for (var i=0, fn; fn = fns[i]; i++) {
		            fn.apply(context || t, [].concat(args));
		        }
		    },
		    hasEvent : function (type) {
		        return !!this[rename(type)];
		    }
		};
		
		/**
		 * src/ajax.js
		 *
		 * @license MIT License
		 * @author jias (https://github.com/jias/natty-fetch)
		 */
		var supportCORS = UNDEFINED !== typeof XMLHttpRequest && 'withCredentials' in (new XMLHttpRequest());
		var GET = 'GET';
		var SCRIPT = 'script';
		var XML = 'xml';
		var JS0N = 'json'; // NOTE 不能使用`JSON`，这里用数字零`0`代替了字母`O`
		
		// minetype的简写映射
		// TODO 考虑是否优化
		var acceptToRequestHeader = {
		    // IIS returns `application/x-javascript` 但应该不需要支持
		    '*':    '*/' + '*',
		    script: 'text/javascript, application/javascript, application/ecmascript, application/x-ecmascript',
		    json:   'application/json, text/json',
		    xml:    'application/xml, text/xml',
		    html:   'text/html',
		    text:   'text/plain'
		};
		
		// 设置请求头
		// 没有处理的事情：跨域时使用者传入的多余的Header没有屏蔽 没必要
		var setHeaders = function (xhr, options) {
		
		    var header = {
		        Accept: acceptToRequestHeader[options.accept]
		    };
		    // 如果没有跨域 则打该标识 业界通用做法
		    // TODO 如果是跨域的 只有有限的requestHeader是可以使用的 待补充注释
		    if (!isCrossDomain(options.url)) {
		        header['X-Requested-With'] = 'XMLHttpRequest';
		    }
		
		    extend$1(header, options.header);
		
		    // 如果是`POST`请求，需要`urlencode`
		    if (options.method === 'POST' && !options.header['Content-Type']) {
		        header['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';
		    }
		
		    for (var key in header) {
		        xhr.setRequestHeader(key, header[key]);
		    }
		};
		
		// 绑定事件
		// NOTE 还得继续使用readystatechange事件
		//      比较遗憾 到现在了依然不能安全的使用load和error等事件 就连PC端的chrome都有下面的问题
		//      500: 触发load loadend 不触发error
		//      404: 触发load loadend 不触发error
		var setEvents = function (xhr, options) {
		
		    // 再高级的浏览器都有低级错误! 已经不能在相信了!
		    // MAC OSX Yosemite Safari上的低级错误: 一次`ajax`请求的`loadend`事件完成之后,
		    // 如果执行`xhr.abort()`, 居然还能触发一遍`abort`和`loadend`事件!!!
		    // `_finished`标识一次完整的请求是否结束, 如果已结束, 则不再触发任何事件
		    xhr._finished = FALSE$1;
		
		    var readyStateChangeFn = function () {
		        if (xhr._finished) {
		            return;
		        }
		        //console.log('xhr.readyState', xhr.readyState, 'xhr.status', xhr.status, xhr);
		        if (xhr.readyState === 4) {
		            // 如果请求被取消(aborted) 则`xhr.status`会是0 所以不会进入`success`回调
		            if ((xhr.status >= 200 && xhr.status < 300) || xhr.status === 304) {
		                //let mime = xhr.getResponseHeader('Content-Type');
		                var data = xhr.responseText;
		                switch (options.accept) {
		                    case JS0N:
		                        try {
		                            data = JSON.parse(data);
		                        } catch (e) {
		                            console.warn('The response can NOT be parsed to JSON object.', data);
		                        }
		                        break;
		                    case SCRIPT:
		                        (1, eval)(data);
		                        break;
		                    case XML:
		                        data = xhr.responseXML;
		                        break;
		                    //case HTML:
		                    //case TEXT:
		                    default:
		                        break;
		                }
		                options.success(data, xhr);
		            } else {
		                // 因为取消时会先触发原生的`onreadystatechange`响应，后触发`onAbort`回调，所以
		                // 如果请求被取消(aborted) 则`xhr.status`会是0 程序走到这里的时候，`xhr._aborted`状态是false，
		                // 需要排除，不应该触发`error`回调
		                !xhr._aborted && options.error(xhr.status, xhr);
		            }
		        }
		    };
		
		
		    // readyState value:
		    //   0: UNSET 未初始化
		    //   1: OPENED
		    //   2: HEADERS_RECEIVED
		    //   3: LOADING
		    //   4: DONE 此时触发load事件
		    xhr.addEventListener("readystatechange", readyStateChangeFn);
		
		    //xhr.addEventListener('error', function () {
		    //    console.log('xhr event: error');
		    //});
		
		    //xhr.addEventListener('load', function () {
		    //    console.log('xhr event: load');
		    //});
		
		    var abortFn = function () {
		        if (xhr._finished) {
		            return;
		        }
		        //options.log && console.info('~abort');
		        options.abort(xhr.status, xhr);
		    };
		
		    xhr.addEventListener('abort', abortFn);
		
		    var loadedFn = function () {
		        if (xhr._finished) {
		            return;
		        }
		        xhr._finished = true;
		        //options.log && console.info('~loadend');
		        options.complete(xhr.status, xhr);
		        delete xhr._aborted;
		    };
		
		    xhr.addEventListener('loadend', loadedFn);
		};
		
		var defaultOptions = {
		    url: '',
		    mark: {},
		    useMark: true,
		    method: GET,
		    accept: '*',
		    data: null,
		    header: {},
		    withCredentials: NULL$1, // 根据`url`是否跨域决定默认值. 如果显式配置该值(必须是布尔值), 则个使用配置值
		    urlStamp: true,
		    success: noop$1,
		    error: noop$1,
		    complete: noop$1,
		    abort: noop$1,
		    log: FALSE$1,
		    traditional: FALSE$1
		};
		
		function ajax(options) {
		
		    options = extend$1({}, defaultOptions, options);
		
		    // 是否跨域
		    var isCD = isCrossDomain(options.url);
		
		    var xhr = new XMLHttpRequest();
		
		    setEvents(xhr, options);
		
		    xhr.open(options.method, appendQueryString(
		        options.url,
		        extend$1({}, options.useMark ? options.mark : {}, options.method === GET ? options.data : {}),
		        options.urlStamp,
		        options.traditional
		    ));
		
		    // NOTE 生产环境的Server端, `Access-Control-Allow-Origin`的值一定不要配置成`*`!!! 而且`Access-Control-Allow-Credentials`应该是true!!!
		    // NOTE 如果Server端的`responseHeader`配置了`Access-Control-Allow-Origin`的值是通配符`*` 则前端`withCredentials`是不能使用true值的
		    // NOTE 如果Client端`withCredentials`使用了true值 则后端`responseHeader`中必须配置`Access-Control-Allow-Credentials`是true
		        xhr.withCredentials = isBoolean$1(options.withCredentials) ? options.withCredentials : isCD;
		
		    // 设置requestHeader
		    setHeaders(xhr, options);
		
		    // 文档建议说 send方法如果不发送请求体数据 则null参数在某些浏览器上是必须的
		    xhr.send(options.method === GET ? NULL$1 : options.data !== NULL$1 ? param(options.data, options.traditional) : NULL$1);
		
		    var originAbort = xhr.abort;
		
		    // 重写`abort`方法
		    xhr.abort = function () {
		        xhr._aborted = true;
		        // NOTE 直接调用`originAbort()`时 浏览器会报 `Illegal invocation` 错误
		        originAbort.call(xhr);
		    };
		
		    return xhr;
		}
		
		// 移动端不需要fallback
		ajax.fallback = false;
		ajax.supportCORS = supportCORS;
		
		/**
		 * file: ajax.js
		 * ref https://xhr.spec.whatwg.org
		 * ref https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest
		 * ref https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest
		 * ref https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS
		 * ref https://hacks.mozilla.org/2009/07/cross-site-xmlhttprequest-with-cors/
		 * ref http://www.html5rocks.com/en/tutorials/cors/
		 * @link http://enable-cors.org/index.html
		 */
		
		/**
		 * src/jsonp.js
		 *
		 * @license MIT License
		 * @author jias (https://github.com/jias/natty-fetch)
		 */
		var win = hasWindow$1 ? window : NULL$1;
		var doc$1 = hasWindow$1 ? document : NULL$1;
		var SCRIPT$1 = 'script';
		
		var removeScript = function (script) {
		    script.onerror = NULL$1;
		    script.parentNode.removeChild(script);
		    script = NULL$1;
		};
		var head = NULL$1;
		var insertScript = function (url, options) {
		    var script = doc$1.createElement(SCRIPT$1);
		    script.src = url;
		    script.async = true;
		
		    script.onerror = function (e) {
		        win[options.callbackName] = NULL$1;
		        options.error(e);
		        options.complete();
		    };
		
		    head = head || doc$1.getElementsByTagName('head')[0];
		    head.insertBefore(script, head.firstChild);
		    return script;
		};
		
		var defaultOptions$1 = {
		    url: '',
		    mark: {},
		    useMark: true,
		    data: {},
		    urlStamp: true,
		    success: noop$1,
		    error: noop$1,
		    complete: noop$1,
		    log: false,
		    flag: 'callback',
		    callbackName: 'jsonp{id}',
		    traditional: FALSE$1
		};
		
		function jsonp(options) {
		
		    options = extend$1({}, defaultOptions$1, options);
		
		    var callbackName = options.callbackName = options.callbackName.replace(/\{id\}/, makeRandom());
		
		    var originComplete = options.complete;
		
		    var script;
		
		    // 二次包装的`complete`回调
		    options.complete = function () {
		        // 删除脚本
		        removeScript(script);
		        originComplete();
		    };
		
		    // 成功回调
		    win[callbackName] = function (data) {
		        // JSONP函数需要立即删除 用于`IE8`判断是否触发`onerror`
		        win[callbackName] = NULL$1;
		        options.success(data);
		        options.complete();
		    };
		
		    // 生成`url`
		    var obj;
		    var url = appendQueryString(
		        options.url,
		        extend$1(( obj = {}, obj[options.flag] = callbackName, obj ), options.useMark ? options.mark : {}, options.data),
		        options.urlStamp,
		        options.traditional
		    );
		
		    // 插入脚本
		    script = insertScript(url, options);
		    
		    return {
		        abort: function abort() {
		            // 覆盖成功回调为无数据处理版本
		            win[callbackName] = function () {
		                win[callbackName] = NULL$1;
		            };
		            removeScript(script);
		        }
		    };
		}
		
		/**
		 * src/plugin.loop.js
		 * 创建轮询支持
		 *
		 * @license MIT License
		 * @author jias (https://github.com/jias/natty-fetch)
		 */
		/**
		 * 创建轮询支持
		 * @param api {Function} 需要轮询的函数
		 */
		var pluginLoop = function(apiInstance) {
		    var api = apiInstance.api;
		    api.loop = function (options, resolveFn, rejectFn) {
		        if ( resolveFn === void 0 ) resolveFn = noop$1;
		        if ( rejectFn === void 0 ) rejectFn = noop$1;
		
		        if (!options.duration || !isNumber(options.duration)) {
		            throw new Error('Illegal `duration` value for `startLoop` method.')
		        }
		
		        var loopTimer = NULL$1;
		
		        var stop = function () {
		            clearTimeout(loopTimer);
		            loopTimer = NULL$1;
		            stop.looping = FALSE$1;
		        };
		
		        var sleepAndRequest = function () {
		            stop.looping = TRUE$1;
		            loopTimer = setTimeout(function () {
		                api(options.data).then(resolveFn, rejectFn);
		                sleepAndRequest();
		            }, options.duration);
		        };
		
		        // NOTE 轮询过程中是不响应服务器端错误的 所以第二个参数是`noop`
		        api(options.data).then(resolveFn, rejectFn);
		        sleepAndRequest();
		        
		        return stop
		    };
		};
		
		/**
		 * src/plugin.soon.js
		 *
		 * @license MIT License
		 * @author jias (https://github.com/jias/natty-fetch)
		 */
		var pluginSoon = function(apiInstance) {
		    var t = this;
		    var api = apiInstance.api;
		    var config = api.config;
		    api.soon = function(data, successFn, errorFn) {
		        if ( successFn === void 0 ) successFn = noop$1;
		        if ( errorFn === void 0 ) errorFn = noop$1;
		
		
		        // 是否忽略自身的并发请求
		        // NOTE 这个地方和内置的api方法不一致
		        if (config.ignoreSelfConcurrent && config.pending) {
		            return;
		        }
		
		        if (config.overrideSelfConcurrent && config._lastRequester) {
		            config._lastRequester.abort();
		            delete config._lastRequester;
		        }
		
		        // 一次请求的私有相关数据
		        var vars = t.makeVars(data);
		
		        var remoteRequest = function () {
		            t.remoteRequest(vars, config).then(function (content) {
		                successFn({
		                    fromStorage: FALSE$1,
		                    content: content
		                });
		            })['catch'](function (e) {
		                errorFn(e);
		            });
		        };
		
		        if (api.storageUseable) {
		
		            // 只有GET和JSONP才会有storage生效
		            vars.queryString = isEmptyObject$1(vars.data) ? 'no-query-string' : JSON.stringify(sortPlainObjectKey$1(vars.data));
		
		            api.storage.has(vars.queryString).then(function (result) {
		
		                // console.warn('has cached: ', hasValue);
		                if (result.has) {
		                    successFn({
		                        fromStorage: TRUE$1,
		                        content: result.value
		                    });
		                }
		
		                // 在`storage`可用的情况下, 远程请求返回的数据会同步到`storage`
		                remoteRequest();
		            });
		        } else {
		            remoteRequest();
		        }
		    };
		};
		
		/**
		 * src/natty-fetch.js
		 *
		 * @license MIT License
		 * @author jias (https://github.com/jias/natty-fetch)
		 */
		if (nattyStorage === undefined) {
		    console.warn('Please install the `natty-storage` script which is required by `natty-fetch`, go on with' +
		        ' https://www.npmjs.com/package/natty-storage');
		}
		
		var extend$$1 = extend$1;
		var runAsFn$$1 = runAsFn$1;
		var isAbsoluteUrl$$1 = isAbsoluteUrl$1;
		var isRelativeUrl$$1 = isRelativeUrl$1;
		var noop$$1 = noop$1;
		var isBoolean$$1 = isBoolean$1;
		var isArray$$1 = isArray$1;
		var isFunction$$1 = isFunction$1;
		var sortPlainObjectKey$$1 = sortPlainObjectKey$1;
		var isEmptyObject$$1 = isEmptyObject$1;
		var isPlainObject$$1 = isPlainObject$1;
		var dummyPromise$$1 = dummyPromise$1;
		var isString$$1 = isString$1;
		var NULL$$1 = NULL$1;
		var TRUE$$1 = TRUE$1;
		var FALSE$$1 = FALSE$1;
		var EMPTY$$1 = EMPTY$1;
		var hasWindow$$1 = hasWindow$1;
		
		// 内置插件
		// 全局默认配置
		var defaultGlobalConfig = {
		
		    // 默认参数
		    data: {},
		
		    // 请求完成钩子函数
		    didFetch: noop$$1,
		
		    // 预处理回调
		    fit: noop$$1,
		
		    // 自定义header, 只针对非跨域的ajax有效, 跨域时将忽略自定义header
		    header: {},
		
		    // 是否忽律接口自身的并发请求
		    ignoreSelfConcurrent: FALSE$$1,
		
		    // 有两种格式配置`jsonp`的值
		    // {Boolean}
		    // {Array} eg: [TRUE, 'cb', 'j{id}']
		    jsonp: FALSE$$1,
		
		    // 是否开启log信息
		    log: FALSE$$1,
		
		    // 非GET方式对JSONP无效
		    method: 'GET',
		
		    // 是否开启mock模式
		    mock: FALSE$$1,
		
		    mockUrl: EMPTY$$1,
		
		    // 全局`mockUrl`前缀
		    mockUrlPrefix: EMPTY$$1,
		
		    // 成功回调
		    process: noop$$1,
		
		    // 私有Promise对象, 如果不想用浏览器原生的Promise对象的话
		    Promise: hasWindow$$1 ? window.Promise : NULL$$1,
		
		    // 默认不执行重试
		    retry: 0,
		
		    // 使用已有的request方法
		    customRequest: NULL$$1,
		
		    // 0表示不启动超时处理
		    timeout: 0,
		
		    // http://zeptojs.com/#$.param
		    traditional: FALSE$$1,
		
		    url: EMPTY$$1,
		
		    // 全局`url`前缀
		    urlPrefix: EMPTY$$1,
		
		    // 是否在`url`上添加时间戳, 用于避免浏览器的304缓存
		    urlStamp: TRUE$$1,
		
		    // TODO 文档中没有暴露
		    withCredentials: NULL$$1,
		
		    // 请求之前调用的钩子函数
		    willFetch: noop$$1,
		
		    // 扩展: storage
		    storage: false,
		
		    // 插件
		    // 目前只支持两种插件
		    // plugins: [
		    //     nattyFetch.plugin.loop
		    //     nattyFetch.plugin.soon
		    // ]
		    plugins: false
		};
		
		var runtimeGlobalConfig = extend$$1({}, defaultGlobalConfig);
		
		var API = function API(path, options, contextConfig, contextId) {
		    var t = this;
		    t.contextConfig = contextConfig;
		    t._path = path;
		
		    var config = t.config = t.processAPIOptions(options);
		
		    /**
		     * 一个`DB`的`api`的实现
		     * @param data {Object|Function}
		     * @returns {Object} Promise Object
		     */
		    t.api = function (data) {
		        data = data || {};
		        // 是否忽略自身的并发请求
		        if (config.ignoreSelfConcurrent && t.api.pending) {
		            return dummyPromise$$1;
		        }
		
		        if (config.overrideSelfConcurrent && t.api._requester) {
		            t.api.abort();
		        }
		
		        var vars = t.makeVars(data);
		
		        if (config.retry === 0) {
		            return t.request(vars, config);
		        } else {
		            return t.tryRequest(vars, config);
		        }
		    };
		
		    t.api.contextId = contextId;
		    t.api._path = path;
		
		    // 标记是否正在等待请求返回
		    t.api.pending = FALSE$$1;
		    t.api._requester = NULL$$1;
		
		    // 取消响应
		    t.api.abort = function () {
		        if (t.api.pending && t.api._requester) {
		            t.api._requester.abort();
		        }
		    };
		
		    t.api.config = config;
		
		    t.initStorage();
		
		    // 启动插件
		    var plugins = isArray$$1(config.plugins) ? config.plugins : [];
		    for (var i = 0, l = plugins.length; i<l; i++) {
		        isFunction$$1(plugins[i]) && plugins[i].call(t, t);
		    }
		};
		
		API.prototype.makeVars = function makeVars (data) {
		    var t = this;
		    var config = t.config;
		
		    // 一次请求的私有相关数据
		    var vars = {
		        mark: {
		            _api: t._path
		        }
		    };
		
		    if (config.mock) {
		        vars.mark._mock = TRUE$$1;
		    }
		
		    // if (config.urlStamp) {
		    // vars.mark._stamp = +new Date();
		    // }
		
		    // `data`必须在请求发生时实时创建
		    data = extend$$1({}, config.data, runAsFn$$1(data));
		
		    // 将数据参数存在私有标记中, 方便API的`process`方法内部使用
		    vars.data = data;
		
		    return vars;
		};
		
		/**
		 * 处理API的配置
		 * @param options {Object}
		 */
		API.prototype.processAPIOptions = function processAPIOptions (options) {
		
		    var t = this;
		
		    // 插件是不能覆盖的, 应该追加
		    var plugins = [].concat(t.contextConfig.plugins || [], options.plugins || []);
		
		    var config = extend$$1({}, t.contextConfig, options, {
		        plugins: plugins
		    });
		
		    if (config.mock) {
		        config.mockUrl = t.getFullUrl(config);
		    }
		
		    config.url = t.getFullUrl(config);
		
		    // 按照[boolean, callbackKeyWord, callbackFunctionName]格式处理
		    if (isArray$$1(options.jsonp)) {
		        config.jsonp = isBoolean$$1(options.jsonp[0]) ? options.jsonp[0] : FALSE$$1;
		        // 这个参数只用于jsonp
		        if (config.jsonp) {
		            config.jsonpFlag = options.jsonp[1];
		            config.jsonpCallbackName = options.jsonp[2];
		        }
		    }
		
		    // 配置自动增强 如果`url`的值有`.jsonp`结尾 则认为是`jsonp`请求
		    // NOTE jsonp是描述正式接口的 不影响mock接口!!!
		    if (!config.mock && !!config.url.match(/\.jsonp(\?.*)?$/)) {
		        config.jsonp = TRUE$$1;
		    }
		
		    return config;
		};
		
		API.prototype.initStorage = function initStorage () {
		    var t = this;
		    var config = t.config;
		
		    // 开启`storage`的前提条件
		    var storagePrecondition = config.method === 'GET' || config.jsonp;
		
		    // 不满足`storage`使用条件的情况下, 开启`storage`将抛出错误
		    if (!storagePrecondition && config.storage === TRUE$$1) {
		        throw new Error('A `' + config.method + '` request CAN NOT use `storage` which is only for `GET/jsonp`' +
		            ' request! Please check the options for `' + t._path + '`');
		    }
		
		    // 简易开启缓存的写法
		    if (config.storage === TRUE$$1) {
		        config.storage = {
		            type: 'variable'
		        };
		    }
		
		    // 决定什么情况下缓存可以开启
		    t.api.storageUseable = isPlainObject$$1(config.storage)
		        && (config.method === 'GET' || config.jsonp)
		        && nattyStorage.support[config.storage.type];
		    // 创建缓存实例
		    if (t.api.storageUseable) {
		        // 当使用`localStorage`时, 强制指定`key`值。如果没指定, 抛错!
		        // 当使用`variable`或`sessionStorage`时, 如果没指定`key`, 则自动生成内部`key`
		        // !!!为什么在使用`localStorage`时必须指定`key`值???
		        // !!!因为当key发生变化时, `localStorage`很容易产生死数据, 必须强制开发者有意识的去维护`key`值
		        if (config.storage.type === 'localStorage') {
		            if (!config.storage.hasOwnProperty('key') || !config.storage.key) {
		                throw new Error('`key` is required when `storage.type` is `localStorage`.');
		            }
		        } else {
		            config.storage.key = config.storage.key || [t.api.contextId, t._path].join('_');
		        }
		
		        // `key`和`tag`的选择原则:
		        // `key`只选用相对稳定的值, 减少因为`key`的改变而增加的残留缓存
		        // 经常变化的值用于`tag`, 如一个接口在开发过程中可能使用方式不一样, 会在`jsonp`和`get`之间切换。
		        t.api.storage = nattyStorage(extend$$1({}, config.storage, {
		            async: TRUE$$1,
		            tag: [
		                config.storage.tag,
		                config.jsonp ? 'jsonp' : config.method,
		                config.url
		            ].join('_') // 使用者的`tag`和内部的`tag`, 要同时生效
		        }));
		    }
		};
		
		/**
		 * 请求数据(从storage或者从网络)
		 * @param vars {Object} 发送的数据
		 * @param config {Object} 已经处理完善的请求配置
		 * @returns {Object} defer对象
		 */
		API.prototype.request = function request (vars, config) {
		    var t = this;
		
		    if (t.api.storageUseable) {
		
		        // 只有GET和JSONP才会有storage生效
		        vars.queryString = isEmptyObject$$1(vars.data) ? 'no-query-string' : JSON.stringify(sortPlainObjectKey$$1(vars.data));
		
		        return t.api.storage.has(vars.queryString).then(function (data) {
		            // alert(JSON.stringify(data, null, 4) + JSON.stringify(sessionStorage, null, 4));
		            // console.warn('has cached: ', hasValue);
		            if (data.has) {
		                return data.value;
		            } else {
		                return t.remoteRequest(vars, config);
		            }
		        });
		    } else {
		        return t.remoteRequest(vars, config);
		    }
		};
		
		/**
		 * 获取正式接口的完整`url`
		 * @param config {Object}
		 */
		API.prototype.getFullUrl = function getFullUrl (config) {
		    var url = config.mock ? config.mockUrl : config.url;
		    if (!url) { return EMPTY$$1; }
		    var prefixKey = config.mock ? 'mockUrlPrefix' : 'urlPrefix';
		    return (config[prefixKey] && !isAbsoluteUrl$$1(url) && !isRelativeUrl$$1(url)) ? config[prefixKey] + url : url;
		};
		
		/**
		 * 发起网络请求
		 * @param vars
		 * @param config
		 * @returns {Promise}
		 */
		API.prototype.remoteRequest = function remoteRequest (vars, config) {
		    var t = this;
		
		    // 调用 willFetch 钩子
		    config.willFetch(vars, config, 'remote');
		
		    // 等待状态在此处开启 在相应的`requester`的`complete`回调中关闭
		    t.api.pending = TRUE$$1;
		
		    var defer = new Defer(config.Promise);
		
		    // 创建请求实例requester
		    if (config.customRequest) {
		        // 使用已有的request方法
		        t.api._requester = config.customRequest(vars, config, defer);
		    } else if (config.jsonp) {
		        t.api._requester = t.sendJSONP(vars, config, defer);
		    } else {
		        t.api._requester = t.sendAjax(vars, config, defer);
		    }
		
		    // 超时处理
		    if (0 !== config.timeout) {
		        setTimeout(function () {
		            if (t.api.pending && t.api._requester) {
		                // 取消请求
		                t.api.abort();
		
		                var error = {
		                    timeout: TRUE$$1,
		                    message: 'Timeout By ' + config.timeout + 'ms.'
		                };
		
		                defer.reject(error);
		                event.fire('g.reject', [error, config]);
		                event.fire(t.api.contextId + '.reject', [error, config]);
		            }
		        }, config.timeout);
		    }
		
		    return defer.promise;
		};
		
		/**
		 * 重试功能的实现
		 * @param vars {Object} 发送的数据
		 * @param config
		 * @returns {Object} defer对象
		 */
		API.prototype.tryRequest = function tryRequest (vars, config) {
		    var t = this;
		
		    return new config.Promise(function (resolve, reject) {
		        var retryTime = 0;
		        var request = function () {
		            // 更新的重试次数
		            vars.mark._retryTime = retryTime;
		            t.request(vars, config).then(function (content) {
		                resolve(content);
		                event.fire('g.resolve', [content, config], config);
		                event.fire(t.api.contextId + '.resolve', [content, config], config);
		            }, function (error) {
		                if (retryTime === config.retry) {
		                    reject(error);
		                } else {
		                    retryTime++;
		                    request();
		                }
		            });
		        };
		
		        request();
		    });
		};
		
		/**
		 * 处理结构化的响应数据
		 * @param config
		 * @param response
		 * @param defer
		 */
		API.prototype.processResponse = function processResponse (vars, config, defer, response) {
		    var t = this;
		
		    // 调用 didFetch 钩子函数
		    config.didFetch(vars, config);
		
		    // 非标准格式数据的预处理
		    response = config.fit(response, vars);
		
		    if (response.success) {
		        // 数据处理
		        var content = config.process(response.content, vars);
		
		        var resolveDefer = function () {
		            defer.resolve(content);
		            event.fire('g.resolve', [content, config], config);
		            event.fire(t.api.contextId + '.resolve', [content, config], config);
		        };
		
		        if (t.api.storageUseable) {
		            t.api.storage.set(vars.queryString, content).then(function () {
		                resolveDefer();
		            })['catch'](function (e) {
		                resolveDefer();
		            });
		        } else {
		            resolveDefer();
		        }
		    } else {
		        var error = extend$$1({
		            message: '`success` is false, ' + t._path
		        }, response.error);
		        // NOTE response是只读的对象!!!
		        defer.reject(error);
		        event.fire('g.reject', [error, config]);
		        event.fire(t.api.contextId + '.reject', [error, config]);
		    }
		};
		
		/**
		 * 发起Ajax请求
		 * @param config {Object} 请求配置
		 * @param defer {Object} defer对象
		 * @param retryTime {undefined|Number} 如果没有重试 将是undefined值 见`createAPI`方法
		 *                                 如果有重试 将是重试的当前次数 见`tryRequest`方法
		 * @returns {Object} xhr对象实例
		 */
		API.prototype.sendAjax = function sendAjax (vars, config, defer) {
		    var t = this;
		    var url = config.mock ? config.mockUrl : config.url;
		
		    return ajax({
		        traditional: config.traditional,
		        urlStamp: config.urlStamp,
		        mark: vars.mark,
		        useMark: config.mark,
		        log: config.log,
		        url: url,
		        method: config.method,
		        data: vars.data,
		        header: config.header,
		        withCredentials: config.withCredentials,
		        // 强制约定json
		        accept: 'json',
		        success: function success(response/*, xhr*/) {
		            t.processResponse(vars, config, defer, response);
		        },
		        error: function error(status) {
		            // 如果跨域使用了自定义的header，且服务端没有配置允许对应的header，此处status为0，目前无法处理。
		            var error = {
		                status: status,
		                message: ("Error(status " + status + ") in request for " + (vars.mark._api) + "(" + url + ")")
		            };
		
		            defer.reject(error);
		            event.fire('g.reject', [error, config]);
		            event.fire(t.api.contextId + '.reject', [error, config]);
		        },
		        complete: function complete(/*status, xhr*/) {
		            if (vars.retryTime === undefined || vars.retryTime === config.retry) {
		                //C.log('ajax complete');
		
		                t.api.pending = FALSE$$1;
		                t.api._requester = NULL$$1;
		            }
		            //console.log('__complete: pending:', config.pending, 'retryTime:', retryTime, Math.random());
		        }
		    });
		};
		
		/**
		 * 发起jsonp请求
		 * @param vars {Object} 一次请求相关的私有数据
		 * @param config {Object} 请求配置
		 * @param defer {Object} defer对象
		 * @param retryTime {undefined|Number} 如果没有重试 将是undefined值 见`createAPI`方法
		 *                                 如果有重试 将是重试的当前次数 见`tryRequest`方法
		 * @returns {Object} 带有abort方法的对象
		 */
		API.prototype.sendJSONP = function sendJSONP (vars, config, defer) {
		    var t = this;
		    var url = config.mock ? config.mockUrl : config.url;
		    return jsonp({
		        traditional: config.traditional,
		        log: config.log,
		        mark: vars.mark,
		        useMark: config.mark,
		        url: url,
		        data: vars.data,
		        urlStamp: config.urlStamp,
		        flag: config.jsonpFlag,
		        callbackName: config.jsonpCallbackName,
		        success: function success(response) {
		            t.processResponse(vars, config, defer, response);
		        },
		        error: function error() {
		            var error = {
		                message: ("Not accessable JSONP in request for " + (vars.mark._api) + "(" + url + ")")
		            };
		
		            defer.reject(error);
		            event.fire('g.reject', [error, config]);
		            event.fire(t.api.contextId + '.reject', [error, config]);
		        },
		        complete: function complete() {
		            if (vars.retryTime === undefined || vars.retryTime === config.retry) {
		                t.api.pending = FALSE$$1;
		                t.api._requester = NULL$$1;
		            }
		        }
		    });
		};
		
		/**
		 * 关键词
		 *     语意化的
		 *     优雅的
		 *     功能增强的
		 *     底层隔离的
		 */
		var context = (function () {
		    var count = 0;
		
		    return function(contextId, options) {
		
		        if (isString$$1(contextId)) {
		            options = options || {};
		        } else {
		            options = contextId || {};
		            contextId = 'c' + count++;
		        }
		
		        var storage = nattyStorage({
		            type: 'variable',
		            key: contextId
		        });
		
		        var ctx = {};
		
		        ctx.api = storage.get();
		
		        ctx._contextId = contextId;
		
		        // 插件是不能覆盖的, 应该追加
		        var plugins = [].concat(runtimeGlobalConfig.plugins || [], options.plugins || []);
		
		        ctx._config = extend$$1({}, runtimeGlobalConfig, options, {
		            plugins: plugins
		        });
		
		        /**
		         * 创建api
		         * @param namespace {String} optional
		         * @param APIs {Object} 该`namespace`下的`api`配置
		         */
		        ctx.create = function(namespace, APIs) {
		            var hasNamespace = arguments.length === 2 && isString$$1(namespace);
		
		            if (!hasNamespace) {
		                APIs = namespace;
		            }
		
		            for (var path in APIs) {
		                storage.set(
		                    hasNamespace ? namespace + '.' + path : path,
		                    new API(
		                        hasNamespace ? namespace + '.' + path : path,
		                        runAsFn$$1(APIs[path]),
		                        ctx._config,
		                        contextId
		                    ).api
		                );
		            }
		
		            ctx.api = storage.get();
		        };
		
		        // 绑定上下文事件
		        ctx.on = function(name, fn) {
		            if (!isFunction$$1(fn)) { return; }
		            event.on(ctx._contextId + '.' + name, fn);
		            return ctx;
		        };
		
		        return ctx;
		    }
		})();
		
		/**
		 * 简易接口
		 * @param options
		 */
		var nattyFetch = {};
		
		nattyFetch.create = function (options) {
		    return new API('nattyFetch', runAsFn$$1(options), defaultGlobalConfig, 'global').api;
		};
		
		extend$$1(nattyFetch, {
		    onlyForModern: !false,
		    version: '2.2.0',
		    _util: util,
		    _event: event,
		    context: context,
		    ajax: ajax,
		    jsonp: jsonp,
		
		    /**
		     * 执行全局配置
		     * @param options
		     */
		    setGlobal: function setGlobal(options) {
		        runtimeGlobalConfig = extend$$1({}, defaultGlobalConfig, options);
		        return this;
		    },
		
		    /**
		     * 获取全局配置
		     * @param property {String} optional
		     * @returns {*}
		     */
		    getGlobal: function getGlobal(property) {
		        return property ? runtimeGlobalConfig[property] : runtimeGlobalConfig;
		    },
		
		    // 绑定全局事件
		    on: function on(name, fn) {
		        if (!isFunction$$1(fn)) { return; }
		        event.on('g.' + name, fn);
		        return this;
		    },
		
		    /**
		     * 插件名称空间
		     */
		    plugin: {
		        loop: pluginLoop,
		        soon: pluginSoon
		    }
		});
		
		// 内部直接将运行时的全局配置初始化到默认值
		nattyFetch.setGlobal(defaultGlobalConfig);
		
		return nattyFetch;
		
		})));
		//# sourceMappingURL=natty-fetch.js.map
	
	
	/***/ },
	/* 143 */
	/***/ function(module, exports, __webpack_require__) {
	
		(function webpackUniversalModuleDefinition(root, factory) {
			if(true)
				module.exports = factory();
			else if(typeof define === 'function' && define.amd)
				define("nattyStorage", [], factory);
			else if(typeof exports === 'object')
				exports["nattyStorage"] = factory();
			else
				root["nattyStorage"] = factory();
		})(this, function() {
		return /******/ (function(modules) { // webpackBootstrap
		/******/ 	// The module cache
		/******/ 	var installedModules = {};
		/******/
		/******/ 	// The require function
		/******/ 	function __webpack_require__(moduleId) {
		/******/
		/******/ 		// Check if module is in cache
		/******/ 		if(installedModules[moduleId])
		/******/ 			return installedModules[moduleId].exports;
		/******/
		/******/ 		// Create a new module (and put it into the cache)
		/******/ 		var module = installedModules[moduleId] = {
		/******/ 			exports: {},
		/******/ 			id: moduleId,
		/******/ 			loaded: false
		/******/ 		};
		/******/
		/******/ 		// Execute the module function
		/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
		/******/
		/******/ 		// Flag the module as loaded
		/******/ 		module.loaded = true;
		/******/
		/******/ 		// Return the exports of the module
		/******/ 		return module.exports;
		/******/ 	}
		/******/
		/******/
		/******/ 	// expose the modules object (__webpack_modules__)
		/******/ 	__webpack_require__.m = modules;
		/******/
		/******/ 	// expose the module cache
		/******/ 	__webpack_require__.c = installedModules;
		/******/
		/******/ 	// __webpack_public_path__
		/******/ 	__webpack_require__.p = "";
		/******/
		/******/ 	// Load entry module and return exports
		/******/ 	return __webpack_require__(0);
		/******/ })
		/************************************************************************/
		/******/ ([
		/* 0 */
		/***/ function(module, exports, __webpack_require__) {
		
		'use strict';
		
		module.exports = __webpack_require__(1);
		
		/***/ },
		/* 1 */
		/***/ function(module, exports, __webpack_require__) {
		
		"use strict";
		
		var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
		
		var _require = __webpack_require__(2);
		
		var extend = _require.extend;
		var isPlainObject = _require.isPlainObject;
		var isObject = _require.isObject;
		var noop = _require.noop;
		
		var VERSION = undefined;
		(VERSION = "1.1.2");
		
		var NULL = null;
		var EMPTY = '';
		var TRUE = true;
		var FALSE = !TRUE;
		var PLACEHOLDER = '_placeholder';
		var UNDEFINED = undefined;
		
		// 只是判断有没有`storage`对象, 注意, 有了也不一定能用!!! 比如隐身模式
		var has = {
		    localStorage: typeof localStorage === 'object',
		    sessionStorage: typeof sessionStorage === 'object'
		};
		
		// 真正判断能不能用
		var support = {
		    localStorage: test('localStorage'),
		    sessionStorage: test('sessionStorage'),
		    variable: TRUE
		};
		
		// 能力测试
		function test(type) {
		    if (!has[type]) {
		        return FALSE;
		    }
		    var data = { 'x': 'x' };
		    var key = 'natty-storage-test';
		    var tester = createStorage(type);
		    try {
		        tester.set(key, data);
		        var useable = JSON.stringify(tester.get(key)) === JSON.stringify(data);
		        tester.remove(key);
		        return useable;
		    } catch (e) {
		        return false;
		    }
		}
		
		// 全局默认配置
		var defaultGlobalConfig = {
		    // localStorage, sessionStorage, variable
		    type: 'localStorage',
		
		    // 存到浏览器缓存中使用的键
		    key: EMPTY,
		
		    // 版本号
		    tag: EMPTY,
		
		    // 有效期长, 单位ms
		    duration: 0,
		
		    // 有效期至, 时间戳
		    until: 0,
		
		    // 是否以异步方式使用set/get/has/remove
		    async: false
		};
		
		/**
		 *  let ls = new nattyStorage({
		 *     type: 'localstorage', // sessionstorage, variable
		 *       key: 'city',
		 *       // 验证是否有效，如果是首次创建该LS，则不执行验证
		 *       tag: '1.0'
		 *  })
		 */
		
		var Storage = (function () {
		    /**
		     * 构造函数
		     * @param options
		     */
		
		    function Storage() {
		        var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		
		        _classCallCheck(this, Storage);
		
		        var t = this;
		
		        t.config = extend({}, defaultGlobalConfig, options);
		
		        // 必须配置`key`!!! 无论什么类型!!!
		        if (!t.config.key) {
		            throw new Error('`key` is required when using natty-storage!');
		        }
		
		        t._storage = t.config.type !== 'variable' && support[t.config.type] ? createStorage(t.config.type) : createVariable();
		
		        t._CHECK_KEY = 'nattyStorageCheck:' + t.config.key;
		        t._DATA_KEY = 'nattyStorageData:' + t.config.key;
		        t._placeholderUsed = FALSE;
		
		        // 每个`storage`实例对象都是全新的, 只有`storage`实例的数据才可能是缓存的.
		        t._createStamp = +new Date();
		    }
		
		    /**
		     * 惰性初始化 在首次调用`set、get、remove`方法时才执行一次 且只执行一次
		     * @private
		     * @note 为什么要做惰性初始化, 因为
		     */
		
		    _createClass(Storage, [{
		        key: '_lazyInit',
		        value: function _lazyInit() {
		            var t = this;
		
		            t._checkData = t._storage.get(t._CHECK_KEY);
		
		            // 当前`key`的`storage`是否已经存在
		            t._isNew = t._checkData === NULL;
		            // console.log('is new t._checkData', t._isNew);
		
		            // 没有对应的本地缓存 或 本地缓存已过期 则 创建新的`storage`实例
		            if (t._isNew || t.isOutdated()) {
		                // console.log('create new t._checkData');
		                // 新的数据内容
		                t._storage.set(t._DATA_KEY, t._data = {});
		            }
		            // 使用已有的本地缓存
		            else {
		                    // console.log('use cached t._checkData');
		                    t._data = t._storage.get(t._DATA_KEY);
		                    if (t._data === NULL) {
		                        t._storage.set(t._DATA_KEY, t._data = {});
		                    }
		                }
		
		            // 更新验证数据
		            t._storage.set(t._CHECK_KEY, t._checkData = {
		                tag: t.config.tag,
		                lastUpdate: t._createStamp,
		                duration: t.config.duration,
		                until: t.config.until
		            });
		        }
		
		        /**
		         * 判断当前`key`的`storage`是否已经过期
		         * @returns {boolean}
		         */
		    }, {
		        key: 'isOutdated',
		        value: function isOutdated() {
		            var t = this;
		            if (t.config.tag && t.config.tag !== t._checkData.tag) {
		                return TRUE;
		            }
		
		            var now = +new Date();
		            // 注意要使用`_checkData`的`duration`验证, 而不是用`config`的`duration`验证!!
		            if (t._checkData.duration && now - t._checkData.lastUpdate > t._checkData.duration) {
		                return TRUE;
		            }
		
		            if (t._checkData.until && now > t._checkData.until) {
		                return TRUE;
		            }
		
		            // console.log('outdated: false');
		            return FALSE;
		        }
		
		        /**
		         * 设置指指定路径的数据
		         * @param path {Any} optional 要设置的值的路径 或 要设置的完整值
		         * @param value {Any} 值
		         *
		         * instance.set(object)
		         * instance.set('foo', any-type)
		         * instance.set('foo.bar', any-type)
		         * @note ls.set('x') 则 整个值为 'x'
		         */
		    }, {
		        key: 'set',
		        value: function set(path, data) {
		
		            var t = this;
		            var argumentLength = arguments.length;
		
		            var todo = function todo(resolve, reject) {
		                try {
		                    if (!t._data) {
		                        t._lazyInit();
		                    }
		
		                    if (argumentLength === 1) {
		                        if (isPlainObject(path)) {
		                            t._data = path;
		                        } else {
		                            t._data[PLACEHOLDER] = path;
		                            t._placeholderUsed = TRUE;
		                        }
		                    } else {
		                        setValueByPath(path, data, t._data);
		                    }
		
		                    t._storage.set(t._DATA_KEY, t._data);
		                    resolve();
		                } catch (e) {
		                    reject(e);
		                }
		            };
		
		            if (t.config.async) {
		                return new Promise(todo);
		            } else {
		                todo(noop, throwError);
		            }
		        }
		
		        /**
		         * 获取指定的路径的数据
		         * @param path {String} optional 要获取的值的路径 如果不传 则返回整体值
		         * @returns {ny}
		         *
		         * instance.get()
		         * instance.get('foo')
		         * instance.get('foo.bar')
		         */
		    }, {
		        key: 'get',
		        value: function get(path) {
		            var t = this;
		            var data = undefined;
		            var todo = function todo(resolve, reject) {
		                try {
		                    if (!t._data) {
		                        t._lazyInit();
		                    }
		
		                    if (path) {
		                        data = getValueByPath(path, t._data);
		                    } else if (t._placeholderUsed) {
		                        data = t._data[PLACEHOLDER];
		                    } else {
		                        data = t._data;
		                    }
		                    resolve(data);
		                } catch (e) {
		                    reject(e);
		                }
		            };
		
		            if (t.config.async) {
		                return new Promise(todo);
		            } else {
		                todo(noop, throwError);
		                return data;
		            }
		        }
		
		        /**
		         * 返回指定的路径是否有值
		         * @param path {String} optional 要查询的路径
		         * @returns {Promise}
		         */
		    }, {
		        key: 'has',
		        value: function has(path) {
		            var t = this;
		            var result = undefined;
		            var todo = function todo(resolve, reject) {
		                try {
		                    if (!t._data) {
		                        t._lazyInit();
		                    }
		
		                    // 如果有数据 且 没有使用内置`placeholder`, 说明是使用`path`方式设置的值
		                    if (!t._placeholderUsed && !isEmptyPlainObject(t._data)) {
		                        if (!path) {
		                            throw new Error('a `path` argument should be passed into the `has` method');
		                        }
		
		                        result = hasValueByPath(path, t._data) ? {
		                            has: true,
		                            value: getValueByPath(path, t._data)
		                        } : {};
		
		                        resolve(result);
		                    } else {
		                        result = t._data.hasOwnProperty(PLACEHOLDER) ? {
		                            has: true,
		                            value: t._data[PLACEHOLDER]
		                        } : {};
		                        resolve(result);
		                    }
		                } catch (e) {
		                    reject(e);
		                }
		            };
		
		            if (t.config.async) {
		                return new Promise(todo);
		            } else {
		                todo(noop, throwError);
		                return result;
		            }
		        }
		
		        /**
		         * 删除指定的路径的数据, 包括键本身
		         * @param path {String} optional 要获取的值的路径 如果不传 则返回整体值
		         */
		    }, {
		        key: 'remove',
		        value: function remove(path) {
		            var t = this;
		            var todo = function todo(resolve, reject) {
		                try {
		                    if (!t._data) {
		                        t._lazyInit();
		                    }
		                    if (path) {
		                        removeKeyAndValueByPath(path, t._data);
		                        t._storage.set(t._DATA_KEY, t._data);
		                    } else {
		                        // 删除所有数据, 复原到初始空对象
		                        t.set({});
		                    }
		                    resolve();
		                } catch (e) {
		                    reject(e);
		                }
		            };
		
		            if (t.config.async) {
		                return new Promise(todo);
		            } else {
		                todo(noop, throwError);
		            }
		        }
		
		        /**
		         * 销毁当前`storage`实例
		         */
		    }, {
		        key: 'destroy',
		        value: function destroy() {
		            var t = this;
		            t._storage.remove(t._CHECK_KEY);
		            t._storage.remove(t._DATA_KEY);
		        }
		    }, {
		        key: 'dump',
		        value: function dump() {
		            var t = this;
		            if (!t._data) {
		                t._lazyInit();
		            }
		
		            if (JSON && console) {
		                console.log(JSON.stringify(this._data, NULL, 4));
		            }
		        }
		    }]);
		
		    return Storage;
		})();
		
		function throwError(e) {
		    throw new Error(e);
		}
		
		function createStorage(storage) {
		    //  不用担心这个window, 这个函数能调用, 说明已经是在浏览器端了
		    storage = window[storage];
		    // storage = storage === 'localStorage' ? localStorage : sessionStorage;
		    return {
		        // NOTE  值为undefined的情况, JSON.stringify方法会将键删除
		        // JSON.stringify({x:undefined}) === "{}"
		        set: function set(key, value) {
		            // TODO 看看safari是否还有bug
		            // storage.removeItem(key);
		            storage.setItem(key, JSON.stringify(value));
		        },
		        get: function get(key) {
		            var value = storage.getItem(key);
		            // alert(localStorage[key]);
		            if (!value) return NULL;
		            try {
		                value = JSON.parse(value);
		            } catch (e) {}
		            return value;
		        },
		        remove: function remove(key) {
		            storage.removeItem(key);
		        }
		    };
		}
		
		var variable = {};
		function createVariable() {
		    var storage = variable;
		    return {
		        set: function set(key, value) {
		            storage[key] = value;
		        },
		        get: function get(key) {
		            // 当对应的键不存在时, 返回值保持和`storage`一致。
		            if (!(key in storage)) {
		                return NULL;
		            }
		            return storage[key];
		        },
		        remove: function remove(key) {
		            delete storage[key];
		        }
		    };
		}
		
		function reserveString(str) {
		    return str.split(EMPTY).reverse().join(EMPTY);
		}
		
		function splitPathToKeys(path) {
		    var ret;
		    if (path.indexOf('\\.') === -1) {
		        ret = path.split('.');
		    } else {
		        ret = reserveString(path).split(/\.(?!\\)/).reverse();
		        for (var i = 0, l = ret.length; i < l; i++) {
		            ret[i] = reserveString(ret[i].replace(/\.\\/g, '.'));
		        }
		    }
		    return ret;
		}
		
		function setValueByPath(path, value, data) {
		    var keys = splitPathToKeys(path);
		    var bottomData = data;
		    while (keys.length) {
		        var key = keys.shift();
		        if (keys.length) {
		            bottomData[key] = bottomData[key] || {};
		            bottomData = bottomData[key];
		        } else {
		            if (isPlainObject(bottomData)) {
		                bottomData[key] = value;
		            } else {
		                throw new Error('Cannot create property `' + key + '` on non-object value, path:`' + path + '`');
		            }
		        }
		    }
		    return data;
		}
		
		function getValueByPath(path, data, isKey) {
		    isKey = isKey || false;
		    if (isKey === true || path.indexOf('.') === -1) {
		        return data[path];
		    } else {
		        var keys = splitPathToKeys(path);
		
		        while (keys.length) {
		            var key = keys.shift();
		            data = getValueByPath(key, data, true);
		
		            if (typeof data !== 'object' || data === UNDEFINED) {
		                if (keys.length) data = UNDEFINED;
		                break;
		            }
		        }
		        return data;
		    }
		}
		
		function hasValueByPath(path, data, isKey) {
		    // 首次调用, 如果没有`.`, 就是key的含义
		    isKey = isKey || path.indexOf('.') === -1;
		    if (isKey) {
		        return data.hasOwnProperty(path);
		    } else {
		        var keys = splitPathToKeys(path);
		        while (keys.length) {
		            var key = keys.shift();
		            // console.log('check key: ', key);
		            var hasKey = data.hasOwnProperty(key);
		            if (hasKey && keys.length) {
		                data = getValueByPath(key, data, true);
		                if (!isPlainObject(data)) {
		                    return FALSE;
		                }
		            } else {
		                return hasKey;
		            }
		        }
		    }
		}
		
		function removeKeyAndValueByPath(path, data) {
		    var keys = splitPathToKeys(path);
		    var bottomData = data;
		    while (keys.length) {
		        var key = keys.shift();
		        if (keys.length) {
		            bottomData[key] = bottomData[key] || {};
		            bottomData = bottomData[key];
		        } else {
		            delete bottomData[key];
		        }
		    }
		    return data;
		}
		
		function isEmptyPlainObject(v) {
		    var ret = TRUE;
		    for (var i in v) {
		        ret = FALSE;
		        break;
		    }
		    return ret;
		}
		
		var nattyStorage = function nattyStorage(options) {
		    return new Storage(options);
		};
		
		nattyStorage.version = VERSION;
		nattyStorage._variable = variable;
		nattyStorage.support = support;
		
		module.exports = nattyStorage;
		
		/***/ },
		/* 2 */
		/***/ function(module, exports, __webpack_require__) {
		
		'use strict';
		
		var NULL = null;
		
		/**
		 * 变换两个参数的函数到多个参数
		 * @param  {Function} fn 基函数
		 * @return {Function} 变换后的函数
		 * @demo
		 *      function add(x, y) { return x+y; }
		 *      add = redo(add);
		 *      add(1,2,3) => 6
		 */
		var redo = function redo(fn) {
			return function () {
				var args = arguments;
				var ret = fn(args[0], args[1]);
				for (var i = 2, l = args.length; i < l; i++) {
					ret = fn(ret, args[i]);
				}
				return ret;
			};
		};
		
		var OBJECT = 'object';
		var isObject = function isObject(v) {
			return typeof v === OBJECT && v !== NULL;
		};
		
		var isWindow = function isWindow(v) {
			return v !== NULL && v === v.window;
		};
		
		// 参考了zepto
		var isPlainObject = function isPlainObject(v) {
			return v !== NULL && isObject(v) && !isWindow(v) && Object.getPrototypeOf(v) === Object.prototype;
		};
		
		var isArray = Array.isArray;
		if (false) {
			if (!isArray) {
				isArray = function (v) {
					return toString.call(v) === ARRAY_TYPE;
				};
			}
		}
		
		/**
		 * 对象扩展
		 * @param  {Object} receiver
		 * @param  {Object} supplier
		 * @return {Object} 扩展后的receiver对象
		 * @note 这个extend方法是定制的, 不要拷贝到其他地方用!!!
		 */
		var extend = function extend() {
			var receiver = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
			var supplier = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
		
			for (var key in supplier) {
				// `supplier`中不是未定义的键 都可以执行扩展
				if (supplier.hasOwnProperty(key) && supplier[key] !== undefined) {
					if (isArray(supplier[key])) {
						receiver[key] = [].concat(supplier[key]);
					} else if (isPlainObject(supplier[key])) {
						receiver[key] = extend({}, supplier[key]);
					} else {
						receiver[key] = supplier[key];
					}
				}
			}
			return receiver;
		};
		
		var noop = function noop() {};
		
		module.exports = {
			extend: redo(extend),
			noop: noop,
			isPlainObject: isPlainObject
		};
		
		/***/ }
		/******/ ])
		});
		;
	
	/***/ },
	/* 144 */
	/***/ function(module, exports) {
	
		'use strict';
		/* eslint-disable no-unused-vars */
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		var propIsEnumerable = Object.prototype.propertyIsEnumerable;
		
		function toObject(val) {
			if (val === null || val === undefined) {
				throw new TypeError('Object.assign cannot be called with null or undefined');
			}
		
			return Object(val);
		}
		
		function shouldUseNative() {
			try {
				if (!Object.assign) {
					return false;
				}
		
				// Detect buggy property enumeration order in older V8 versions.
		
				// https://bugs.chromium.org/p/v8/issues/detail?id=4118
				var test1 = new String('abc');  // eslint-disable-line
				test1[5] = 'de';
				if (Object.getOwnPropertyNames(test1)[0] === '5') {
					return false;
				}
		
				// https://bugs.chromium.org/p/v8/issues/detail?id=3056
				var test2 = {};
				for (var i = 0; i < 10; i++) {
					test2['_' + String.fromCharCode(i)] = i;
				}
				var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
					return test2[n];
				});
				if (order2.join('') !== '0123456789') {
					return false;
				}
		
				// https://bugs.chromium.org/p/v8/issues/detail?id=3056
				var test3 = {};
				'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
					test3[letter] = letter;
				});
				if (Object.keys(Object.assign({}, test3)).join('') !==
						'abcdefghijklmnopqrst') {
					return false;
				}
		
				return true;
			} catch (e) {
				// We don't expect any of the above to throw, but better to be safe.
				return false;
			}
		}
		
		module.exports = shouldUseNative() ? Object.assign : function (target, source) {
			var from;
			var to = toObject(target);
			var symbols;
		
			for (var s = 1; s < arguments.length; s++) {
				from = Object(arguments[s]);
		
				for (var key in from) {
					if (hasOwnProperty.call(from, key)) {
						to[key] = from[key];
					}
				}
		
				if (Object.getOwnPropertySymbols) {
					symbols = Object.getOwnPropertySymbols(from);
					for (var i = 0; i < symbols.length; i++) {
						if (propIsEnumerable.call(from, symbols[i])) {
							to[symbols[i]] = from[symbols[i]];
						}
					}
				}
			}
		
			return to;
		};
	
	
	/***/ },
	/* 145 */
	/***/ function(module, exports) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
			value: true
		});
		
		exports.default = function (funcString) {
			//边界条件
			//解析失败的情况
			//执行失败的情况
		
			var code = '\n        var func = ' + funcString + ';;\n        if (typeof func === \'function\') {\n          return func.apply(this, Array.prototype.slice.call(arguments));\n        }\n        console.warn(\'code must be Function\');\n      ';
		
			var func;
		
			try {
				func = new Function(code);
			} catch (e) {
				console.warn("解析function字符串失败，请检查字符串的合法性");
				console.log(funcString);
				func = function func() {
					console.warn('代码配置有误，请检查相关配置');
				};
			}
		
			return function () {
				try {
					for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
						args[_key] = arguments[_key];
					}
		
					return func.apply(this, args);
				} catch (e) {
					console.warn('函数执行出错，请检查代码');
					console.log(e);
					console.log(code);
				}
			};
		};
		
		module.exports = exports['default'];
	
	/***/ },
	/* 146 */
	/***/ function(module, exports, __webpack_require__) {
	
		var __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(global, module) {/**
		 * @license
		 * Lodash <https://lodash.com/>
		 * Copyright JS Foundation and other contributors <https://js.foundation/>
		 * Released under MIT license <https://lodash.com/license>
		 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
		 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
		 */
		;(function() {
		
		  /** Used as a safe reference for `undefined` in pre-ES5 environments. */
		  var undefined;
		
		  /** Used as the semantic version number. */
		  var VERSION = '4.17.2';
		
		  /** Used as the size to enable large array optimizations. */
		  var LARGE_ARRAY_SIZE = 200;
		
		  /** Error message constants. */
		  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',
		      FUNC_ERROR_TEXT = 'Expected a function';
		
		  /** Used to stand-in for `undefined` hash values. */
		  var HASH_UNDEFINED = '__lodash_hash_undefined__';
		
		  /** Used as the maximum memoize cache size. */
		  var MAX_MEMOIZE_SIZE = 500;
		
		  /** Used as the internal argument placeholder. */
		  var PLACEHOLDER = '__lodash_placeholder__';
		
		  /** Used to compose bitmasks for cloning. */
		  var CLONE_DEEP_FLAG = 1,
		      CLONE_FLAT_FLAG = 2,
		      CLONE_SYMBOLS_FLAG = 4;
		
		  /** Used to compose bitmasks for value comparisons. */
		  var COMPARE_PARTIAL_FLAG = 1,
		      COMPARE_UNORDERED_FLAG = 2;
		
		  /** Used to compose bitmasks for function metadata. */
		  var WRAP_BIND_FLAG = 1,
		      WRAP_BIND_KEY_FLAG = 2,
		      WRAP_CURRY_BOUND_FLAG = 4,
		      WRAP_CURRY_FLAG = 8,
		      WRAP_CURRY_RIGHT_FLAG = 16,
		      WRAP_PARTIAL_FLAG = 32,
		      WRAP_PARTIAL_RIGHT_FLAG = 64,
		      WRAP_ARY_FLAG = 128,
		      WRAP_REARG_FLAG = 256,
		      WRAP_FLIP_FLAG = 512;
		
		  /** Used as default options for `_.truncate`. */
		  var DEFAULT_TRUNC_LENGTH = 30,
		      DEFAULT_TRUNC_OMISSION = '...';
		
		  /** Used to detect hot functions by number of calls within a span of milliseconds. */
		  var HOT_COUNT = 800,
		      HOT_SPAN = 16;
		
		  /** Used to indicate the type of lazy iteratees. */
		  var LAZY_FILTER_FLAG = 1,
		      LAZY_MAP_FLAG = 2,
		      LAZY_WHILE_FLAG = 3;
		
		  /** Used as references for various `Number` constants. */
		  var INFINITY = 1 / 0,
		      MAX_SAFE_INTEGER = 9007199254740991,
		      MAX_INTEGER = 1.7976931348623157e+308,
		      NAN = 0 / 0;
		
		  /** Used as references for the maximum length and index of an array. */
		  var MAX_ARRAY_LENGTH = 4294967295,
		      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
		      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;
		
		  /** Used to associate wrap methods with their bit flags. */
		  var wrapFlags = [
		    ['ary', WRAP_ARY_FLAG],
		    ['bind', WRAP_BIND_FLAG],
		    ['bindKey', WRAP_BIND_KEY_FLAG],
		    ['curry', WRAP_CURRY_FLAG],
		    ['curryRight', WRAP_CURRY_RIGHT_FLAG],
		    ['flip', WRAP_FLIP_FLAG],
		    ['partial', WRAP_PARTIAL_FLAG],
		    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],
		    ['rearg', WRAP_REARG_FLAG]
		  ];
		
		  /** `Object#toString` result references. */
		  var argsTag = '[object Arguments]',
		      arrayTag = '[object Array]',
		      asyncTag = '[object AsyncFunction]',
		      boolTag = '[object Boolean]',
		      dateTag = '[object Date]',
		      domExcTag = '[object DOMException]',
		      errorTag = '[object Error]',
		      funcTag = '[object Function]',
		      genTag = '[object GeneratorFunction]',
		      mapTag = '[object Map]',
		      numberTag = '[object Number]',
		      nullTag = '[object Null]',
		      objectTag = '[object Object]',
		      promiseTag = '[object Promise]',
		      proxyTag = '[object Proxy]',
		      regexpTag = '[object RegExp]',
		      setTag = '[object Set]',
		      stringTag = '[object String]',
		      symbolTag = '[object Symbol]',
		      undefinedTag = '[object Undefined]',
		      weakMapTag = '[object WeakMap]',
		      weakSetTag = '[object WeakSet]';
		
		  var arrayBufferTag = '[object ArrayBuffer]',
		      dataViewTag = '[object DataView]',
		      float32Tag = '[object Float32Array]',
		      float64Tag = '[object Float64Array]',
		      int8Tag = '[object Int8Array]',
		      int16Tag = '[object Int16Array]',
		      int32Tag = '[object Int32Array]',
		      uint8Tag = '[object Uint8Array]',
		      uint8ClampedTag = '[object Uint8ClampedArray]',
		      uint16Tag = '[object Uint16Array]',
		      uint32Tag = '[object Uint32Array]';
		
		  /** Used to match empty string literals in compiled template source. */
		  var reEmptyStringLeading = /\b__p \+= '';/g,
		      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
		      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;
		
		  /** Used to match HTML entities and HTML characters. */
		  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
		      reUnescapedHtml = /[&<>"']/g,
		      reHasEscapedHtml = RegExp(reEscapedHtml.source),
		      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);
		
		  /** Used to match template delimiters. */
		  var reEscape = /<%-([\s\S]+?)%>/g,
		      reEvaluate = /<%([\s\S]+?)%>/g,
		      reInterpolate = /<%=([\s\S]+?)%>/g;
		
		  /** Used to match property names within property paths. */
		  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
		      reIsPlainProp = /^\w*$/,
		      reLeadingDot = /^\./,
		      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
		
		  /**
		   * Used to match `RegExp`
		   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
		   */
		  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
		      reHasRegExpChar = RegExp(reRegExpChar.source);
		
		  /** Used to match leading and trailing whitespace. */
		  var reTrim = /^\s+|\s+$/g,
		      reTrimStart = /^\s+/,
		      reTrimEnd = /\s+$/;
		
		  /** Used to match wrap detail comments. */
		  var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
		      reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
		      reSplitDetails = /,? & /;
		
		  /** Used to match words composed of alphanumeric characters. */
		  var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
		
		  /** Used to match backslashes in property paths. */
		  var reEscapeChar = /\\(\\)?/g;
		
		  /**
		   * Used to match
		   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
		   */
		  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;
		
		  /** Used to match `RegExp` flags from their coerced string values. */
		  var reFlags = /\w*$/;
		
		  /** Used to detect bad signed hexadecimal string values. */
		  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
		
		  /** Used to detect binary string values. */
		  var reIsBinary = /^0b[01]+$/i;
		
		  /** Used to detect host constructors (Safari). */
		  var reIsHostCtor = /^\[object .+?Constructor\]$/;
		
		  /** Used to detect octal string values. */
		  var reIsOctal = /^0o[0-7]+$/i;
		
		  /** Used to detect unsigned integer values. */
		  var reIsUint = /^(?:0|[1-9]\d*)$/;
		
		  /** Used to match Latin Unicode letters (excluding mathematical operators). */
		  var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;
		
		  /** Used to ensure capturing order of template delimiters. */
		  var reNoMatch = /($^)/;
		
		  /** Used to match unescaped characters in compiled string literals. */
		  var reUnescapedString = /['\n\r\u2028\u2029\\]/g;
		
		  /** Used to compose unicode character classes. */
		  var rsAstralRange = '\\ud800-\\udfff',
		      rsComboMarksRange = '\\u0300-\\u036f',
		      reComboHalfMarksRange = '\\ufe20-\\ufe2f',
		      rsComboSymbolsRange = '\\u20d0-\\u20ff',
		      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
		      rsDingbatRange = '\\u2700-\\u27bf',
		      rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
		      rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
		      rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
		      rsPunctuationRange = '\\u2000-\\u206f',
		      rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
		      rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
		      rsVarRange = '\\ufe0e\\ufe0f',
		      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;
		
		  /** Used to compose unicode capture groups. */
		  var rsApos = "['\u2019]",
		      rsAstral = '[' + rsAstralRange + ']',
		      rsBreak = '[' + rsBreakRange + ']',
		      rsCombo = '[' + rsComboRange + ']',
		      rsDigits = '\\d+',
		      rsDingbat = '[' + rsDingbatRange + ']',
		      rsLower = '[' + rsLowerRange + ']',
		      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
		      rsFitz = '\\ud83c[\\udffb-\\udfff]',
		      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
		      rsNonAstral = '[^' + rsAstralRange + ']',
		      rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
		      rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
		      rsUpper = '[' + rsUpperRange + ']',
		      rsZWJ = '\\u200d';
		
		  /** Used to compose unicode regexes. */
		  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
		      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
		      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
		      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
		      reOptMod = rsModifier + '?',
		      rsOptVar = '[' + rsVarRange + ']?',
		      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
		      rsOrdLower = '\\d*(?:(?:1st|2nd|3rd|(?![123])\\dth)\\b)',
		      rsOrdUpper = '\\d*(?:(?:1ST|2ND|3RD|(?![123])\\dTH)\\b)',
		      rsSeq = rsOptVar + reOptMod + rsOptJoin,
		      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
		      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';
		
		  /** Used to match apostrophes. */
		  var reApos = RegExp(rsApos, 'g');
		
		  /**
		   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
		   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
		   */
		  var reComboMark = RegExp(rsCombo, 'g');
		
		  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
		  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');
		
		  /** Used to match complex or compound words. */
		  var reUnicodeWord = RegExp([
		    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
		    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',
		    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,
		    rsUpper + '+' + rsOptContrUpper,
		    rsOrdUpper,
		    rsOrdLower,
		    rsDigits,
		    rsEmoji
		  ].join('|'), 'g');
		
		  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
		  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');
		
		  /** Used to detect strings that need a more robust regexp to match words. */
		  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
		
		  /** Used to assign default `context` object properties. */
		  var contextProps = [
		    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',
		    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',
		    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',
		    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',
		    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'
		  ];
		
		  /** Used to make template sourceURLs easier to identify. */
		  var templateCounter = -1;
		
		  /** Used to identify `toStringTag` values of typed arrays. */
		  var typedArrayTags = {};
		  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
		  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
		  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
		  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
		  typedArrayTags[uint32Tag] = true;
		  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
		  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
		  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
		  typedArrayTags[errorTag] = typedArrayTags[funcTag] =
		  typedArrayTags[mapTag] = typedArrayTags[numberTag] =
		  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
		  typedArrayTags[setTag] = typedArrayTags[stringTag] =
		  typedArrayTags[weakMapTag] = false;
		
		  /** Used to identify `toStringTag` values supported by `_.clone`. */
		  var cloneableTags = {};
		  cloneableTags[argsTag] = cloneableTags[arrayTag] =
		  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
		  cloneableTags[boolTag] = cloneableTags[dateTag] =
		  cloneableTags[float32Tag] = cloneableTags[float64Tag] =
		  cloneableTags[int8Tag] = cloneableTags[int16Tag] =
		  cloneableTags[int32Tag] = cloneableTags[mapTag] =
		  cloneableTags[numberTag] = cloneableTags[objectTag] =
		  cloneableTags[regexpTag] = cloneableTags[setTag] =
		  cloneableTags[stringTag] = cloneableTags[symbolTag] =
		  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
		  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
		  cloneableTags[errorTag] = cloneableTags[funcTag] =
		  cloneableTags[weakMapTag] = false;
		
		  /** Used to map Latin Unicode letters to basic Latin letters. */
		  var deburredLetters = {
		    // Latin-1 Supplement block.
		    '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
		    '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
		    '\xc7': 'C',  '\xe7': 'c',
		    '\xd0': 'D',  '\xf0': 'd',
		    '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
		    '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
		    '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
		    '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
		    '\xd1': 'N',  '\xf1': 'n',
		    '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
		    '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
		    '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
		    '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
		    '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
		    '\xc6': 'Ae', '\xe6': 'ae',
		    '\xde': 'Th', '\xfe': 'th',
		    '\xdf': 'ss',
		    // Latin Extended-A block.
		    '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
		    '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
		    '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
		    '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
		    '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
		    '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
		    '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
		    '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
		    '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
		    '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
		    '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
		    '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
		    '\u0134': 'J',  '\u0135': 'j',
		    '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
		    '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
		    '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
		    '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
		    '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
		    '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
		    '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
		    '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
		    '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
		    '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
		    '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
		    '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
		    '\u0163': 't',  '\u0165': 't', '\u0167': 't',
		    '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
		    '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
		    '\u0174': 'W',  '\u0175': 'w',
		    '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
		    '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
		    '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
		    '\u0132': 'IJ', '\u0133': 'ij',
		    '\u0152': 'Oe', '\u0153': 'oe',
		    '\u0149': "'n", '\u017f': 's'
		  };
		
		  /** Used to map characters to HTML entities. */
		  var htmlEscapes = {
		    '&': '&amp;',
		    '<': '&lt;',
		    '>': '&gt;',
		    '"': '&quot;',
		    "'": '&#39;'
		  };
		
		  /** Used to map HTML entities to characters. */
		  var htmlUnescapes = {
		    '&amp;': '&',
		    '&lt;': '<',
		    '&gt;': '>',
		    '&quot;': '"',
		    '&#39;': "'"
		  };
		
		  /** Used to escape characters for inclusion in compiled string literals. */
		  var stringEscapes = {
		    '\\': '\\',
		    "'": "'",
		    '\n': 'n',
		    '\r': 'r',
		    '\u2028': 'u2028',
		    '\u2029': 'u2029'
		  };
		
		  /** Built-in method references without a dependency on `root`. */
		  var freeParseFloat = parseFloat,
		      freeParseInt = parseInt;
		
		  /** Detect free variable `global` from Node.js. */
		  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;
		
		  /** Detect free variable `self`. */
		  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
		
		  /** Used as a reference to the global object. */
		  var root = freeGlobal || freeSelf || Function('return this')();
		
		  /** Detect free variable `exports`. */
		  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;
		
		  /** Detect free variable `module`. */
		  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;
		
		  /** Detect the popular CommonJS extension `module.exports`. */
		  var moduleExports = freeModule && freeModule.exports === freeExports;
		
		  /** Detect free variable `process` from Node.js. */
		  var freeProcess = moduleExports && freeGlobal.process;
		
		  /** Used to access faster Node.js helpers. */
		  var nodeUtil = (function() {
		    try {
		      return freeProcess && freeProcess.binding && freeProcess.binding('util');
		    } catch (e) {}
		  }());
		
		  /* Node.js helper references. */
		  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,
		      nodeIsDate = nodeUtil && nodeUtil.isDate,
		      nodeIsMap = nodeUtil && nodeUtil.isMap,
		      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,
		      nodeIsSet = nodeUtil && nodeUtil.isSet,
		      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
		
		  /*--------------------------------------------------------------------------*/
		
		  /**
		   * Adds the key-value `pair` to `map`.
		   *
		   * @private
		   * @param {Object} map The map to modify.
		   * @param {Array} pair The key-value pair to add.
		   * @returns {Object} Returns `map`.
		   */
		  function addMapEntry(map, pair) {
		    // Don't return `map.set` because it's not chainable in IE 11.
		    map.set(pair[0], pair[1]);
		    return map;
		  }
		
		  /**
		   * Adds `value` to `set`.
		   *
		   * @private
		   * @param {Object} set The set to modify.
		   * @param {*} value The value to add.
		   * @returns {Object} Returns `set`.
		   */
		  function addSetEntry(set, value) {
		    // Don't return `set.add` because it's not chainable in IE 11.
		    set.add(value);
		    return set;
		  }
		
		  /**
		   * A faster alternative to `Function#apply`, this function invokes `func`
		   * with the `this` binding of `thisArg` and the arguments of `args`.
		   *
		   * @private
		   * @param {Function} func The function to invoke.
		   * @param {*} thisArg The `this` binding of `func`.
		   * @param {Array} args The arguments to invoke `func` with.
		   * @returns {*} Returns the result of `func`.
		   */
		  function apply(func, thisArg, args) {
		    switch (args.length) {
		      case 0: return func.call(thisArg);
		      case 1: return func.call(thisArg, args[0]);
		      case 2: return func.call(thisArg, args[0], args[1]);
		      case 3: return func.call(thisArg, args[0], args[1], args[2]);
		    }
		    return func.apply(thisArg, args);
		  }
		
		  /**
		   * A specialized version of `baseAggregator` for arrays.
		   *
		   * @private
		   * @param {Array} [array] The array to iterate over.
		   * @param {Function} setter The function to set `accumulator` values.
		   * @param {Function} iteratee The iteratee to transform keys.
		   * @param {Object} accumulator The initial aggregated object.
		   * @returns {Function} Returns `accumulator`.
		   */
		  function arrayAggregator(array, setter, iteratee, accumulator) {
		    var index = -1,
		        length = array == null ? 0 : array.length;
		
		    while (++index < length) {
		      var value = array[index];
		      setter(accumulator, value, iteratee(value), array);
		    }
		    return accumulator;
		  }
		
		  /**
		   * A specialized version of `_.forEach` for arrays without support for
		   * iteratee shorthands.
		   *
		   * @private
		   * @param {Array} [array] The array to iterate over.
		   * @param {Function} iteratee The function invoked per iteration.
		   * @returns {Array} Returns `array`.
		   */
		  function arrayEach(array, iteratee) {
		    var index = -1,
		        length = array == null ? 0 : array.length;
		
		    while (++index < length) {
		      if (iteratee(array[index], index, array) === false) {
		        break;
		      }
		    }
		    return array;
		  }
		
		  /**
		   * A specialized version of `_.forEachRight` for arrays without support for
		   * iteratee shorthands.
		   *
		   * @private
		   * @param {Array} [array] The array to iterate over.
		   * @param {Function} iteratee The function invoked per iteration.
		   * @returns {Array} Returns `array`.
		   */
		  function arrayEachRight(array, iteratee) {
		    var length = array == null ? 0 : array.length;
		
		    while (length--) {
		      if (iteratee(array[length], length, array) === false) {
		        break;
		      }
		    }
		    return array;
		  }
		
		  /**
		   * A specialized version of `_.every` for arrays without support for
		   * iteratee shorthands.
		   *
		   * @private
		   * @param {Array} [array] The array to iterate over.
		   * @param {Function} predicate The function invoked per iteration.
		   * @returns {boolean} Returns `true` if all elements pass the predicate check,
		   *  else `false`.
		   */
		  function arrayEvery(array, predicate) {
		    var index = -1,
		        length = array == null ? 0 : array.length;
		
		    while (++index < length) {
		      if (!predicate(array[index], index, array)) {
		        return false;
		      }
		    }
		    return true;
		  }
		
		  /**
		   * A specialized version of `_.filter` for arrays without support for
		   * iteratee shorthands.
		   *
		   * @private
		   * @param {Array} [array] The array to iterate over.
		   * @param {Function} predicate The function invoked per iteration.
		   * @returns {Array} Returns the new filtered array.
		   */
		  function arrayFilter(array, predicate) {
		    var index = -1,
		        length = array == null ? 0 : array.length,
		        resIndex = 0,
		        result = [];
		
		    while (++index < length) {
		      var value = array[index];
		      if (predicate(value, index, array)) {
		        result[resIndex++] = value;
		      }
		    }
		    return result;
		  }
		
		  /**
		   * A specialized version of `_.includes` for arrays without support for
		   * specifying an index to search from.
		   *
		   * @private
		   * @param {Array} [array] The array to inspect.
		   * @param {*} target The value to search for.
		   * @returns {boolean} Returns `true` if `target` is found, else `false`.
		   */
		  function arrayIncludes(array, value) {
		    var length = array == null ? 0 : array.length;
		    return !!length && baseIndexOf(array, value, 0) > -1;
		  }
		
		  /**
		   * This function is like `arrayIncludes` except that it accepts a comparator.
		   *
		   * @private
		   * @param {Array} [array] The array to inspect.
		   * @param {*} target The value to search for.
		   * @param {Function} comparator The comparator invoked per element.
		   * @returns {boolean} Returns `true` if `target` is found, else `false`.
		   */
		  function arrayIncludesWith(array, value, comparator) {
		    var index = -1,
		        length = array == null ? 0 : array.length;
		
		    while (++index < length) {
		      if (comparator(value, array[index])) {
		        return true;
		      }
		    }
		    return false;
		  }
		
		  /**
		   * A specialized version of `_.map` for arrays without support for iteratee
		   * shorthands.
		   *
		   * @private
		   * @param {Array} [array] The array to iterate over.
		   * @param {Function} iteratee The function invoked per iteration.
		   * @returns {Array} Returns the new mapped array.
		   */
		  function arrayMap(array, iteratee) {
		    var index = -1,
		        length = array == null ? 0 : array.length,
		        result = Array(length);
		
		    while (++index < length) {
		      result[index] = iteratee(array[index], index, array);
		    }
		    return result;
		  }
		
		  /**
		   * Appends the elements of `values` to `array`.
		   *
		   * @private
		   * @param {Array} array The array to modify.
		   * @param {Array} values The values to append.
		   * @returns {Array} Returns `array`.
		   */
		  function arrayPush(array, values) {
		    var index = -1,
		        length = values.length,
		        offset = array.length;
		
		    while (++index < length) {
		      array[offset + index] = values[index];
		    }
		    return array;
		  }
		
		  /**
		   * A specialized version of `_.reduce` for arrays without support for
		   * iteratee shorthands.
		   *
		   * @private
		   * @param {Array} [array] The array to iterate over.
		   * @param {Function} iteratee The function invoked per iteration.
		   * @param {*} [accumulator] The initial value.
		   * @param {boolean} [initAccum] Specify using the first element of `array` as
		   *  the initial value.
		   * @returns {*} Returns the accumulated value.
		   */
		  function arrayReduce(array, iteratee, accumulator, initAccum) {
		    var index = -1,
		        length = array == null ? 0 : array.length;
		
		    if (initAccum && length) {
		      accumulator = array[++index];
		    }
		    while (++index < length) {
		      accumulator = iteratee(accumulator, array[index], index, array);
		    }
		    return accumulator;
		  }
		
		  /**
		   * A specialized version of `_.reduceRight` for arrays without support for
		   * iteratee shorthands.
		   *
		   * @private
		   * @param {Array} [array] The array to iterate over.
		   * @param {Function} iteratee The function invoked per iteration.
		   * @param {*} [accumulator] The initial value.
		   * @param {boolean} [initAccum] Specify using the last element of `array` as
		   *  the initial value.
		   * @returns {*} Returns the accumulated value.
		   */
		  function arrayReduceRight(array, iteratee, accumulator, initAccum) {
		    var length = array == null ? 0 : array.length;
		    if (initAccum && length) {
		      accumulator = array[--length];
		    }
		    while (length--) {
		      accumulator = iteratee(accumulator, array[length], length, array);
		    }
		    return accumulator;
		  }
		
		  /**
		   * A specialized version of `_.some` for arrays without support for iteratee
		   * shorthands.
		   *
		   * @private
		   * @param {Array} [array] The array to iterate over.
		   * @param {Function} predicate The function invoked per iteration.
		   * @returns {boolean} Returns `true` if any element passes the predicate check,
		   *  else `false`.
		   */
		  function arraySome(array, predicate) {
		    var index = -1,
		        length = array == null ? 0 : array.length;
		
		    while (++index < length) {
		      if (predicate(array[index], index, array)) {
		        return true;
		      }
		    }
		    return false;
		  }
		
		  /**
		   * Gets the size of an ASCII `string`.
		   *
		   * @private
		   * @param {string} string The string inspect.
		   * @returns {number} Returns the string size.
		   */
		  var asciiSize = baseProperty('length');
		
		  /**
		   * Converts an ASCII `string` to an array.
		   *
		   * @private
		   * @param {string} string The string to convert.
		   * @returns {Array} Returns the converted array.
		   */
		  function asciiToArray(string) {
		    return string.split('');
		  }
		
		  /**
		   * Splits an ASCII `string` into an array of its words.
		   *
		   * @private
		   * @param {string} The string to inspect.
		   * @returns {Array} Returns the words of `string`.
		   */
		  function asciiWords(string) {
		    return string.match(reAsciiWord) || [];
		  }
		
		  /**
		   * The base implementation of methods like `_.findKey` and `_.findLastKey`,
		   * without support for iteratee shorthands, which iterates over `collection`
		   * using `eachFunc`.
		   *
		   * @private
		   * @param {Array|Object} collection The collection to inspect.
		   * @param {Function} predicate The function invoked per iteration.
		   * @param {Function} eachFunc The function to iterate over `collection`.
		   * @returns {*} Returns the found element or its key, else `undefined`.
		   */
		  function baseFindKey(collection, predicate, eachFunc) {
		    var result;
		    eachFunc(collection, function(value, key, collection) {
		      if (predicate(value, key, collection)) {
		        result = key;
		        return false;
		      }
		    });
		    return result;
		  }
		
		  /**
		   * The base implementation of `_.findIndex` and `_.findLastIndex` without
		   * support for iteratee shorthands.
		   *
		   * @private
		   * @param {Array} array The array to inspect.
		   * @param {Function} predicate The function invoked per iteration.
		   * @param {number} fromIndex The index to search from.
		   * @param {boolean} [fromRight] Specify iterating from right to left.
		   * @returns {number} Returns the index of the matched value, else `-1`.
		   */
		  function baseFindIndex(array, predicate, fromIndex, fromRight) {
		    var length = array.length,
		        index = fromIndex + (fromRight ? 1 : -1);
		
		    while ((fromRight ? index-- : ++index < length)) {
		      if (predicate(array[index], index, array)) {
		        return index;
		      }
		    }
		    return -1;
		  }
		
		  /**
		   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
		   *
		   * @private
		   * @param {Array} array The array to inspect.
		   * @param {*} value The value to search for.
		   * @param {number} fromIndex The index to search from.
		   * @returns {number} Returns the index of the matched value, else `-1`.
		   */
		  function baseIndexOf(array, value, fromIndex) {
		    return value === value
		      ? strictIndexOf(array, value, fromIndex)
		      : baseFindIndex(array, baseIsNaN, fromIndex);
		  }
		
		  /**
		   * This function is like `baseIndexOf` except that it accepts a comparator.
		   *
		   * @private
		   * @param {Array} array The array to inspect.
		   * @param {*} value The value to search for.
		   * @param {number} fromIndex The index to search from.
		   * @param {Function} comparator The comparator invoked per element.
		   * @returns {number} Returns the index of the matched value, else `-1`.
		   */
		  function baseIndexOfWith(array, value, fromIndex, comparator) {
		    var index = fromIndex - 1,
		        length = array.length;
		
		    while (++index < length) {
		      if (comparator(array[index], value)) {
		        return index;
		      }
		    }
		    return -1;
		  }
		
		  /**
		   * The base implementation of `_.isNaN` without support for number objects.
		   *
		   * @private
		   * @param {*} value The value to check.
		   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
		   */
		  function baseIsNaN(value) {
		    return value !== value;
		  }
		
		  /**
		   * The base implementation of `_.mean` and `_.meanBy` without support for
		   * iteratee shorthands.
		   *
		   * @private
		   * @param {Array} array The array to iterate over.
		   * @param {Function} iteratee The function invoked per iteration.
		   * @returns {number} Returns the mean.
		   */
		  function baseMean(array, iteratee) {
		    var length = array == null ? 0 : array.length;
		    return length ? (baseSum(array, iteratee) / length) : NAN;
		  }
		
		  /**
		   * The base implementation of `_.property` without support for deep paths.
		   *
		   * @private
		   * @param {string} key The key of the property to get.
		   * @returns {Function} Returns the new accessor function.
		   */
		  function baseProperty(key) {
		    return function(object) {
		      return object == null ? undefined : object[key];
		    };
		  }
		
		  /**
		   * The base implementation of `_.propertyOf` without support for deep paths.
		   *
		   * @private
		   * @param {Object} object The object to query.
		   * @returns {Function} Returns the new accessor function.
		   */
		  function basePropertyOf(object) {
		    return function(key) {
		      return object == null ? undefined : object[key];
		    };
		  }
		
		  /**
		   * The base implementation of `_.reduce` and `_.reduceRight`, without support
		   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
		   *
		   * @private
		   * @param {Array|Object} collection The collection to iterate over.
		   * @param {Function} iteratee The function invoked per iteration.
		   * @param {*} accumulator The initial value.
		   * @param {boolean} initAccum Specify using the first or last element of
		   *  `collection` as the initial value.
		   * @param {Function} eachFunc The function to iterate over `collection`.
		   * @returns {*} Returns the accumulated value.
		   */
		  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
		    eachFunc(collection, function(value, index, collection) {
		      accumulator = initAccum
		        ? (initAccum = false, value)
		        : iteratee(accumulator, value, index, collection);
		    });
		    return accumulator;
		  }
		
		  /**
		   * The base implementation of `_.sortBy` which uses `comparer` to define the
		   * sort order of `array` and replaces criteria objects with their corresponding
		   * values.
		   *
		   * @private
		   * @param {Array} array The array to sort.
		   * @param {Function} comparer The function to define sort order.
		   * @returns {Array} Returns `array`.
		   */
		  function baseSortBy(array, comparer) {
		    var length = array.length;
		
		    array.sort(comparer);
		    while (length--) {
		      array[length] = array[length].value;
		    }
		    return array;
		  }
		
		  /**
		   * The base implementation of `_.sum` and `_.sumBy` without support for
		   * iteratee shorthands.
		   *
		   * @private
		   * @param {Array} array The array to iterate over.
		   * @param {Function} iteratee The function invoked per iteration.
		   * @returns {number} Returns the sum.
		   */
		  function baseSum(array, iteratee) {
		    var result,
		        index = -1,
		        length = array.length;
		
		    while (++index < length) {
		      var current = iteratee(array[index]);
		      if (current !== undefined) {
		        result = result === undefined ? current : (result + current);
		      }
		    }
		    return result;
		  }
		
		  /**
		   * The base implementation of `_.times` without support for iteratee shorthands
		   * or max array length checks.
		   *
		   * @private
		   * @param {number} n The number of times to invoke `iteratee`.
		   * @param {Function} iteratee The function invoked per iteration.
		   * @returns {Array} Returns the array of results.
		   */
		  function baseTimes(n, iteratee) {
		    var index = -1,
		        result = Array(n);
		
		    while (++index < n) {
		      result[index] = iteratee(index);
		    }
		    return result;
		  }
		
		  /**
		   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
		   * of key-value pairs for `object` corresponding to the property names of `props`.
		   *
		   * @private
		   * @param {Object} object The object to query.
		   * @param {Array} props The property names to get values for.
		   * @returns {Object} Returns the key-value pairs.
		   */
		  function baseToPairs(object, props) {
		    return arrayMap(props, function(key) {
		      return [key, object[key]];
		    });
		  }
		
		  /**
		   * The base implementation of `_.unary` without support for storing metadata.
		   *
		   * @private
		   * @param {Function} func The function to cap arguments for.
		   * @returns {Function} Returns the new capped function.
		   */
		  function baseUnary(func) {
		    return function(value) {
		      return func(value);
		    };
		  }
		
		  /**
		   * The base implementation of `_.values` and `_.valuesIn` which creates an
		   * array of `object` property values corresponding to the property names
		   * of `props`.
		   *
		   * @private
		   * @param {Object} object The object to query.
		   * @param {Array} props The property names to get values for.
		   * @returns {Object} Returns the array of property values.
		   */
		  function baseValues(object, props) {
		    return arrayMap(props, function(key) {
		      return object[key];
		    });
		  }
		
		  /**
		   * Checks if a `cache` value for `key` exists.
		   *
		   * @private
		   * @param {Object} cache The cache to query.
		   * @param {string} key The key of the entry to check.
		   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
		   */
		  function cacheHas(cache, key) {
		    return cache.has(key);
		  }
		
		  /**
		   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
		   * that is not found in the character symbols.
		   *
		   * @private
		   * @param {Array} strSymbols The string symbols to inspect.
		   * @param {Array} chrSymbols The character symbols to find.
		   * @returns {number} Returns the index of the first unmatched string symbol.
		   */
		  function charsStartIndex(strSymbols, chrSymbols) {
		    var index = -1,
		        length = strSymbols.length;
		
		    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
		    return index;
		  }
		
		  /**
		   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
		   * that is not found in the character symbols.
		   *
		   * @private
		   * @param {Array} strSymbols The string symbols to inspect.
		   * @param {Array} chrSymbols The character symbols to find.
		   * @returns {number} Returns the index of the last unmatched string symbol.
		   */
		  function charsEndIndex(strSymbols, chrSymbols) {
		    var index = strSymbols.length;
		
		    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
		    return index;
		  }
		
		  /**
		   * Gets the number of `placeholder` occurrences in `array`.
		   *
		   * @private
		   * @param {Array} array The array to inspect.
		   * @param {*} placeholder The placeholder to search for.
		   * @returns {number} Returns the placeholder count.
		   */
		  function countHolders(array, placeholder) {
		    var length = array.length,
		        result = 0;
		
		    while (length--) {
		      if (array[length] === placeholder) {
		        ++result;
		      }
		    }
		    return result;
		  }
		
		  /**
		   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
		   * letters to basic Latin letters.
		   *
		   * @private
		   * @param {string} letter The matched letter to deburr.
		   * @returns {string} Returns the deburred letter.
		   */
		  var deburrLetter = basePropertyOf(deburredLetters);
		
		  /**
		   * Used by `_.escape` to convert characters to HTML entities.
		   *
		   * @private
		   * @param {string} chr The matched character to escape.
		   * @returns {string} Returns the escaped character.
		   */
		  var escapeHtmlChar = basePropertyOf(htmlEscapes);
		
		  /**
		   * Used by `_.template` to escape characters for inclusion in compiled string literals.
		   *
		   * @private
		   * @param {string} chr The matched character to escape.
		   * @returns {string} Returns the escaped character.
		   */
		  function escapeStringChar(chr) {
		    return '\\' + stringEscapes[chr];
		  }
		
		  /**
		   * Gets the value at `key` of `object`.
		   *
		   * @private
		   * @param {Object} [object] The object to query.
		   * @param {string} key The key of the property to get.
		   * @returns {*} Returns the property value.
		   */
		  function getValue(object, key) {
		    return object == null ? undefined : object[key];
		  }
		
		  /**
		   * Checks if `string` contains Unicode symbols.
		   *
		   * @private
		   * @param {string} string The string to inspect.
		   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
		   */
		  function hasUnicode(string) {
		    return reHasUnicode.test(string);
		  }
		
		  /**
		   * Checks if `string` contains a word composed of Unicode symbols.
		   *
		   * @private
		   * @param {string} string The string to inspect.
		   * @returns {boolean} Returns `true` if a word is found, else `false`.
		   */
		  function hasUnicodeWord(string) {
		    return reHasUnicodeWord.test(string);
		  }
		
		  /**
		   * Converts `iterator` to an array.
		   *
		   * @private
		   * @param {Object} iterator The iterator to convert.
		   * @returns {Array} Returns the converted array.
		   */
		  function iteratorToArray(iterator) {
		    var data,
		        result = [];
		
		    while (!(data = iterator.next()).done) {
		      result.push(data.value);
		    }
		    return result;
		  }
		
		  /**
		   * Converts `map` to its key-value pairs.
		   *
		   * @private
		   * @param {Object} map The map to convert.
		   * @returns {Array} Returns the key-value pairs.
		   */
		  function mapToArray(map) {
		    var index = -1,
		        result = Array(map.size);
		
		    map.forEach(function(value, key) {
		      result[++index] = [key, value];
		    });
		    return result;
		  }
		
		  /**
		   * Creates a unary function that invokes `func` with its argument transformed.
		   *
		   * @private
		   * @param {Function} func The function to wrap.
		   * @param {Function} transform The argument transform.
		   * @returns {Function} Returns the new function.
		   */
		  function overArg(func, transform) {
		    return function(arg) {
		      return func(transform(arg));
		    };
		  }
		
		  /**
		   * Replaces all `placeholder` elements in `array` with an internal placeholder
		   * and returns an array of their indexes.
		   *
		   * @private
		   * @param {Array} array The array to modify.
		   * @param {*} placeholder The placeholder to replace.
		   * @returns {Array} Returns the new array of placeholder indexes.
		   */
		  function replaceHolders(array, placeholder) {
		    var index = -1,
		        length = array.length,
		        resIndex = 0,
		        result = [];
		
		    while (++index < length) {
		      var value = array[index];
		      if (value === placeholder || value === PLACEHOLDER) {
		        array[index] = PLACEHOLDER;
		        result[resIndex++] = index;
		      }
		    }
		    return result;
		  }
		
		  /**
		   * Converts `set` to an array of its values.
		   *
		   * @private
		   * @param {Object} set The set to convert.
		   * @returns {Array} Returns the values.
		   */
		  function setToArray(set) {
		    var index = -1,
		        result = Array(set.size);
		
		    set.forEach(function(value) {
		      result[++index] = value;
		    });
		    return result;
		  }
		
		  /**
		   * Converts `set` to its value-value pairs.
		   *
		   * @private
		   * @param {Object} set The set to convert.
		   * @returns {Array} Returns the value-value pairs.
		   */
		  function setToPairs(set) {
		    var index = -1,
		        result = Array(set.size);
		
		    set.forEach(function(value) {
		      result[++index] = [value, value];
		    });
		    return result;
		  }
		
		  /**
		   * A specialized version of `_.indexOf` which performs strict equality
		   * comparisons of values, i.e. `===`.
		   *
		   * @private
		   * @param {Array} array The array to inspect.
		   * @param {*} value The value to search for.
		   * @param {number} fromIndex The index to search from.
		   * @returns {number} Returns the index of the matched value, else `-1`.
		   */
		  function strictIndexOf(array, value, fromIndex) {
		    var index = fromIndex - 1,
		        length = array.length;
		
		    while (++index < length) {
		      if (array[index] === value) {
		        return index;
		      }
		    }
		    return -1;
		  }
		
		  /**
		   * A specialized version of `_.lastIndexOf` which performs strict equality
		   * comparisons of values, i.e. `===`.
		   *
		   * @private
		   * @param {Array} array The array to inspect.
		   * @param {*} value The value to search for.
		   * @param {number} fromIndex The index to search from.
		   * @returns {number} Returns the index of the matched value, else `-1`.
		   */
		  function strictLastIndexOf(array, value, fromIndex) {
		    var index = fromIndex + 1;
		    while (index--) {
		      if (array[index] === value) {
		        return index;
		      }
		    }
		    return index;
		  }
		
		  /**
		   * Gets the number of symbols in `string`.
		   *
		   * @private
		   * @param {string} string The string to inspect.
		   * @returns {number} Returns the string size.
		   */
		  function stringSize(string) {
		    return hasUnicode(string)
		      ? unicodeSize(string)
		      : asciiSize(string);
		  }
		
		  /**
		   * Converts `string` to an array.
		   *
		   * @private
		   * @param {string} string The string to convert.
		   * @returns {Array} Returns the converted array.
		   */
		  function stringToArray(string) {
		    return hasUnicode(string)
		      ? unicodeToArray(string)
		      : asciiToArray(string);
		  }
		
		  /**
		   * Used by `_.unescape` to convert HTML entities to characters.
		   *
		   * @private
		   * @param {string} chr The matched character to unescape.
		   * @returns {string} Returns the unescaped character.
		   */
		  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);
		
		  /**
		   * Gets the size of a Unicode `string`.
		   *
		   * @private
		   * @param {string} string The string inspect.
		   * @returns {number} Returns the string size.
		   */
		  function unicodeSize(string) {
		    var result = reUnicode.lastIndex = 0;
		    while (reUnicode.test(string)) {
		      ++result;
		    }
		    return result;
		  }
		
		  /**
		   * Converts a Unicode `string` to an array.
		   *
		   * @private
		   * @param {string} string The string to convert.
		   * @returns {Array} Returns the converted array.
		   */
		  function unicodeToArray(string) {
		    return string.match(reUnicode) || [];
		  }
		
		  /**
		   * Splits a Unicode `string` into an array of its words.
		   *
		   * @private
		   * @param {string} The string to inspect.
		   * @returns {Array} Returns the words of `string`.
		   */
		  function unicodeWords(string) {
		    return string.match(reUnicodeWord) || [];
		  }
		
		  /*--------------------------------------------------------------------------*/
		
		  /**
		   * Create a new pristine `lodash` function using the `context` object.
		   *
		   * @static
		   * @memberOf _
		   * @since 1.1.0
		   * @category Util
		   * @param {Object} [context=root] The context object.
		   * @returns {Function} Returns a new `lodash` function.
		   * @example
		   *
		   * _.mixin({ 'foo': _.constant('foo') });
		   *
		   * var lodash = _.runInContext();
		   * lodash.mixin({ 'bar': lodash.constant('bar') });
		   *
		   * _.isFunction(_.foo);
		   * // => true
		   * _.isFunction(_.bar);
		   * // => false
		   *
		   * lodash.isFunction(lodash.foo);
		   * // => false
		   * lodash.isFunction(lodash.bar);
		   * // => true
		   *
		   * // Create a suped-up `defer` in Node.js.
		   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
		   */
		  var runInContext = (function runInContext(context) {
		    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));
		
		    /** Built-in constructor references. */
		    var Array = context.Array,
		        Date = context.Date,
		        Error = context.Error,
		        Function = context.Function,
		        Math = context.Math,
		        Object = context.Object,
		        RegExp = context.RegExp,
		        String = context.String,
		        TypeError = context.TypeError;
		
		    /** Used for built-in method references. */
		    var arrayProto = Array.prototype,
		        funcProto = Function.prototype,
		        objectProto = Object.prototype;
		
		    /** Used to detect overreaching core-js shims. */
		    var coreJsData = context['__core-js_shared__'];
		
		    /** Used to resolve the decompiled source of functions. */
		    var funcToString = funcProto.toString;
		
		    /** Used to check objects for own properties. */
		    var hasOwnProperty = objectProto.hasOwnProperty;
		
		    /** Used to generate unique IDs. */
		    var idCounter = 0;
		
		    /** Used to detect methods masquerading as native. */
		    var maskSrcKey = (function() {
		      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
		      return uid ? ('Symbol(src)_1.' + uid) : '';
		    }());
		
		    /**
		     * Used to resolve the
		     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
		     * of values.
		     */
		    var nativeObjectToString = objectProto.toString;
		
		    /** Used to infer the `Object` constructor. */
		    var objectCtorString = funcToString.call(Object);
		
		    /** Used to restore the original `_` reference in `_.noConflict`. */
		    var oldDash = root._;
		
		    /** Used to detect if a method is native. */
		    var reIsNative = RegExp('^' +
		      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
		      .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
		    );
		
		    /** Built-in value references. */
		    var Buffer = moduleExports ? context.Buffer : undefined,
		        Symbol = context.Symbol,
		        Uint8Array = context.Uint8Array,
		        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,
		        getPrototype = overArg(Object.getPrototypeOf, Object),
		        objectCreate = Object.create,
		        propertyIsEnumerable = objectProto.propertyIsEnumerable,
		        splice = arrayProto.splice,
		        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,
		        symIterator = Symbol ? Symbol.iterator : undefined,
		        symToStringTag = Symbol ? Symbol.toStringTag : undefined;
		
		    var defineProperty = (function() {
		      try {
		        var func = getNative(Object, 'defineProperty');
		        func({}, '', {});
		        return func;
		      } catch (e) {}
		    }());
		
		    /** Mocked built-ins. */
		    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,
		        ctxNow = Date && Date.now !== root.Date.now && Date.now,
		        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;
		
		    /* Built-in method references for those with the same name as other `lodash` methods. */
		    var nativeCeil = Math.ceil,
		        nativeFloor = Math.floor,
		        nativeGetSymbols = Object.getOwnPropertySymbols,
		        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
		        nativeIsFinite = context.isFinite,
		        nativeJoin = arrayProto.join,
		        nativeKeys = overArg(Object.keys, Object),
		        nativeMax = Math.max,
		        nativeMin = Math.min,
		        nativeNow = Date.now,
		        nativeParseInt = context.parseInt,
		        nativeRandom = Math.random,
		        nativeReverse = arrayProto.reverse;
		
		    /* Built-in method references that are verified to be native. */
		    var DataView = getNative(context, 'DataView'),
		        Map = getNative(context, 'Map'),
		        Promise = getNative(context, 'Promise'),
		        Set = getNative(context, 'Set'),
		        WeakMap = getNative(context, 'WeakMap'),
		        nativeCreate = getNative(Object, 'create');
		
		    /** Used to store function metadata. */
		    var metaMap = WeakMap && new WeakMap;
		
		    /** Used to lookup unminified function names. */
		    var realNames = {};
		
		    /** Used to detect maps, sets, and weakmaps. */
		    var dataViewCtorString = toSource(DataView),
		        mapCtorString = toSource(Map),
		        promiseCtorString = toSource(Promise),
		        setCtorString = toSource(Set),
		        weakMapCtorString = toSource(WeakMap);
		
		    /** Used to convert symbols to primitives and strings. */
		    var symbolProto = Symbol ? Symbol.prototype : undefined,
		        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
		        symbolToString = symbolProto ? symbolProto.toString : undefined;
		
		    /*------------------------------------------------------------------------*/
		
		    /**
		     * Creates a `lodash` object which wraps `value` to enable implicit method
		     * chain sequences. Methods that operate on and return arrays, collections,
		     * and functions can be chained together. Methods that retrieve a single value
		     * or may return a primitive value will automatically end the chain sequence
		     * and return the unwrapped value. Otherwise, the value must be unwrapped
		     * with `_#value`.
		     *
		     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
		     * enabled using `_.chain`.
		     *
		     * The execution of chained methods is lazy, that is, it's deferred until
		     * `_#value` is implicitly or explicitly called.
		     *
		     * Lazy evaluation allows several methods to support shortcut fusion.
		     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
		     * the creation of intermediate arrays and can greatly reduce the number of
		     * iteratee executions. Sections of a chain sequence qualify for shortcut
		     * fusion if the section is applied to an array of at least `200` elements
		     * and any iteratees accept only one argument. The heuristic for whether a
		     * section qualifies for shortcut fusion is subject to change.
		     *
		     * Chaining is supported in custom builds as long as the `_#value` method is
		     * directly or indirectly included in the build.
		     *
		     * In addition to lodash methods, wrappers have `Array` and `String` methods.
		     *
		     * The wrapper `Array` methods are:
		     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
		     *
		     * The wrapper `String` methods are:
		     * `replace` and `split`
		     *
		     * The wrapper methods that support shortcut fusion are:
		     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
		     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
		     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
		     *
		     * The chainable wrapper methods are:
		     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
		     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
		     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
		     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
		     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
		     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
		     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
		     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
		     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
		     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
		     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
		     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
		     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
		     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
		     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
		     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
		     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
		     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
		     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
		     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
		     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
		     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
		     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
		     * `zipObject`, `zipObjectDeep`, and `zipWith`
		     *
		     * The wrapper methods that are **not** chainable by default are:
		     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
		     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
		     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
		     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
		     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
		     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
		     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
		     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
		     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
		     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
		     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
		     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
		     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
		     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
		     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
		     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
		     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
		     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
		     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
		     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
		     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
		     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
		     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
		     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
		     * `upperFirst`, `value`, and `words`
		     *
		     * @name _
		     * @constructor
		     * @category Seq
		     * @param {*} value The value to wrap in a `lodash` instance.
		     * @returns {Object} Returns the new `lodash` wrapper instance.
		     * @example
		     *
		     * function square(n) {
		     *   return n * n;
		     * }
		     *
		     * var wrapped = _([1, 2, 3]);
		     *
		     * // Returns an unwrapped value.
		     * wrapped.reduce(_.add);
		     * // => 6
		     *
		     * // Returns a wrapped value.
		     * var squares = wrapped.map(square);
		     *
		     * _.isArray(squares);
		     * // => false
		     *
		     * _.isArray(squares.value());
		     * // => true
		     */
		    function lodash(value) {
		      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
		        if (value instanceof LodashWrapper) {
		          return value;
		        }
		        if (hasOwnProperty.call(value, '__wrapped__')) {
		          return wrapperClone(value);
		        }
		      }
		      return new LodashWrapper(value);
		    }
		
		    /**
		     * The base implementation of `_.create` without support for assigning
		     * properties to the created object.
		     *
		     * @private
		     * @param {Object} proto The object to inherit from.
		     * @returns {Object} Returns the new object.
		     */
		    var baseCreate = (function() {
		      function object() {}
		      return function(proto) {
		        if (!isObject(proto)) {
		          return {};
		        }
		        if (objectCreate) {
		          return objectCreate(proto);
		        }
		        object.prototype = proto;
		        var result = new object;
		        object.prototype = undefined;
		        return result;
		      };
		    }());
		
		    /**
		     * The function whose prototype chain sequence wrappers inherit from.
		     *
		     * @private
		     */
		    function baseLodash() {
		      // No operation performed.
		    }
		
		    /**
		     * The base constructor for creating `lodash` wrapper objects.
		     *
		     * @private
		     * @param {*} value The value to wrap.
		     * @param {boolean} [chainAll] Enable explicit method chain sequences.
		     */
		    function LodashWrapper(value, chainAll) {
		      this.__wrapped__ = value;
		      this.__actions__ = [];
		      this.__chain__ = !!chainAll;
		      this.__index__ = 0;
		      this.__values__ = undefined;
		    }
		
		    /**
		     * By default, the template delimiters used by lodash are like those in
		     * embedded Ruby (ERB). Change the following template settings to use
		     * alternative delimiters.
		     *
		     * @static
		     * @memberOf _
		     * @type {Object}
		     */
		    lodash.templateSettings = {
		
		      /**
		       * Used to detect `data` property values to be HTML-escaped.
		       *
		       * @memberOf _.templateSettings
		       * @type {RegExp}
		       */
		      'escape': reEscape,
		
		      /**
		       * Used to detect code to be evaluated.
		       *
		       * @memberOf _.templateSettings
		       * @type {RegExp}
		       */
		      'evaluate': reEvaluate,
		
		      /**
		       * Used to detect `data` property values to inject.
		       *
		       * @memberOf _.templateSettings
		       * @type {RegExp}
		       */
		      'interpolate': reInterpolate,
		
		      /**
		       * Used to reference the data object in the template text.
		       *
		       * @memberOf _.templateSettings
		       * @type {string}
		       */
		      'variable': '',
		
		      /**
		       * Used to import variables into the compiled template.
		       *
		       * @memberOf _.templateSettings
		       * @type {Object}
		       */
		      'imports': {
		
		        /**
		         * A reference to the `lodash` function.
		         *
		         * @memberOf _.templateSettings.imports
		         * @type {Function}
		         */
		        '_': lodash
		      }
		    };
		
		    // Ensure wrappers are instances of `baseLodash`.
		    lodash.prototype = baseLodash.prototype;
		    lodash.prototype.constructor = lodash;
		
		    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
		    LodashWrapper.prototype.constructor = LodashWrapper;
		
		    /*------------------------------------------------------------------------*/
		
		    /**
		     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
		     *
		     * @private
		     * @constructor
		     * @param {*} value The value to wrap.
		     */
		    function LazyWrapper(value) {
		      this.__wrapped__ = value;
		      this.__actions__ = [];
		      this.__dir__ = 1;
		      this.__filtered__ = false;
		      this.__iteratees__ = [];
		      this.__takeCount__ = MAX_ARRAY_LENGTH;
		      this.__views__ = [];
		    }
		
		    /**
		     * Creates a clone of the lazy wrapper object.
		     *
		     * @private
		     * @name clone
		     * @memberOf LazyWrapper
		     * @returns {Object} Returns the cloned `LazyWrapper` object.
		     */
		    function lazyClone() {
		      var result = new LazyWrapper(this.__wrapped__);
		      result.__actions__ = copyArray(this.__actions__);
		      result.__dir__ = this.__dir__;
		      result.__filtered__ = this.__filtered__;
		      result.__iteratees__ = copyArray(this.__iteratees__);
		      result.__takeCount__ = this.__takeCount__;
		      result.__views__ = copyArray(this.__views__);
		      return result;
		    }
		
		    /**
		     * Reverses the direction of lazy iteration.
		     *
		     * @private
		     * @name reverse
		     * @memberOf LazyWrapper
		     * @returns {Object} Returns the new reversed `LazyWrapper` object.
		     */
		    function lazyReverse() {
		      if (this.__filtered__) {
		        var result = new LazyWrapper(this);
		        result.__dir__ = -1;
		        result.__filtered__ = true;
		      } else {
		        result = this.clone();
		        result.__dir__ *= -1;
		      }
		      return result;
		    }
		
		    /**
		     * Extracts the unwrapped value from its lazy wrapper.
		     *
		     * @private
		     * @name value
		     * @memberOf LazyWrapper
		     * @returns {*} Returns the unwrapped value.
		     */
		    function lazyValue() {
		      var array = this.__wrapped__.value(),
		          dir = this.__dir__,
		          isArr = isArray(array),
		          isRight = dir < 0,
		          arrLength = isArr ? array.length : 0,
		          view = getView(0, arrLength, this.__views__),
		          start = view.start,
		          end = view.end,
		          length = end - start,
		          index = isRight ? end : (start - 1),
		          iteratees = this.__iteratees__,
		          iterLength = iteratees.length,
		          resIndex = 0,
		          takeCount = nativeMin(length, this.__takeCount__);
		
		      if (!isArr || arrLength < LARGE_ARRAY_SIZE ||
		          (arrLength == length && takeCount == length)) {
		        return baseWrapperValue(array, this.__actions__);
		      }
		      var result = [];
		
		      outer:
		      while (length-- && resIndex < takeCount) {
		        index += dir;
		
		        var iterIndex = -1,
		            value = array[index];
		
		        while (++iterIndex < iterLength) {
		          var data = iteratees[iterIndex],
		              iteratee = data.iteratee,
		              type = data.type,
		              computed = iteratee(value);
		
		          if (type == LAZY_MAP_FLAG) {
		            value = computed;
		          } else if (!computed) {
		            if (type == LAZY_FILTER_FLAG) {
		              continue outer;
		            } else {
		              break outer;
		            }
		          }
		        }
		        result[resIndex++] = value;
		      }
		      return result;
		    }
		
		    // Ensure `LazyWrapper` is an instance of `baseLodash`.
		    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
		    LazyWrapper.prototype.constructor = LazyWrapper;
		
		    /*------------------------------------------------------------------------*/
		
		    /**
		     * Creates a hash object.
		     *
		     * @private
		     * @constructor
		     * @param {Array} [entries] The key-value pairs to cache.
		     */
		    function Hash(entries) {
		      var index = -1,
		          length = entries == null ? 0 : entries.length;
		
		      this.clear();
		      while (++index < length) {
		        var entry = entries[index];
		        this.set(entry[0], entry[1]);
		      }
		    }
		
		    /**
		     * Removes all key-value entries from the hash.
		     *
		     * @private
		     * @name clear
		     * @memberOf Hash
		     */
		    function hashClear() {
		      this.__data__ = nativeCreate ? nativeCreate(null) : {};
		      this.size = 0;
		    }
		
		    /**
		     * Removes `key` and its value from the hash.
		     *
		     * @private
		     * @name delete
		     * @memberOf Hash
		     * @param {Object} hash The hash to modify.
		     * @param {string} key The key of the value to remove.
		     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
		     */
		    function hashDelete(key) {
		      var result = this.has(key) && delete this.__data__[key];
		      this.size -= result ? 1 : 0;
		      return result;
		    }
		
		    /**
		     * Gets the hash value for `key`.
		     *
		     * @private
		     * @name get
		     * @memberOf Hash
		     * @param {string} key The key of the value to get.
		     * @returns {*} Returns the entry value.
		     */
		    function hashGet(key) {
		      var data = this.__data__;
		      if (nativeCreate) {
		        var result = data[key];
		        return result === HASH_UNDEFINED ? undefined : result;
		      }
		      return hasOwnProperty.call(data, key) ? data[key] : undefined;
		    }
		
		    /**
		     * Checks if a hash value for `key` exists.
		     *
		     * @private
		     * @name has
		     * @memberOf Hash
		     * @param {string} key The key of the entry to check.
		     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
		     */
		    function hashHas(key) {
		      var data = this.__data__;
		      return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
		    }
		
		    /**
		     * Sets the hash `key` to `value`.
		     *
		     * @private
		     * @name set
		     * @memberOf Hash
		     * @param {string} key The key of the value to set.
		     * @param {*} value The value to set.
		     * @returns {Object} Returns the hash instance.
		     */
		    function hashSet(key, value) {
		      var data = this.__data__;
		      this.size += this.has(key) ? 0 : 1;
		      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
		      return this;
		    }
		
		    // Add methods to `Hash`.
		    Hash.prototype.clear = hashClear;
		    Hash.prototype['delete'] = hashDelete;
		    Hash.prototype.get = hashGet;
		    Hash.prototype.has = hashHas;
		    Hash.prototype.set = hashSet;
		
		    /*------------------------------------------------------------------------*/
		
		    /**
		     * Creates an list cache object.
		     *
		     * @private
		     * @constructor
		     * @param {Array} [entries] The key-value pairs to cache.
		     */
		    function ListCache(entries) {
		      var index = -1,
		          length = entries == null ? 0 : entries.length;
		
		      this.clear();
		      while (++index < length) {
		        var entry = entries[index];
		        this.set(entry[0], entry[1]);
		      }
		    }
		
		    /**
		     * Removes all key-value entries from the list cache.
		     *
		     * @private
		     * @name clear
		     * @memberOf ListCache
		     */
		    function listCacheClear() {
		      this.__data__ = [];
		      this.size = 0;
		    }
		
		    /**
		     * Removes `key` and its value from the list cache.
		     *
		     * @private
		     * @name delete
		     * @memberOf ListCache
		     * @param {string} key The key of the value to remove.
		     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
		     */
		    function listCacheDelete(key) {
		      var data = this.__data__,
		          index = assocIndexOf(data, key);
		
		      if (index < 0) {
		        return false;
		      }
		      var lastIndex = data.length - 1;
		      if (index == lastIndex) {
		        data.pop();
		      } else {
		        splice.call(data, index, 1);
		      }
		      --this.size;
		      return true;
		    }
		
		    /**
		     * Gets the list cache value for `key`.
		     *
		     * @private
		     * @name get
		     * @memberOf ListCache
		     * @param {string} key The key of the value to get.
		     * @returns {*} Returns the entry value.
		     */
		    function listCacheGet(key) {
		      var data = this.__data__,
		          index = assocIndexOf(data, key);
		
		      return index < 0 ? undefined : data[index][1];
		    }
		
		    /**
		     * Checks if a list cache value for `key` exists.
		     *
		     * @private
		     * @name has
		     * @memberOf ListCache
		     * @param {string} key The key of the entry to check.
		     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
		     */
		    function listCacheHas(key) {
		      return assocIndexOf(this.__data__, key) > -1;
		    }
		
		    /**
		     * Sets the list cache `key` to `value`.
		     *
		     * @private
		     * @name set
		     * @memberOf ListCache
		     * @param {string} key The key of the value to set.
		     * @param {*} value The value to set.
		     * @returns {Object} Returns the list cache instance.
		     */
		    function listCacheSet(key, value) {
		      var data = this.__data__,
		          index = assocIndexOf(data, key);
		
		      if (index < 0) {
		        ++this.size;
		        data.push([key, value]);
		      } else {
		        data[index][1] = value;
		      }
		      return this;
		    }
		
		    // Add methods to `ListCache`.
		    ListCache.prototype.clear = listCacheClear;
		    ListCache.prototype['delete'] = listCacheDelete;
		    ListCache.prototype.get = listCacheGet;
		    ListCache.prototype.has = listCacheHas;
		    ListCache.prototype.set = listCacheSet;
		
		    /*------------------------------------------------------------------------*/
		
		    /**
		     * Creates a map cache object to store key-value pairs.
		     *
		     * @private
		     * @constructor
		     * @param {Array} [entries] The key-value pairs to cache.
		     */
		    function MapCache(entries) {
		      var index = -1,
		          length = entries == null ? 0 : entries.length;
		
		      this.clear();
		      while (++index < length) {
		        var entry = entries[index];
		        this.set(entry[0], entry[1]);
		      }
		    }
		
		    /**
		     * Removes all key-value entries from the map.
		     *
		     * @private
		     * @name clear
		     * @memberOf MapCache
		     */
		    function mapCacheClear() {
		      this.size = 0;
		      this.__data__ = {
		        'hash': new Hash,
		        'map': new (Map || ListCache),
		        'string': new Hash
		      };
		    }
		
		    /**
		     * Removes `key` and its value from the map.
		     *
		     * @private
		     * @name delete
		     * @memberOf MapCache
		     * @param {string} key The key of the value to remove.
		     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
		     */
		    function mapCacheDelete(key) {
		      var result = getMapData(this, key)['delete'](key);
		      this.size -= result ? 1 : 0;
		      return result;
		    }
		
		    /**
		     * Gets the map value for `key`.
		     *
		     * @private
		     * @name get
		     * @memberOf MapCache
		     * @param {string} key The key of the value to get.
		     * @returns {*} Returns the entry value.
		     */
		    function mapCacheGet(key) {
		      return getMapData(this, key).get(key);
		    }
		
		    /**
		     * Checks if a map value for `key` exists.
		     *
		     * @private
		     * @name has
		     * @memberOf MapCache
		     * @param {string} key The key of the entry to check.
		     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
		     */
		    function mapCacheHas(key) {
		      return getMapData(this, key).has(key);
		    }
		
		    /**
		     * Sets the map `key` to `value`.
		     *
		     * @private
		     * @name set
		     * @memberOf MapCache
		     * @param {string} key The key of the value to set.
		     * @param {*} value The value to set.
		     * @returns {Object} Returns the map cache instance.
		     */
		    function mapCacheSet(key, value) {
		      var data = getMapData(this, key),
		          size = data.size;
		
		      data.set(key, value);
		      this.size += data.size == size ? 0 : 1;
		      return this;
		    }
		
		    // Add methods to `MapCache`.
		    MapCache.prototype.clear = mapCacheClear;
		    MapCache.prototype['delete'] = mapCacheDelete;
		    MapCache.prototype.get = mapCacheGet;
		    MapCache.prototype.has = mapCacheHas;
		    MapCache.prototype.set = mapCacheSet;
		
		    /*------------------------------------------------------------------------*/
		
		    /**
		     *
		     * Creates an array cache object to store unique values.
		     *
		     * @private
		     * @constructor
		     * @param {Array} [values] The values to cache.
		     */
		    function SetCache(values) {
		      var index = -1,
		          length = values == null ? 0 : values.length;
		
		      this.__data__ = new MapCache;
		      while (++index < length) {
		        this.add(values[index]);
		      }
		    }
		
		    /**
		     * Adds `value` to the array cache.
		     *
		     * @private
		     * @name add
		     * @memberOf SetCache
		     * @alias push
		     * @param {*} value The value to cache.
		     * @returns {Object} Returns the cache instance.
		     */
		    function setCacheAdd(value) {
		      this.__data__.set(value, HASH_UNDEFINED);
		      return this;
		    }
		
		    /**
		     * Checks if `value` is in the array cache.
		     *
		     * @private
		     * @name has
		     * @memberOf SetCache
		     * @param {*} value The value to search for.
		     * @returns {number} Returns `true` if `value` is found, else `false`.
		     */
		    function setCacheHas(value) {
		      return this.__data__.has(value);
		    }
		
		    // Add methods to `SetCache`.
		    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
		    SetCache.prototype.has = setCacheHas;
		
		    /*------------------------------------------------------------------------*/
		
		    /**
		     * Creates a stack cache object to store key-value pairs.
		     *
		     * @private
		     * @constructor
		     * @param {Array} [entries] The key-value pairs to cache.
		     */
		    function Stack(entries) {
		      var data = this.__data__ = new ListCache(entries);
		      this.size = data.size;
		    }
		
		    /**
		     * Removes all key-value entries from the stack.
		     *
		     * @private
		     * @name clear
		     * @memberOf Stack
		     */
		    function stackClear() {
		      this.__data__ = new ListCache;
		      this.size = 0;
		    }
		
		    /**
		     * Removes `key` and its value from the stack.
		     *
		     * @private
		     * @name delete
		     * @memberOf Stack
		     * @param {string} key The key of the value to remove.
		     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
		     */
		    function stackDelete(key) {
		      var data = this.__data__,
		          result = data['delete'](key);
		
		      this.size = data.size;
		      return result;
		    }
		
		    /**
		     * Gets the stack value for `key`.
		     *
		     * @private
		     * @name get
		     * @memberOf Stack
		     * @param {string} key The key of the value to get.
		     * @returns {*} Returns the entry value.
		     */
		    function stackGet(key) {
		      return this.__data__.get(key);
		    }
		
		    /**
		     * Checks if a stack value for `key` exists.
		     *
		     * @private
		     * @name has
		     * @memberOf Stack
		     * @param {string} key The key of the entry to check.
		     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
		     */
		    function stackHas(key) {
		      return this.__data__.has(key);
		    }
		
		    /**
		     * Sets the stack `key` to `value`.
		     *
		     * @private
		     * @name set
		     * @memberOf Stack
		     * @param {string} key The key of the value to set.
		     * @param {*} value The value to set.
		     * @returns {Object} Returns the stack cache instance.
		     */
		    function stackSet(key, value) {
		      var data = this.__data__;
		      if (data instanceof ListCache) {
		        var pairs = data.__data__;
		        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
		          pairs.push([key, value]);
		          this.size = ++data.size;
		          return this;
		        }
		        data = this.__data__ = new MapCache(pairs);
		      }
		      data.set(key, value);
		      this.size = data.size;
		      return this;
		    }
		
		    // Add methods to `Stack`.
		    Stack.prototype.clear = stackClear;
		    Stack.prototype['delete'] = stackDelete;
		    Stack.prototype.get = stackGet;
		    Stack.prototype.has = stackHas;
		    Stack.prototype.set = stackSet;
		
		    /*------------------------------------------------------------------------*/
		
		    /**
		     * Creates an array of the enumerable property names of the array-like `value`.
		     *
		     * @private
		     * @param {*} value The value to query.
		     * @param {boolean} inherited Specify returning inherited property names.
		     * @returns {Array} Returns the array of property names.
		     */
		    function arrayLikeKeys(value, inherited) {
		      var isArr = isArray(value),
		          isArg = !isArr && isArguments(value),
		          isBuff = !isArr && !isArg && isBuffer(value),
		          isType = !isArr && !isArg && !isBuff && isTypedArray(value),
		          skipIndexes = isArr || isArg || isBuff || isType,
		          result = skipIndexes ? baseTimes(value.length, String) : [],
		          length = result.length;
		
		      for (var key in value) {
		        if ((inherited || hasOwnProperty.call(value, key)) &&
		            !(skipIndexes && (
		               // Safari 9 has enumerable `arguments.length` in strict mode.
		               key == 'length' ||
		               // Node.js 0.10 has enumerable non-index properties on buffers.
		               (isBuff && (key == 'offset' || key == 'parent')) ||
		               // PhantomJS 2 has enumerable non-index properties on typed arrays.
		               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
		               // Skip index properties.
		               isIndex(key, length)
		            ))) {
		          result.push(key);
		        }
		      }
		      return result;
		    }
		
		    /**
		     * A specialized version of `_.sample` for arrays.
		     *
		     * @private
		     * @param {Array} array The array to sample.
		     * @returns {*} Returns the random element.
		     */
		    function arraySample(array) {
		      var length = array.length;
		      return length ? array[baseRandom(0, length - 1)] : undefined;
		    }
		
		    /**
		     * A specialized version of `_.sampleSize` for arrays.
		     *
		     * @private
		     * @param {Array} array The array to sample.
		     * @param {number} n The number of elements to sample.
		     * @returns {Array} Returns the random elements.
		     */
		    function arraySampleSize(array, n) {
		      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
		    }
		
		    /**
		     * A specialized version of `_.shuffle` for arrays.
		     *
		     * @private
		     * @param {Array} array The array to shuffle.
		     * @returns {Array} Returns the new shuffled array.
		     */
		    function arrayShuffle(array) {
		      return shuffleSelf(copyArray(array));
		    }
		
		    /**
		     * Used by `_.defaults` to customize its `_.assignIn` use.
		     *
		     * @private
		     * @param {*} objValue The destination value.
		     * @param {*} srcValue The source value.
		     * @param {string} key The key of the property to assign.
		     * @param {Object} object The parent object of `objValue`.
		     * @returns {*} Returns the value to assign.
		     */
		    function assignInDefaults(objValue, srcValue, key, object) {
		      if (objValue === undefined ||
		          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
		        return srcValue;
		      }
		      return objValue;
		    }
		
		    /**
		     * This function is like `assignValue` except that it doesn't assign
		     * `undefined` values.
		     *
		     * @private
		     * @param {Object} object The object to modify.
		     * @param {string} key The key of the property to assign.
		     * @param {*} value The value to assign.
		     */
		    function assignMergeValue(object, key, value) {
		      if ((value !== undefined && !eq(object[key], value)) ||
		          (value === undefined && !(key in object))) {
		        baseAssignValue(object, key, value);
		      }
		    }
		
		    /**
		     * Assigns `value` to `key` of `object` if the existing value is not equivalent
		     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
		     * for equality comparisons.
		     *
		     * @private
		     * @param {Object} object The object to modify.
		     * @param {string} key The key of the property to assign.
		     * @param {*} value The value to assign.
		     */
		    function assignValue(object, key, value) {
		      var objValue = object[key];
		      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
		          (value === undefined && !(key in object))) {
		        baseAssignValue(object, key, value);
		      }
		    }
		
		    /**
		     * Gets the index at which the `key` is found in `array` of key-value pairs.
		     *
		     * @private
		     * @param {Array} array The array to inspect.
		     * @param {*} key The key to search for.
		     * @returns {number} Returns the index of the matched value, else `-1`.
		     */
		    function assocIndexOf(array, key) {
		      var length = array.length;
		      while (length--) {
		        if (eq(array[length][0], key)) {
		          return length;
		        }
		      }
		      return -1;
		    }
		
		    /**
		     * Aggregates elements of `collection` on `accumulator` with keys transformed
		     * by `iteratee` and values set by `setter`.
		     *
		     * @private
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function} setter The function to set `accumulator` values.
		     * @param {Function} iteratee The iteratee to transform keys.
		     * @param {Object} accumulator The initial aggregated object.
		     * @returns {Function} Returns `accumulator`.
		     */
		    function baseAggregator(collection, setter, iteratee, accumulator) {
		      baseEach(collection, function(value, key, collection) {
		        setter(accumulator, value, iteratee(value), collection);
		      });
		      return accumulator;
		    }
		
		    /**
		     * The base implementation of `_.assign` without support for multiple sources
		     * or `customizer` functions.
		     *
		     * @private
		     * @param {Object} object The destination object.
		     * @param {Object} source The source object.
		     * @returns {Object} Returns `object`.
		     */
		    function baseAssign(object, source) {
		      return object && copyObject(source, keys(source), object);
		    }
		
		    /**
		     * The base implementation of `_.assignIn` without support for multiple sources
		     * or `customizer` functions.
		     *
		     * @private
		     * @param {Object} object The destination object.
		     * @param {Object} source The source object.
		     * @returns {Object} Returns `object`.
		     */
		    function baseAssignIn(object, source) {
		      return object && copyObject(source, keysIn(source), object);
		    }
		
		    /**
		     * The base implementation of `assignValue` and `assignMergeValue` without
		     * value checks.
		     *
		     * @private
		     * @param {Object} object The object to modify.
		     * @param {string} key The key of the property to assign.
		     * @param {*} value The value to assign.
		     */
		    function baseAssignValue(object, key, value) {
		      if (key == '__proto__' && defineProperty) {
		        defineProperty(object, key, {
		          'configurable': true,
		          'enumerable': true,
		          'value': value,
		          'writable': true
		        });
		      } else {
		        object[key] = value;
		      }
		    }
		
		    /**
		     * The base implementation of `_.at` without support for individual paths.
		     *
		     * @private
		     * @param {Object} object The object to iterate over.
		     * @param {string[]} paths The property paths to pick.
		     * @returns {Array} Returns the picked elements.
		     */
		    function baseAt(object, paths) {
		      var index = -1,
		          length = paths.length,
		          result = Array(length),
		          skip = object == null;
		
		      while (++index < length) {
		        result[index] = skip ? undefined : get(object, paths[index]);
		      }
		      return result;
		    }
		
		    /**
		     * The base implementation of `_.clamp` which doesn't coerce arguments.
		     *
		     * @private
		     * @param {number} number The number to clamp.
		     * @param {number} [lower] The lower bound.
		     * @param {number} upper The upper bound.
		     * @returns {number} Returns the clamped number.
		     */
		    function baseClamp(number, lower, upper) {
		      if (number === number) {
		        if (upper !== undefined) {
		          number = number <= upper ? number : upper;
		        }
		        if (lower !== undefined) {
		          number = number >= lower ? number : lower;
		        }
		      }
		      return number;
		    }
		
		    /**
		     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
		     * traversed objects.
		     *
		     * @private
		     * @param {*} value The value to clone.
		     * @param {boolean} bitmask The bitmask flags.
		     *  1 - Deep clone
		     *  2 - Flatten inherited properties
		     *  4 - Clone symbols
		     * @param {Function} [customizer] The function to customize cloning.
		     * @param {string} [key] The key of `value`.
		     * @param {Object} [object] The parent object of `value`.
		     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
		     * @returns {*} Returns the cloned value.
		     */
		    function baseClone(value, bitmask, customizer, key, object, stack) {
		      var result,
		          isDeep = bitmask & CLONE_DEEP_FLAG,
		          isFlat = bitmask & CLONE_FLAT_FLAG,
		          isFull = bitmask & CLONE_SYMBOLS_FLAG;
		
		      if (customizer) {
		        result = object ? customizer(value, key, object, stack) : customizer(value);
		      }
		      if (result !== undefined) {
		        return result;
		      }
		      if (!isObject(value)) {
		        return value;
		      }
		      var isArr = isArray(value);
		      if (isArr) {
		        result = initCloneArray(value);
		        if (!isDeep) {
		          return copyArray(value, result);
		        }
		      } else {
		        var tag = getTag(value),
		            isFunc = tag == funcTag || tag == genTag;
		
		        if (isBuffer(value)) {
		          return cloneBuffer(value, isDeep);
		        }
		        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
		          result = (isFlat || isFunc) ? {} : initCloneObject(value);
		          if (!isDeep) {
		            return isFlat
		              ? copySymbolsIn(value, baseAssignIn(result, value))
		              : copySymbols(value, baseAssign(result, value));
		          }
		        } else {
		          if (!cloneableTags[tag]) {
		            return object ? value : {};
		          }
		          result = initCloneByTag(value, tag, baseClone, isDeep);
		        }
		      }
		      // Check for circular references and return its corresponding clone.
		      stack || (stack = new Stack);
		      var stacked = stack.get(value);
		      if (stacked) {
		        return stacked;
		      }
		      stack.set(value, result);
		
		      var keysFunc = isFull
		        ? (isFlat ? getAllKeysIn : getAllKeys)
		        : (isFlat ? keysIn : keys);
		
		      var props = isArr ? undefined : keysFunc(value);
		      arrayEach(props || value, function(subValue, key) {
		        if (props) {
		          key = subValue;
		          subValue = value[key];
		        }
		        // Recursively populate clone (susceptible to call stack limits).
		        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
		      });
		      return result;
		    }
		
		    /**
		     * The base implementation of `_.conforms` which doesn't clone `source`.
		     *
		     * @private
		     * @param {Object} source The object of property predicates to conform to.
		     * @returns {Function} Returns the new spec function.
		     */
		    function baseConforms(source) {
		      var props = keys(source);
		      return function(object) {
		        return baseConformsTo(object, source, props);
		      };
		    }
		
		    /**
		     * The base implementation of `_.conformsTo` which accepts `props` to check.
		     *
		     * @private
		     * @param {Object} object The object to inspect.
		     * @param {Object} source The object of property predicates to conform to.
		     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
		     */
		    function baseConformsTo(object, source, props) {
		      var length = props.length;
		      if (object == null) {
		        return !length;
		      }
		      object = Object(object);
		      while (length--) {
		        var key = props[length],
		            predicate = source[key],
		            value = object[key];
		
		        if ((value === undefined && !(key in object)) || !predicate(value)) {
		          return false;
		        }
		      }
		      return true;
		    }
		
		    /**
		     * The base implementation of `_.delay` and `_.defer` which accepts `args`
		     * to provide to `func`.
		     *
		     * @private
		     * @param {Function} func The function to delay.
		     * @param {number} wait The number of milliseconds to delay invocation.
		     * @param {Array} args The arguments to provide to `func`.
		     * @returns {number|Object} Returns the timer id or timeout object.
		     */
		    function baseDelay(func, wait, args) {
		      if (typeof func != 'function') {
		        throw new TypeError(FUNC_ERROR_TEXT);
		      }
		      return setTimeout(function() { func.apply(undefined, args); }, wait);
		    }
		
		    /**
		     * The base implementation of methods like `_.difference` without support
		     * for excluding multiple arrays or iteratee shorthands.
		     *
		     * @private
		     * @param {Array} array The array to inspect.
		     * @param {Array} values The values to exclude.
		     * @param {Function} [iteratee] The iteratee invoked per element.
		     * @param {Function} [comparator] The comparator invoked per element.
		     * @returns {Array} Returns the new array of filtered values.
		     */
		    function baseDifference(array, values, iteratee, comparator) {
		      var index = -1,
		          includes = arrayIncludes,
		          isCommon = true,
		          length = array.length,
		          result = [],
		          valuesLength = values.length;
		
		      if (!length) {
		        return result;
		      }
		      if (iteratee) {
		        values = arrayMap(values, baseUnary(iteratee));
		      }
		      if (comparator) {
		        includes = arrayIncludesWith;
		        isCommon = false;
		      }
		      else if (values.length >= LARGE_ARRAY_SIZE) {
		        includes = cacheHas;
		        isCommon = false;
		        values = new SetCache(values);
		      }
		      outer:
		      while (++index < length) {
		        var value = array[index],
		            computed = iteratee == null ? value : iteratee(value);
		
		        value = (comparator || value !== 0) ? value : 0;
		        if (isCommon && computed === computed) {
		          var valuesIndex = valuesLength;
		          while (valuesIndex--) {
		            if (values[valuesIndex] === computed) {
		              continue outer;
		            }
		          }
		          result.push(value);
		        }
		        else if (!includes(values, computed, comparator)) {
		          result.push(value);
		        }
		      }
		      return result;
		    }
		
		    /**
		     * The base implementation of `_.forEach` without support for iteratee shorthands.
		     *
		     * @private
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function} iteratee The function invoked per iteration.
		     * @returns {Array|Object} Returns `collection`.
		     */
		    var baseEach = createBaseEach(baseForOwn);
		
		    /**
		     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
		     *
		     * @private
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function} iteratee The function invoked per iteration.
		     * @returns {Array|Object} Returns `collection`.
		     */
		    var baseEachRight = createBaseEach(baseForOwnRight, true);
		
		    /**
		     * The base implementation of `_.every` without support for iteratee shorthands.
		     *
		     * @private
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function} predicate The function invoked per iteration.
		     * @returns {boolean} Returns `true` if all elements pass the predicate check,
		     *  else `false`
		     */
		    function baseEvery(collection, predicate) {
		      var result = true;
		      baseEach(collection, function(value, index, collection) {
		        result = !!predicate(value, index, collection);
		        return result;
		      });
		      return result;
		    }
		
		    /**
		     * The base implementation of methods like `_.max` and `_.min` which accepts a
		     * `comparator` to determine the extremum value.
		     *
		     * @private
		     * @param {Array} array The array to iterate over.
		     * @param {Function} iteratee The iteratee invoked per iteration.
		     * @param {Function} comparator The comparator used to compare values.
		     * @returns {*} Returns the extremum value.
		     */
		    function baseExtremum(array, iteratee, comparator) {
		      var index = -1,
		          length = array.length;
		
		      while (++index < length) {
		        var value = array[index],
		            current = iteratee(value);
		
		        if (current != null && (computed === undefined
		              ? (current === current && !isSymbol(current))
		              : comparator(current, computed)
		            )) {
		          var computed = current,
		              result = value;
		        }
		      }
		      return result;
		    }
		
		    /**
		     * The base implementation of `_.fill` without an iteratee call guard.
		     *
		     * @private
		     * @param {Array} array The array to fill.
		     * @param {*} value The value to fill `array` with.
		     * @param {number} [start=0] The start position.
		     * @param {number} [end=array.length] The end position.
		     * @returns {Array} Returns `array`.
		     */
		    function baseFill(array, value, start, end) {
		      var length = array.length;
		
		      start = toInteger(start);
		      if (start < 0) {
		        start = -start > length ? 0 : (length + start);
		      }
		      end = (end === undefined || end > length) ? length : toInteger(end);
		      if (end < 0) {
		        end += length;
		      }
		      end = start > end ? 0 : toLength(end);
		      while (start < end) {
		        array[start++] = value;
		      }
		      return array;
		    }
		
		    /**
		     * The base implementation of `_.filter` without support for iteratee shorthands.
		     *
		     * @private
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function} predicate The function invoked per iteration.
		     * @returns {Array} Returns the new filtered array.
		     */
		    function baseFilter(collection, predicate) {
		      var result = [];
		      baseEach(collection, function(value, index, collection) {
		        if (predicate(value, index, collection)) {
		          result.push(value);
		        }
		      });
		      return result;
		    }
		
		    /**
		     * The base implementation of `_.flatten` with support for restricting flattening.
		     *
		     * @private
		     * @param {Array} array The array to flatten.
		     * @param {number} depth The maximum recursion depth.
		     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
		     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
		     * @param {Array} [result=[]] The initial result value.
		     * @returns {Array} Returns the new flattened array.
		     */
		    function baseFlatten(array, depth, predicate, isStrict, result) {
		      var index = -1,
		          length = array.length;
		
		      predicate || (predicate = isFlattenable);
		      result || (result = []);
		
		      while (++index < length) {
		        var value = array[index];
		        if (depth > 0 && predicate(value)) {
		          if (depth > 1) {
		            // Recursively flatten arrays (susceptible to call stack limits).
		            baseFlatten(value, depth - 1, predicate, isStrict, result);
		          } else {
		            arrayPush(result, value);
		          }
		        } else if (!isStrict) {
		          result[result.length] = value;
		        }
		      }
		      return result;
		    }
		
		    /**
		     * The base implementation of `baseForOwn` which iterates over `object`
		     * properties returned by `keysFunc` and invokes `iteratee` for each property.
		     * Iteratee functions may exit iteration early by explicitly returning `false`.
		     *
		     * @private
		     * @param {Object} object The object to iterate over.
		     * @param {Function} iteratee The function invoked per iteration.
		     * @param {Function} keysFunc The function to get the keys of `object`.
		     * @returns {Object} Returns `object`.
		     */
		    var baseFor = createBaseFor();
		
		    /**
		     * This function is like `baseFor` except that it iterates over properties
		     * in the opposite order.
		     *
		     * @private
		     * @param {Object} object The object to iterate over.
		     * @param {Function} iteratee The function invoked per iteration.
		     * @param {Function} keysFunc The function to get the keys of `object`.
		     * @returns {Object} Returns `object`.
		     */
		    var baseForRight = createBaseFor(true);
		
		    /**
		     * The base implementation of `_.forOwn` without support for iteratee shorthands.
		     *
		     * @private
		     * @param {Object} object The object to iterate over.
		     * @param {Function} iteratee The function invoked per iteration.
		     * @returns {Object} Returns `object`.
		     */
		    function baseForOwn(object, iteratee) {
		      return object && baseFor(object, iteratee, keys);
		    }
		
		    /**
		     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
		     *
		     * @private
		     * @param {Object} object The object to iterate over.
		     * @param {Function} iteratee The function invoked per iteration.
		     * @returns {Object} Returns `object`.
		     */
		    function baseForOwnRight(object, iteratee) {
		      return object && baseForRight(object, iteratee, keys);
		    }
		
		    /**
		     * The base implementation of `_.functions` which creates an array of
		     * `object` function property names filtered from `props`.
		     *
		     * @private
		     * @param {Object} object The object to inspect.
		     * @param {Array} props The property names to filter.
		     * @returns {Array} Returns the function names.
		     */
		    function baseFunctions(object, props) {
		      return arrayFilter(props, function(key) {
		        return isFunction(object[key]);
		      });
		    }
		
		    /**
		     * The base implementation of `_.get` without support for default values.
		     *
		     * @private
		     * @param {Object} object The object to query.
		     * @param {Array|string} path The path of the property to get.
		     * @returns {*} Returns the resolved value.
		     */
		    function baseGet(object, path) {
		      path = castPath(path, object);
		
		      var index = 0,
		          length = path.length;
		
		      while (object != null && index < length) {
		        object = object[toKey(path[index++])];
		      }
		      return (index && index == length) ? object : undefined;
		    }
		
		    /**
		     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
		     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
		     * symbols of `object`.
		     *
		     * @private
		     * @param {Object} object The object to query.
		     * @param {Function} keysFunc The function to get the keys of `object`.
		     * @param {Function} symbolsFunc The function to get the symbols of `object`.
		     * @returns {Array} Returns the array of property names and symbols.
		     */
		    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
		      var result = keysFunc(object);
		      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
		    }
		
		    /**
		     * The base implementation of `getTag` without fallbacks for buggy environments.
		     *
		     * @private
		     * @param {*} value The value to query.
		     * @returns {string} Returns the `toStringTag`.
		     */
		    function baseGetTag(value) {
		      if (value == null) {
		        return value === undefined ? undefinedTag : nullTag;
		      }
		      value = Object(value);
		      return (symToStringTag && symToStringTag in value)
		        ? getRawTag(value)
		        : objectToString(value);
		    }
		
		    /**
		     * The base implementation of `_.gt` which doesn't coerce arguments.
		     *
		     * @private
		     * @param {*} value The value to compare.
		     * @param {*} other The other value to compare.
		     * @returns {boolean} Returns `true` if `value` is greater than `other`,
		     *  else `false`.
		     */
		    function baseGt(value, other) {
		      return value > other;
		    }
		
		    /**
		     * The base implementation of `_.has` without support for deep paths.
		     *
		     * @private
		     * @param {Object} [object] The object to query.
		     * @param {Array|string} key The key to check.
		     * @returns {boolean} Returns `true` if `key` exists, else `false`.
		     */
		    function baseHas(object, key) {
		      return object != null && hasOwnProperty.call(object, key);
		    }
		
		    /**
		     * The base implementation of `_.hasIn` without support for deep paths.
		     *
		     * @private
		     * @param {Object} [object] The object to query.
		     * @param {Array|string} key The key to check.
		     * @returns {boolean} Returns `true` if `key` exists, else `false`.
		     */
		    function baseHasIn(object, key) {
		      return object != null && key in Object(object);
		    }
		
		    /**
		     * The base implementation of `_.inRange` which doesn't coerce arguments.
		     *
		     * @private
		     * @param {number} number The number to check.
		     * @param {number} start The start of the range.
		     * @param {number} end The end of the range.
		     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
		     */
		    function baseInRange(number, start, end) {
		      return number >= nativeMin(start, end) && number < nativeMax(start, end);
		    }
		
		    /**
		     * The base implementation of methods like `_.intersection`, without support
		     * for iteratee shorthands, that accepts an array of arrays to inspect.
		     *
		     * @private
		     * @param {Array} arrays The arrays to inspect.
		     * @param {Function} [iteratee] The iteratee invoked per element.
		     * @param {Function} [comparator] The comparator invoked per element.
		     * @returns {Array} Returns the new array of shared values.
		     */
		    function baseIntersection(arrays, iteratee, comparator) {
		      var includes = comparator ? arrayIncludesWith : arrayIncludes,
		          length = arrays[0].length,
		          othLength = arrays.length,
		          othIndex = othLength,
		          caches = Array(othLength),
		          maxLength = Infinity,
		          result = [];
		
		      while (othIndex--) {
		        var array = arrays[othIndex];
		        if (othIndex && iteratee) {
		          array = arrayMap(array, baseUnary(iteratee));
		        }
		        maxLength = nativeMin(array.length, maxLength);
		        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
		          ? new SetCache(othIndex && array)
		          : undefined;
		      }
		      array = arrays[0];
		
		      var index = -1,
		          seen = caches[0];
		
		      outer:
		      while (++index < length && result.length < maxLength) {
		        var value = array[index],
		            computed = iteratee ? iteratee(value) : value;
		
		        value = (comparator || value !== 0) ? value : 0;
		        if (!(seen
		              ? cacheHas(seen, computed)
		              : includes(result, computed, comparator)
		            )) {
		          othIndex = othLength;
		          while (--othIndex) {
		            var cache = caches[othIndex];
		            if (!(cache
		                  ? cacheHas(cache, computed)
		                  : includes(arrays[othIndex], computed, comparator))
		                ) {
		              continue outer;
		            }
		          }
		          if (seen) {
		            seen.push(computed);
		          }
		          result.push(value);
		        }
		      }
		      return result;
		    }
		
		    /**
		     * The base implementation of `_.invert` and `_.invertBy` which inverts
		     * `object` with values transformed by `iteratee` and set by `setter`.
		     *
		     * @private
		     * @param {Object} object The object to iterate over.
		     * @param {Function} setter The function to set `accumulator` values.
		     * @param {Function} iteratee The iteratee to transform values.
		     * @param {Object} accumulator The initial inverted object.
		     * @returns {Function} Returns `accumulator`.
		     */
		    function baseInverter(object, setter, iteratee, accumulator) {
		      baseForOwn(object, function(value, key, object) {
		        setter(accumulator, iteratee(value), key, object);
		      });
		      return accumulator;
		    }
		
		    /**
		     * The base implementation of `_.invoke` without support for individual
		     * method arguments.
		     *
		     * @private
		     * @param {Object} object The object to query.
		     * @param {Array|string} path The path of the method to invoke.
		     * @param {Array} args The arguments to invoke the method with.
		     * @returns {*} Returns the result of the invoked method.
		     */
		    function baseInvoke(object, path, args) {
		      path = castPath(path, object);
		      object = parent(object, path);
		      var func = object == null ? object : object[toKey(last(path))];
		      return func == null ? undefined : apply(func, object, args);
		    }
		
		    /**
		     * The base implementation of `_.isArguments`.
		     *
		     * @private
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
		     */
		    function baseIsArguments(value) {
		      return isObjectLike(value) && baseGetTag(value) == argsTag;
		    }
		
		    /**
		     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
		     *
		     * @private
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
		     */
		    function baseIsArrayBuffer(value) {
		      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
		    }
		
		    /**
		     * The base implementation of `_.isDate` without Node.js optimizations.
		     *
		     * @private
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
		     */
		    function baseIsDate(value) {
		      return isObjectLike(value) && baseGetTag(value) == dateTag;
		    }
		
		    /**
		     * The base implementation of `_.isEqual` which supports partial comparisons
		     * and tracks traversed objects.
		     *
		     * @private
		     * @param {*} value The value to compare.
		     * @param {*} other The other value to compare.
		     * @param {boolean} bitmask The bitmask flags.
		     *  1 - Unordered comparison
		     *  2 - Partial comparison
		     * @param {Function} [customizer] The function to customize comparisons.
		     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
		     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
		     */
		    function baseIsEqual(value, other, bitmask, customizer, stack) {
		      if (value === other) {
		        return true;
		      }
		      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {
		        return value !== value && other !== other;
		      }
		      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
		    }
		
		    /**
		     * A specialized version of `baseIsEqual` for arrays and objects which performs
		     * deep comparisons and tracks traversed objects enabling objects with circular
		     * references to be compared.
		     *
		     * @private
		     * @param {Object} object The object to compare.
		     * @param {Object} other The other object to compare.
		     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
		     * @param {Function} customizer The function to customize comparisons.
		     * @param {Function} equalFunc The function to determine equivalents of values.
		     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
		     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
		     */
		    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
		      var objIsArr = isArray(object),
		          othIsArr = isArray(other),
		          objTag = arrayTag,
		          othTag = arrayTag;
		
		      if (!objIsArr) {
		        objTag = getTag(object);
		        objTag = objTag == argsTag ? objectTag : objTag;
		      }
		      if (!othIsArr) {
		        othTag = getTag(other);
		        othTag = othTag == argsTag ? objectTag : othTag;
		      }
		      var objIsObj = objTag == objectTag,
		          othIsObj = othTag == objectTag,
		          isSameTag = objTag == othTag;
		
		      if (isSameTag && isBuffer(object)) {
		        if (!isBuffer(other)) {
		          return false;
		        }
		        objIsArr = true;
		        objIsObj = false;
		      }
		      if (isSameTag && !objIsObj) {
		        stack || (stack = new Stack);
		        return (objIsArr || isTypedArray(object))
		          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
		          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
		      }
		      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
		        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
		            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');
		
		        if (objIsWrapped || othIsWrapped) {
		          var objUnwrapped = objIsWrapped ? object.value() : object,
		              othUnwrapped = othIsWrapped ? other.value() : other;
		
		          stack || (stack = new Stack);
		          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
		        }
		      }
		      if (!isSameTag) {
		        return false;
		      }
		      stack || (stack = new Stack);
		      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
		    }
		
		    /**
		     * The base implementation of `_.isMap` without Node.js optimizations.
		     *
		     * @private
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
		     */
		    function baseIsMap(value) {
		      return isObjectLike(value) && getTag(value) == mapTag;
		    }
		
		    /**
		     * The base implementation of `_.isMatch` without support for iteratee shorthands.
		     *
		     * @private
		     * @param {Object} object The object to inspect.
		     * @param {Object} source The object of property values to match.
		     * @param {Array} matchData The property names, values, and compare flags to match.
		     * @param {Function} [customizer] The function to customize comparisons.
		     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
		     */
		    function baseIsMatch(object, source, matchData, customizer) {
		      var index = matchData.length,
		          length = index,
		          noCustomizer = !customizer;
		
		      if (object == null) {
		        return !length;
		      }
		      object = Object(object);
		      while (index--) {
		        var data = matchData[index];
		        if ((noCustomizer && data[2])
		              ? data[1] !== object[data[0]]
		              : !(data[0] in object)
		            ) {
		          return false;
		        }
		      }
		      while (++index < length) {
		        data = matchData[index];
		        var key = data[0],
		            objValue = object[key],
		            srcValue = data[1];
		
		        if (noCustomizer && data[2]) {
		          if (objValue === undefined && !(key in object)) {
		            return false;
		          }
		        } else {
		          var stack = new Stack;
		          if (customizer) {
		            var result = customizer(objValue, srcValue, key, object, source, stack);
		          }
		          if (!(result === undefined
		                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
		                : result
		              )) {
		            return false;
		          }
		        }
		      }
		      return true;
		    }
		
		    /**
		     * The base implementation of `_.isNative` without bad shim checks.
		     *
		     * @private
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a native function,
		     *  else `false`.
		     */
		    function baseIsNative(value) {
		      if (!isObject(value) || isMasked(value)) {
		        return false;
		      }
		      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
		      return pattern.test(toSource(value));
		    }
		
		    /**
		     * The base implementation of `_.isRegExp` without Node.js optimizations.
		     *
		     * @private
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
		     */
		    function baseIsRegExp(value) {
		      return isObjectLike(value) && baseGetTag(value) == regexpTag;
		    }
		
		    /**
		     * The base implementation of `_.isSet` without Node.js optimizations.
		     *
		     * @private
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
		     */
		    function baseIsSet(value) {
		      return isObjectLike(value) && getTag(value) == setTag;
		    }
		
		    /**
		     * The base implementation of `_.isTypedArray` without Node.js optimizations.
		     *
		     * @private
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
		     */
		    function baseIsTypedArray(value) {
		      return isObjectLike(value) &&
		        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
		    }
		
		    /**
		     * The base implementation of `_.iteratee`.
		     *
		     * @private
		     * @param {*} [value=_.identity] The value to convert to an iteratee.
		     * @returns {Function} Returns the iteratee.
		     */
		    function baseIteratee(value) {
		      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
		      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
		      if (typeof value == 'function') {
		        return value;
		      }
		      if (value == null) {
		        return identity;
		      }
		      if (typeof value == 'object') {
		        return isArray(value)
		          ? baseMatchesProperty(value[0], value[1])
		          : baseMatches(value);
		      }
		      return property(value);
		    }
		
		    /**
		     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
		     *
		     * @private
		     * @param {Object} object The object to query.
		     * @returns {Array} Returns the array of property names.
		     */
		    function baseKeys(object) {
		      if (!isPrototype(object)) {
		        return nativeKeys(object);
		      }
		      var result = [];
		      for (var key in Object(object)) {
		        if (hasOwnProperty.call(object, key) && key != 'constructor') {
		          result.push(key);
		        }
		      }
		      return result;
		    }
		
		    /**
		     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
		     *
		     * @private
		     * @param {Object} object The object to query.
		     * @returns {Array} Returns the array of property names.
		     */
		    function baseKeysIn(object) {
		      if (!isObject(object)) {
		        return nativeKeysIn(object);
		      }
		      var isProto = isPrototype(object),
		          result = [];
		
		      for (var key in object) {
		        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
		          result.push(key);
		        }
		      }
		      return result;
		    }
		
		    /**
		     * The base implementation of `_.lt` which doesn't coerce arguments.
		     *
		     * @private
		     * @param {*} value The value to compare.
		     * @param {*} other The other value to compare.
		     * @returns {boolean} Returns `true` if `value` is less than `other`,
		     *  else `false`.
		     */
		    function baseLt(value, other) {
		      return value < other;
		    }
		
		    /**
		     * The base implementation of `_.map` without support for iteratee shorthands.
		     *
		     * @private
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function} iteratee The function invoked per iteration.
		     * @returns {Array} Returns the new mapped array.
		     */
		    function baseMap(collection, iteratee) {
		      var index = -1,
		          result = isArrayLike(collection) ? Array(collection.length) : [];
		
		      baseEach(collection, function(value, key, collection) {
		        result[++index] = iteratee(value, key, collection);
		      });
		      return result;
		    }
		
		    /**
		     * The base implementation of `_.matches` which doesn't clone `source`.
		     *
		     * @private
		     * @param {Object} source The object of property values to match.
		     * @returns {Function} Returns the new spec function.
		     */
		    function baseMatches(source) {
		      var matchData = getMatchData(source);
		      if (matchData.length == 1 && matchData[0][2]) {
		        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
		      }
		      return function(object) {
		        return object === source || baseIsMatch(object, source, matchData);
		      };
		    }
		
		    /**
		     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
		     *
		     * @private
		     * @param {string} path The path of the property to get.
		     * @param {*} srcValue The value to match.
		     * @returns {Function} Returns the new spec function.
		     */
		    function baseMatchesProperty(path, srcValue) {
		      if (isKey(path) && isStrictComparable(srcValue)) {
		        return matchesStrictComparable(toKey(path), srcValue);
		      }
		      return function(object) {
		        var objValue = get(object, path);
		        return (objValue === undefined && objValue === srcValue)
		          ? hasIn(object, path)
		          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
		      };
		    }
		
		    /**
		     * The base implementation of `_.merge` without support for multiple sources.
		     *
		     * @private
		     * @param {Object} object The destination object.
		     * @param {Object} source The source object.
		     * @param {number} srcIndex The index of `source`.
		     * @param {Function} [customizer] The function to customize merged values.
		     * @param {Object} [stack] Tracks traversed source values and their merged
		     *  counterparts.
		     */
		    function baseMerge(object, source, srcIndex, customizer, stack) {
		      if (object === source) {
		        return;
		      }
		      baseFor(source, function(srcValue, key) {
		        if (isObject(srcValue)) {
		          stack || (stack = new Stack);
		          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
		        }
		        else {
		          var newValue = customizer
		            ? customizer(object[key], srcValue, (key + ''), object, source, stack)
		            : undefined;
		
		          if (newValue === undefined) {
		            newValue = srcValue;
		          }
		          assignMergeValue(object, key, newValue);
		        }
		      }, keysIn);
		    }
		
		    /**
		     * A specialized version of `baseMerge` for arrays and objects which performs
		     * deep merges and tracks traversed objects enabling objects with circular
		     * references to be merged.
		     *
		     * @private
		     * @param {Object} object The destination object.
		     * @param {Object} source The source object.
		     * @param {string} key The key of the value to merge.
		     * @param {number} srcIndex The index of `source`.
		     * @param {Function} mergeFunc The function to merge values.
		     * @param {Function} [customizer] The function to customize assigned values.
		     * @param {Object} [stack] Tracks traversed source values and their merged
		     *  counterparts.
		     */
		    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
		      var objValue = object[key],
		          srcValue = source[key],
		          stacked = stack.get(srcValue);
		
		      if (stacked) {
		        assignMergeValue(object, key, stacked);
		        return;
		      }
		      var newValue = customizer
		        ? customizer(objValue, srcValue, (key + ''), object, source, stack)
		        : undefined;
		
		      var isCommon = newValue === undefined;
		
		      if (isCommon) {
		        var isArr = isArray(srcValue),
		            isBuff = !isArr && isBuffer(srcValue),
		            isTyped = !isArr && !isBuff && isTypedArray(srcValue);
		
		        newValue = srcValue;
		        if (isArr || isBuff || isTyped) {
		          if (isArray(objValue)) {
		            newValue = objValue;
		          }
		          else if (isArrayLikeObject(objValue)) {
		            newValue = copyArray(objValue);
		          }
		          else if (isBuff) {
		            isCommon = false;
		            newValue = cloneBuffer(srcValue, true);
		          }
		          else if (isTyped) {
		            isCommon = false;
		            newValue = cloneTypedArray(srcValue, true);
		          }
		          else {
		            newValue = [];
		          }
		        }
		        else if (isPlainObject(srcValue) || isArguments(srcValue)) {
		          newValue = objValue;
		          if (isArguments(objValue)) {
		            newValue = toPlainObject(objValue);
		          }
		          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {
		            newValue = initCloneObject(srcValue);
		          }
		        }
		        else {
		          isCommon = false;
		        }
		      }
		      if (isCommon) {
		        // Recursively merge objects and arrays (susceptible to call stack limits).
		        stack.set(srcValue, newValue);
		        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
		        stack['delete'](srcValue);
		      }
		      assignMergeValue(object, key, newValue);
		    }
		
		    /**
		     * The base implementation of `_.nth` which doesn't coerce arguments.
		     *
		     * @private
		     * @param {Array} array The array to query.
		     * @param {number} n The index of the element to return.
		     * @returns {*} Returns the nth element of `array`.
		     */
		    function baseNth(array, n) {
		      var length = array.length;
		      if (!length) {
		        return;
		      }
		      n += n < 0 ? length : 0;
		      return isIndex(n, length) ? array[n] : undefined;
		    }
		
		    /**
		     * The base implementation of `_.orderBy` without param guards.
		     *
		     * @private
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
		     * @param {string[]} orders The sort orders of `iteratees`.
		     * @returns {Array} Returns the new sorted array.
		     */
		    function baseOrderBy(collection, iteratees, orders) {
		      var index = -1;
		      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));
		
		      var result = baseMap(collection, function(value, key, collection) {
		        var criteria = arrayMap(iteratees, function(iteratee) {
		          return iteratee(value);
		        });
		        return { 'criteria': criteria, 'index': ++index, 'value': value };
		      });
		
		      return baseSortBy(result, function(object, other) {
		        return compareMultiple(object, other, orders);
		      });
		    }
		
		    /**
		     * The base implementation of `_.pick` without support for individual
		     * property identifiers.
		     *
		     * @private
		     * @param {Object} object The source object.
		     * @param {string[]} paths The property paths to pick.
		     * @returns {Object} Returns the new object.
		     */
		    function basePick(object, paths) {
		      object = Object(object);
		      return basePickBy(object, paths, function(value, path) {
		        return hasIn(object, path);
		      });
		    }
		
		    /**
		     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
		     *
		     * @private
		     * @param {Object} object The source object.
		     * @param {string[]} paths The property paths to pick.
		     * @param {Function} predicate The function invoked per property.
		     * @returns {Object} Returns the new object.
		     */
		    function basePickBy(object, paths, predicate) {
		      var index = -1,
		          length = paths.length,
		          result = {};
		
		      while (++index < length) {
		        var path = paths[index],
		            value = baseGet(object, path);
		
		        if (predicate(value, path)) {
		          baseSet(result, castPath(path, object), value);
		        }
		      }
		      return result;
		    }
		
		    /**
		     * A specialized version of `baseProperty` which supports deep paths.
		     *
		     * @private
		     * @param {Array|string} path The path of the property to get.
		     * @returns {Function} Returns the new accessor function.
		     */
		    function basePropertyDeep(path) {
		      return function(object) {
		        return baseGet(object, path);
		      };
		    }
		
		    /**
		     * The base implementation of `_.pullAllBy` without support for iteratee
		     * shorthands.
		     *
		     * @private
		     * @param {Array} array The array to modify.
		     * @param {Array} values The values to remove.
		     * @param {Function} [iteratee] The iteratee invoked per element.
		     * @param {Function} [comparator] The comparator invoked per element.
		     * @returns {Array} Returns `array`.
		     */
		    function basePullAll(array, values, iteratee, comparator) {
		      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
		          index = -1,
		          length = values.length,
		          seen = array;
		
		      if (array === values) {
		        values = copyArray(values);
		      }
		      if (iteratee) {
		        seen = arrayMap(array, baseUnary(iteratee));
		      }
		      while (++index < length) {
		        var fromIndex = 0,
		            value = values[index],
		            computed = iteratee ? iteratee(value) : value;
		
		        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
		          if (seen !== array) {
		            splice.call(seen, fromIndex, 1);
		          }
		          splice.call(array, fromIndex, 1);
		        }
		      }
		      return array;
		    }
		
		    /**
		     * The base implementation of `_.pullAt` without support for individual
		     * indexes or capturing the removed elements.
		     *
		     * @private
		     * @param {Array} array The array to modify.
		     * @param {number[]} indexes The indexes of elements to remove.
		     * @returns {Array} Returns `array`.
		     */
		    function basePullAt(array, indexes) {
		      var length = array ? indexes.length : 0,
		          lastIndex = length - 1;
		
		      while (length--) {
		        var index = indexes[length];
		        if (length == lastIndex || index !== previous) {
		          var previous = index;
		          if (isIndex(index)) {
		            splice.call(array, index, 1);
		          } else {
		            baseUnset(array, index);
		          }
		        }
		      }
		      return array;
		    }
		
		    /**
		     * The base implementation of `_.random` without support for returning
		     * floating-point numbers.
		     *
		     * @private
		     * @param {number} lower The lower bound.
		     * @param {number} upper The upper bound.
		     * @returns {number} Returns the random number.
		     */
		    function baseRandom(lower, upper) {
		      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
		    }
		
		    /**
		     * The base implementation of `_.range` and `_.rangeRight` which doesn't
		     * coerce arguments.
		     *
		     * @private
		     * @param {number} start The start of the range.
		     * @param {number} end The end of the range.
		     * @param {number} step The value to increment or decrement by.
		     * @param {boolean} [fromRight] Specify iterating from right to left.
		     * @returns {Array} Returns the range of numbers.
		     */
		    function baseRange(start, end, step, fromRight) {
		      var index = -1,
		          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
		          result = Array(length);
		
		      while (length--) {
		        result[fromRight ? length : ++index] = start;
		        start += step;
		      }
		      return result;
		    }
		
		    /**
		     * The base implementation of `_.repeat` which doesn't coerce arguments.
		     *
		     * @private
		     * @param {string} string The string to repeat.
		     * @param {number} n The number of times to repeat the string.
		     * @returns {string} Returns the repeated string.
		     */
		    function baseRepeat(string, n) {
		      var result = '';
		      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
		        return result;
		      }
		      // Leverage the exponentiation by squaring algorithm for a faster repeat.
		      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
		      do {
		        if (n % 2) {
		          result += string;
		        }
		        n = nativeFloor(n / 2);
		        if (n) {
		          string += string;
		        }
		      } while (n);
		
		      return result;
		    }
		
		    /**
		     * The base implementation of `_.rest` which doesn't validate or coerce arguments.
		     *
		     * @private
		     * @param {Function} func The function to apply a rest parameter to.
		     * @param {number} [start=func.length-1] The start position of the rest parameter.
		     * @returns {Function} Returns the new function.
		     */
		    function baseRest(func, start) {
		      return setToString(overRest(func, start, identity), func + '');
		    }
		
		    /**
		     * The base implementation of `_.sample`.
		     *
		     * @private
		     * @param {Array|Object} collection The collection to sample.
		     * @returns {*} Returns the random element.
		     */
		    function baseSample(collection) {
		      return arraySample(values(collection));
		    }
		
		    /**
		     * The base implementation of `_.sampleSize` without param guards.
		     *
		     * @private
		     * @param {Array|Object} collection The collection to sample.
		     * @param {number} n The number of elements to sample.
		     * @returns {Array} Returns the random elements.
		     */
		    function baseSampleSize(collection, n) {
		      var array = values(collection);
		      return shuffleSelf(array, baseClamp(n, 0, array.length));
		    }
		
		    /**
		     * The base implementation of `_.set`.
		     *
		     * @private
		     * @param {Object} object The object to modify.
		     * @param {Array|string} path The path of the property to set.
		     * @param {*} value The value to set.
		     * @param {Function} [customizer] The function to customize path creation.
		     * @returns {Object} Returns `object`.
		     */
		    function baseSet(object, path, value, customizer) {
		      if (!isObject(object)) {
		        return object;
		      }
		      path = castPath(path, object);
		
		      var index = -1,
		          length = path.length,
		          lastIndex = length - 1,
		          nested = object;
		
		      while (nested != null && ++index < length) {
		        var key = toKey(path[index]),
		            newValue = value;
		
		        if (index != lastIndex) {
		          var objValue = nested[key];
		          newValue = customizer ? customizer(objValue, key, nested) : undefined;
		          if (newValue === undefined) {
		            newValue = isObject(objValue)
		              ? objValue
		              : (isIndex(path[index + 1]) ? [] : {});
		          }
		        }
		        assignValue(nested, key, newValue);
		        nested = nested[key];
		      }
		      return object;
		    }
		
		    /**
		     * The base implementation of `setData` without support for hot loop shorting.
		     *
		     * @private
		     * @param {Function} func The function to associate metadata with.
		     * @param {*} data The metadata.
		     * @returns {Function} Returns `func`.
		     */
		    var baseSetData = !metaMap ? identity : function(func, data) {
		      metaMap.set(func, data);
		      return func;
		    };
		
		    /**
		     * The base implementation of `setToString` without support for hot loop shorting.
		     *
		     * @private
		     * @param {Function} func The function to modify.
		     * @param {Function} string The `toString` result.
		     * @returns {Function} Returns `func`.
		     */
		    var baseSetToString = !defineProperty ? identity : function(func, string) {
		      return defineProperty(func, 'toString', {
		        'configurable': true,
		        'enumerable': false,
		        'value': constant(string),
		        'writable': true
		      });
		    };
		
		    /**
		     * The base implementation of `_.shuffle`.
		     *
		     * @private
		     * @param {Array|Object} collection The collection to shuffle.
		     * @returns {Array} Returns the new shuffled array.
		     */
		    function baseShuffle(collection) {
		      return shuffleSelf(values(collection));
		    }
		
		    /**
		     * The base implementation of `_.slice` without an iteratee call guard.
		     *
		     * @private
		     * @param {Array} array The array to slice.
		     * @param {number} [start=0] The start position.
		     * @param {number} [end=array.length] The end position.
		     * @returns {Array} Returns the slice of `array`.
		     */
		    function baseSlice(array, start, end) {
		      var index = -1,
		          length = array.length;
		
		      if (start < 0) {
		        start = -start > length ? 0 : (length + start);
		      }
		      end = end > length ? length : end;
		      if (end < 0) {
		        end += length;
		      }
		      length = start > end ? 0 : ((end - start) >>> 0);
		      start >>>= 0;
		
		      var result = Array(length);
		      while (++index < length) {
		        result[index] = array[index + start];
		      }
		      return result;
		    }
		
		    /**
		     * The base implementation of `_.some` without support for iteratee shorthands.
		     *
		     * @private
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function} predicate The function invoked per iteration.
		     * @returns {boolean} Returns `true` if any element passes the predicate check,
		     *  else `false`.
		     */
		    function baseSome(collection, predicate) {
		      var result;
		
		      baseEach(collection, function(value, index, collection) {
		        result = predicate(value, index, collection);
		        return !result;
		      });
		      return !!result;
		    }
		
		    /**
		     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
		     * performs a binary search of `array` to determine the index at which `value`
		     * should be inserted into `array` in order to maintain its sort order.
		     *
		     * @private
		     * @param {Array} array The sorted array to inspect.
		     * @param {*} value The value to evaluate.
		     * @param {boolean} [retHighest] Specify returning the highest qualified index.
		     * @returns {number} Returns the index at which `value` should be inserted
		     *  into `array`.
		     */
		    function baseSortedIndex(array, value, retHighest) {
		      var low = 0,
		          high = array == null ? low : array.length;
		
		      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
		        while (low < high) {
		          var mid = (low + high) >>> 1,
		              computed = array[mid];
		
		          if (computed !== null && !isSymbol(computed) &&
		              (retHighest ? (computed <= value) : (computed < value))) {
		            low = mid + 1;
		          } else {
		            high = mid;
		          }
		        }
		        return high;
		      }
		      return baseSortedIndexBy(array, value, identity, retHighest);
		    }
		
		    /**
		     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
		     * which invokes `iteratee` for `value` and each element of `array` to compute
		     * their sort ranking. The iteratee is invoked with one argument; (value).
		     *
		     * @private
		     * @param {Array} array The sorted array to inspect.
		     * @param {*} value The value to evaluate.
		     * @param {Function} iteratee The iteratee invoked per element.
		     * @param {boolean} [retHighest] Specify returning the highest qualified index.
		     * @returns {number} Returns the index at which `value` should be inserted
		     *  into `array`.
		     */
		    function baseSortedIndexBy(array, value, iteratee, retHighest) {
		      value = iteratee(value);
		
		      var low = 0,
		          high = array == null ? 0 : array.length,
		          valIsNaN = value !== value,
		          valIsNull = value === null,
		          valIsSymbol = isSymbol(value),
		          valIsUndefined = value === undefined;
		
		      while (low < high) {
		        var mid = nativeFloor((low + high) / 2),
		            computed = iteratee(array[mid]),
		            othIsDefined = computed !== undefined,
		            othIsNull = computed === null,
		            othIsReflexive = computed === computed,
		            othIsSymbol = isSymbol(computed);
		
		        if (valIsNaN) {
		          var setLow = retHighest || othIsReflexive;
		        } else if (valIsUndefined) {
		          setLow = othIsReflexive && (retHighest || othIsDefined);
		        } else if (valIsNull) {
		          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
		        } else if (valIsSymbol) {
		          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
		        } else if (othIsNull || othIsSymbol) {
		          setLow = false;
		        } else {
		          setLow = retHighest ? (computed <= value) : (computed < value);
		        }
		        if (setLow) {
		          low = mid + 1;
		        } else {
		          high = mid;
		        }
		      }
		      return nativeMin(high, MAX_ARRAY_INDEX);
		    }
		
		    /**
		     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
		     * support for iteratee shorthands.
		     *
		     * @private
		     * @param {Array} array The array to inspect.
		     * @param {Function} [iteratee] The iteratee invoked per element.
		     * @returns {Array} Returns the new duplicate free array.
		     */
		    function baseSortedUniq(array, iteratee) {
		      var index = -1,
		          length = array.length,
		          resIndex = 0,
		          result = [];
		
		      while (++index < length) {
		        var value = array[index],
		            computed = iteratee ? iteratee(value) : value;
		
		        if (!index || !eq(computed, seen)) {
		          var seen = computed;
		          result[resIndex++] = value === 0 ? 0 : value;
		        }
		      }
		      return result;
		    }
		
		    /**
		     * The base implementation of `_.toNumber` which doesn't ensure correct
		     * conversions of binary, hexadecimal, or octal string values.
		     *
		     * @private
		     * @param {*} value The value to process.
		     * @returns {number} Returns the number.
		     */
		    function baseToNumber(value) {
		      if (typeof value == 'number') {
		        return value;
		      }
		      if (isSymbol(value)) {
		        return NAN;
		      }
		      return +value;
		    }
		
		    /**
		     * The base implementation of `_.toString` which doesn't convert nullish
		     * values to empty strings.
		     *
		     * @private
		     * @param {*} value The value to process.
		     * @returns {string} Returns the string.
		     */
		    function baseToString(value) {
		      // Exit early for strings to avoid a performance hit in some environments.
		      if (typeof value == 'string') {
		        return value;
		      }
		      if (isArray(value)) {
		        // Recursively convert values (susceptible to call stack limits).
		        return arrayMap(value, baseToString) + '';
		      }
		      if (isSymbol(value)) {
		        return symbolToString ? symbolToString.call(value) : '';
		      }
		      var result = (value + '');
		      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
		    }
		
		    /**
		     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
		     *
		     * @private
		     * @param {Array} array The array to inspect.
		     * @param {Function} [iteratee] The iteratee invoked per element.
		     * @param {Function} [comparator] The comparator invoked per element.
		     * @returns {Array} Returns the new duplicate free array.
		     */
		    function baseUniq(array, iteratee, comparator) {
		      var index = -1,
		          includes = arrayIncludes,
		          length = array.length,
		          isCommon = true,
		          result = [],
		          seen = result;
		
		      if (comparator) {
		        isCommon = false;
		        includes = arrayIncludesWith;
		      }
		      else if (length >= LARGE_ARRAY_SIZE) {
		        var set = iteratee ? null : createSet(array);
		        if (set) {
		          return setToArray(set);
		        }
		        isCommon = false;
		        includes = cacheHas;
		        seen = new SetCache;
		      }
		      else {
		        seen = iteratee ? [] : result;
		      }
		      outer:
		      while (++index < length) {
		        var value = array[index],
		            computed = iteratee ? iteratee(value) : value;
		
		        value = (comparator || value !== 0) ? value : 0;
		        if (isCommon && computed === computed) {
		          var seenIndex = seen.length;
		          while (seenIndex--) {
		            if (seen[seenIndex] === computed) {
		              continue outer;
		            }
		          }
		          if (iteratee) {
		            seen.push(computed);
		          }
		          result.push(value);
		        }
		        else if (!includes(seen, computed, comparator)) {
		          if (seen !== result) {
		            seen.push(computed);
		          }
		          result.push(value);
		        }
		      }
		      return result;
		    }
		
		    /**
		     * The base implementation of `_.unset`.
		     *
		     * @private
		     * @param {Object} object The object to modify.
		     * @param {Array|string} path The property path to unset.
		     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
		     */
		    function baseUnset(object, path) {
		      path = castPath(path, object);
		      object = parent(object, path);
		      return object == null || delete object[toKey(last(path))];
		    }
		
		    /**
		     * The base implementation of `_.update`.
		     *
		     * @private
		     * @param {Object} object The object to modify.
		     * @param {Array|string} path The path of the property to update.
		     * @param {Function} updater The function to produce the updated value.
		     * @param {Function} [customizer] The function to customize path creation.
		     * @returns {Object} Returns `object`.
		     */
		    function baseUpdate(object, path, updater, customizer) {
		      return baseSet(object, path, updater(baseGet(object, path)), customizer);
		    }
		
		    /**
		     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
		     * without support for iteratee shorthands.
		     *
		     * @private
		     * @param {Array} array The array to query.
		     * @param {Function} predicate The function invoked per iteration.
		     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
		     * @param {boolean} [fromRight] Specify iterating from right to left.
		     * @returns {Array} Returns the slice of `array`.
		     */
		    function baseWhile(array, predicate, isDrop, fromRight) {
		      var length = array.length,
		          index = fromRight ? length : -1;
		
		      while ((fromRight ? index-- : ++index < length) &&
		        predicate(array[index], index, array)) {}
		
		      return isDrop
		        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))
		        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));
		    }
		
		    /**
		     * The base implementation of `wrapperValue` which returns the result of
		     * performing a sequence of actions on the unwrapped `value`, where each
		     * successive action is supplied the return value of the previous.
		     *
		     * @private
		     * @param {*} value The unwrapped value.
		     * @param {Array} actions Actions to perform to resolve the unwrapped value.
		     * @returns {*} Returns the resolved value.
		     */
		    function baseWrapperValue(value, actions) {
		      var result = value;
		      if (result instanceof LazyWrapper) {
		        result = result.value();
		      }
		      return arrayReduce(actions, function(result, action) {
		        return action.func.apply(action.thisArg, arrayPush([result], action.args));
		      }, result);
		    }
		
		    /**
		     * The base implementation of methods like `_.xor`, without support for
		     * iteratee shorthands, that accepts an array of arrays to inspect.
		     *
		     * @private
		     * @param {Array} arrays The arrays to inspect.
		     * @param {Function} [iteratee] The iteratee invoked per element.
		     * @param {Function} [comparator] The comparator invoked per element.
		     * @returns {Array} Returns the new array of values.
		     */
		    function baseXor(arrays, iteratee, comparator) {
		      var length = arrays.length;
		      if (length < 2) {
		        return length ? baseUniq(arrays[0]) : [];
		      }
		      var index = -1,
		          result = Array(length);
		
		      while (++index < length) {
		        var array = arrays[index],
		            othIndex = -1;
		
		        while (++othIndex < length) {
		          if (othIndex != index) {
		            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
		          }
		        }
		      }
		      return baseUniq(baseFlatten(result, 1), iteratee, comparator);
		    }
		
		    /**
		     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
		     *
		     * @private
		     * @param {Array} props The property identifiers.
		     * @param {Array} values The property values.
		     * @param {Function} assignFunc The function to assign values.
		     * @returns {Object} Returns the new object.
		     */
		    function baseZipObject(props, values, assignFunc) {
		      var index = -1,
		          length = props.length,
		          valsLength = values.length,
		          result = {};
		
		      while (++index < length) {
		        var value = index < valsLength ? values[index] : undefined;
		        assignFunc(result, props[index], value);
		      }
		      return result;
		    }
		
		    /**
		     * Casts `value` to an empty array if it's not an array like object.
		     *
		     * @private
		     * @param {*} value The value to inspect.
		     * @returns {Array|Object} Returns the cast array-like object.
		     */
		    function castArrayLikeObject(value) {
		      return isArrayLikeObject(value) ? value : [];
		    }
		
		    /**
		     * Casts `value` to `identity` if it's not a function.
		     *
		     * @private
		     * @param {*} value The value to inspect.
		     * @returns {Function} Returns cast function.
		     */
		    function castFunction(value) {
		      return typeof value == 'function' ? value : identity;
		    }
		
		    /**
		     * Casts `value` to a path array if it's not one.
		     *
		     * @private
		     * @param {*} value The value to inspect.
		     * @param {Object} [object] The object to query keys on.
		     * @returns {Array} Returns the cast property path array.
		     */
		    function castPath(value, object) {
		      if (isArray(value)) {
		        return value;
		      }
		      return isKey(value, object) ? [value] : stringToPath(toString(value));
		    }
		
		    /**
		     * A `baseRest` alias which can be replaced with `identity` by module
		     * replacement plugins.
		     *
		     * @private
		     * @type {Function}
		     * @param {Function} func The function to apply a rest parameter to.
		     * @returns {Function} Returns the new function.
		     */
		    var castRest = baseRest;
		
		    /**
		     * Casts `array` to a slice if it's needed.
		     *
		     * @private
		     * @param {Array} array The array to inspect.
		     * @param {number} start The start position.
		     * @param {number} [end=array.length] The end position.
		     * @returns {Array} Returns the cast slice.
		     */
		    function castSlice(array, start, end) {
		      var length = array.length;
		      end = end === undefined ? length : end;
		      return (!start && end >= length) ? array : baseSlice(array, start, end);
		    }
		
		    /**
		     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).
		     *
		     * @private
		     * @param {number|Object} id The timer id or timeout object of the timer to clear.
		     */
		    var clearTimeout = ctxClearTimeout || function(id) {
		      return root.clearTimeout(id);
		    };
		
		    /**
		     * Creates a clone of  `buffer`.
		     *
		     * @private
		     * @param {Buffer} buffer The buffer to clone.
		     * @param {boolean} [isDeep] Specify a deep clone.
		     * @returns {Buffer} Returns the cloned buffer.
		     */
		    function cloneBuffer(buffer, isDeep) {
		      if (isDeep) {
		        return buffer.slice();
		      }
		      var length = buffer.length,
		          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
		
		      buffer.copy(result);
		      return result;
		    }
		
		    /**
		     * Creates a clone of `arrayBuffer`.
		     *
		     * @private
		     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
		     * @returns {ArrayBuffer} Returns the cloned array buffer.
		     */
		    function cloneArrayBuffer(arrayBuffer) {
		      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
		      new Uint8Array(result).set(new Uint8Array(arrayBuffer));
		      return result;
		    }
		
		    /**
		     * Creates a clone of `dataView`.
		     *
		     * @private
		     * @param {Object} dataView The data view to clone.
		     * @param {boolean} [isDeep] Specify a deep clone.
		     * @returns {Object} Returns the cloned data view.
		     */
		    function cloneDataView(dataView, isDeep) {
		      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
		      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
		    }
		
		    /**
		     * Creates a clone of `map`.
		     *
		     * @private
		     * @param {Object} map The map to clone.
		     * @param {Function} cloneFunc The function to clone values.
		     * @param {boolean} [isDeep] Specify a deep clone.
		     * @returns {Object} Returns the cloned map.
		     */
		    function cloneMap(map, isDeep, cloneFunc) {
		      var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);
		      return arrayReduce(array, addMapEntry, new map.constructor);
		    }
		
		    /**
		     * Creates a clone of `regexp`.
		     *
		     * @private
		     * @param {Object} regexp The regexp to clone.
		     * @returns {Object} Returns the cloned regexp.
		     */
		    function cloneRegExp(regexp) {
		      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
		      result.lastIndex = regexp.lastIndex;
		      return result;
		    }
		
		    /**
		     * Creates a clone of `set`.
		     *
		     * @private
		     * @param {Object} set The set to clone.
		     * @param {Function} cloneFunc The function to clone values.
		     * @param {boolean} [isDeep] Specify a deep clone.
		     * @returns {Object} Returns the cloned set.
		     */
		    function cloneSet(set, isDeep, cloneFunc) {
		      var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);
		      return arrayReduce(array, addSetEntry, new set.constructor);
		    }
		
		    /**
		     * Creates a clone of the `symbol` object.
		     *
		     * @private
		     * @param {Object} symbol The symbol object to clone.
		     * @returns {Object} Returns the cloned symbol object.
		     */
		    function cloneSymbol(symbol) {
		      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
		    }
		
		    /**
		     * Creates a clone of `typedArray`.
		     *
		     * @private
		     * @param {Object} typedArray The typed array to clone.
		     * @param {boolean} [isDeep] Specify a deep clone.
		     * @returns {Object} Returns the cloned typed array.
		     */
		    function cloneTypedArray(typedArray, isDeep) {
		      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
		      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
		    }
		
		    /**
		     * Compares values to sort them in ascending order.
		     *
		     * @private
		     * @param {*} value The value to compare.
		     * @param {*} other The other value to compare.
		     * @returns {number} Returns the sort order indicator for `value`.
		     */
		    function compareAscending(value, other) {
		      if (value !== other) {
		        var valIsDefined = value !== undefined,
		            valIsNull = value === null,
		            valIsReflexive = value === value,
		            valIsSymbol = isSymbol(value);
		
		        var othIsDefined = other !== undefined,
		            othIsNull = other === null,
		            othIsReflexive = other === other,
		            othIsSymbol = isSymbol(other);
		
		        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
		            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
		            (valIsNull && othIsDefined && othIsReflexive) ||
		            (!valIsDefined && othIsReflexive) ||
		            !valIsReflexive) {
		          return 1;
		        }
		        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
		            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
		            (othIsNull && valIsDefined && valIsReflexive) ||
		            (!othIsDefined && valIsReflexive) ||
		            !othIsReflexive) {
		          return -1;
		        }
		      }
		      return 0;
		    }
		
		    /**
		     * Used by `_.orderBy` to compare multiple properties of a value to another
		     * and stable sort them.
		     *
		     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
		     * specify an order of "desc" for descending or "asc" for ascending sort order
		     * of corresponding values.
		     *
		     * @private
		     * @param {Object} object The object to compare.
		     * @param {Object} other The other object to compare.
		     * @param {boolean[]|string[]} orders The order to sort by for each property.
		     * @returns {number} Returns the sort order indicator for `object`.
		     */
		    function compareMultiple(object, other, orders) {
		      var index = -1,
		          objCriteria = object.criteria,
		          othCriteria = other.criteria,
		          length = objCriteria.length,
		          ordersLength = orders.length;
		
		      while (++index < length) {
		        var result = compareAscending(objCriteria[index], othCriteria[index]);
		        if (result) {
		          if (index >= ordersLength) {
		            return result;
		          }
		          var order = orders[index];
		          return result * (order == 'desc' ? -1 : 1);
		        }
		      }
		      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
		      // that causes it, under certain circumstances, to provide the same value for
		      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
		      // for more details.
		      //
		      // This also ensures a stable sort in V8 and other engines.
		      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
		      return object.index - other.index;
		    }
		
		    /**
		     * Creates an array that is the composition of partially applied arguments,
		     * placeholders, and provided arguments into a single array of arguments.
		     *
		     * @private
		     * @param {Array} args The provided arguments.
		     * @param {Array} partials The arguments to prepend to those provided.
		     * @param {Array} holders The `partials` placeholder indexes.
		     * @params {boolean} [isCurried] Specify composing for a curried function.
		     * @returns {Array} Returns the new array of composed arguments.
		     */
		    function composeArgs(args, partials, holders, isCurried) {
		      var argsIndex = -1,
		          argsLength = args.length,
		          holdersLength = holders.length,
		          leftIndex = -1,
		          leftLength = partials.length,
		          rangeLength = nativeMax(argsLength - holdersLength, 0),
		          result = Array(leftLength + rangeLength),
		          isUncurried = !isCurried;
		
		      while (++leftIndex < leftLength) {
		        result[leftIndex] = partials[leftIndex];
		      }
		      while (++argsIndex < holdersLength) {
		        if (isUncurried || argsIndex < argsLength) {
		          result[holders[argsIndex]] = args[argsIndex];
		        }
		      }
		      while (rangeLength--) {
		        result[leftIndex++] = args[argsIndex++];
		      }
		      return result;
		    }
		
		    /**
		     * This function is like `composeArgs` except that the arguments composition
		     * is tailored for `_.partialRight`.
		     *
		     * @private
		     * @param {Array} args The provided arguments.
		     * @param {Array} partials The arguments to append to those provided.
		     * @param {Array} holders The `partials` placeholder indexes.
		     * @params {boolean} [isCurried] Specify composing for a curried function.
		     * @returns {Array} Returns the new array of composed arguments.
		     */
		    function composeArgsRight(args, partials, holders, isCurried) {
		      var argsIndex = -1,
		          argsLength = args.length,
		          holdersIndex = -1,
		          holdersLength = holders.length,
		          rightIndex = -1,
		          rightLength = partials.length,
		          rangeLength = nativeMax(argsLength - holdersLength, 0),
		          result = Array(rangeLength + rightLength),
		          isUncurried = !isCurried;
		
		      while (++argsIndex < rangeLength) {
		        result[argsIndex] = args[argsIndex];
		      }
		      var offset = argsIndex;
		      while (++rightIndex < rightLength) {
		        result[offset + rightIndex] = partials[rightIndex];
		      }
		      while (++holdersIndex < holdersLength) {
		        if (isUncurried || argsIndex < argsLength) {
		          result[offset + holders[holdersIndex]] = args[argsIndex++];
		        }
		      }
		      return result;
		    }
		
		    /**
		     * Copies the values of `source` to `array`.
		     *
		     * @private
		     * @param {Array} source The array to copy values from.
		     * @param {Array} [array=[]] The array to copy values to.
		     * @returns {Array} Returns `array`.
		     */
		    function copyArray(source, array) {
		      var index = -1,
		          length = source.length;
		
		      array || (array = Array(length));
		      while (++index < length) {
		        array[index] = source[index];
		      }
		      return array;
		    }
		
		    /**
		     * Copies properties of `source` to `object`.
		     *
		     * @private
		     * @param {Object} source The object to copy properties from.
		     * @param {Array} props The property identifiers to copy.
		     * @param {Object} [object={}] The object to copy properties to.
		     * @param {Function} [customizer] The function to customize copied values.
		     * @returns {Object} Returns `object`.
		     */
		    function copyObject(source, props, object, customizer) {
		      var isNew = !object;
		      object || (object = {});
		
		      var index = -1,
		          length = props.length;
		
		      while (++index < length) {
		        var key = props[index];
		
		        var newValue = customizer
		          ? customizer(object[key], source[key], key, object, source)
		          : undefined;
		
		        if (newValue === undefined) {
		          newValue = source[key];
		        }
		        if (isNew) {
		          baseAssignValue(object, key, newValue);
		        } else {
		          assignValue(object, key, newValue);
		        }
		      }
		      return object;
		    }
		
		    /**
		     * Copies own symbols of `source` to `object`.
		     *
		     * @private
		     * @param {Object} source The object to copy symbols from.
		     * @param {Object} [object={}] The object to copy symbols to.
		     * @returns {Object} Returns `object`.
		     */
		    function copySymbols(source, object) {
		      return copyObject(source, getSymbols(source), object);
		    }
		
		    /**
		     * Copies own and inherited symbols of `source` to `object`.
		     *
		     * @private
		     * @param {Object} source The object to copy symbols from.
		     * @param {Object} [object={}] The object to copy symbols to.
		     * @returns {Object} Returns `object`.
		     */
		    function copySymbolsIn(source, object) {
		      return copyObject(source, getSymbolsIn(source), object);
		    }
		
		    /**
		     * Creates a function like `_.groupBy`.
		     *
		     * @private
		     * @param {Function} setter The function to set accumulator values.
		     * @param {Function} [initializer] The accumulator object initializer.
		     * @returns {Function} Returns the new aggregator function.
		     */
		    function createAggregator(setter, initializer) {
		      return function(collection, iteratee) {
		        var func = isArray(collection) ? arrayAggregator : baseAggregator,
		            accumulator = initializer ? initializer() : {};
		
		        return func(collection, setter, getIteratee(iteratee, 2), accumulator);
		      };
		    }
		
		    /**
		     * Creates a function like `_.assign`.
		     *
		     * @private
		     * @param {Function} assigner The function to assign values.
		     * @returns {Function} Returns the new assigner function.
		     */
		    function createAssigner(assigner) {
		      return baseRest(function(object, sources) {
		        var index = -1,
		            length = sources.length,
		            customizer = length > 1 ? sources[length - 1] : undefined,
		            guard = length > 2 ? sources[2] : undefined;
		
		        customizer = (assigner.length > 3 && typeof customizer == 'function')
		          ? (length--, customizer)
		          : undefined;
		
		        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
		          customizer = length < 3 ? undefined : customizer;
		          length = 1;
		        }
		        object = Object(object);
		        while (++index < length) {
		          var source = sources[index];
		          if (source) {
		            assigner(object, source, index, customizer);
		          }
		        }
		        return object;
		      });
		    }
		
		    /**
		     * Creates a `baseEach` or `baseEachRight` function.
		     *
		     * @private
		     * @param {Function} eachFunc The function to iterate over a collection.
		     * @param {boolean} [fromRight] Specify iterating from right to left.
		     * @returns {Function} Returns the new base function.
		     */
		    function createBaseEach(eachFunc, fromRight) {
		      return function(collection, iteratee) {
		        if (collection == null) {
		          return collection;
		        }
		        if (!isArrayLike(collection)) {
		          return eachFunc(collection, iteratee);
		        }
		        var length = collection.length,
		            index = fromRight ? length : -1,
		            iterable = Object(collection);
		
		        while ((fromRight ? index-- : ++index < length)) {
		          if (iteratee(iterable[index], index, iterable) === false) {
		            break;
		          }
		        }
		        return collection;
		      };
		    }
		
		    /**
		     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
		     *
		     * @private
		     * @param {boolean} [fromRight] Specify iterating from right to left.
		     * @returns {Function} Returns the new base function.
		     */
		    function createBaseFor(fromRight) {
		      return function(object, iteratee, keysFunc) {
		        var index = -1,
		            iterable = Object(object),
		            props = keysFunc(object),
		            length = props.length;
		
		        while (length--) {
		          var key = props[fromRight ? length : ++index];
		          if (iteratee(iterable[key], key, iterable) === false) {
		            break;
		          }
		        }
		        return object;
		      };
		    }
		
		    /**
		     * Creates a function that wraps `func` to invoke it with the optional `this`
		     * binding of `thisArg`.
		     *
		     * @private
		     * @param {Function} func The function to wrap.
		     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
		     * @param {*} [thisArg] The `this` binding of `func`.
		     * @returns {Function} Returns the new wrapped function.
		     */
		    function createBind(func, bitmask, thisArg) {
		      var isBind = bitmask & WRAP_BIND_FLAG,
		          Ctor = createCtor(func);
		
		      function wrapper() {
		        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
		        return fn.apply(isBind ? thisArg : this, arguments);
		      }
		      return wrapper;
		    }
		
		    /**
		     * Creates a function like `_.lowerFirst`.
		     *
		     * @private
		     * @param {string} methodName The name of the `String` case method to use.
		     * @returns {Function} Returns the new case function.
		     */
		    function createCaseFirst(methodName) {
		      return function(string) {
		        string = toString(string);
		
		        var strSymbols = hasUnicode(string)
		          ? stringToArray(string)
		          : undefined;
		
		        var chr = strSymbols
		          ? strSymbols[0]
		          : string.charAt(0);
		
		        var trailing = strSymbols
		          ? castSlice(strSymbols, 1).join('')
		          : string.slice(1);
		
		        return chr[methodName]() + trailing;
		      };
		    }
		
		    /**
		     * Creates a function like `_.camelCase`.
		     *
		     * @private
		     * @param {Function} callback The function to combine each word.
		     * @returns {Function} Returns the new compounder function.
		     */
		    function createCompounder(callback) {
		      return function(string) {
		        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
		      };
		    }
		
		    /**
		     * Creates a function that produces an instance of `Ctor` regardless of
		     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
		     *
		     * @private
		     * @param {Function} Ctor The constructor to wrap.
		     * @returns {Function} Returns the new wrapped function.
		     */
		    function createCtor(Ctor) {
		      return function() {
		        // Use a `switch` statement to work with class constructors. See
		        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
		        // for more details.
		        var args = arguments;
		        switch (args.length) {
		          case 0: return new Ctor;
		          case 1: return new Ctor(args[0]);
		          case 2: return new Ctor(args[0], args[1]);
		          case 3: return new Ctor(args[0], args[1], args[2]);
		          case 4: return new Ctor(args[0], args[1], args[2], args[3]);
		          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
		          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
		          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
		        }
		        var thisBinding = baseCreate(Ctor.prototype),
		            result = Ctor.apply(thisBinding, args);
		
		        // Mimic the constructor's `return` behavior.
		        // See https://es5.github.io/#x13.2.2 for more details.
		        return isObject(result) ? result : thisBinding;
		      };
		    }
		
		    /**
		     * Creates a function that wraps `func` to enable currying.
		     *
		     * @private
		     * @param {Function} func The function to wrap.
		     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
		     * @param {number} arity The arity of `func`.
		     * @returns {Function} Returns the new wrapped function.
		     */
		    function createCurry(func, bitmask, arity) {
		      var Ctor = createCtor(func);
		
		      function wrapper() {
		        var length = arguments.length,
		            args = Array(length),
		            index = length,
		            placeholder = getHolder(wrapper);
		
		        while (index--) {
		          args[index] = arguments[index];
		        }
		        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
		          ? []
		          : replaceHolders(args, placeholder);
		
		        length -= holders.length;
		        if (length < arity) {
		          return createRecurry(
		            func, bitmask, createHybrid, wrapper.placeholder, undefined,
		            args, holders, undefined, undefined, arity - length);
		        }
		        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
		        return apply(fn, this, args);
		      }
		      return wrapper;
		    }
		
		    /**
		     * Creates a `_.find` or `_.findLast` function.
		     *
		     * @private
		     * @param {Function} findIndexFunc The function to find the collection index.
		     * @returns {Function} Returns the new find function.
		     */
		    function createFind(findIndexFunc) {
		      return function(collection, predicate, fromIndex) {
		        var iterable = Object(collection);
		        if (!isArrayLike(collection)) {
		          var iteratee = getIteratee(predicate, 3);
		          collection = keys(collection);
		          predicate = function(key) { return iteratee(iterable[key], key, iterable); };
		        }
		        var index = findIndexFunc(collection, predicate, fromIndex);
		        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
		      };
		    }
		
		    /**
		     * Creates a `_.flow` or `_.flowRight` function.
		     *
		     * @private
		     * @param {boolean} [fromRight] Specify iterating from right to left.
		     * @returns {Function} Returns the new flow function.
		     */
		    function createFlow(fromRight) {
		      return flatRest(function(funcs) {
		        var length = funcs.length,
		            index = length,
		            prereq = LodashWrapper.prototype.thru;
		
		        if (fromRight) {
		          funcs.reverse();
		        }
		        while (index--) {
		          var func = funcs[index];
		          if (typeof func != 'function') {
		            throw new TypeError(FUNC_ERROR_TEXT);
		          }
		          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
		            var wrapper = new LodashWrapper([], true);
		          }
		        }
		        index = wrapper ? index : length;
		        while (++index < length) {
		          func = funcs[index];
		
		          var funcName = getFuncName(func),
		              data = funcName == 'wrapper' ? getData(func) : undefined;
		
		          if (data && isLaziable(data[0]) &&
		                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&
		                !data[4].length && data[9] == 1
		              ) {
		            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
		          } else {
		            wrapper = (func.length == 1 && isLaziable(func))
		              ? wrapper[funcName]()
		              : wrapper.thru(func);
		          }
		        }
		        return function() {
		          var args = arguments,
		              value = args[0];
		
		          if (wrapper && args.length == 1 &&
		              isArray(value) && value.length >= LARGE_ARRAY_SIZE) {
		            return wrapper.plant(value).value();
		          }
		          var index = 0,
		              result = length ? funcs[index].apply(this, args) : value;
		
		          while (++index < length) {
		            result = funcs[index].call(this, result);
		          }
		          return result;
		        };
		      });
		    }
		
		    /**
		     * Creates a function that wraps `func` to invoke it with optional `this`
		     * binding of `thisArg`, partial application, and currying.
		     *
		     * @private
		     * @param {Function|string} func The function or method name to wrap.
		     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
		     * @param {*} [thisArg] The `this` binding of `func`.
		     * @param {Array} [partials] The arguments to prepend to those provided to
		     *  the new function.
		     * @param {Array} [holders] The `partials` placeholder indexes.
		     * @param {Array} [partialsRight] The arguments to append to those provided
		     *  to the new function.
		     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
		     * @param {Array} [argPos] The argument positions of the new function.
		     * @param {number} [ary] The arity cap of `func`.
		     * @param {number} [arity] The arity of `func`.
		     * @returns {Function} Returns the new wrapped function.
		     */
		    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
		      var isAry = bitmask & WRAP_ARY_FLAG,
		          isBind = bitmask & WRAP_BIND_FLAG,
		          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
		          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
		          isFlip = bitmask & WRAP_FLIP_FLAG,
		          Ctor = isBindKey ? undefined : createCtor(func);
		
		      function wrapper() {
		        var length = arguments.length,
		            args = Array(length),
		            index = length;
		
		        while (index--) {
		          args[index] = arguments[index];
		        }
		        if (isCurried) {
		          var placeholder = getHolder(wrapper),
		              holdersCount = countHolders(args, placeholder);
		        }
		        if (partials) {
		          args = composeArgs(args, partials, holders, isCurried);
		        }
		        if (partialsRight) {
		          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
		        }
		        length -= holdersCount;
		        if (isCurried && length < arity) {
		          var newHolders = replaceHolders(args, placeholder);
		          return createRecurry(
		            func, bitmask, createHybrid, wrapper.placeholder, thisArg,
		            args, newHolders, argPos, ary, arity - length
		          );
		        }
		        var thisBinding = isBind ? thisArg : this,
		            fn = isBindKey ? thisBinding[func] : func;
		
		        length = args.length;
		        if (argPos) {
		          args = reorder(args, argPos);
		        } else if (isFlip && length > 1) {
		          args.reverse();
		        }
		        if (isAry && ary < length) {
		          args.length = ary;
		        }
		        if (this && this !== root && this instanceof wrapper) {
		          fn = Ctor || createCtor(fn);
		        }
		        return fn.apply(thisBinding, args);
		      }
		      return wrapper;
		    }
		
		    /**
		     * Creates a function like `_.invertBy`.
		     *
		     * @private
		     * @param {Function} setter The function to set accumulator values.
		     * @param {Function} toIteratee The function to resolve iteratees.
		     * @returns {Function} Returns the new inverter function.
		     */
		    function createInverter(setter, toIteratee) {
		      return function(object, iteratee) {
		        return baseInverter(object, setter, toIteratee(iteratee), {});
		      };
		    }
		
		    /**
		     * Creates a function that performs a mathematical operation on two values.
		     *
		     * @private
		     * @param {Function} operator The function to perform the operation.
		     * @param {number} [defaultValue] The value used for `undefined` arguments.
		     * @returns {Function} Returns the new mathematical operation function.
		     */
		    function createMathOperation(operator, defaultValue) {
		      return function(value, other) {
		        var result;
		        if (value === undefined && other === undefined) {
		          return defaultValue;
		        }
		        if (value !== undefined) {
		          result = value;
		        }
		        if (other !== undefined) {
		          if (result === undefined) {
		            return other;
		          }
		          if (typeof value == 'string' || typeof other == 'string') {
		            value = baseToString(value);
		            other = baseToString(other);
		          } else {
		            value = baseToNumber(value);
		            other = baseToNumber(other);
		          }
		          result = operator(value, other);
		        }
		        return result;
		      };
		    }
		
		    /**
		     * Creates a function like `_.over`.
		     *
		     * @private
		     * @param {Function} arrayFunc The function to iterate over iteratees.
		     * @returns {Function} Returns the new over function.
		     */
		    function createOver(arrayFunc) {
		      return flatRest(function(iteratees) {
		        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
		        return baseRest(function(args) {
		          var thisArg = this;
		          return arrayFunc(iteratees, function(iteratee) {
		            return apply(iteratee, thisArg, args);
		          });
		        });
		      });
		    }
		
		    /**
		     * Creates the padding for `string` based on `length`. The `chars` string
		     * is truncated if the number of characters exceeds `length`.
		     *
		     * @private
		     * @param {number} length The padding length.
		     * @param {string} [chars=' '] The string used as padding.
		     * @returns {string} Returns the padding for `string`.
		     */
		    function createPadding(length, chars) {
		      chars = chars === undefined ? ' ' : baseToString(chars);
		
		      var charsLength = chars.length;
		      if (charsLength < 2) {
		        return charsLength ? baseRepeat(chars, length) : chars;
		      }
		      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
		      return hasUnicode(chars)
		        ? castSlice(stringToArray(result), 0, length).join('')
		        : result.slice(0, length);
		    }
		
		    /**
		     * Creates a function that wraps `func` to invoke it with the `this` binding
		     * of `thisArg` and `partials` prepended to the arguments it receives.
		     *
		     * @private
		     * @param {Function} func The function to wrap.
		     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
		     * @param {*} thisArg The `this` binding of `func`.
		     * @param {Array} partials The arguments to prepend to those provided to
		     *  the new function.
		     * @returns {Function} Returns the new wrapped function.
		     */
		    function createPartial(func, bitmask, thisArg, partials) {
		      var isBind = bitmask & WRAP_BIND_FLAG,
		          Ctor = createCtor(func);
		
		      function wrapper() {
		        var argsIndex = -1,
		            argsLength = arguments.length,
		            leftIndex = -1,
		            leftLength = partials.length,
		            args = Array(leftLength + argsLength),
		            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
		
		        while (++leftIndex < leftLength) {
		          args[leftIndex] = partials[leftIndex];
		        }
		        while (argsLength--) {
		          args[leftIndex++] = arguments[++argsIndex];
		        }
		        return apply(fn, isBind ? thisArg : this, args);
		      }
		      return wrapper;
		    }
		
		    /**
		     * Creates a `_.range` or `_.rangeRight` function.
		     *
		     * @private
		     * @param {boolean} [fromRight] Specify iterating from right to left.
		     * @returns {Function} Returns the new range function.
		     */
		    function createRange(fromRight) {
		      return function(start, end, step) {
		        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
		          end = step = undefined;
		        }
		        // Ensure the sign of `-0` is preserved.
		        start = toFinite(start);
		        if (end === undefined) {
		          end = start;
		          start = 0;
		        } else {
		          end = toFinite(end);
		        }
		        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);
		        return baseRange(start, end, step, fromRight);
		      };
		    }
		
		    /**
		     * Creates a function that performs a relational operation on two values.
		     *
		     * @private
		     * @param {Function} operator The function to perform the operation.
		     * @returns {Function} Returns the new relational operation function.
		     */
		    function createRelationalOperation(operator) {
		      return function(value, other) {
		        if (!(typeof value == 'string' && typeof other == 'string')) {
		          value = toNumber(value);
		          other = toNumber(other);
		        }
		        return operator(value, other);
		      };
		    }
		
		    /**
		     * Creates a function that wraps `func` to continue currying.
		     *
		     * @private
		     * @param {Function} func The function to wrap.
		     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
		     * @param {Function} wrapFunc The function to create the `func` wrapper.
		     * @param {*} placeholder The placeholder value.
		     * @param {*} [thisArg] The `this` binding of `func`.
		     * @param {Array} [partials] The arguments to prepend to those provided to
		     *  the new function.
		     * @param {Array} [holders] The `partials` placeholder indexes.
		     * @param {Array} [argPos] The argument positions of the new function.
		     * @param {number} [ary] The arity cap of `func`.
		     * @param {number} [arity] The arity of `func`.
		     * @returns {Function} Returns the new wrapped function.
		     */
		    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
		      var isCurry = bitmask & WRAP_CURRY_FLAG,
		          newHolders = isCurry ? holders : undefined,
		          newHoldersRight = isCurry ? undefined : holders,
		          newPartials = isCurry ? partials : undefined,
		          newPartialsRight = isCurry ? undefined : partials;
		
		      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);
		      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);
		
		      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
		        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
		      }
		      var newData = [
		        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
		        newHoldersRight, argPos, ary, arity
		      ];
		
		      var result = wrapFunc.apply(undefined, newData);
		      if (isLaziable(func)) {
		        setData(result, newData);
		      }
		      result.placeholder = placeholder;
		      return setWrapToString(result, func, bitmask);
		    }
		
		    /**
		     * Creates a function like `_.round`.
		     *
		     * @private
		     * @param {string} methodName The name of the `Math` method to use when rounding.
		     * @returns {Function} Returns the new round function.
		     */
		    function createRound(methodName) {
		      var func = Math[methodName];
		      return function(number, precision) {
		        number = toNumber(number);
		        precision = nativeMin(toInteger(precision), 292);
		        if (precision) {
		          // Shift with exponential notation to avoid floating-point issues.
		          // See [MDN](https://mdn.io/round#Examples) for more details.
		          var pair = (toString(number) + 'e').split('e'),
		              value = func(pair[0] + 'e' + (+pair[1] + precision));
		
		          pair = (toString(value) + 'e').split('e');
		          return +(pair[0] + 'e' + (+pair[1] - precision));
		        }
		        return func(number);
		      };
		    }
		
		    /**
		     * Creates a set object of `values`.
		     *
		     * @private
		     * @param {Array} values The values to add to the set.
		     * @returns {Object} Returns the new set.
		     */
		    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
		      return new Set(values);
		    };
		
		    /**
		     * Creates a `_.toPairs` or `_.toPairsIn` function.
		     *
		     * @private
		     * @param {Function} keysFunc The function to get the keys of a given object.
		     * @returns {Function} Returns the new pairs function.
		     */
		    function createToPairs(keysFunc) {
		      return function(object) {
		        var tag = getTag(object);
		        if (tag == mapTag) {
		          return mapToArray(object);
		        }
		        if (tag == setTag) {
		          return setToPairs(object);
		        }
		        return baseToPairs(object, keysFunc(object));
		      };
		    }
		
		    /**
		     * Creates a function that either curries or invokes `func` with optional
		     * `this` binding and partially applied arguments.
		     *
		     * @private
		     * @param {Function|string} func The function or method name to wrap.
		     * @param {number} bitmask The bitmask flags.
		     *    1 - `_.bind`
		     *    2 - `_.bindKey`
		     *    4 - `_.curry` or `_.curryRight` of a bound function
		     *    8 - `_.curry`
		     *   16 - `_.curryRight`
		     *   32 - `_.partial`
		     *   64 - `_.partialRight`
		     *  128 - `_.rearg`
		     *  256 - `_.ary`
		     *  512 - `_.flip`
		     * @param {*} [thisArg] The `this` binding of `func`.
		     * @param {Array} [partials] The arguments to be partially applied.
		     * @param {Array} [holders] The `partials` placeholder indexes.
		     * @param {Array} [argPos] The argument positions of the new function.
		     * @param {number} [ary] The arity cap of `func`.
		     * @param {number} [arity] The arity of `func`.
		     * @returns {Function} Returns the new wrapped function.
		     */
		    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
		      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
		      if (!isBindKey && typeof func != 'function') {
		        throw new TypeError(FUNC_ERROR_TEXT);
		      }
		      var length = partials ? partials.length : 0;
		      if (!length) {
		        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
		        partials = holders = undefined;
		      }
		      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
		      arity = arity === undefined ? arity : toInteger(arity);
		      length -= holders ? holders.length : 0;
		
		      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
		        var partialsRight = partials,
		            holdersRight = holders;
		
		        partials = holders = undefined;
		      }
		      var data = isBindKey ? undefined : getData(func);
		
		      var newData = [
		        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
		        argPos, ary, arity
		      ];
		
		      if (data) {
		        mergeData(newData, data);
		      }
		      func = newData[0];
		      bitmask = newData[1];
		      thisArg = newData[2];
		      partials = newData[3];
		      holders = newData[4];
		      arity = newData[9] = newData[9] == null
		        ? (isBindKey ? 0 : func.length)
		        : nativeMax(newData[9] - length, 0);
		
		      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
		        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
		      }
		      if (!bitmask || bitmask == WRAP_BIND_FLAG) {
		        var result = createBind(func, bitmask, thisArg);
		      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
		        result = createCurry(func, bitmask, arity);
		      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
		        result = createPartial(func, bitmask, thisArg, partials);
		      } else {
		        result = createHybrid.apply(undefined, newData);
		      }
		      var setter = data ? baseSetData : setData;
		      return setWrapToString(setter(result, newData), func, bitmask);
		    }
		
		    /**
		     * A specialized version of `baseIsEqualDeep` for arrays with support for
		     * partial deep comparisons.
		     *
		     * @private
		     * @param {Array} array The array to compare.
		     * @param {Array} other The other array to compare.
		     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
		     * @param {Function} customizer The function to customize comparisons.
		     * @param {Function} equalFunc The function to determine equivalents of values.
		     * @param {Object} stack Tracks traversed `array` and `other` objects.
		     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
		     */
		    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
		      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
		          arrLength = array.length,
		          othLength = other.length;
		
		      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
		        return false;
		      }
		      // Assume cyclic values are equal.
		      var stacked = stack.get(array);
		      if (stacked && stack.get(other)) {
		        return stacked == other;
		      }
		      var index = -1,
		          result = true,
		          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;
		
		      stack.set(array, other);
		      stack.set(other, array);
		
		      // Ignore non-index properties.
		      while (++index < arrLength) {
		        var arrValue = array[index],
		            othValue = other[index];
		
		        if (customizer) {
		          var compared = isPartial
		            ? customizer(othValue, arrValue, index, other, array, stack)
		            : customizer(arrValue, othValue, index, array, other, stack);
		        }
		        if (compared !== undefined) {
		          if (compared) {
		            continue;
		          }
		          result = false;
		          break;
		        }
		        // Recursively compare arrays (susceptible to call stack limits).
		        if (seen) {
		          if (!arraySome(other, function(othValue, othIndex) {
		                if (!cacheHas(seen, othIndex) &&
		                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
		                  return seen.push(othIndex);
		                }
		              })) {
		            result = false;
		            break;
		          }
		        } else if (!(
		              arrValue === othValue ||
		                equalFunc(arrValue, othValue, bitmask, customizer, stack)
		            )) {
		          result = false;
		          break;
		        }
		      }
		      stack['delete'](array);
		      stack['delete'](other);
		      return result;
		    }
		
		    /**
		     * A specialized version of `baseIsEqualDeep` for comparing objects of
		     * the same `toStringTag`.
		     *
		     * **Note:** This function only supports comparing values with tags of
		     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
		     *
		     * @private
		     * @param {Object} object The object to compare.
		     * @param {Object} other The other object to compare.
		     * @param {string} tag The `toStringTag` of the objects to compare.
		     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
		     * @param {Function} customizer The function to customize comparisons.
		     * @param {Function} equalFunc The function to determine equivalents of values.
		     * @param {Object} stack Tracks traversed `object` and `other` objects.
		     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
		     */
		    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
		      switch (tag) {
		        case dataViewTag:
		          if ((object.byteLength != other.byteLength) ||
		              (object.byteOffset != other.byteOffset)) {
		            return false;
		          }
		          object = object.buffer;
		          other = other.buffer;
		
		        case arrayBufferTag:
		          if ((object.byteLength != other.byteLength) ||
		              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
		            return false;
		          }
		          return true;
		
		        case boolTag:
		        case dateTag:
		        case numberTag:
		          // Coerce booleans to `1` or `0` and dates to milliseconds.
		          // Invalid dates are coerced to `NaN`.
		          return eq(+object, +other);
		
		        case errorTag:
		          return object.name == other.name && object.message == other.message;
		
		        case regexpTag:
		        case stringTag:
		          // Coerce regexes to strings and treat strings, primitives and objects,
		          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
		          // for more details.
		          return object == (other + '');
		
		        case mapTag:
		          var convert = mapToArray;
		
		        case setTag:
		          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
		          convert || (convert = setToArray);
		
		          if (object.size != other.size && !isPartial) {
		            return false;
		          }
		          // Assume cyclic values are equal.
		          var stacked = stack.get(object);
		          if (stacked) {
		            return stacked == other;
		          }
		          bitmask |= COMPARE_UNORDERED_FLAG;
		
		          // Recursively compare objects (susceptible to call stack limits).
		          stack.set(object, other);
		          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
		          stack['delete'](object);
		          return result;
		
		        case symbolTag:
		          if (symbolValueOf) {
		            return symbolValueOf.call(object) == symbolValueOf.call(other);
		          }
		      }
		      return false;
		    }
		
		    /**
		     * A specialized version of `baseIsEqualDeep` for objects with support for
		     * partial deep comparisons.
		     *
		     * @private
		     * @param {Object} object The object to compare.
		     * @param {Object} other The other object to compare.
		     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
		     * @param {Function} customizer The function to customize comparisons.
		     * @param {Function} equalFunc The function to determine equivalents of values.
		     * @param {Object} stack Tracks traversed `object` and `other` objects.
		     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
		     */
		    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
		      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
		          objProps = keys(object),
		          objLength = objProps.length,
		          othProps = keys(other),
		          othLength = othProps.length;
		
		      if (objLength != othLength && !isPartial) {
		        return false;
		      }
		      var index = objLength;
		      while (index--) {
		        var key = objProps[index];
		        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
		          return false;
		        }
		      }
		      // Assume cyclic values are equal.
		      var stacked = stack.get(object);
		      if (stacked && stack.get(other)) {
		        return stacked == other;
		      }
		      var result = true;
		      stack.set(object, other);
		      stack.set(other, object);
		
		      var skipCtor = isPartial;
		      while (++index < objLength) {
		        key = objProps[index];
		        var objValue = object[key],
		            othValue = other[key];
		
		        if (customizer) {
		          var compared = isPartial
		            ? customizer(othValue, objValue, key, other, object, stack)
		            : customizer(objValue, othValue, key, object, other, stack);
		        }
		        // Recursively compare objects (susceptible to call stack limits).
		        if (!(compared === undefined
		              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
		              : compared
		            )) {
		          result = false;
		          break;
		        }
		        skipCtor || (skipCtor = key == 'constructor');
		      }
		      if (result && !skipCtor) {
		        var objCtor = object.constructor,
		            othCtor = other.constructor;
		
		        // Non `Object` object instances with different constructors are not equal.
		        if (objCtor != othCtor &&
		            ('constructor' in object && 'constructor' in other) &&
		            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
		              typeof othCtor == 'function' && othCtor instanceof othCtor)) {
		          result = false;
		        }
		      }
		      stack['delete'](object);
		      stack['delete'](other);
		      return result;
		    }
		
		    /**
		     * A specialized version of `baseRest` which flattens the rest array.
		     *
		     * @private
		     * @param {Function} func The function to apply a rest parameter to.
		     * @returns {Function} Returns the new function.
		     */
		    function flatRest(func) {
		      return setToString(overRest(func, undefined, flatten), func + '');
		    }
		
		    /**
		     * Creates an array of own enumerable property names and symbols of `object`.
		     *
		     * @private
		     * @param {Object} object The object to query.
		     * @returns {Array} Returns the array of property names and symbols.
		     */
		    function getAllKeys(object) {
		      return baseGetAllKeys(object, keys, getSymbols);
		    }
		
		    /**
		     * Creates an array of own and inherited enumerable property names and
		     * symbols of `object`.
		     *
		     * @private
		     * @param {Object} object The object to query.
		     * @returns {Array} Returns the array of property names and symbols.
		     */
		    function getAllKeysIn(object) {
		      return baseGetAllKeys(object, keysIn, getSymbolsIn);
		    }
		
		    /**
		     * Gets metadata for `func`.
		     *
		     * @private
		     * @param {Function} func The function to query.
		     * @returns {*} Returns the metadata for `func`.
		     */
		    var getData = !metaMap ? noop : function(func) {
		      return metaMap.get(func);
		    };
		
		    /**
		     * Gets the name of `func`.
		     *
		     * @private
		     * @param {Function} func The function to query.
		     * @returns {string} Returns the function name.
		     */
		    function getFuncName(func) {
		      var result = (func.name + ''),
		          array = realNames[result],
		          length = hasOwnProperty.call(realNames, result) ? array.length : 0;
		
		      while (length--) {
		        var data = array[length],
		            otherFunc = data.func;
		        if (otherFunc == null || otherFunc == func) {
		          return data.name;
		        }
		      }
		      return result;
		    }
		
		    /**
		     * Gets the argument placeholder value for `func`.
		     *
		     * @private
		     * @param {Function} func The function to inspect.
		     * @returns {*} Returns the placeholder value.
		     */
		    function getHolder(func) {
		      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
		      return object.placeholder;
		    }
		
		    /**
		     * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
		     * this function returns the custom method, otherwise it returns `baseIteratee`.
		     * If arguments are provided, the chosen function is invoked with them and
		     * its result is returned.
		     *
		     * @private
		     * @param {*} [value] The value to convert to an iteratee.
		     * @param {number} [arity] The arity of the created iteratee.
		     * @returns {Function} Returns the chosen function or its result.
		     */
		    function getIteratee() {
		      var result = lodash.iteratee || iteratee;
		      result = result === iteratee ? baseIteratee : result;
		      return arguments.length ? result(arguments[0], arguments[1]) : result;
		    }
		
		    /**
		     * Gets the data for `map`.
		     *
		     * @private
		     * @param {Object} map The map to query.
		     * @param {string} key The reference key.
		     * @returns {*} Returns the map data.
		     */
		    function getMapData(map, key) {
		      var data = map.__data__;
		      return isKeyable(key)
		        ? data[typeof key == 'string' ? 'string' : 'hash']
		        : data.map;
		    }
		
		    /**
		     * Gets the property names, values, and compare flags of `object`.
		     *
		     * @private
		     * @param {Object} object The object to query.
		     * @returns {Array} Returns the match data of `object`.
		     */
		    function getMatchData(object) {
		      var result = keys(object),
		          length = result.length;
		
		      while (length--) {
		        var key = result[length],
		            value = object[key];
		
		        result[length] = [key, value, isStrictComparable(value)];
		      }
		      return result;
		    }
		
		    /**
		     * Gets the native function at `key` of `object`.
		     *
		     * @private
		     * @param {Object} object The object to query.
		     * @param {string} key The key of the method to get.
		     * @returns {*} Returns the function if it's native, else `undefined`.
		     */
		    function getNative(object, key) {
		      var value = getValue(object, key);
		      return baseIsNative(value) ? value : undefined;
		    }
		
		    /**
		     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
		     *
		     * @private
		     * @param {*} value The value to query.
		     * @returns {string} Returns the raw `toStringTag`.
		     */
		    function getRawTag(value) {
		      var isOwn = hasOwnProperty.call(value, symToStringTag),
		          tag = value[symToStringTag];
		
		      try {
		        value[symToStringTag] = undefined;
		        var unmasked = true;
		      } catch (e) {}
		
		      var result = nativeObjectToString.call(value);
		      if (unmasked) {
		        if (isOwn) {
		          value[symToStringTag] = tag;
		        } else {
		          delete value[symToStringTag];
		        }
		      }
		      return result;
		    }
		
		    /**
		     * Creates an array of the own enumerable symbols of `object`.
		     *
		     * @private
		     * @param {Object} object The object to query.
		     * @returns {Array} Returns the array of symbols.
		     */
		    var getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;
		
		    /**
		     * Creates an array of the own and inherited enumerable symbols of `object`.
		     *
		     * @private
		     * @param {Object} object The object to query.
		     * @returns {Array} Returns the array of symbols.
		     */
		    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
		      var result = [];
		      while (object) {
		        arrayPush(result, getSymbols(object));
		        object = getPrototype(object);
		      }
		      return result;
		    };
		
		    /**
		     * Gets the `toStringTag` of `value`.
		     *
		     * @private
		     * @param {*} value The value to query.
		     * @returns {string} Returns the `toStringTag`.
		     */
		    var getTag = baseGetTag;
		
		    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
		    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
		        (Map && getTag(new Map) != mapTag) ||
		        (Promise && getTag(Promise.resolve()) != promiseTag) ||
		        (Set && getTag(new Set) != setTag) ||
		        (WeakMap && getTag(new WeakMap) != weakMapTag)) {
		      getTag = function(value) {
		        var result = baseGetTag(value),
		            Ctor = result == objectTag ? value.constructor : undefined,
		            ctorString = Ctor ? toSource(Ctor) : '';
		
		        if (ctorString) {
		          switch (ctorString) {
		            case dataViewCtorString: return dataViewTag;
		            case mapCtorString: return mapTag;
		            case promiseCtorString: return promiseTag;
		            case setCtorString: return setTag;
		            case weakMapCtorString: return weakMapTag;
		          }
		        }
		        return result;
		      };
		    }
		
		    /**
		     * Gets the view, applying any `transforms` to the `start` and `end` positions.
		     *
		     * @private
		     * @param {number} start The start of the view.
		     * @param {number} end The end of the view.
		     * @param {Array} transforms The transformations to apply to the view.
		     * @returns {Object} Returns an object containing the `start` and `end`
		     *  positions of the view.
		     */
		    function getView(start, end, transforms) {
		      var index = -1,
		          length = transforms.length;
		
		      while (++index < length) {
		        var data = transforms[index],
		            size = data.size;
		
		        switch (data.type) {
		          case 'drop':      start += size; break;
		          case 'dropRight': end -= size; break;
		          case 'take':      end = nativeMin(end, start + size); break;
		          case 'takeRight': start = nativeMax(start, end - size); break;
		        }
		      }
		      return { 'start': start, 'end': end };
		    }
		
		    /**
		     * Extracts wrapper details from the `source` body comment.
		     *
		     * @private
		     * @param {string} source The source to inspect.
		     * @returns {Array} Returns the wrapper details.
		     */
		    function getWrapDetails(source) {
		      var match = source.match(reWrapDetails);
		      return match ? match[1].split(reSplitDetails) : [];
		    }
		
		    /**
		     * Checks if `path` exists on `object`.
		     *
		     * @private
		     * @param {Object} object The object to query.
		     * @param {Array|string} path The path to check.
		     * @param {Function} hasFunc The function to check properties.
		     * @returns {boolean} Returns `true` if `path` exists, else `false`.
		     */
		    function hasPath(object, path, hasFunc) {
		      path = castPath(path, object);
		
		      var index = -1,
		          length = path.length,
		          result = false;
		
		      while (++index < length) {
		        var key = toKey(path[index]);
		        if (!(result = object != null && hasFunc(object, key))) {
		          break;
		        }
		        object = object[key];
		      }
		      if (result || ++index != length) {
		        return result;
		      }
		      length = object == null ? 0 : object.length;
		      return !!length && isLength(length) && isIndex(key, length) &&
		        (isArray(object) || isArguments(object));
		    }
		
		    /**
		     * Initializes an array clone.
		     *
		     * @private
		     * @param {Array} array The array to clone.
		     * @returns {Array} Returns the initialized clone.
		     */
		    function initCloneArray(array) {
		      var length = array.length,
		          result = array.constructor(length);
		
		      // Add properties assigned by `RegExp#exec`.
		      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
		        result.index = array.index;
		        result.input = array.input;
		      }
		      return result;
		    }
		
		    /**
		     * Initializes an object clone.
		     *
		     * @private
		     * @param {Object} object The object to clone.
		     * @returns {Object} Returns the initialized clone.
		     */
		    function initCloneObject(object) {
		      return (typeof object.constructor == 'function' && !isPrototype(object))
		        ? baseCreate(getPrototype(object))
		        : {};
		    }
		
		    /**
		     * Initializes an object clone based on its `toStringTag`.
		     *
		     * **Note:** This function only supports cloning values with tags of
		     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
		     *
		     * @private
		     * @param {Object} object The object to clone.
		     * @param {string} tag The `toStringTag` of the object to clone.
		     * @param {Function} cloneFunc The function to clone values.
		     * @param {boolean} [isDeep] Specify a deep clone.
		     * @returns {Object} Returns the initialized clone.
		     */
		    function initCloneByTag(object, tag, cloneFunc, isDeep) {
		      var Ctor = object.constructor;
		      switch (tag) {
		        case arrayBufferTag:
		          return cloneArrayBuffer(object);
		
		        case boolTag:
		        case dateTag:
		          return new Ctor(+object);
		
		        case dataViewTag:
		          return cloneDataView(object, isDeep);
		
		        case float32Tag: case float64Tag:
		        case int8Tag: case int16Tag: case int32Tag:
		        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
		          return cloneTypedArray(object, isDeep);
		
		        case mapTag:
		          return cloneMap(object, isDeep, cloneFunc);
		
		        case numberTag:
		        case stringTag:
		          return new Ctor(object);
		
		        case regexpTag:
		          return cloneRegExp(object);
		
		        case setTag:
		          return cloneSet(object, isDeep, cloneFunc);
		
		        case symbolTag:
		          return cloneSymbol(object);
		      }
		    }
		
		    /**
		     * Inserts wrapper `details` in a comment at the top of the `source` body.
		     *
		     * @private
		     * @param {string} source The source to modify.
		     * @returns {Array} details The details to insert.
		     * @returns {string} Returns the modified source.
		     */
		    function insertWrapDetails(source, details) {
		      var length = details.length;
		      if (!length) {
		        return source;
		      }
		      var lastIndex = length - 1;
		      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
		      details = details.join(length > 2 ? ', ' : ' ');
		      return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
		    }
		
		    /**
		     * Checks if `value` is a flattenable `arguments` object or array.
		     *
		     * @private
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
		     */
		    function isFlattenable(value) {
		      return isArray(value) || isArguments(value) ||
		        !!(spreadableSymbol && value && value[spreadableSymbol]);
		    }
		
		    /**
		     * Checks if `value` is a valid array-like index.
		     *
		     * @private
		     * @param {*} value The value to check.
		     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
		     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
		     */
		    function isIndex(value, length) {
		      length = length == null ? MAX_SAFE_INTEGER : length;
		      return !!length &&
		        (typeof value == 'number' || reIsUint.test(value)) &&
		        (value > -1 && value % 1 == 0 && value < length);
		    }
		
		    /**
		     * Checks if the given arguments are from an iteratee call.
		     *
		     * @private
		     * @param {*} value The potential iteratee value argument.
		     * @param {*} index The potential iteratee index or key argument.
		     * @param {*} object The potential iteratee object argument.
		     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
		     *  else `false`.
		     */
		    function isIterateeCall(value, index, object) {
		      if (!isObject(object)) {
		        return false;
		      }
		      var type = typeof index;
		      if (type == 'number'
		            ? (isArrayLike(object) && isIndex(index, object.length))
		            : (type == 'string' && index in object)
		          ) {
		        return eq(object[index], value);
		      }
		      return false;
		    }
		
		    /**
		     * Checks if `value` is a property name and not a property path.
		     *
		     * @private
		     * @param {*} value The value to check.
		     * @param {Object} [object] The object to query keys on.
		     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
		     */
		    function isKey(value, object) {
		      if (isArray(value)) {
		        return false;
		      }
		      var type = typeof value;
		      if (type == 'number' || type == 'symbol' || type == 'boolean' ||
		          value == null || isSymbol(value)) {
		        return true;
		      }
		      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
		        (object != null && value in Object(object));
		    }
		
		    /**
		     * Checks if `value` is suitable for use as unique object key.
		     *
		     * @private
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
		     */
		    function isKeyable(value) {
		      var type = typeof value;
		      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
		        ? (value !== '__proto__')
		        : (value === null);
		    }
		
		    /**
		     * Checks if `func` has a lazy counterpart.
		     *
		     * @private
		     * @param {Function} func The function to check.
		     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
		     *  else `false`.
		     */
		    function isLaziable(func) {
		      var funcName = getFuncName(func),
		          other = lodash[funcName];
		
		      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
		        return false;
		      }
		      if (func === other) {
		        return true;
		      }
		      var data = getData(other);
		      return !!data && func === data[0];
		    }
		
		    /**
		     * Checks if `func` has its source masked.
		     *
		     * @private
		     * @param {Function} func The function to check.
		     * @returns {boolean} Returns `true` if `func` is masked, else `false`.
		     */
		    function isMasked(func) {
		      return !!maskSrcKey && (maskSrcKey in func);
		    }
		
		    /**
		     * Checks if `func` is capable of being masked.
		     *
		     * @private
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
		     */
		    var isMaskable = coreJsData ? isFunction : stubFalse;
		
		    /**
		     * Checks if `value` is likely a prototype object.
		     *
		     * @private
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
		     */
		    function isPrototype(value) {
		      var Ctor = value && value.constructor,
		          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;
		
		      return value === proto;
		    }
		
		    /**
		     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
		     *
		     * @private
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` if suitable for strict
		     *  equality comparisons, else `false`.
		     */
		    function isStrictComparable(value) {
		      return value === value && !isObject(value);
		    }
		
		    /**
		     * A specialized version of `matchesProperty` for source values suitable
		     * for strict equality comparisons, i.e. `===`.
		     *
		     * @private
		     * @param {string} key The key of the property to get.
		     * @param {*} srcValue The value to match.
		     * @returns {Function} Returns the new spec function.
		     */
		    function matchesStrictComparable(key, srcValue) {
		      return function(object) {
		        if (object == null) {
		          return false;
		        }
		        return object[key] === srcValue &&
		          (srcValue !== undefined || (key in Object(object)));
		      };
		    }
		
		    /**
		     * A specialized version of `_.memoize` which clears the memoized function's
		     * cache when it exceeds `MAX_MEMOIZE_SIZE`.
		     *
		     * @private
		     * @param {Function} func The function to have its output memoized.
		     * @returns {Function} Returns the new memoized function.
		     */
		    function memoizeCapped(func) {
		      var result = memoize(func, function(key) {
		        if (cache.size === MAX_MEMOIZE_SIZE) {
		          cache.clear();
		        }
		        return key;
		      });
		
		      var cache = result.cache;
		      return result;
		    }
		
		    /**
		     * Merges the function metadata of `source` into `data`.
		     *
		     * Merging metadata reduces the number of wrappers used to invoke a function.
		     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
		     * may be applied regardless of execution order. Methods like `_.ary` and
		     * `_.rearg` modify function arguments, making the order in which they are
		     * executed important, preventing the merging of metadata. However, we make
		     * an exception for a safe combined case where curried functions have `_.ary`
		     * and or `_.rearg` applied.
		     *
		     * @private
		     * @param {Array} data The destination metadata.
		     * @param {Array} source The source metadata.
		     * @returns {Array} Returns `data`.
		     */
		    function mergeData(data, source) {
		      var bitmask = data[1],
		          srcBitmask = source[1],
		          newBitmask = bitmask | srcBitmask,
		          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);
		
		      var isCombo =
		        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||
		        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||
		        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));
		
		      // Exit early if metadata can't be merged.
		      if (!(isCommon || isCombo)) {
		        return data;
		      }
		      // Use source `thisArg` if available.
		      if (srcBitmask & WRAP_BIND_FLAG) {
		        data[2] = source[2];
		        // Set when currying a bound function.
		        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
		      }
		      // Compose partial arguments.
		      var value = source[3];
		      if (value) {
		        var partials = data[3];
		        data[3] = partials ? composeArgs(partials, value, source[4]) : value;
		        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
		      }
		      // Compose partial right arguments.
		      value = source[5];
		      if (value) {
		        partials = data[5];
		        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
		        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
		      }
		      // Use source `argPos` if available.
		      value = source[7];
		      if (value) {
		        data[7] = value;
		      }
		      // Use source `ary` if it's smaller.
		      if (srcBitmask & WRAP_ARY_FLAG) {
		        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
		      }
		      // Use source `arity` if one is not provided.
		      if (data[9] == null) {
		        data[9] = source[9];
		      }
		      // Use source `func` and merge bitmasks.
		      data[0] = source[0];
		      data[1] = newBitmask;
		
		      return data;
		    }
		
		    /**
		     * Used by `_.defaultsDeep` to customize its `_.merge` use.
		     *
		     * @private
		     * @param {*} objValue The destination value.
		     * @param {*} srcValue The source value.
		     * @param {string} key The key of the property to merge.
		     * @param {Object} object The parent object of `objValue`.
		     * @param {Object} source The parent object of `srcValue`.
		     * @param {Object} [stack] Tracks traversed source values and their merged
		     *  counterparts.
		     * @returns {*} Returns the value to assign.
		     */
		    function mergeDefaults(objValue, srcValue, key, object, source, stack) {
		      if (isObject(objValue) && isObject(srcValue)) {
		        // Recursively merge objects and arrays (susceptible to call stack limits).
		        stack.set(srcValue, objValue);
		        baseMerge(objValue, srcValue, undefined, mergeDefaults, stack);
		        stack['delete'](srcValue);
		      }
		      return objValue;
		    }
		
		    /**
		     * This function is like
		     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
		     * except that it includes inherited enumerable properties.
		     *
		     * @private
		     * @param {Object} object The object to query.
		     * @returns {Array} Returns the array of property names.
		     */
		    function nativeKeysIn(object) {
		      var result = [];
		      if (object != null) {
		        for (var key in Object(object)) {
		          result.push(key);
		        }
		      }
		      return result;
		    }
		
		    /**
		     * Converts `value` to a string using `Object.prototype.toString`.
		     *
		     * @private
		     * @param {*} value The value to convert.
		     * @returns {string} Returns the converted string.
		     */
		    function objectToString(value) {
		      return nativeObjectToString.call(value);
		    }
		
		    /**
		     * A specialized version of `baseRest` which transforms the rest array.
		     *
		     * @private
		     * @param {Function} func The function to apply a rest parameter to.
		     * @param {number} [start=func.length-1] The start position of the rest parameter.
		     * @param {Function} transform The rest array transform.
		     * @returns {Function} Returns the new function.
		     */
		    function overRest(func, start, transform) {
		      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
		      return function() {
		        var args = arguments,
		            index = -1,
		            length = nativeMax(args.length - start, 0),
		            array = Array(length);
		
		        while (++index < length) {
		          array[index] = args[start + index];
		        }
		        index = -1;
		        var otherArgs = Array(start + 1);
		        while (++index < start) {
		          otherArgs[index] = args[index];
		        }
		        otherArgs[start] = transform(array);
		        return apply(func, this, otherArgs);
		      };
		    }
		
		    /**
		     * Gets the parent value at `path` of `object`.
		     *
		     * @private
		     * @param {Object} object The object to query.
		     * @param {Array} path The path to get the parent value of.
		     * @returns {*} Returns the parent value.
		     */
		    function parent(object, path) {
		      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
		    }
		
		    /**
		     * Reorder `array` according to the specified indexes where the element at
		     * the first index is assigned as the first element, the element at
		     * the second index is assigned as the second element, and so on.
		     *
		     * @private
		     * @param {Array} array The array to reorder.
		     * @param {Array} indexes The arranged array indexes.
		     * @returns {Array} Returns `array`.
		     */
		    function reorder(array, indexes) {
		      var arrLength = array.length,
		          length = nativeMin(indexes.length, arrLength),
		          oldArray = copyArray(array);
		
		      while (length--) {
		        var index = indexes[length];
		        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
		      }
		      return array;
		    }
		
		    /**
		     * Sets metadata for `func`.
		     *
		     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
		     * period of time, it will trip its breaker and transition to an identity
		     * function to avoid garbage collection pauses in V8. See
		     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
		     * for more details.
		     *
		     * @private
		     * @param {Function} func The function to associate metadata with.
		     * @param {*} data The metadata.
		     * @returns {Function} Returns `func`.
		     */
		    var setData = shortOut(baseSetData);
		
		    /**
		     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).
		     *
		     * @private
		     * @param {Function} func The function to delay.
		     * @param {number} wait The number of milliseconds to delay invocation.
		     * @returns {number|Object} Returns the timer id or timeout object.
		     */
		    var setTimeout = ctxSetTimeout || function(func, wait) {
		      return root.setTimeout(func, wait);
		    };
		
		    /**
		     * Sets the `toString` method of `func` to return `string`.
		     *
		     * @private
		     * @param {Function} func The function to modify.
		     * @param {Function} string The `toString` result.
		     * @returns {Function} Returns `func`.
		     */
		    var setToString = shortOut(baseSetToString);
		
		    /**
		     * Sets the `toString` method of `wrapper` to mimic the source of `reference`
		     * with wrapper details in a comment at the top of the source body.
		     *
		     * @private
		     * @param {Function} wrapper The function to modify.
		     * @param {Function} reference The reference function.
		     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
		     * @returns {Function} Returns `wrapper`.
		     */
		    function setWrapToString(wrapper, reference, bitmask) {
		      var source = (reference + '');
		      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
		    }
		
		    /**
		     * Creates a function that'll short out and invoke `identity` instead
		     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
		     * milliseconds.
		     *
		     * @private
		     * @param {Function} func The function to restrict.
		     * @returns {Function} Returns the new shortable function.
		     */
		    function shortOut(func) {
		      var count = 0,
		          lastCalled = 0;
		
		      return function() {
		        var stamp = nativeNow(),
		            remaining = HOT_SPAN - (stamp - lastCalled);
		
		        lastCalled = stamp;
		        if (remaining > 0) {
		          if (++count >= HOT_COUNT) {
		            return arguments[0];
		          }
		        } else {
		          count = 0;
		        }
		        return func.apply(undefined, arguments);
		      };
		    }
		
		    /**
		     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
		     *
		     * @private
		     * @param {Array} array The array to shuffle.
		     * @param {number} [size=array.length] The size of `array`.
		     * @returns {Array} Returns `array`.
		     */
		    function shuffleSelf(array, size) {
		      var index = -1,
		          length = array.length,
		          lastIndex = length - 1;
		
		      size = size === undefined ? length : size;
		      while (++index < size) {
		        var rand = baseRandom(index, lastIndex),
		            value = array[rand];
		
		        array[rand] = array[index];
		        array[index] = value;
		      }
		      array.length = size;
		      return array;
		    }
		
		    /**
		     * Converts `string` to a property path array.
		     *
		     * @private
		     * @param {string} string The string to convert.
		     * @returns {Array} Returns the property path array.
		     */
		    var stringToPath = memoizeCapped(function(string) {
		      var result = [];
		      if (reLeadingDot.test(string)) {
		        result.push('');
		      }
		      string.replace(rePropName, function(match, number, quote, string) {
		        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
		      });
		      return result;
		    });
		
		    /**
		     * Converts `value` to a string key if it's not a string or symbol.
		     *
		     * @private
		     * @param {*} value The value to inspect.
		     * @returns {string|symbol} Returns the key.
		     */
		    function toKey(value) {
		      if (typeof value == 'string' || isSymbol(value)) {
		        return value;
		      }
		      var result = (value + '');
		      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
		    }
		
		    /**
		     * Converts `func` to its source code.
		     *
		     * @private
		     * @param {Function} func The function to convert.
		     * @returns {string} Returns the source code.
		     */
		    function toSource(func) {
		      if (func != null) {
		        try {
		          return funcToString.call(func);
		        } catch (e) {}
		        try {
		          return (func + '');
		        } catch (e) {}
		      }
		      return '';
		    }
		
		    /**
		     * Updates wrapper `details` based on `bitmask` flags.
		     *
		     * @private
		     * @returns {Array} details The details to modify.
		     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
		     * @returns {Array} Returns `details`.
		     */
		    function updateWrapDetails(details, bitmask) {
		      arrayEach(wrapFlags, function(pair) {
		        var value = '_.' + pair[0];
		        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
		          details.push(value);
		        }
		      });
		      return details.sort();
		    }
		
		    /**
		     * Creates a clone of `wrapper`.
		     *
		     * @private
		     * @param {Object} wrapper The wrapper to clone.
		     * @returns {Object} Returns the cloned wrapper.
		     */
		    function wrapperClone(wrapper) {
		      if (wrapper instanceof LazyWrapper) {
		        return wrapper.clone();
		      }
		      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
		      result.__actions__ = copyArray(wrapper.__actions__);
		      result.__index__  = wrapper.__index__;
		      result.__values__ = wrapper.__values__;
		      return result;
		    }
		
		    /*------------------------------------------------------------------------*/
		
		    /**
		     * Creates an array of elements split into groups the length of `size`.
		     * If `array` can't be split evenly, the final chunk will be the remaining
		     * elements.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Array
		     * @param {Array} array The array to process.
		     * @param {number} [size=1] The length of each chunk
		     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		     * @returns {Array} Returns the new array of chunks.
		     * @example
		     *
		     * _.chunk(['a', 'b', 'c', 'd'], 2);
		     * // => [['a', 'b'], ['c', 'd']]
		     *
		     * _.chunk(['a', 'b', 'c', 'd'], 3);
		     * // => [['a', 'b', 'c'], ['d']]
		     */
		    function chunk(array, size, guard) {
		      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {
		        size = 1;
		      } else {
		        size = nativeMax(toInteger(size), 0);
		      }
		      var length = array == null ? 0 : array.length;
		      if (!length || size < 1) {
		        return [];
		      }
		      var index = 0,
		          resIndex = 0,
		          result = Array(nativeCeil(length / size));
		
		      while (index < length) {
		        result[resIndex++] = baseSlice(array, index, (index += size));
		      }
		      return result;
		    }
		
		    /**
		     * Creates an array with all falsey values removed. The values `false`, `null`,
		     * `0`, `""`, `undefined`, and `NaN` are falsey.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Array
		     * @param {Array} array The array to compact.
		     * @returns {Array} Returns the new array of filtered values.
		     * @example
		     *
		     * _.compact([0, 1, false, 2, '', 3]);
		     * // => [1, 2, 3]
		     */
		    function compact(array) {
		      var index = -1,
		          length = array == null ? 0 : array.length,
		          resIndex = 0,
		          result = [];
		
		      while (++index < length) {
		        var value = array[index];
		        if (value) {
		          result[resIndex++] = value;
		        }
		      }
		      return result;
		    }
		
		    /**
		     * Creates a new array concatenating `array` with any additional arrays
		     * and/or values.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Array
		     * @param {Array} array The array to concatenate.
		     * @param {...*} [values] The values to concatenate.
		     * @returns {Array} Returns the new concatenated array.
		     * @example
		     *
		     * var array = [1];
		     * var other = _.concat(array, 2, [3], [[4]]);
		     *
		     * console.log(other);
		     * // => [1, 2, 3, [4]]
		     *
		     * console.log(array);
		     * // => [1]
		     */
		    function concat() {
		      var length = arguments.length;
		      if (!length) {
		        return [];
		      }
		      var args = Array(length - 1),
		          array = arguments[0],
		          index = length;
		
		      while (index--) {
		        args[index - 1] = arguments[index];
		      }
		      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
		    }
		
		    /**
		     * Creates an array of `array` values not included in the other given arrays
		     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
		     * for equality comparisons. The order and references of result values are
		     * determined by the first array.
		     *
		     * **Note:** Unlike `_.pullAll`, this method returns a new array.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Array
		     * @param {Array} array The array to inspect.
		     * @param {...Array} [values] The values to exclude.
		     * @returns {Array} Returns the new array of filtered values.
		     * @see _.without, _.xor
		     * @example
		     *
		     * _.difference([2, 1], [2, 3]);
		     * // => [1]
		     */
		    var difference = baseRest(function(array, values) {
		      return isArrayLikeObject(array)
		        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
		        : [];
		    });
		
		    /**
		     * This method is like `_.difference` except that it accepts `iteratee` which
		     * is invoked for each element of `array` and `values` to generate the criterion
		     * by which they're compared. The order and references of result values are
		     * determined by the first array. The iteratee is invoked with one argument:
		     * (value).
		     *
		     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Array
		     * @param {Array} array The array to inspect.
		     * @param {...Array} [values] The values to exclude.
		     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
		     * @returns {Array} Returns the new array of filtered values.
		     * @example
		     *
		     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
		     * // => [1.2]
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
		     * // => [{ 'x': 2 }]
		     */
		    var differenceBy = baseRest(function(array, values) {
		      var iteratee = last(values);
		      if (isArrayLikeObject(iteratee)) {
		        iteratee = undefined;
		      }
		      return isArrayLikeObject(array)
		        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))
		        : [];
		    });
		
		    /**
		     * This method is like `_.difference` except that it accepts `comparator`
		     * which is invoked to compare elements of `array` to `values`. The order and
		     * references of result values are determined by the first array. The comparator
		     * is invoked with two arguments: (arrVal, othVal).
		     *
		     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Array
		     * @param {Array} array The array to inspect.
		     * @param {...Array} [values] The values to exclude.
		     * @param {Function} [comparator] The comparator invoked per element.
		     * @returns {Array} Returns the new array of filtered values.
		     * @example
		     *
		     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
		     *
		     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
		     * // => [{ 'x': 2, 'y': 1 }]
		     */
		    var differenceWith = baseRest(function(array, values) {
		      var comparator = last(values);
		      if (isArrayLikeObject(comparator)) {
		        comparator = undefined;
		      }
		      return isArrayLikeObject(array)
		        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)
		        : [];
		    });
		
		    /**
		     * Creates a slice of `array` with `n` elements dropped from the beginning.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.5.0
		     * @category Array
		     * @param {Array} array The array to query.
		     * @param {number} [n=1] The number of elements to drop.
		     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		     * @returns {Array} Returns the slice of `array`.
		     * @example
		     *
		     * _.drop([1, 2, 3]);
		     * // => [2, 3]
		     *
		     * _.drop([1, 2, 3], 2);
		     * // => [3]
		     *
		     * _.drop([1, 2, 3], 5);
		     * // => []
		     *
		     * _.drop([1, 2, 3], 0);
		     * // => [1, 2, 3]
		     */
		    function drop(array, n, guard) {
		      var length = array == null ? 0 : array.length;
		      if (!length) {
		        return [];
		      }
		      n = (guard || n === undefined) ? 1 : toInteger(n);
		      return baseSlice(array, n < 0 ? 0 : n, length);
		    }
		
		    /**
		     * Creates a slice of `array` with `n` elements dropped from the end.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Array
		     * @param {Array} array The array to query.
		     * @param {number} [n=1] The number of elements to drop.
		     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		     * @returns {Array} Returns the slice of `array`.
		     * @example
		     *
		     * _.dropRight([1, 2, 3]);
		     * // => [1, 2]
		     *
		     * _.dropRight([1, 2, 3], 2);
		     * // => [1]
		     *
		     * _.dropRight([1, 2, 3], 5);
		     * // => []
		     *
		     * _.dropRight([1, 2, 3], 0);
		     * // => [1, 2, 3]
		     */
		    function dropRight(array, n, guard) {
		      var length = array == null ? 0 : array.length;
		      if (!length) {
		        return [];
		      }
		      n = (guard || n === undefined) ? 1 : toInteger(n);
		      n = length - n;
		      return baseSlice(array, 0, n < 0 ? 0 : n);
		    }
		
		    /**
		     * Creates a slice of `array` excluding elements dropped from the end.
		     * Elements are dropped until `predicate` returns falsey. The predicate is
		     * invoked with three arguments: (value, index, array).
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Array
		     * @param {Array} array The array to query.
		     * @param {Function} [predicate=_.identity] The function invoked per iteration.
		     * @returns {Array} Returns the slice of `array`.
		     * @example
		     *
		     * var users = [
		     *   { 'user': 'barney',  'active': true },
		     *   { 'user': 'fred',    'active': false },
		     *   { 'user': 'pebbles', 'active': false }
		     * ];
		     *
		     * _.dropRightWhile(users, function(o) { return !o.active; });
		     * // => objects for ['barney']
		     *
		     * // The `_.matches` iteratee shorthand.
		     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
		     * // => objects for ['barney', 'fred']
		     *
		     * // The `_.matchesProperty` iteratee shorthand.
		     * _.dropRightWhile(users, ['active', false]);
		     * // => objects for ['barney']
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.dropRightWhile(users, 'active');
		     * // => objects for ['barney', 'fred', 'pebbles']
		     */
		    function dropRightWhile(array, predicate) {
		      return (array && array.length)
		        ? baseWhile(array, getIteratee(predicate, 3), true, true)
		        : [];
		    }
		
		    /**
		     * Creates a slice of `array` excluding elements dropped from the beginning.
		     * Elements are dropped until `predicate` returns falsey. The predicate is
		     * invoked with three arguments: (value, index, array).
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Array
		     * @param {Array} array The array to query.
		     * @param {Function} [predicate=_.identity] The function invoked per iteration.
		     * @returns {Array} Returns the slice of `array`.
		     * @example
		     *
		     * var users = [
		     *   { 'user': 'barney',  'active': false },
		     *   { 'user': 'fred',    'active': false },
		     *   { 'user': 'pebbles', 'active': true }
		     * ];
		     *
		     * _.dropWhile(users, function(o) { return !o.active; });
		     * // => objects for ['pebbles']
		     *
		     * // The `_.matches` iteratee shorthand.
		     * _.dropWhile(users, { 'user': 'barney', 'active': false });
		     * // => objects for ['fred', 'pebbles']
		     *
		     * // The `_.matchesProperty` iteratee shorthand.
		     * _.dropWhile(users, ['active', false]);
		     * // => objects for ['pebbles']
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.dropWhile(users, 'active');
		     * // => objects for ['barney', 'fred', 'pebbles']
		     */
		    function dropWhile(array, predicate) {
		      return (array && array.length)
		        ? baseWhile(array, getIteratee(predicate, 3), true)
		        : [];
		    }
		
		    /**
		     * Fills elements of `array` with `value` from `start` up to, but not
		     * including, `end`.
		     *
		     * **Note:** This method mutates `array`.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.2.0
		     * @category Array
		     * @param {Array} array The array to fill.
		     * @param {*} value The value to fill `array` with.
		     * @param {number} [start=0] The start position.
		     * @param {number} [end=array.length] The end position.
		     * @returns {Array} Returns `array`.
		     * @example
		     *
		     * var array = [1, 2, 3];
		     *
		     * _.fill(array, 'a');
		     * console.log(array);
		     * // => ['a', 'a', 'a']
		     *
		     * _.fill(Array(3), 2);
		     * // => [2, 2, 2]
		     *
		     * _.fill([4, 6, 8, 10], '*', 1, 3);
		     * // => [4, '*', '*', 10]
		     */
		    function fill(array, value, start, end) {
		      var length = array == null ? 0 : array.length;
		      if (!length) {
		        return [];
		      }
		      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
		        start = 0;
		        end = length;
		      }
		      return baseFill(array, value, start, end);
		    }
		
		    /**
		     * This method is like `_.find` except that it returns the index of the first
		     * element `predicate` returns truthy for instead of the element itself.
		     *
		     * @static
		     * @memberOf _
		     * @since 1.1.0
		     * @category Array
		     * @param {Array} array The array to inspect.
		     * @param {Function} [predicate=_.identity] The function invoked per iteration.
		     * @param {number} [fromIndex=0] The index to search from.
		     * @returns {number} Returns the index of the found element, else `-1`.
		     * @example
		     *
		     * var users = [
		     *   { 'user': 'barney',  'active': false },
		     *   { 'user': 'fred',    'active': false },
		     *   { 'user': 'pebbles', 'active': true }
		     * ];
		     *
		     * _.findIndex(users, function(o) { return o.user == 'barney'; });
		     * // => 0
		     *
		     * // The `_.matches` iteratee shorthand.
		     * _.findIndex(users, { 'user': 'fred', 'active': false });
		     * // => 1
		     *
		     * // The `_.matchesProperty` iteratee shorthand.
		     * _.findIndex(users, ['active', false]);
		     * // => 0
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.findIndex(users, 'active');
		     * // => 2
		     */
		    function findIndex(array, predicate, fromIndex) {
		      var length = array == null ? 0 : array.length;
		      if (!length) {
		        return -1;
		      }
		      var index = fromIndex == null ? 0 : toInteger(fromIndex);
		      if (index < 0) {
		        index = nativeMax(length + index, 0);
		      }
		      return baseFindIndex(array, getIteratee(predicate, 3), index);
		    }
		
		    /**
		     * This method is like `_.findIndex` except that it iterates over elements
		     * of `collection` from right to left.
		     *
		     * @static
		     * @memberOf _
		     * @since 2.0.0
		     * @category Array
		     * @param {Array} array The array to inspect.
		     * @param {Function} [predicate=_.identity] The function invoked per iteration.
		     * @param {number} [fromIndex=array.length-1] The index to search from.
		     * @returns {number} Returns the index of the found element, else `-1`.
		     * @example
		     *
		     * var users = [
		     *   { 'user': 'barney',  'active': true },
		     *   { 'user': 'fred',    'active': false },
		     *   { 'user': 'pebbles', 'active': false }
		     * ];
		     *
		     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
		     * // => 2
		     *
		     * // The `_.matches` iteratee shorthand.
		     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
		     * // => 0
		     *
		     * // The `_.matchesProperty` iteratee shorthand.
		     * _.findLastIndex(users, ['active', false]);
		     * // => 2
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.findLastIndex(users, 'active');
		     * // => 0
		     */
		    function findLastIndex(array, predicate, fromIndex) {
		      var length = array == null ? 0 : array.length;
		      if (!length) {
		        return -1;
		      }
		      var index = length - 1;
		      if (fromIndex !== undefined) {
		        index = toInteger(fromIndex);
		        index = fromIndex < 0
		          ? nativeMax(length + index, 0)
		          : nativeMin(index, length - 1);
		      }
		      return baseFindIndex(array, getIteratee(predicate, 3), index, true);
		    }
		
		    /**
		     * Flattens `array` a single level deep.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Array
		     * @param {Array} array The array to flatten.
		     * @returns {Array} Returns the new flattened array.
		     * @example
		     *
		     * _.flatten([1, [2, [3, [4]], 5]]);
		     * // => [1, 2, [3, [4]], 5]
		     */
		    function flatten(array) {
		      var length = array == null ? 0 : array.length;
		      return length ? baseFlatten(array, 1) : [];
		    }
		
		    /**
		     * Recursively flattens `array`.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Array
		     * @param {Array} array The array to flatten.
		     * @returns {Array} Returns the new flattened array.
		     * @example
		     *
		     * _.flattenDeep([1, [2, [3, [4]], 5]]);
		     * // => [1, 2, 3, 4, 5]
		     */
		    function flattenDeep(array) {
		      var length = array == null ? 0 : array.length;
		      return length ? baseFlatten(array, INFINITY) : [];
		    }
		
		    /**
		     * Recursively flatten `array` up to `depth` times.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.4.0
		     * @category Array
		     * @param {Array} array The array to flatten.
		     * @param {number} [depth=1] The maximum recursion depth.
		     * @returns {Array} Returns the new flattened array.
		     * @example
		     *
		     * var array = [1, [2, [3, [4]], 5]];
		     *
		     * _.flattenDepth(array, 1);
		     * // => [1, 2, [3, [4]], 5]
		     *
		     * _.flattenDepth(array, 2);
		     * // => [1, 2, 3, [4], 5]
		     */
		    function flattenDepth(array, depth) {
		      var length = array == null ? 0 : array.length;
		      if (!length) {
		        return [];
		      }
		      depth = depth === undefined ? 1 : toInteger(depth);
		      return baseFlatten(array, depth);
		    }
		
		    /**
		     * The inverse of `_.toPairs`; this method returns an object composed
		     * from key-value `pairs`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Array
		     * @param {Array} pairs The key-value pairs.
		     * @returns {Object} Returns the new object.
		     * @example
		     *
		     * _.fromPairs([['a', 1], ['b', 2]]);
		     * // => { 'a': 1, 'b': 2 }
		     */
		    function fromPairs(pairs) {
		      var index = -1,
		          length = pairs == null ? 0 : pairs.length,
		          result = {};
		
		      while (++index < length) {
		        var pair = pairs[index];
		        result[pair[0]] = pair[1];
		      }
		      return result;
		    }
		
		    /**
		     * Gets the first element of `array`.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @alias first
		     * @category Array
		     * @param {Array} array The array to query.
		     * @returns {*} Returns the first element of `array`.
		     * @example
		     *
		     * _.head([1, 2, 3]);
		     * // => 1
		     *
		     * _.head([]);
		     * // => undefined
		     */
		    function head(array) {
		      return (array && array.length) ? array[0] : undefined;
		    }
		
		    /**
		     * Gets the index at which the first occurrence of `value` is found in `array`
		     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
		     * for equality comparisons. If `fromIndex` is negative, it's used as the
		     * offset from the end of `array`.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Array
		     * @param {Array} array The array to inspect.
		     * @param {*} value The value to search for.
		     * @param {number} [fromIndex=0] The index to search from.
		     * @returns {number} Returns the index of the matched value, else `-1`.
		     * @example
		     *
		     * _.indexOf([1, 2, 1, 2], 2);
		     * // => 1
		     *
		     * // Search from the `fromIndex`.
		     * _.indexOf([1, 2, 1, 2], 2, 2);
		     * // => 3
		     */
		    function indexOf(array, value, fromIndex) {
		      var length = array == null ? 0 : array.length;
		      if (!length) {
		        return -1;
		      }
		      var index = fromIndex == null ? 0 : toInteger(fromIndex);
		      if (index < 0) {
		        index = nativeMax(length + index, 0);
		      }
		      return baseIndexOf(array, value, index);
		    }
		
		    /**
		     * Gets all but the last element of `array`.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Array
		     * @param {Array} array The array to query.
		     * @returns {Array} Returns the slice of `array`.
		     * @example
		     *
		     * _.initial([1, 2, 3]);
		     * // => [1, 2]
		     */
		    function initial(array) {
		      var length = array == null ? 0 : array.length;
		      return length ? baseSlice(array, 0, -1) : [];
		    }
		
		    /**
		     * Creates an array of unique values that are included in all given arrays
		     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
		     * for equality comparisons. The order and references of result values are
		     * determined by the first array.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Array
		     * @param {...Array} [arrays] The arrays to inspect.
		     * @returns {Array} Returns the new array of intersecting values.
		     * @example
		     *
		     * _.intersection([2, 1], [2, 3]);
		     * // => [2]
		     */
		    var intersection = baseRest(function(arrays) {
		      var mapped = arrayMap(arrays, castArrayLikeObject);
		      return (mapped.length && mapped[0] === arrays[0])
		        ? baseIntersection(mapped)
		        : [];
		    });
		
		    /**
		     * This method is like `_.intersection` except that it accepts `iteratee`
		     * which is invoked for each element of each `arrays` to generate the criterion
		     * by which they're compared. The order and references of result values are
		     * determined by the first array. The iteratee is invoked with one argument:
		     * (value).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Array
		     * @param {...Array} [arrays] The arrays to inspect.
		     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
		     * @returns {Array} Returns the new array of intersecting values.
		     * @example
		     *
		     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
		     * // => [2.1]
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
		     * // => [{ 'x': 1 }]
		     */
		    var intersectionBy = baseRest(function(arrays) {
		      var iteratee = last(arrays),
		          mapped = arrayMap(arrays, castArrayLikeObject);
		
		      if (iteratee === last(mapped)) {
		        iteratee = undefined;
		      } else {
		        mapped.pop();
		      }
		      return (mapped.length && mapped[0] === arrays[0])
		        ? baseIntersection(mapped, getIteratee(iteratee, 2))
		        : [];
		    });
		
		    /**
		     * This method is like `_.intersection` except that it accepts `comparator`
		     * which is invoked to compare elements of `arrays`. The order and references
		     * of result values are determined by the first array. The comparator is
		     * invoked with two arguments: (arrVal, othVal).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Array
		     * @param {...Array} [arrays] The arrays to inspect.
		     * @param {Function} [comparator] The comparator invoked per element.
		     * @returns {Array} Returns the new array of intersecting values.
		     * @example
		     *
		     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
		     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
		     *
		     * _.intersectionWith(objects, others, _.isEqual);
		     * // => [{ 'x': 1, 'y': 2 }]
		     */
		    var intersectionWith = baseRest(function(arrays) {
		      var comparator = last(arrays),
		          mapped = arrayMap(arrays, castArrayLikeObject);
		
		      comparator = typeof comparator == 'function' ? comparator : undefined;
		      if (comparator) {
		        mapped.pop();
		      }
		      return (mapped.length && mapped[0] === arrays[0])
		        ? baseIntersection(mapped, undefined, comparator)
		        : [];
		    });
		
		    /**
		     * Converts all elements in `array` into a string separated by `separator`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Array
		     * @param {Array} array The array to convert.
		     * @param {string} [separator=','] The element separator.
		     * @returns {string} Returns the joined string.
		     * @example
		     *
		     * _.join(['a', 'b', 'c'], '~');
		     * // => 'a~b~c'
		     */
		    function join(array, separator) {
		      return array == null ? '' : nativeJoin.call(array, separator);
		    }
		
		    /**
		     * Gets the last element of `array`.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Array
		     * @param {Array} array The array to query.
		     * @returns {*} Returns the last element of `array`.
		     * @example
		     *
		     * _.last([1, 2, 3]);
		     * // => 3
		     */
		    function last(array) {
		      var length = array == null ? 0 : array.length;
		      return length ? array[length - 1] : undefined;
		    }
		
		    /**
		     * This method is like `_.indexOf` except that it iterates over elements of
		     * `array` from right to left.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Array
		     * @param {Array} array The array to inspect.
		     * @param {*} value The value to search for.
		     * @param {number} [fromIndex=array.length-1] The index to search from.
		     * @returns {number} Returns the index of the matched value, else `-1`.
		     * @example
		     *
		     * _.lastIndexOf([1, 2, 1, 2], 2);
		     * // => 3
		     *
		     * // Search from the `fromIndex`.
		     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
		     * // => 1
		     */
		    function lastIndexOf(array, value, fromIndex) {
		      var length = array == null ? 0 : array.length;
		      if (!length) {
		        return -1;
		      }
		      var index = length;
		      if (fromIndex !== undefined) {
		        index = toInteger(fromIndex);
		        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
		      }
		      return value === value
		        ? strictLastIndexOf(array, value, index)
		        : baseFindIndex(array, baseIsNaN, index, true);
		    }
		
		    /**
		     * Gets the element at index `n` of `array`. If `n` is negative, the nth
		     * element from the end is returned.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.11.0
		     * @category Array
		     * @param {Array} array The array to query.
		     * @param {number} [n=0] The index of the element to return.
		     * @returns {*} Returns the nth element of `array`.
		     * @example
		     *
		     * var array = ['a', 'b', 'c', 'd'];
		     *
		     * _.nth(array, 1);
		     * // => 'b'
		     *
		     * _.nth(array, -2);
		     * // => 'c';
		     */
		    function nth(array, n) {
		      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;
		    }
		
		    /**
		     * Removes all given values from `array` using
		     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
		     * for equality comparisons.
		     *
		     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
		     * to remove elements from an array by predicate.
		     *
		     * @static
		     * @memberOf _
		     * @since 2.0.0
		     * @category Array
		     * @param {Array} array The array to modify.
		     * @param {...*} [values] The values to remove.
		     * @returns {Array} Returns `array`.
		     * @example
		     *
		     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
		     *
		     * _.pull(array, 'a', 'c');
		     * console.log(array);
		     * // => ['b', 'b']
		     */
		    var pull = baseRest(pullAll);
		
		    /**
		     * This method is like `_.pull` except that it accepts an array of values to remove.
		     *
		     * **Note:** Unlike `_.difference`, this method mutates `array`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Array
		     * @param {Array} array The array to modify.
		     * @param {Array} values The values to remove.
		     * @returns {Array} Returns `array`.
		     * @example
		     *
		     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
		     *
		     * _.pullAll(array, ['a', 'c']);
		     * console.log(array);
		     * // => ['b', 'b']
		     */
		    function pullAll(array, values) {
		      return (array && array.length && values && values.length)
		        ? basePullAll(array, values)
		        : array;
		    }
		
		    /**
		     * This method is like `_.pullAll` except that it accepts `iteratee` which is
		     * invoked for each element of `array` and `values` to generate the criterion
		     * by which they're compared. The iteratee is invoked with one argument: (value).
		     *
		     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Array
		     * @param {Array} array The array to modify.
		     * @param {Array} values The values to remove.
		     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
		     * @returns {Array} Returns `array`.
		     * @example
		     *
		     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
		     *
		     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
		     * console.log(array);
		     * // => [{ 'x': 2 }]
		     */
		    function pullAllBy(array, values, iteratee) {
		      return (array && array.length && values && values.length)
		        ? basePullAll(array, values, getIteratee(iteratee, 2))
		        : array;
		    }
		
		    /**
		     * This method is like `_.pullAll` except that it accepts `comparator` which
		     * is invoked to compare elements of `array` to `values`. The comparator is
		     * invoked with two arguments: (arrVal, othVal).
		     *
		     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.6.0
		     * @category Array
		     * @param {Array} array The array to modify.
		     * @param {Array} values The values to remove.
		     * @param {Function} [comparator] The comparator invoked per element.
		     * @returns {Array} Returns `array`.
		     * @example
		     *
		     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
		     *
		     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
		     * console.log(array);
		     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
		     */
		    function pullAllWith(array, values, comparator) {
		      return (array && array.length && values && values.length)
		        ? basePullAll(array, values, undefined, comparator)
		        : array;
		    }
		
		    /**
		     * Removes elements from `array` corresponding to `indexes` and returns an
		     * array of removed elements.
		     *
		     * **Note:** Unlike `_.at`, this method mutates `array`.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Array
		     * @param {Array} array The array to modify.
		     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
		     * @returns {Array} Returns the new array of removed elements.
		     * @example
		     *
		     * var array = ['a', 'b', 'c', 'd'];
		     * var pulled = _.pullAt(array, [1, 3]);
		     *
		     * console.log(array);
		     * // => ['a', 'c']
		     *
		     * console.log(pulled);
		     * // => ['b', 'd']
		     */
		    var pullAt = flatRest(function(array, indexes) {
		      var length = array == null ? 0 : array.length,
		          result = baseAt(array, indexes);
		
		      basePullAt(array, arrayMap(indexes, function(index) {
		        return isIndex(index, length) ? +index : index;
		      }).sort(compareAscending));
		
		      return result;
		    });
		
		    /**
		     * Removes all elements from `array` that `predicate` returns truthy for
		     * and returns an array of the removed elements. The predicate is invoked
		     * with three arguments: (value, index, array).
		     *
		     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
		     * to pull elements from an array by value.
		     *
		     * @static
		     * @memberOf _
		     * @since 2.0.0
		     * @category Array
		     * @param {Array} array The array to modify.
		     * @param {Function} [predicate=_.identity] The function invoked per iteration.
		     * @returns {Array} Returns the new array of removed elements.
		     * @example
		     *
		     * var array = [1, 2, 3, 4];
		     * var evens = _.remove(array, function(n) {
		     *   return n % 2 == 0;
		     * });
		     *
		     * console.log(array);
		     * // => [1, 3]
		     *
		     * console.log(evens);
		     * // => [2, 4]
		     */
		    function remove(array, predicate) {
		      var result = [];
		      if (!(array && array.length)) {
		        return result;
		      }
		      var index = -1,
		          indexes = [],
		          length = array.length;
		
		      predicate = getIteratee(predicate, 3);
		      while (++index < length) {
		        var value = array[index];
		        if (predicate(value, index, array)) {
		          result.push(value);
		          indexes.push(index);
		        }
		      }
		      basePullAt(array, indexes);
		      return result;
		    }
		
		    /**
		     * Reverses `array` so that the first element becomes the last, the second
		     * element becomes the second to last, and so on.
		     *
		     * **Note:** This method mutates `array` and is based on
		     * [`Array#reverse`](https://mdn.io/Array/reverse).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Array
		     * @param {Array} array The array to modify.
		     * @returns {Array} Returns `array`.
		     * @example
		     *
		     * var array = [1, 2, 3];
		     *
		     * _.reverse(array);
		     * // => [3, 2, 1]
		     *
		     * console.log(array);
		     * // => [3, 2, 1]
		     */
		    function reverse(array) {
		      return array == null ? array : nativeReverse.call(array);
		    }
		
		    /**
		     * Creates a slice of `array` from `start` up to, but not including, `end`.
		     *
		     * **Note:** This method is used instead of
		     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
		     * returned.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Array
		     * @param {Array} array The array to slice.
		     * @param {number} [start=0] The start position.
		     * @param {number} [end=array.length] The end position.
		     * @returns {Array} Returns the slice of `array`.
		     */
		    function slice(array, start, end) {
		      var length = array == null ? 0 : array.length;
		      if (!length) {
		        return [];
		      }
		      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
		        start = 0;
		        end = length;
		      }
		      else {
		        start = start == null ? 0 : toInteger(start);
		        end = end === undefined ? length : toInteger(end);
		      }
		      return baseSlice(array, start, end);
		    }
		
		    /**
		     * Uses a binary search to determine the lowest index at which `value`
		     * should be inserted into `array` in order to maintain its sort order.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Array
		     * @param {Array} array The sorted array to inspect.
		     * @param {*} value The value to evaluate.
		     * @returns {number} Returns the index at which `value` should be inserted
		     *  into `array`.
		     * @example
		     *
		     * _.sortedIndex([30, 50], 40);
		     * // => 1
		     */
		    function sortedIndex(array, value) {
		      return baseSortedIndex(array, value);
		    }
		
		    /**
		     * This method is like `_.sortedIndex` except that it accepts `iteratee`
		     * which is invoked for `value` and each element of `array` to compute their
		     * sort ranking. The iteratee is invoked with one argument: (value).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Array
		     * @param {Array} array The sorted array to inspect.
		     * @param {*} value The value to evaluate.
		     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
		     * @returns {number} Returns the index at which `value` should be inserted
		     *  into `array`.
		     * @example
		     *
		     * var objects = [{ 'x': 4 }, { 'x': 5 }];
		     *
		     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
		     * // => 0
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
		     * // => 0
		     */
		    function sortedIndexBy(array, value, iteratee) {
		      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
		    }
		
		    /**
		     * This method is like `_.indexOf` except that it performs a binary
		     * search on a sorted `array`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Array
		     * @param {Array} array The array to inspect.
		     * @param {*} value The value to search for.
		     * @returns {number} Returns the index of the matched value, else `-1`.
		     * @example
		     *
		     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
		     * // => 1
		     */
		    function sortedIndexOf(array, value) {
		      var length = array == null ? 0 : array.length;
		      if (length) {
		        var index = baseSortedIndex(array, value);
		        if (index < length && eq(array[index], value)) {
		          return index;
		        }
		      }
		      return -1;
		    }
		
		    /**
		     * This method is like `_.sortedIndex` except that it returns the highest
		     * index at which `value` should be inserted into `array` in order to
		     * maintain its sort order.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Array
		     * @param {Array} array The sorted array to inspect.
		     * @param {*} value The value to evaluate.
		     * @returns {number} Returns the index at which `value` should be inserted
		     *  into `array`.
		     * @example
		     *
		     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
		     * // => 4
		     */
		    function sortedLastIndex(array, value) {
		      return baseSortedIndex(array, value, true);
		    }
		
		    /**
		     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
		     * which is invoked for `value` and each element of `array` to compute their
		     * sort ranking. The iteratee is invoked with one argument: (value).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Array
		     * @param {Array} array The sorted array to inspect.
		     * @param {*} value The value to evaluate.
		     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
		     * @returns {number} Returns the index at which `value` should be inserted
		     *  into `array`.
		     * @example
		     *
		     * var objects = [{ 'x': 4 }, { 'x': 5 }];
		     *
		     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
		     * // => 1
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
		     * // => 1
		     */
		    function sortedLastIndexBy(array, value, iteratee) {
		      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
		    }
		
		    /**
		     * This method is like `_.lastIndexOf` except that it performs a binary
		     * search on a sorted `array`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Array
		     * @param {Array} array The array to inspect.
		     * @param {*} value The value to search for.
		     * @returns {number} Returns the index of the matched value, else `-1`.
		     * @example
		     *
		     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
		     * // => 3
		     */
		    function sortedLastIndexOf(array, value) {
		      var length = array == null ? 0 : array.length;
		      if (length) {
		        var index = baseSortedIndex(array, value, true) - 1;
		        if (eq(array[index], value)) {
		          return index;
		        }
		      }
		      return -1;
		    }
		
		    /**
		     * This method is like `_.uniq` except that it's designed and optimized
		     * for sorted arrays.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Array
		     * @param {Array} array The array to inspect.
		     * @returns {Array} Returns the new duplicate free array.
		     * @example
		     *
		     * _.sortedUniq([1, 1, 2]);
		     * // => [1, 2]
		     */
		    function sortedUniq(array) {
		      return (array && array.length)
		        ? baseSortedUniq(array)
		        : [];
		    }
		
		    /**
		     * This method is like `_.uniqBy` except that it's designed and optimized
		     * for sorted arrays.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Array
		     * @param {Array} array The array to inspect.
		     * @param {Function} [iteratee] The iteratee invoked per element.
		     * @returns {Array} Returns the new duplicate free array.
		     * @example
		     *
		     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
		     * // => [1.1, 2.3]
		     */
		    function sortedUniqBy(array, iteratee) {
		      return (array && array.length)
		        ? baseSortedUniq(array, getIteratee(iteratee, 2))
		        : [];
		    }
		
		    /**
		     * Gets all but the first element of `array`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Array
		     * @param {Array} array The array to query.
		     * @returns {Array} Returns the slice of `array`.
		     * @example
		     *
		     * _.tail([1, 2, 3]);
		     * // => [2, 3]
		     */
		    function tail(array) {
		      var length = array == null ? 0 : array.length;
		      return length ? baseSlice(array, 1, length) : [];
		    }
		
		    /**
		     * Creates a slice of `array` with `n` elements taken from the beginning.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Array
		     * @param {Array} array The array to query.
		     * @param {number} [n=1] The number of elements to take.
		     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		     * @returns {Array} Returns the slice of `array`.
		     * @example
		     *
		     * _.take([1, 2, 3]);
		     * // => [1]
		     *
		     * _.take([1, 2, 3], 2);
		     * // => [1, 2]
		     *
		     * _.take([1, 2, 3], 5);
		     * // => [1, 2, 3]
		     *
		     * _.take([1, 2, 3], 0);
		     * // => []
		     */
		    function take(array, n, guard) {
		      if (!(array && array.length)) {
		        return [];
		      }
		      n = (guard || n === undefined) ? 1 : toInteger(n);
		      return baseSlice(array, 0, n < 0 ? 0 : n);
		    }
		
		    /**
		     * Creates a slice of `array` with `n` elements taken from the end.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Array
		     * @param {Array} array The array to query.
		     * @param {number} [n=1] The number of elements to take.
		     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		     * @returns {Array} Returns the slice of `array`.
		     * @example
		     *
		     * _.takeRight([1, 2, 3]);
		     * // => [3]
		     *
		     * _.takeRight([1, 2, 3], 2);
		     * // => [2, 3]
		     *
		     * _.takeRight([1, 2, 3], 5);
		     * // => [1, 2, 3]
		     *
		     * _.takeRight([1, 2, 3], 0);
		     * // => []
		     */
		    function takeRight(array, n, guard) {
		      var length = array == null ? 0 : array.length;
		      if (!length) {
		        return [];
		      }
		      n = (guard || n === undefined) ? 1 : toInteger(n);
		      n = length - n;
		      return baseSlice(array, n < 0 ? 0 : n, length);
		    }
		
		    /**
		     * Creates a slice of `array` with elements taken from the end. Elements are
		     * taken until `predicate` returns falsey. The predicate is invoked with
		     * three arguments: (value, index, array).
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Array
		     * @param {Array} array The array to query.
		     * @param {Function} [predicate=_.identity] The function invoked per iteration.
		     * @returns {Array} Returns the slice of `array`.
		     * @example
		     *
		     * var users = [
		     *   { 'user': 'barney',  'active': true },
		     *   { 'user': 'fred',    'active': false },
		     *   { 'user': 'pebbles', 'active': false }
		     * ];
		     *
		     * _.takeRightWhile(users, function(o) { return !o.active; });
		     * // => objects for ['fred', 'pebbles']
		     *
		     * // The `_.matches` iteratee shorthand.
		     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
		     * // => objects for ['pebbles']
		     *
		     * // The `_.matchesProperty` iteratee shorthand.
		     * _.takeRightWhile(users, ['active', false]);
		     * // => objects for ['fred', 'pebbles']
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.takeRightWhile(users, 'active');
		     * // => []
		     */
		    function takeRightWhile(array, predicate) {
		      return (array && array.length)
		        ? baseWhile(array, getIteratee(predicate, 3), false, true)
		        : [];
		    }
		
		    /**
		     * Creates a slice of `array` with elements taken from the beginning. Elements
		     * are taken until `predicate` returns falsey. The predicate is invoked with
		     * three arguments: (value, index, array).
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Array
		     * @param {Array} array The array to query.
		     * @param {Function} [predicate=_.identity] The function invoked per iteration.
		     * @returns {Array} Returns the slice of `array`.
		     * @example
		     *
		     * var users = [
		     *   { 'user': 'barney',  'active': false },
		     *   { 'user': 'fred',    'active': false},
		     *   { 'user': 'pebbles', 'active': true }
		     * ];
		     *
		     * _.takeWhile(users, function(o) { return !o.active; });
		     * // => objects for ['barney', 'fred']
		     *
		     * // The `_.matches` iteratee shorthand.
		     * _.takeWhile(users, { 'user': 'barney', 'active': false });
		     * // => objects for ['barney']
		     *
		     * // The `_.matchesProperty` iteratee shorthand.
		     * _.takeWhile(users, ['active', false]);
		     * // => objects for ['barney', 'fred']
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.takeWhile(users, 'active');
		     * // => []
		     */
		    function takeWhile(array, predicate) {
		      return (array && array.length)
		        ? baseWhile(array, getIteratee(predicate, 3))
		        : [];
		    }
		
		    /**
		     * Creates an array of unique values, in order, from all given arrays using
		     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
		     * for equality comparisons.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Array
		     * @param {...Array} [arrays] The arrays to inspect.
		     * @returns {Array} Returns the new array of combined values.
		     * @example
		     *
		     * _.union([2], [1, 2]);
		     * // => [2, 1]
		     */
		    var union = baseRest(function(arrays) {
		      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
		    });
		
		    /**
		     * This method is like `_.union` except that it accepts `iteratee` which is
		     * invoked for each element of each `arrays` to generate the criterion by
		     * which uniqueness is computed. Result values are chosen from the first
		     * array in which the value occurs. The iteratee is invoked with one argument:
		     * (value).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Array
		     * @param {...Array} [arrays] The arrays to inspect.
		     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
		     * @returns {Array} Returns the new array of combined values.
		     * @example
		     *
		     * _.unionBy([2.1], [1.2, 2.3], Math.floor);
		     * // => [2.1, 1.2]
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
		     * // => [{ 'x': 1 }, { 'x': 2 }]
		     */
		    var unionBy = baseRest(function(arrays) {
		      var iteratee = last(arrays);
		      if (isArrayLikeObject(iteratee)) {
		        iteratee = undefined;
		      }
		      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
		    });
		
		    /**
		     * This method is like `_.union` except that it accepts `comparator` which
		     * is invoked to compare elements of `arrays`. Result values are chosen from
		     * the first array in which the value occurs. The comparator is invoked
		     * with two arguments: (arrVal, othVal).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Array
		     * @param {...Array} [arrays] The arrays to inspect.
		     * @param {Function} [comparator] The comparator invoked per element.
		     * @returns {Array} Returns the new array of combined values.
		     * @example
		     *
		     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
		     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
		     *
		     * _.unionWith(objects, others, _.isEqual);
		     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
		     */
		    var unionWith = baseRest(function(arrays) {
		      var comparator = last(arrays);
		      comparator = typeof comparator == 'function' ? comparator : undefined;
		      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
		    });
		
		    /**
		     * Creates a duplicate-free version of an array, using
		     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
		     * for equality comparisons, in which only the first occurrence of each element
		     * is kept. The order of result values is determined by the order they occur
		     * in the array.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Array
		     * @param {Array} array The array to inspect.
		     * @returns {Array} Returns the new duplicate free array.
		     * @example
		     *
		     * _.uniq([2, 1, 2]);
		     * // => [2, 1]
		     */
		    function uniq(array) {
		      return (array && array.length) ? baseUniq(array) : [];
		    }
		
		    /**
		     * This method is like `_.uniq` except that it accepts `iteratee` which is
		     * invoked for each element in `array` to generate the criterion by which
		     * uniqueness is computed. The order of result values is determined by the
		     * order they occur in the array. The iteratee is invoked with one argument:
		     * (value).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Array
		     * @param {Array} array The array to inspect.
		     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
		     * @returns {Array} Returns the new duplicate free array.
		     * @example
		     *
		     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
		     * // => [2.1, 1.2]
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
		     * // => [{ 'x': 1 }, { 'x': 2 }]
		     */
		    function uniqBy(array, iteratee) {
		      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];
		    }
		
		    /**
		     * This method is like `_.uniq` except that it accepts `comparator` which
		     * is invoked to compare elements of `array`. The order of result values is
		     * determined by the order they occur in the array.The comparator is invoked
		     * with two arguments: (arrVal, othVal).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Array
		     * @param {Array} array The array to inspect.
		     * @param {Function} [comparator] The comparator invoked per element.
		     * @returns {Array} Returns the new duplicate free array.
		     * @example
		     *
		     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
		     *
		     * _.uniqWith(objects, _.isEqual);
		     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
		     */
		    function uniqWith(array, comparator) {
		      comparator = typeof comparator == 'function' ? comparator : undefined;
		      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];
		    }
		
		    /**
		     * This method is like `_.zip` except that it accepts an array of grouped
		     * elements and creates an array regrouping the elements to their pre-zip
		     * configuration.
		     *
		     * @static
		     * @memberOf _
		     * @since 1.2.0
		     * @category Array
		     * @param {Array} array The array of grouped elements to process.
		     * @returns {Array} Returns the new array of regrouped elements.
		     * @example
		     *
		     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
		     * // => [['a', 1, true], ['b', 2, false]]
		     *
		     * _.unzip(zipped);
		     * // => [['a', 'b'], [1, 2], [true, false]]
		     */
		    function unzip(array) {
		      if (!(array && array.length)) {
		        return [];
		      }
		      var length = 0;
		      array = arrayFilter(array, function(group) {
		        if (isArrayLikeObject(group)) {
		          length = nativeMax(group.length, length);
		          return true;
		        }
		      });
		      return baseTimes(length, function(index) {
		        return arrayMap(array, baseProperty(index));
		      });
		    }
		
		    /**
		     * This method is like `_.unzip` except that it accepts `iteratee` to specify
		     * how regrouped values should be combined. The iteratee is invoked with the
		     * elements of each group: (...group).
		     *
		     * @static
		     * @memberOf _
		     * @since 3.8.0
		     * @category Array
		     * @param {Array} array The array of grouped elements to process.
		     * @param {Function} [iteratee=_.identity] The function to combine
		     *  regrouped values.
		     * @returns {Array} Returns the new array of regrouped elements.
		     * @example
		     *
		     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
		     * // => [[1, 10, 100], [2, 20, 200]]
		     *
		     * _.unzipWith(zipped, _.add);
		     * // => [3, 30, 300]
		     */
		    function unzipWith(array, iteratee) {
		      if (!(array && array.length)) {
		        return [];
		      }
		      var result = unzip(array);
		      if (iteratee == null) {
		        return result;
		      }
		      return arrayMap(result, function(group) {
		        return apply(iteratee, undefined, group);
		      });
		    }
		
		    /**
		     * Creates an array excluding all given values using
		     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
		     * for equality comparisons.
		     *
		     * **Note:** Unlike `_.pull`, this method returns a new array.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Array
		     * @param {Array} array The array to inspect.
		     * @param {...*} [values] The values to exclude.
		     * @returns {Array} Returns the new array of filtered values.
		     * @see _.difference, _.xor
		     * @example
		     *
		     * _.without([2, 1, 2, 3], 1, 2);
		     * // => [3]
		     */
		    var without = baseRest(function(array, values) {
		      return isArrayLikeObject(array)
		        ? baseDifference(array, values)
		        : [];
		    });
		
		    /**
		     * Creates an array of unique values that is the
		     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
		     * of the given arrays. The order of result values is determined by the order
		     * they occur in the arrays.
		     *
		     * @static
		     * @memberOf _
		     * @since 2.4.0
		     * @category Array
		     * @param {...Array} [arrays] The arrays to inspect.
		     * @returns {Array} Returns the new array of filtered values.
		     * @see _.difference, _.without
		     * @example
		     *
		     * _.xor([2, 1], [2, 3]);
		     * // => [1, 3]
		     */
		    var xor = baseRest(function(arrays) {
		      return baseXor(arrayFilter(arrays, isArrayLikeObject));
		    });
		
		    /**
		     * This method is like `_.xor` except that it accepts `iteratee` which is
		     * invoked for each element of each `arrays` to generate the criterion by
		     * which by which they're compared. The order of result values is determined
		     * by the order they occur in the arrays. The iteratee is invoked with one
		     * argument: (value).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Array
		     * @param {...Array} [arrays] The arrays to inspect.
		     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
		     * @returns {Array} Returns the new array of filtered values.
		     * @example
		     *
		     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
		     * // => [1.2, 3.4]
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
		     * // => [{ 'x': 2 }]
		     */
		    var xorBy = baseRest(function(arrays) {
		      var iteratee = last(arrays);
		      if (isArrayLikeObject(iteratee)) {
		        iteratee = undefined;
		      }
		      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
		    });
		
		    /**
		     * This method is like `_.xor` except that it accepts `comparator` which is
		     * invoked to compare elements of `arrays`. The order of result values is
		     * determined by the order they occur in the arrays. The comparator is invoked
		     * with two arguments: (arrVal, othVal).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Array
		     * @param {...Array} [arrays] The arrays to inspect.
		     * @param {Function} [comparator] The comparator invoked per element.
		     * @returns {Array} Returns the new array of filtered values.
		     * @example
		     *
		     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
		     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
		     *
		     * _.xorWith(objects, others, _.isEqual);
		     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
		     */
		    var xorWith = baseRest(function(arrays) {
		      var comparator = last(arrays);
		      comparator = typeof comparator == 'function' ? comparator : undefined;
		      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
		    });
		
		    /**
		     * Creates an array of grouped elements, the first of which contains the
		     * first elements of the given arrays, the second of which contains the
		     * second elements of the given arrays, and so on.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Array
		     * @param {...Array} [arrays] The arrays to process.
		     * @returns {Array} Returns the new array of grouped elements.
		     * @example
		     *
		     * _.zip(['a', 'b'], [1, 2], [true, false]);
		     * // => [['a', 1, true], ['b', 2, false]]
		     */
		    var zip = baseRest(unzip);
		
		    /**
		     * This method is like `_.fromPairs` except that it accepts two arrays,
		     * one of property identifiers and one of corresponding values.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.4.0
		     * @category Array
		     * @param {Array} [props=[]] The property identifiers.
		     * @param {Array} [values=[]] The property values.
		     * @returns {Object} Returns the new object.
		     * @example
		     *
		     * _.zipObject(['a', 'b'], [1, 2]);
		     * // => { 'a': 1, 'b': 2 }
		     */
		    function zipObject(props, values) {
		      return baseZipObject(props || [], values || [], assignValue);
		    }
		
		    /**
		     * This method is like `_.zipObject` except that it supports property paths.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.1.0
		     * @category Array
		     * @param {Array} [props=[]] The property identifiers.
		     * @param {Array} [values=[]] The property values.
		     * @returns {Object} Returns the new object.
		     * @example
		     *
		     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
		     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
		     */
		    function zipObjectDeep(props, values) {
		      return baseZipObject(props || [], values || [], baseSet);
		    }
		
		    /**
		     * This method is like `_.zip` except that it accepts `iteratee` to specify
		     * how grouped values should be combined. The iteratee is invoked with the
		     * elements of each group: (...group).
		     *
		     * @static
		     * @memberOf _
		     * @since 3.8.0
		     * @category Array
		     * @param {...Array} [arrays] The arrays to process.
		     * @param {Function} [iteratee=_.identity] The function to combine
		     *  grouped values.
		     * @returns {Array} Returns the new array of grouped elements.
		     * @example
		     *
		     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
		     *   return a + b + c;
		     * });
		     * // => [111, 222]
		     */
		    var zipWith = baseRest(function(arrays) {
		      var length = arrays.length,
		          iteratee = length > 1 ? arrays[length - 1] : undefined;
		
		      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
		      return unzipWith(arrays, iteratee);
		    });
		
		    /*------------------------------------------------------------------------*/
		
		    /**
		     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
		     * chain sequences enabled. The result of such sequences must be unwrapped
		     * with `_#value`.
		     *
		     * @static
		     * @memberOf _
		     * @since 1.3.0
		     * @category Seq
		     * @param {*} value The value to wrap.
		     * @returns {Object} Returns the new `lodash` wrapper instance.
		     * @example
		     *
		     * var users = [
		     *   { 'user': 'barney',  'age': 36 },
		     *   { 'user': 'fred',    'age': 40 },
		     *   { 'user': 'pebbles', 'age': 1 }
		     * ];
		     *
		     * var youngest = _
		     *   .chain(users)
		     *   .sortBy('age')
		     *   .map(function(o) {
		     *     return o.user + ' is ' + o.age;
		     *   })
		     *   .head()
		     *   .value();
		     * // => 'pebbles is 1'
		     */
		    function chain(value) {
		      var result = lodash(value);
		      result.__chain__ = true;
		      return result;
		    }
		
		    /**
		     * This method invokes `interceptor` and returns `value`. The interceptor
		     * is invoked with one argument; (value). The purpose of this method is to
		     * "tap into" a method chain sequence in order to modify intermediate results.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Seq
		     * @param {*} value The value to provide to `interceptor`.
		     * @param {Function} interceptor The function to invoke.
		     * @returns {*} Returns `value`.
		     * @example
		     *
		     * _([1, 2, 3])
		     *  .tap(function(array) {
		     *    // Mutate input array.
		     *    array.pop();
		     *  })
		     *  .reverse()
		     *  .value();
		     * // => [2, 1]
		     */
		    function tap(value, interceptor) {
		      interceptor(value);
		      return value;
		    }
		
		    /**
		     * This method is like `_.tap` except that it returns the result of `interceptor`.
		     * The purpose of this method is to "pass thru" values replacing intermediate
		     * results in a method chain sequence.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Seq
		     * @param {*} value The value to provide to `interceptor`.
		     * @param {Function} interceptor The function to invoke.
		     * @returns {*} Returns the result of `interceptor`.
		     * @example
		     *
		     * _('  abc  ')
		     *  .chain()
		     *  .trim()
		     *  .thru(function(value) {
		     *    return [value];
		     *  })
		     *  .value();
		     * // => ['abc']
		     */
		    function thru(value, interceptor) {
		      return interceptor(value);
		    }
		
		    /**
		     * This method is the wrapper version of `_.at`.
		     *
		     * @name at
		     * @memberOf _
		     * @since 1.0.0
		     * @category Seq
		     * @param {...(string|string[])} [paths] The property paths to pick.
		     * @returns {Object} Returns the new `lodash` wrapper instance.
		     * @example
		     *
		     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
		     *
		     * _(object).at(['a[0].b.c', 'a[1]']).value();
		     * // => [3, 4]
		     */
		    var wrapperAt = flatRest(function(paths) {
		      var length = paths.length,
		          start = length ? paths[0] : 0,
		          value = this.__wrapped__,
		          interceptor = function(object) { return baseAt(object, paths); };
		
		      if (length > 1 || this.__actions__.length ||
		          !(value instanceof LazyWrapper) || !isIndex(start)) {
		        return this.thru(interceptor);
		      }
		      value = value.slice(start, +start + (length ? 1 : 0));
		      value.__actions__.push({
		        'func': thru,
		        'args': [interceptor],
		        'thisArg': undefined
		      });
		      return new LodashWrapper(value, this.__chain__).thru(function(array) {
		        if (length && !array.length) {
		          array.push(undefined);
		        }
		        return array;
		      });
		    });
		
		    /**
		     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
		     *
		     * @name chain
		     * @memberOf _
		     * @since 0.1.0
		     * @category Seq
		     * @returns {Object} Returns the new `lodash` wrapper instance.
		     * @example
		     *
		     * var users = [
		     *   { 'user': 'barney', 'age': 36 },
		     *   { 'user': 'fred',   'age': 40 }
		     * ];
		     *
		     * // A sequence without explicit chaining.
		     * _(users).head();
		     * // => { 'user': 'barney', 'age': 36 }
		     *
		     * // A sequence with explicit chaining.
		     * _(users)
		     *   .chain()
		     *   .head()
		     *   .pick('user')
		     *   .value();
		     * // => { 'user': 'barney' }
		     */
		    function wrapperChain() {
		      return chain(this);
		    }
		
		    /**
		     * Executes the chain sequence and returns the wrapped result.
		     *
		     * @name commit
		     * @memberOf _
		     * @since 3.2.0
		     * @category Seq
		     * @returns {Object} Returns the new `lodash` wrapper instance.
		     * @example
		     *
		     * var array = [1, 2];
		     * var wrapped = _(array).push(3);
		     *
		     * console.log(array);
		     * // => [1, 2]
		     *
		     * wrapped = wrapped.commit();
		     * console.log(array);
		     * // => [1, 2, 3]
		     *
		     * wrapped.last();
		     * // => 3
		     *
		     * console.log(array);
		     * // => [1, 2, 3]
		     */
		    function wrapperCommit() {
		      return new LodashWrapper(this.value(), this.__chain__);
		    }
		
		    /**
		     * Gets the next value on a wrapped object following the
		     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
		     *
		     * @name next
		     * @memberOf _
		     * @since 4.0.0
		     * @category Seq
		     * @returns {Object} Returns the next iterator value.
		     * @example
		     *
		     * var wrapped = _([1, 2]);
		     *
		     * wrapped.next();
		     * // => { 'done': false, 'value': 1 }
		     *
		     * wrapped.next();
		     * // => { 'done': false, 'value': 2 }
		     *
		     * wrapped.next();
		     * // => { 'done': true, 'value': undefined }
		     */
		    function wrapperNext() {
		      if (this.__values__ === undefined) {
		        this.__values__ = toArray(this.value());
		      }
		      var done = this.__index__ >= this.__values__.length,
		          value = done ? undefined : this.__values__[this.__index__++];
		
		      return { 'done': done, 'value': value };
		    }
		
		    /**
		     * Enables the wrapper to be iterable.
		     *
		     * @name Symbol.iterator
		     * @memberOf _
		     * @since 4.0.0
		     * @category Seq
		     * @returns {Object} Returns the wrapper object.
		     * @example
		     *
		     * var wrapped = _([1, 2]);
		     *
		     * wrapped[Symbol.iterator]() === wrapped;
		     * // => true
		     *
		     * Array.from(wrapped);
		     * // => [1, 2]
		     */
		    function wrapperToIterator() {
		      return this;
		    }
		
		    /**
		     * Creates a clone of the chain sequence planting `value` as the wrapped value.
		     *
		     * @name plant
		     * @memberOf _
		     * @since 3.2.0
		     * @category Seq
		     * @param {*} value The value to plant.
		     * @returns {Object} Returns the new `lodash` wrapper instance.
		     * @example
		     *
		     * function square(n) {
		     *   return n * n;
		     * }
		     *
		     * var wrapped = _([1, 2]).map(square);
		     * var other = wrapped.plant([3, 4]);
		     *
		     * other.value();
		     * // => [9, 16]
		     *
		     * wrapped.value();
		     * // => [1, 4]
		     */
		    function wrapperPlant(value) {
		      var result,
		          parent = this;
		
		      while (parent instanceof baseLodash) {
		        var clone = wrapperClone(parent);
		        clone.__index__ = 0;
		        clone.__values__ = undefined;
		        if (result) {
		          previous.__wrapped__ = clone;
		        } else {
		          result = clone;
		        }
		        var previous = clone;
		        parent = parent.__wrapped__;
		      }
		      previous.__wrapped__ = value;
		      return result;
		    }
		
		    /**
		     * This method is the wrapper version of `_.reverse`.
		     *
		     * **Note:** This method mutates the wrapped array.
		     *
		     * @name reverse
		     * @memberOf _
		     * @since 0.1.0
		     * @category Seq
		     * @returns {Object} Returns the new `lodash` wrapper instance.
		     * @example
		     *
		     * var array = [1, 2, 3];
		     *
		     * _(array).reverse().value()
		     * // => [3, 2, 1]
		     *
		     * console.log(array);
		     * // => [3, 2, 1]
		     */
		    function wrapperReverse() {
		      var value = this.__wrapped__;
		      if (value instanceof LazyWrapper) {
		        var wrapped = value;
		        if (this.__actions__.length) {
		          wrapped = new LazyWrapper(this);
		        }
		        wrapped = wrapped.reverse();
		        wrapped.__actions__.push({
		          'func': thru,
		          'args': [reverse],
		          'thisArg': undefined
		        });
		        return new LodashWrapper(wrapped, this.__chain__);
		      }
		      return this.thru(reverse);
		    }
		
		    /**
		     * Executes the chain sequence to resolve the unwrapped value.
		     *
		     * @name value
		     * @memberOf _
		     * @since 0.1.0
		     * @alias toJSON, valueOf
		     * @category Seq
		     * @returns {*} Returns the resolved unwrapped value.
		     * @example
		     *
		     * _([1, 2, 3]).value();
		     * // => [1, 2, 3]
		     */
		    function wrapperValue() {
		      return baseWrapperValue(this.__wrapped__, this.__actions__);
		    }
		
		    /*------------------------------------------------------------------------*/
		
		    /**
		     * Creates an object composed of keys generated from the results of running
		     * each element of `collection` thru `iteratee`. The corresponding value of
		     * each key is the number of times the key was returned by `iteratee`. The
		     * iteratee is invoked with one argument: (value).
		     *
		     * @static
		     * @memberOf _
		     * @since 0.5.0
		     * @category Collection
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
		     * @returns {Object} Returns the composed aggregate object.
		     * @example
		     *
		     * _.countBy([6.1, 4.2, 6.3], Math.floor);
		     * // => { '4': 1, '6': 2 }
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.countBy(['one', 'two', 'three'], 'length');
		     * // => { '3': 2, '5': 1 }
		     */
		    var countBy = createAggregator(function(result, value, key) {
		      if (hasOwnProperty.call(result, key)) {
		        ++result[key];
		      } else {
		        baseAssignValue(result, key, 1);
		      }
		    });
		
		    /**
		     * Checks if `predicate` returns truthy for **all** elements of `collection`.
		     * Iteration is stopped once `predicate` returns falsey. The predicate is
		     * invoked with three arguments: (value, index|key, collection).
		     *
		     * **Note:** This method returns `true` for
		     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
		     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
		     * elements of empty collections.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Collection
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function} [predicate=_.identity] The function invoked per iteration.
		     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		     * @returns {boolean} Returns `true` if all elements pass the predicate check,
		     *  else `false`.
		     * @example
		     *
		     * _.every([true, 1, null, 'yes'], Boolean);
		     * // => false
		     *
		     * var users = [
		     *   { 'user': 'barney', 'age': 36, 'active': false },
		     *   { 'user': 'fred',   'age': 40, 'active': false }
		     * ];
		     *
		     * // The `_.matches` iteratee shorthand.
		     * _.every(users, { 'user': 'barney', 'active': false });
		     * // => false
		     *
		     * // The `_.matchesProperty` iteratee shorthand.
		     * _.every(users, ['active', false]);
		     * // => true
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.every(users, 'active');
		     * // => false
		     */
		    function every(collection, predicate, guard) {
		      var func = isArray(collection) ? arrayEvery : baseEvery;
		      if (guard && isIterateeCall(collection, predicate, guard)) {
		        predicate = undefined;
		      }
		      return func(collection, getIteratee(predicate, 3));
		    }
		
		    /**
		     * Iterates over elements of `collection`, returning an array of all elements
		     * `predicate` returns truthy for. The predicate is invoked with three
		     * arguments: (value, index|key, collection).
		     *
		     * **Note:** Unlike `_.remove`, this method returns a new array.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Collection
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function} [predicate=_.identity] The function invoked per iteration.
		     * @returns {Array} Returns the new filtered array.
		     * @see _.reject
		     * @example
		     *
		     * var users = [
		     *   { 'user': 'barney', 'age': 36, 'active': true },
		     *   { 'user': 'fred',   'age': 40, 'active': false }
		     * ];
		     *
		     * _.filter(users, function(o) { return !o.active; });
		     * // => objects for ['fred']
		     *
		     * // The `_.matches` iteratee shorthand.
		     * _.filter(users, { 'age': 36, 'active': true });
		     * // => objects for ['barney']
		     *
		     * // The `_.matchesProperty` iteratee shorthand.
		     * _.filter(users, ['active', false]);
		     * // => objects for ['fred']
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.filter(users, 'active');
		     * // => objects for ['barney']
		     */
		    function filter(collection, predicate) {
		      var func = isArray(collection) ? arrayFilter : baseFilter;
		      return func(collection, getIteratee(predicate, 3));
		    }
		
		    /**
		     * Iterates over elements of `collection`, returning the first element
		     * `predicate` returns truthy for. The predicate is invoked with three
		     * arguments: (value, index|key, collection).
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Collection
		     * @param {Array|Object} collection The collection to inspect.
		     * @param {Function} [predicate=_.identity] The function invoked per iteration.
		     * @param {number} [fromIndex=0] The index to search from.
		     * @returns {*} Returns the matched element, else `undefined`.
		     * @example
		     *
		     * var users = [
		     *   { 'user': 'barney',  'age': 36, 'active': true },
		     *   { 'user': 'fred',    'age': 40, 'active': false },
		     *   { 'user': 'pebbles', 'age': 1,  'active': true }
		     * ];
		     *
		     * _.find(users, function(o) { return o.age < 40; });
		     * // => object for 'barney'
		     *
		     * // The `_.matches` iteratee shorthand.
		     * _.find(users, { 'age': 1, 'active': true });
		     * // => object for 'pebbles'
		     *
		     * // The `_.matchesProperty` iteratee shorthand.
		     * _.find(users, ['active', false]);
		     * // => object for 'fred'
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.find(users, 'active');
		     * // => object for 'barney'
		     */
		    var find = createFind(findIndex);
		
		    /**
		     * This method is like `_.find` except that it iterates over elements of
		     * `collection` from right to left.
		     *
		     * @static
		     * @memberOf _
		     * @since 2.0.0
		     * @category Collection
		     * @param {Array|Object} collection The collection to inspect.
		     * @param {Function} [predicate=_.identity] The function invoked per iteration.
		     * @param {number} [fromIndex=collection.length-1] The index to search from.
		     * @returns {*} Returns the matched element, else `undefined`.
		     * @example
		     *
		     * _.findLast([1, 2, 3, 4], function(n) {
		     *   return n % 2 == 1;
		     * });
		     * // => 3
		     */
		    var findLast = createFind(findLastIndex);
		
		    /**
		     * Creates a flattened array of values by running each element in `collection`
		     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
		     * with three arguments: (value, index|key, collection).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Collection
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		     * @returns {Array} Returns the new flattened array.
		     * @example
		     *
		     * function duplicate(n) {
		     *   return [n, n];
		     * }
		     *
		     * _.flatMap([1, 2], duplicate);
		     * // => [1, 1, 2, 2]
		     */
		    function flatMap(collection, iteratee) {
		      return baseFlatten(map(collection, iteratee), 1);
		    }
		
		    /**
		     * This method is like `_.flatMap` except that it recursively flattens the
		     * mapped results.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.7.0
		     * @category Collection
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		     * @returns {Array} Returns the new flattened array.
		     * @example
		     *
		     * function duplicate(n) {
		     *   return [[[n, n]]];
		     * }
		     *
		     * _.flatMapDeep([1, 2], duplicate);
		     * // => [1, 1, 2, 2]
		     */
		    function flatMapDeep(collection, iteratee) {
		      return baseFlatten(map(collection, iteratee), INFINITY);
		    }
		
		    /**
		     * This method is like `_.flatMap` except that it recursively flattens the
		     * mapped results up to `depth` times.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.7.0
		     * @category Collection
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		     * @param {number} [depth=1] The maximum recursion depth.
		     * @returns {Array} Returns the new flattened array.
		     * @example
		     *
		     * function duplicate(n) {
		     *   return [[[n, n]]];
		     * }
		     *
		     * _.flatMapDepth([1, 2], duplicate, 2);
		     * // => [[1, 1], [2, 2]]
		     */
		    function flatMapDepth(collection, iteratee, depth) {
		      depth = depth === undefined ? 1 : toInteger(depth);
		      return baseFlatten(map(collection, iteratee), depth);
		    }
		
		    /**
		     * Iterates over elements of `collection` and invokes `iteratee` for each element.
		     * The iteratee is invoked with three arguments: (value, index|key, collection).
		     * Iteratee functions may exit iteration early by explicitly returning `false`.
		     *
		     * **Note:** As with other "Collections" methods, objects with a "length"
		     * property are iterated like arrays. To avoid this behavior use `_.forIn`
		     * or `_.forOwn` for object iteration.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @alias each
		     * @category Collection
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		     * @returns {Array|Object} Returns `collection`.
		     * @see _.forEachRight
		     * @example
		     *
		     * _.forEach([1, 2], function(value) {
		     *   console.log(value);
		     * });
		     * // => Logs `1` then `2`.
		     *
		     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
		     *   console.log(key);
		     * });
		     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
		     */
		    function forEach(collection, iteratee) {
		      var func = isArray(collection) ? arrayEach : baseEach;
		      return func(collection, getIteratee(iteratee, 3));
		    }
		
		    /**
		     * This method is like `_.forEach` except that it iterates over elements of
		     * `collection` from right to left.
		     *
		     * @static
		     * @memberOf _
		     * @since 2.0.0
		     * @alias eachRight
		     * @category Collection
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		     * @returns {Array|Object} Returns `collection`.
		     * @see _.forEach
		     * @example
		     *
		     * _.forEachRight([1, 2], function(value) {
		     *   console.log(value);
		     * });
		     * // => Logs `2` then `1`.
		     */
		    function forEachRight(collection, iteratee) {
		      var func = isArray(collection) ? arrayEachRight : baseEachRight;
		      return func(collection, getIteratee(iteratee, 3));
		    }
		
		    /**
		     * Creates an object composed of keys generated from the results of running
		     * each element of `collection` thru `iteratee`. The order of grouped values
		     * is determined by the order they occur in `collection`. The corresponding
		     * value of each key is an array of elements responsible for generating the
		     * key. The iteratee is invoked with one argument: (value).
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Collection
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
		     * @returns {Object} Returns the composed aggregate object.
		     * @example
		     *
		     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
		     * // => { '4': [4.2], '6': [6.1, 6.3] }
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.groupBy(['one', 'two', 'three'], 'length');
		     * // => { '3': ['one', 'two'], '5': ['three'] }
		     */
		    var groupBy = createAggregator(function(result, value, key) {
		      if (hasOwnProperty.call(result, key)) {
		        result[key].push(value);
		      } else {
		        baseAssignValue(result, key, [value]);
		      }
		    });
		
		    /**
		     * Checks if `value` is in `collection`. If `collection` is a string, it's
		     * checked for a substring of `value`, otherwise
		     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
		     * is used for equality comparisons. If `fromIndex` is negative, it's used as
		     * the offset from the end of `collection`.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Collection
		     * @param {Array|Object|string} collection The collection to inspect.
		     * @param {*} value The value to search for.
		     * @param {number} [fromIndex=0] The index to search from.
		     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
		     * @returns {boolean} Returns `true` if `value` is found, else `false`.
		     * @example
		     *
		     * _.includes([1, 2, 3], 1);
		     * // => true
		     *
		     * _.includes([1, 2, 3], 1, 2);
		     * // => false
		     *
		     * _.includes({ 'a': 1, 'b': 2 }, 1);
		     * // => true
		     *
		     * _.includes('abcd', 'bc');
		     * // => true
		     */
		    function includes(collection, value, fromIndex, guard) {
		      collection = isArrayLike(collection) ? collection : values(collection);
		      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;
		
		      var length = collection.length;
		      if (fromIndex < 0) {
		        fromIndex = nativeMax(length + fromIndex, 0);
		      }
		      return isString(collection)
		        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
		        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
		    }
		
		    /**
		     * Invokes the method at `path` of each element in `collection`, returning
		     * an array of the results of each invoked method. Any additional arguments
		     * are provided to each invoked method. If `path` is a function, it's invoked
		     * for, and `this` bound to, each element in `collection`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Collection
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Array|Function|string} path The path of the method to invoke or
		     *  the function invoked per iteration.
		     * @param {...*} [args] The arguments to invoke each method with.
		     * @returns {Array} Returns the array of results.
		     * @example
		     *
		     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
		     * // => [[1, 5, 7], [1, 2, 3]]
		     *
		     * _.invokeMap([123, 456], String.prototype.split, '');
		     * // => [['1', '2', '3'], ['4', '5', '6']]
		     */
		    var invokeMap = baseRest(function(collection, path, args) {
		      var index = -1,
		          isFunc = typeof path == 'function',
		          result = isArrayLike(collection) ? Array(collection.length) : [];
		
		      baseEach(collection, function(value) {
		        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
		      });
		      return result;
		    });
		
		    /**
		     * Creates an object composed of keys generated from the results of running
		     * each element of `collection` thru `iteratee`. The corresponding value of
		     * each key is the last element responsible for generating the key. The
		     * iteratee is invoked with one argument: (value).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Collection
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
		     * @returns {Object} Returns the composed aggregate object.
		     * @example
		     *
		     * var array = [
		     *   { 'dir': 'left', 'code': 97 },
		     *   { 'dir': 'right', 'code': 100 }
		     * ];
		     *
		     * _.keyBy(array, function(o) {
		     *   return String.fromCharCode(o.code);
		     * });
		     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
		     *
		     * _.keyBy(array, 'dir');
		     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
		     */
		    var keyBy = createAggregator(function(result, value, key) {
		      baseAssignValue(result, key, value);
		    });
		
		    /**
		     * Creates an array of values by running each element in `collection` thru
		     * `iteratee`. The iteratee is invoked with three arguments:
		     * (value, index|key, collection).
		     *
		     * Many lodash methods are guarded to work as iteratees for methods like
		     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
		     *
		     * The guarded methods are:
		     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
		     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
		     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
		     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Collection
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		     * @returns {Array} Returns the new mapped array.
		     * @example
		     *
		     * function square(n) {
		     *   return n * n;
		     * }
		     *
		     * _.map([4, 8], square);
		     * // => [16, 64]
		     *
		     * _.map({ 'a': 4, 'b': 8 }, square);
		     * // => [16, 64] (iteration order is not guaranteed)
		     *
		     * var users = [
		     *   { 'user': 'barney' },
		     *   { 'user': 'fred' }
		     * ];
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.map(users, 'user');
		     * // => ['barney', 'fred']
		     */
		    function map(collection, iteratee) {
		      var func = isArray(collection) ? arrayMap : baseMap;
		      return func(collection, getIteratee(iteratee, 3));
		    }
		
		    /**
		     * This method is like `_.sortBy` except that it allows specifying the sort
		     * orders of the iteratees to sort by. If `orders` is unspecified, all values
		     * are sorted in ascending order. Otherwise, specify an order of "desc" for
		     * descending or "asc" for ascending sort order of corresponding values.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Collection
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
		     *  The iteratees to sort by.
		     * @param {string[]} [orders] The sort orders of `iteratees`.
		     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
		     * @returns {Array} Returns the new sorted array.
		     * @example
		     *
		     * var users = [
		     *   { 'user': 'fred',   'age': 48 },
		     *   { 'user': 'barney', 'age': 34 },
		     *   { 'user': 'fred',   'age': 40 },
		     *   { 'user': 'barney', 'age': 36 }
		     * ];
		     *
		     * // Sort by `user` in ascending order and by `age` in descending order.
		     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
		     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
		     */
		    function orderBy(collection, iteratees, orders, guard) {
		      if (collection == null) {
		        return [];
		      }
		      if (!isArray(iteratees)) {
		        iteratees = iteratees == null ? [] : [iteratees];
		      }
		      orders = guard ? undefined : orders;
		      if (!isArray(orders)) {
		        orders = orders == null ? [] : [orders];
		      }
		      return baseOrderBy(collection, iteratees, orders);
		    }
		
		    /**
		     * Creates an array of elements split into two groups, the first of which
		     * contains elements `predicate` returns truthy for, the second of which
		     * contains elements `predicate` returns falsey for. The predicate is
		     * invoked with one argument: (value).
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Collection
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function} [predicate=_.identity] The function invoked per iteration.
		     * @returns {Array} Returns the array of grouped elements.
		     * @example
		     *
		     * var users = [
		     *   { 'user': 'barney',  'age': 36, 'active': false },
		     *   { 'user': 'fred',    'age': 40, 'active': true },
		     *   { 'user': 'pebbles', 'age': 1,  'active': false }
		     * ];
		     *
		     * _.partition(users, function(o) { return o.active; });
		     * // => objects for [['fred'], ['barney', 'pebbles']]
		     *
		     * // The `_.matches` iteratee shorthand.
		     * _.partition(users, { 'age': 1, 'active': false });
		     * // => objects for [['pebbles'], ['barney', 'fred']]
		     *
		     * // The `_.matchesProperty` iteratee shorthand.
		     * _.partition(users, ['active', false]);
		     * // => objects for [['barney', 'pebbles'], ['fred']]
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.partition(users, 'active');
		     * // => objects for [['fred'], ['barney', 'pebbles']]
		     */
		    var partition = createAggregator(function(result, value, key) {
		      result[key ? 0 : 1].push(value);
		    }, function() { return [[], []]; });
		
		    /**
		     * Reduces `collection` to a value which is the accumulated result of running
		     * each element in `collection` thru `iteratee`, where each successive
		     * invocation is supplied the return value of the previous. If `accumulator`
		     * is not given, the first element of `collection` is used as the initial
		     * value. The iteratee is invoked with four arguments:
		     * (accumulator, value, index|key, collection).
		     *
		     * Many lodash methods are guarded to work as iteratees for methods like
		     * `_.reduce`, `_.reduceRight`, and `_.transform`.
		     *
		     * The guarded methods are:
		     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
		     * and `sortBy`
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Collection
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		     * @param {*} [accumulator] The initial value.
		     * @returns {*} Returns the accumulated value.
		     * @see _.reduceRight
		     * @example
		     *
		     * _.reduce([1, 2], function(sum, n) {
		     *   return sum + n;
		     * }, 0);
		     * // => 3
		     *
		     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
		     *   (result[value] || (result[value] = [])).push(key);
		     *   return result;
		     * }, {});
		     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
		     */
		    function reduce(collection, iteratee, accumulator) {
		      var func = isArray(collection) ? arrayReduce : baseReduce,
		          initAccum = arguments.length < 3;
		
		      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
		    }
		
		    /**
		     * This method is like `_.reduce` except that it iterates over elements of
		     * `collection` from right to left.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Collection
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		     * @param {*} [accumulator] The initial value.
		     * @returns {*} Returns the accumulated value.
		     * @see _.reduce
		     * @example
		     *
		     * var array = [[0, 1], [2, 3], [4, 5]];
		     *
		     * _.reduceRight(array, function(flattened, other) {
		     *   return flattened.concat(other);
		     * }, []);
		     * // => [4, 5, 2, 3, 0, 1]
		     */
		    function reduceRight(collection, iteratee, accumulator) {
		      var func = isArray(collection) ? arrayReduceRight : baseReduce,
		          initAccum = arguments.length < 3;
		
		      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
		    }
		
		    /**
		     * The opposite of `_.filter`; this method returns the elements of `collection`
		     * that `predicate` does **not** return truthy for.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Collection
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function} [predicate=_.identity] The function invoked per iteration.
		     * @returns {Array} Returns the new filtered array.
		     * @see _.filter
		     * @example
		     *
		     * var users = [
		     *   { 'user': 'barney', 'age': 36, 'active': false },
		     *   { 'user': 'fred',   'age': 40, 'active': true }
		     * ];
		     *
		     * _.reject(users, function(o) { return !o.active; });
		     * // => objects for ['fred']
		     *
		     * // The `_.matches` iteratee shorthand.
		     * _.reject(users, { 'age': 40, 'active': true });
		     * // => objects for ['barney']
		     *
		     * // The `_.matchesProperty` iteratee shorthand.
		     * _.reject(users, ['active', false]);
		     * // => objects for ['fred']
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.reject(users, 'active');
		     * // => objects for ['barney']
		     */
		    function reject(collection, predicate) {
		      var func = isArray(collection) ? arrayFilter : baseFilter;
		      return func(collection, negate(getIteratee(predicate, 3)));
		    }
		
		    /**
		     * Gets a random element from `collection`.
		     *
		     * @static
		     * @memberOf _
		     * @since 2.0.0
		     * @category Collection
		     * @param {Array|Object} collection The collection to sample.
		     * @returns {*} Returns the random element.
		     * @example
		     *
		     * _.sample([1, 2, 3, 4]);
		     * // => 2
		     */
		    function sample(collection) {
		      var func = isArray(collection) ? arraySample : baseSample;
		      return func(collection);
		    }
		
		    /**
		     * Gets `n` random elements at unique keys from `collection` up to the
		     * size of `collection`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Collection
		     * @param {Array|Object} collection The collection to sample.
		     * @param {number} [n=1] The number of elements to sample.
		     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		     * @returns {Array} Returns the random elements.
		     * @example
		     *
		     * _.sampleSize([1, 2, 3], 2);
		     * // => [3, 1]
		     *
		     * _.sampleSize([1, 2, 3], 4);
		     * // => [2, 3, 1]
		     */
		    function sampleSize(collection, n, guard) {
		      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {
		        n = 1;
		      } else {
		        n = toInteger(n);
		      }
		      var func = isArray(collection) ? arraySampleSize : baseSampleSize;
		      return func(collection, n);
		    }
		
		    /**
		     * Creates an array of shuffled values, using a version of the
		     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Collection
		     * @param {Array|Object} collection The collection to shuffle.
		     * @returns {Array} Returns the new shuffled array.
		     * @example
		     *
		     * _.shuffle([1, 2, 3, 4]);
		     * // => [4, 1, 3, 2]
		     */
		    function shuffle(collection) {
		      var func = isArray(collection) ? arrayShuffle : baseShuffle;
		      return func(collection);
		    }
		
		    /**
		     * Gets the size of `collection` by returning its length for array-like
		     * values or the number of own enumerable string keyed properties for objects.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Collection
		     * @param {Array|Object|string} collection The collection to inspect.
		     * @returns {number} Returns the collection size.
		     * @example
		     *
		     * _.size([1, 2, 3]);
		     * // => 3
		     *
		     * _.size({ 'a': 1, 'b': 2 });
		     * // => 2
		     *
		     * _.size('pebbles');
		     * // => 7
		     */
		    function size(collection) {
		      if (collection == null) {
		        return 0;
		      }
		      if (isArrayLike(collection)) {
		        return isString(collection) ? stringSize(collection) : collection.length;
		      }
		      var tag = getTag(collection);
		      if (tag == mapTag || tag == setTag) {
		        return collection.size;
		      }
		      return baseKeys(collection).length;
		    }
		
		    /**
		     * Checks if `predicate` returns truthy for **any** element of `collection`.
		     * Iteration is stopped once `predicate` returns truthy. The predicate is
		     * invoked with three arguments: (value, index|key, collection).
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Collection
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {Function} [predicate=_.identity] The function invoked per iteration.
		     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		     * @returns {boolean} Returns `true` if any element passes the predicate check,
		     *  else `false`.
		     * @example
		     *
		     * _.some([null, 0, 'yes', false], Boolean);
		     * // => true
		     *
		     * var users = [
		     *   { 'user': 'barney', 'active': true },
		     *   { 'user': 'fred',   'active': false }
		     * ];
		     *
		     * // The `_.matches` iteratee shorthand.
		     * _.some(users, { 'user': 'barney', 'active': false });
		     * // => false
		     *
		     * // The `_.matchesProperty` iteratee shorthand.
		     * _.some(users, ['active', false]);
		     * // => true
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.some(users, 'active');
		     * // => true
		     */
		    function some(collection, predicate, guard) {
		      var func = isArray(collection) ? arraySome : baseSome;
		      if (guard && isIterateeCall(collection, predicate, guard)) {
		        predicate = undefined;
		      }
		      return func(collection, getIteratee(predicate, 3));
		    }
		
		    /**
		     * Creates an array of elements, sorted in ascending order by the results of
		     * running each element in a collection thru each iteratee. This method
		     * performs a stable sort, that is, it preserves the original sort order of
		     * equal elements. The iteratees are invoked with one argument: (value).
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Collection
		     * @param {Array|Object} collection The collection to iterate over.
		     * @param {...(Function|Function[])} [iteratees=[_.identity]]
		     *  The iteratees to sort by.
		     * @returns {Array} Returns the new sorted array.
		     * @example
		     *
		     * var users = [
		     *   { 'user': 'fred',   'age': 48 },
		     *   { 'user': 'barney', 'age': 36 },
		     *   { 'user': 'fred',   'age': 40 },
		     *   { 'user': 'barney', 'age': 34 }
		     * ];
		     *
		     * _.sortBy(users, [function(o) { return o.user; }]);
		     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
		     *
		     * _.sortBy(users, ['user', 'age']);
		     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]
		     */
		    var sortBy = baseRest(function(collection, iteratees) {
		      if (collection == null) {
		        return [];
		      }
		      var length = iteratees.length;
		      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
		        iteratees = [];
		      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
		        iteratees = [iteratees[0]];
		      }
		      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
		    });
		
		    /*------------------------------------------------------------------------*/
		
		    /**
		     * Gets the timestamp of the number of milliseconds that have elapsed since
		     * the Unix epoch (1 January 1970 00:00:00 UTC).
		     *
		     * @static
		     * @memberOf _
		     * @since 2.4.0
		     * @category Date
		     * @returns {number} Returns the timestamp.
		     * @example
		     *
		     * _.defer(function(stamp) {
		     *   console.log(_.now() - stamp);
		     * }, _.now());
		     * // => Logs the number of milliseconds it took for the deferred invocation.
		     */
		    var now = ctxNow || function() {
		      return root.Date.now();
		    };
		
		    /*------------------------------------------------------------------------*/
		
		    /**
		     * The opposite of `_.before`; this method creates a function that invokes
		     * `func` once it's called `n` or more times.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Function
		     * @param {number} n The number of calls before `func` is invoked.
		     * @param {Function} func The function to restrict.
		     * @returns {Function} Returns the new restricted function.
		     * @example
		     *
		     * var saves = ['profile', 'settings'];
		     *
		     * var done = _.after(saves.length, function() {
		     *   console.log('done saving!');
		     * });
		     *
		     * _.forEach(saves, function(type) {
		     *   asyncSave({ 'type': type, 'complete': done });
		     * });
		     * // => Logs 'done saving!' after the two async saves have completed.
		     */
		    function after(n, func) {
		      if (typeof func != 'function') {
		        throw new TypeError(FUNC_ERROR_TEXT);
		      }
		      n = toInteger(n);
		      return function() {
		        if (--n < 1) {
		          return func.apply(this, arguments);
		        }
		      };
		    }
		
		    /**
		     * Creates a function that invokes `func`, with up to `n` arguments,
		     * ignoring any additional arguments.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Function
		     * @param {Function} func The function to cap arguments for.
		     * @param {number} [n=func.length] The arity cap.
		     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		     * @returns {Function} Returns the new capped function.
		     * @example
		     *
		     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
		     * // => [6, 8, 10]
		     */
		    function ary(func, n, guard) {
		      n = guard ? undefined : n;
		      n = (func && n == null) ? func.length : n;
		      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
		    }
		
		    /**
		     * Creates a function that invokes `func`, with the `this` binding and arguments
		     * of the created function, while it's called less than `n` times. Subsequent
		     * calls to the created function return the result of the last `func` invocation.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Function
		     * @param {number} n The number of calls at which `func` is no longer invoked.
		     * @param {Function} func The function to restrict.
		     * @returns {Function} Returns the new restricted function.
		     * @example
		     *
		     * jQuery(element).on('click', _.before(5, addContactToList));
		     * // => Allows adding up to 4 contacts to the list.
		     */
		    function before(n, func) {
		      var result;
		      if (typeof func != 'function') {
		        throw new TypeError(FUNC_ERROR_TEXT);
		      }
		      n = toInteger(n);
		      return function() {
		        if (--n > 0) {
		          result = func.apply(this, arguments);
		        }
		        if (n <= 1) {
		          func = undefined;
		        }
		        return result;
		      };
		    }
		
		    /**
		     * Creates a function that invokes `func` with the `this` binding of `thisArg`
		     * and `partials` prepended to the arguments it receives.
		     *
		     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
		     * may be used as a placeholder for partially applied arguments.
		     *
		     * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
		     * property of bound functions.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Function
		     * @param {Function} func The function to bind.
		     * @param {*} thisArg The `this` binding of `func`.
		     * @param {...*} [partials] The arguments to be partially applied.
		     * @returns {Function} Returns the new bound function.
		     * @example
		     *
		     * function greet(greeting, punctuation) {
		     *   return greeting + ' ' + this.user + punctuation;
		     * }
		     *
		     * var object = { 'user': 'fred' };
		     *
		     * var bound = _.bind(greet, object, 'hi');
		     * bound('!');
		     * // => 'hi fred!'
		     *
		     * // Bound with placeholders.
		     * var bound = _.bind(greet, object, _, '!');
		     * bound('hi');
		     * // => 'hi fred!'
		     */
		    var bind = baseRest(function(func, thisArg, partials) {
		      var bitmask = WRAP_BIND_FLAG;
		      if (partials.length) {
		        var holders = replaceHolders(partials, getHolder(bind));
		        bitmask |= WRAP_PARTIAL_FLAG;
		      }
		      return createWrap(func, bitmask, thisArg, partials, holders);
		    });
		
		    /**
		     * Creates a function that invokes the method at `object[key]` with `partials`
		     * prepended to the arguments it receives.
		     *
		     * This method differs from `_.bind` by allowing bound functions to reference
		     * methods that may be redefined or don't yet exist. See
		     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
		     * for more details.
		     *
		     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
		     * builds, may be used as a placeholder for partially applied arguments.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.10.0
		     * @category Function
		     * @param {Object} object The object to invoke the method on.
		     * @param {string} key The key of the method.
		     * @param {...*} [partials] The arguments to be partially applied.
		     * @returns {Function} Returns the new bound function.
		     * @example
		     *
		     * var object = {
		     *   'user': 'fred',
		     *   'greet': function(greeting, punctuation) {
		     *     return greeting + ' ' + this.user + punctuation;
		     *   }
		     * };
		     *
		     * var bound = _.bindKey(object, 'greet', 'hi');
		     * bound('!');
		     * // => 'hi fred!'
		     *
		     * object.greet = function(greeting, punctuation) {
		     *   return greeting + 'ya ' + this.user + punctuation;
		     * };
		     *
		     * bound('!');
		     * // => 'hiya fred!'
		     *
		     * // Bound with placeholders.
		     * var bound = _.bindKey(object, 'greet', _, '!');
		     * bound('hi');
		     * // => 'hiya fred!'
		     */
		    var bindKey = baseRest(function(object, key, partials) {
		      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
		      if (partials.length) {
		        var holders = replaceHolders(partials, getHolder(bindKey));
		        bitmask |= WRAP_PARTIAL_FLAG;
		      }
		      return createWrap(key, bitmask, object, partials, holders);
		    });
		
		    /**
		     * Creates a function that accepts arguments of `func` and either invokes
		     * `func` returning its result, if at least `arity` number of arguments have
		     * been provided, or returns a function that accepts the remaining `func`
		     * arguments, and so on. The arity of `func` may be specified if `func.length`
		     * is not sufficient.
		     *
		     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
		     * may be used as a placeholder for provided arguments.
		     *
		     * **Note:** This method doesn't set the "length" property of curried functions.
		     *
		     * @static
		     * @memberOf _
		     * @since 2.0.0
		     * @category Function
		     * @param {Function} func The function to curry.
		     * @param {number} [arity=func.length] The arity of `func`.
		     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		     * @returns {Function} Returns the new curried function.
		     * @example
		     *
		     * var abc = function(a, b, c) {
		     *   return [a, b, c];
		     * };
		     *
		     * var curried = _.curry(abc);
		     *
		     * curried(1)(2)(3);
		     * // => [1, 2, 3]
		     *
		     * curried(1, 2)(3);
		     * // => [1, 2, 3]
		     *
		     * curried(1, 2, 3);
		     * // => [1, 2, 3]
		     *
		     * // Curried with placeholders.
		     * curried(1)(_, 3)(2);
		     * // => [1, 2, 3]
		     */
		    function curry(func, arity, guard) {
		      arity = guard ? undefined : arity;
		      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
		      result.placeholder = curry.placeholder;
		      return result;
		    }
		
		    /**
		     * This method is like `_.curry` except that arguments are applied to `func`
		     * in the manner of `_.partialRight` instead of `_.partial`.
		     *
		     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
		     * builds, may be used as a placeholder for provided arguments.
		     *
		     * **Note:** This method doesn't set the "length" property of curried functions.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Function
		     * @param {Function} func The function to curry.
		     * @param {number} [arity=func.length] The arity of `func`.
		     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		     * @returns {Function} Returns the new curried function.
		     * @example
		     *
		     * var abc = function(a, b, c) {
		     *   return [a, b, c];
		     * };
		     *
		     * var curried = _.curryRight(abc);
		     *
		     * curried(3)(2)(1);
		     * // => [1, 2, 3]
		     *
		     * curried(2, 3)(1);
		     * // => [1, 2, 3]
		     *
		     * curried(1, 2, 3);
		     * // => [1, 2, 3]
		     *
		     * // Curried with placeholders.
		     * curried(3)(1, _)(2);
		     * // => [1, 2, 3]
		     */
		    function curryRight(func, arity, guard) {
		      arity = guard ? undefined : arity;
		      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
		      result.placeholder = curryRight.placeholder;
		      return result;
		    }
		
		    /**
		     * Creates a debounced function that delays invoking `func` until after `wait`
		     * milliseconds have elapsed since the last time the debounced function was
		     * invoked. The debounced function comes with a `cancel` method to cancel
		     * delayed `func` invocations and a `flush` method to immediately invoke them.
		     * Provide `options` to indicate whether `func` should be invoked on the
		     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
		     * with the last arguments provided to the debounced function. Subsequent
		     * calls to the debounced function return the result of the last `func`
		     * invocation.
		     *
		     * **Note:** If `leading` and `trailing` options are `true`, `func` is
		     * invoked on the trailing edge of the timeout only if the debounced function
		     * is invoked more than once during the `wait` timeout.
		     *
		     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
		     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
		     *
		     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
		     * for details over the differences between `_.debounce` and `_.throttle`.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Function
		     * @param {Function} func The function to debounce.
		     * @param {number} [wait=0] The number of milliseconds to delay.
		     * @param {Object} [options={}] The options object.
		     * @param {boolean} [options.leading=false]
		     *  Specify invoking on the leading edge of the timeout.
		     * @param {number} [options.maxWait]
		     *  The maximum time `func` is allowed to be delayed before it's invoked.
		     * @param {boolean} [options.trailing=true]
		     *  Specify invoking on the trailing edge of the timeout.
		     * @returns {Function} Returns the new debounced function.
		     * @example
		     *
		     * // Avoid costly calculations while the window size is in flux.
		     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
		     *
		     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
		     * jQuery(element).on('click', _.debounce(sendMail, 300, {
		     *   'leading': true,
		     *   'trailing': false
		     * }));
		     *
		     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
		     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
		     * var source = new EventSource('/stream');
		     * jQuery(source).on('message', debounced);
		     *
		     * // Cancel the trailing debounced invocation.
		     * jQuery(window).on('popstate', debounced.cancel);
		     */
		    function debounce(func, wait, options) {
		      var lastArgs,
		          lastThis,
		          maxWait,
		          result,
		          timerId,
		          lastCallTime,
		          lastInvokeTime = 0,
		          leading = false,
		          maxing = false,
		          trailing = true;
		
		      if (typeof func != 'function') {
		        throw new TypeError(FUNC_ERROR_TEXT);
		      }
		      wait = toNumber(wait) || 0;
		      if (isObject(options)) {
		        leading = !!options.leading;
		        maxing = 'maxWait' in options;
		        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
		        trailing = 'trailing' in options ? !!options.trailing : trailing;
		      }
		
		      function invokeFunc(time) {
		        var args = lastArgs,
		            thisArg = lastThis;
		
		        lastArgs = lastThis = undefined;
		        lastInvokeTime = time;
		        result = func.apply(thisArg, args);
		        return result;
		      }
		
		      function leadingEdge(time) {
		        // Reset any `maxWait` timer.
		        lastInvokeTime = time;
		        // Start the timer for the trailing edge.
		        timerId = setTimeout(timerExpired, wait);
		        // Invoke the leading edge.
		        return leading ? invokeFunc(time) : result;
		      }
		
		      function remainingWait(time) {
		        var timeSinceLastCall = time - lastCallTime,
		            timeSinceLastInvoke = time - lastInvokeTime,
		            result = wait - timeSinceLastCall;
		
		        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
		      }
		
		      function shouldInvoke(time) {
		        var timeSinceLastCall = time - lastCallTime,
		            timeSinceLastInvoke = time - lastInvokeTime;
		
		        // Either this is the first call, activity has stopped and we're at the
		        // trailing edge, the system time has gone backwards and we're treating
		        // it as the trailing edge, or we've hit the `maxWait` limit.
		        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
		          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
		      }
		
		      function timerExpired() {
		        var time = now();
		        if (shouldInvoke(time)) {
		          return trailingEdge(time);
		        }
		        // Restart the timer.
		        timerId = setTimeout(timerExpired, remainingWait(time));
		      }
		
		      function trailingEdge(time) {
		        timerId = undefined;
		
		        // Only invoke if we have `lastArgs` which means `func` has been
		        // debounced at least once.
		        if (trailing && lastArgs) {
		          return invokeFunc(time);
		        }
		        lastArgs = lastThis = undefined;
		        return result;
		      }
		
		      function cancel() {
		        if (timerId !== undefined) {
		          clearTimeout(timerId);
		        }
		        lastInvokeTime = 0;
		        lastArgs = lastCallTime = lastThis = timerId = undefined;
		      }
		
		      function flush() {
		        return timerId === undefined ? result : trailingEdge(now());
		      }
		
		      function debounced() {
		        var time = now(),
		            isInvoking = shouldInvoke(time);
		
		        lastArgs = arguments;
		        lastThis = this;
		        lastCallTime = time;
		
		        if (isInvoking) {
		          if (timerId === undefined) {
		            return leadingEdge(lastCallTime);
		          }
		          if (maxing) {
		            // Handle invocations in a tight loop.
		            timerId = setTimeout(timerExpired, wait);
		            return invokeFunc(lastCallTime);
		          }
		        }
		        if (timerId === undefined) {
		          timerId = setTimeout(timerExpired, wait);
		        }
		        return result;
		      }
		      debounced.cancel = cancel;
		      debounced.flush = flush;
		      return debounced;
		    }
		
		    /**
		     * Defers invoking the `func` until the current call stack has cleared. Any
		     * additional arguments are provided to `func` when it's invoked.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Function
		     * @param {Function} func The function to defer.
		     * @param {...*} [args] The arguments to invoke `func` with.
		     * @returns {number} Returns the timer id.
		     * @example
		     *
		     * _.defer(function(text) {
		     *   console.log(text);
		     * }, 'deferred');
		     * // => Logs 'deferred' after one millisecond.
		     */
		    var defer = baseRest(function(func, args) {
		      return baseDelay(func, 1, args);
		    });
		
		    /**
		     * Invokes `func` after `wait` milliseconds. Any additional arguments are
		     * provided to `func` when it's invoked.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Function
		     * @param {Function} func The function to delay.
		     * @param {number} wait The number of milliseconds to delay invocation.
		     * @param {...*} [args] The arguments to invoke `func` with.
		     * @returns {number} Returns the timer id.
		     * @example
		     *
		     * _.delay(function(text) {
		     *   console.log(text);
		     * }, 1000, 'later');
		     * // => Logs 'later' after one second.
		     */
		    var delay = baseRest(function(func, wait, args) {
		      return baseDelay(func, toNumber(wait) || 0, args);
		    });
		
		    /**
		     * Creates a function that invokes `func` with arguments reversed.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Function
		     * @param {Function} func The function to flip arguments for.
		     * @returns {Function} Returns the new flipped function.
		     * @example
		     *
		     * var flipped = _.flip(function() {
		     *   return _.toArray(arguments);
		     * });
		     *
		     * flipped('a', 'b', 'c', 'd');
		     * // => ['d', 'c', 'b', 'a']
		     */
		    function flip(func) {
		      return createWrap(func, WRAP_FLIP_FLAG);
		    }
		
		    /**
		     * Creates a function that memoizes the result of `func`. If `resolver` is
		     * provided, it determines the cache key for storing the result based on the
		     * arguments provided to the memoized function. By default, the first argument
		     * provided to the memoized function is used as the map cache key. The `func`
		     * is invoked with the `this` binding of the memoized function.
		     *
		     * **Note:** The cache is exposed as the `cache` property on the memoized
		     * function. Its creation may be customized by replacing the `_.memoize.Cache`
		     * constructor with one whose instances implement the
		     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
		     * method interface of `clear`, `delete`, `get`, `has`, and `set`.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Function
		     * @param {Function} func The function to have its output memoized.
		     * @param {Function} [resolver] The function to resolve the cache key.
		     * @returns {Function} Returns the new memoized function.
		     * @example
		     *
		     * var object = { 'a': 1, 'b': 2 };
		     * var other = { 'c': 3, 'd': 4 };
		     *
		     * var values = _.memoize(_.values);
		     * values(object);
		     * // => [1, 2]
		     *
		     * values(other);
		     * // => [3, 4]
		     *
		     * object.a = 2;
		     * values(object);
		     * // => [1, 2]
		     *
		     * // Modify the result cache.
		     * values.cache.set(object, ['a', 'b']);
		     * values(object);
		     * // => ['a', 'b']
		     *
		     * // Replace `_.memoize.Cache`.
		     * _.memoize.Cache = WeakMap;
		     */
		    function memoize(func, resolver) {
		      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
		        throw new TypeError(FUNC_ERROR_TEXT);
		      }
		      var memoized = function() {
		        var args = arguments,
		            key = resolver ? resolver.apply(this, args) : args[0],
		            cache = memoized.cache;
		
		        if (cache.has(key)) {
		          return cache.get(key);
		        }
		        var result = func.apply(this, args);
		        memoized.cache = cache.set(key, result) || cache;
		        return result;
		      };
		      memoized.cache = new (memoize.Cache || MapCache);
		      return memoized;
		    }
		
		    // Expose `MapCache`.
		    memoize.Cache = MapCache;
		
		    /**
		     * Creates a function that negates the result of the predicate `func`. The
		     * `func` predicate is invoked with the `this` binding and arguments of the
		     * created function.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Function
		     * @param {Function} predicate The predicate to negate.
		     * @returns {Function} Returns the new negated function.
		     * @example
		     *
		     * function isEven(n) {
		     *   return n % 2 == 0;
		     * }
		     *
		     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
		     * // => [1, 3, 5]
		     */
		    function negate(predicate) {
		      if (typeof predicate != 'function') {
		        throw new TypeError(FUNC_ERROR_TEXT);
		      }
		      return function() {
		        var args = arguments;
		        switch (args.length) {
		          case 0: return !predicate.call(this);
		          case 1: return !predicate.call(this, args[0]);
		          case 2: return !predicate.call(this, args[0], args[1]);
		          case 3: return !predicate.call(this, args[0], args[1], args[2]);
		        }
		        return !predicate.apply(this, args);
		      };
		    }
		
		    /**
		     * Creates a function that is restricted to invoking `func` once. Repeat calls
		     * to the function return the value of the first invocation. The `func` is
		     * invoked with the `this` binding and arguments of the created function.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Function
		     * @param {Function} func The function to restrict.
		     * @returns {Function} Returns the new restricted function.
		     * @example
		     *
		     * var initialize = _.once(createApplication);
		     * initialize();
		     * initialize();
		     * // => `createApplication` is invoked once
		     */
		    function once(func) {
		      return before(2, func);
		    }
		
		    /**
		     * Creates a function that invokes `func` with its arguments transformed.
		     *
		     * @static
		     * @since 4.0.0
		     * @memberOf _
		     * @category Function
		     * @param {Function} func The function to wrap.
		     * @param {...(Function|Function[])} [transforms=[_.identity]]
		     *  The argument transforms.
		     * @returns {Function} Returns the new function.
		     * @example
		     *
		     * function doubled(n) {
		     *   return n * 2;
		     * }
		     *
		     * function square(n) {
		     *   return n * n;
		     * }
		     *
		     * var func = _.overArgs(function(x, y) {
		     *   return [x, y];
		     * }, [square, doubled]);
		     *
		     * func(9, 3);
		     * // => [81, 6]
		     *
		     * func(10, 5);
		     * // => [100, 10]
		     */
		    var overArgs = castRest(function(func, transforms) {
		      transforms = (transforms.length == 1 && isArray(transforms[0]))
		        ? arrayMap(transforms[0], baseUnary(getIteratee()))
		        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));
		
		      var funcsLength = transforms.length;
		      return baseRest(function(args) {
		        var index = -1,
		            length = nativeMin(args.length, funcsLength);
		
		        while (++index < length) {
		          args[index] = transforms[index].call(this, args[index]);
		        }
		        return apply(func, this, args);
		      });
		    });
		
		    /**
		     * Creates a function that invokes `func` with `partials` prepended to the
		     * arguments it receives. This method is like `_.bind` except it does **not**
		     * alter the `this` binding.
		     *
		     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
		     * builds, may be used as a placeholder for partially applied arguments.
		     *
		     * **Note:** This method doesn't set the "length" property of partially
		     * applied functions.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.2.0
		     * @category Function
		     * @param {Function} func The function to partially apply arguments to.
		     * @param {...*} [partials] The arguments to be partially applied.
		     * @returns {Function} Returns the new partially applied function.
		     * @example
		     *
		     * function greet(greeting, name) {
		     *   return greeting + ' ' + name;
		     * }
		     *
		     * var sayHelloTo = _.partial(greet, 'hello');
		     * sayHelloTo('fred');
		     * // => 'hello fred'
		     *
		     * // Partially applied with placeholders.
		     * var greetFred = _.partial(greet, _, 'fred');
		     * greetFred('hi');
		     * // => 'hi fred'
		     */
		    var partial = baseRest(function(func, partials) {
		      var holders = replaceHolders(partials, getHolder(partial));
		      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
		    });
		
		    /**
		     * This method is like `_.partial` except that partially applied arguments
		     * are appended to the arguments it receives.
		     *
		     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
		     * builds, may be used as a placeholder for partially applied arguments.
		     *
		     * **Note:** This method doesn't set the "length" property of partially
		     * applied functions.
		     *
		     * @static
		     * @memberOf _
		     * @since 1.0.0
		     * @category Function
		     * @param {Function} func The function to partially apply arguments to.
		     * @param {...*} [partials] The arguments to be partially applied.
		     * @returns {Function} Returns the new partially applied function.
		     * @example
		     *
		     * function greet(greeting, name) {
		     *   return greeting + ' ' + name;
		     * }
		     *
		     * var greetFred = _.partialRight(greet, 'fred');
		     * greetFred('hi');
		     * // => 'hi fred'
		     *
		     * // Partially applied with placeholders.
		     * var sayHelloTo = _.partialRight(greet, 'hello', _);
		     * sayHelloTo('fred');
		     * // => 'hello fred'
		     */
		    var partialRight = baseRest(function(func, partials) {
		      var holders = replaceHolders(partials, getHolder(partialRight));
		      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
		    });
		
		    /**
		     * Creates a function that invokes `func` with arguments arranged according
		     * to the specified `indexes` where the argument value at the first index is
		     * provided as the first argument, the argument value at the second index is
		     * provided as the second argument, and so on.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Function
		     * @param {Function} func The function to rearrange arguments for.
		     * @param {...(number|number[])} indexes The arranged argument indexes.
		     * @returns {Function} Returns the new function.
		     * @example
		     *
		     * var rearged = _.rearg(function(a, b, c) {
		     *   return [a, b, c];
		     * }, [2, 0, 1]);
		     *
		     * rearged('b', 'c', 'a')
		     * // => ['a', 'b', 'c']
		     */
		    var rearg = flatRest(function(func, indexes) {
		      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
		    });
		
		    /**
		     * Creates a function that invokes `func` with the `this` binding of the
		     * created function and arguments from `start` and beyond provided as
		     * an array.
		     *
		     * **Note:** This method is based on the
		     * [rest parameter](https://mdn.io/rest_parameters).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Function
		     * @param {Function} func The function to apply a rest parameter to.
		     * @param {number} [start=func.length-1] The start position of the rest parameter.
		     * @returns {Function} Returns the new function.
		     * @example
		     *
		     * var say = _.rest(function(what, names) {
		     *   return what + ' ' + _.initial(names).join(', ') +
		     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
		     * });
		     *
		     * say('hello', 'fred', 'barney', 'pebbles');
		     * // => 'hello fred, barney, & pebbles'
		     */
		    function rest(func, start) {
		      if (typeof func != 'function') {
		        throw new TypeError(FUNC_ERROR_TEXT);
		      }
		      start = start === undefined ? start : toInteger(start);
		      return baseRest(func, start);
		    }
		
		    /**
		     * Creates a function that invokes `func` with the `this` binding of the
		     * create function and an array of arguments much like
		     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
		     *
		     * **Note:** This method is based on the
		     * [spread operator](https://mdn.io/spread_operator).
		     *
		     * @static
		     * @memberOf _
		     * @since 3.2.0
		     * @category Function
		     * @param {Function} func The function to spread arguments over.
		     * @param {number} [start=0] The start position of the spread.
		     * @returns {Function} Returns the new function.
		     * @example
		     *
		     * var say = _.spread(function(who, what) {
		     *   return who + ' says ' + what;
		     * });
		     *
		     * say(['fred', 'hello']);
		     * // => 'fred says hello'
		     *
		     * var numbers = Promise.all([
		     *   Promise.resolve(40),
		     *   Promise.resolve(36)
		     * ]);
		     *
		     * numbers.then(_.spread(function(x, y) {
		     *   return x + y;
		     * }));
		     * // => a Promise of 76
		     */
		    function spread(func, start) {
		      if (typeof func != 'function') {
		        throw new TypeError(FUNC_ERROR_TEXT);
		      }
		      start = start === undefined ? 0 : nativeMax(toInteger(start), 0);
		      return baseRest(function(args) {
		        var array = args[start],
		            otherArgs = castSlice(args, 0, start);
		
		        if (array) {
		          arrayPush(otherArgs, array);
		        }
		        return apply(func, this, otherArgs);
		      });
		    }
		
		    /**
		     * Creates a throttled function that only invokes `func` at most once per
		     * every `wait` milliseconds. The throttled function comes with a `cancel`
		     * method to cancel delayed `func` invocations and a `flush` method to
		     * immediately invoke them. Provide `options` to indicate whether `func`
		     * should be invoked on the leading and/or trailing edge of the `wait`
		     * timeout. The `func` is invoked with the last arguments provided to the
		     * throttled function. Subsequent calls to the throttled function return the
		     * result of the last `func` invocation.
		     *
		     * **Note:** If `leading` and `trailing` options are `true`, `func` is
		     * invoked on the trailing edge of the timeout only if the throttled function
		     * is invoked more than once during the `wait` timeout.
		     *
		     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
		     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
		     *
		     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
		     * for details over the differences between `_.throttle` and `_.debounce`.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Function
		     * @param {Function} func The function to throttle.
		     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
		     * @param {Object} [options={}] The options object.
		     * @param {boolean} [options.leading=true]
		     *  Specify invoking on the leading edge of the timeout.
		     * @param {boolean} [options.trailing=true]
		     *  Specify invoking on the trailing edge of the timeout.
		     * @returns {Function} Returns the new throttled function.
		     * @example
		     *
		     * // Avoid excessively updating the position while scrolling.
		     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
		     *
		     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
		     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
		     * jQuery(element).on('click', throttled);
		     *
		     * // Cancel the trailing throttled invocation.
		     * jQuery(window).on('popstate', throttled.cancel);
		     */
		    function throttle(func, wait, options) {
		      var leading = true,
		          trailing = true;
		
		      if (typeof func != 'function') {
		        throw new TypeError(FUNC_ERROR_TEXT);
		      }
		      if (isObject(options)) {
		        leading = 'leading' in options ? !!options.leading : leading;
		        trailing = 'trailing' in options ? !!options.trailing : trailing;
		      }
		      return debounce(func, wait, {
		        'leading': leading,
		        'maxWait': wait,
		        'trailing': trailing
		      });
		    }
		
		    /**
		     * Creates a function that accepts up to one argument, ignoring any
		     * additional arguments.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Function
		     * @param {Function} func The function to cap arguments for.
		     * @returns {Function} Returns the new capped function.
		     * @example
		     *
		     * _.map(['6', '8', '10'], _.unary(parseInt));
		     * // => [6, 8, 10]
		     */
		    function unary(func) {
		      return ary(func, 1);
		    }
		
		    /**
		     * Creates a function that provides `value` to `wrapper` as its first
		     * argument. Any additional arguments provided to the function are appended
		     * to those provided to the `wrapper`. The wrapper is invoked with the `this`
		     * binding of the created function.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Function
		     * @param {*} value The value to wrap.
		     * @param {Function} [wrapper=identity] The wrapper function.
		     * @returns {Function} Returns the new function.
		     * @example
		     *
		     * var p = _.wrap(_.escape, function(func, text) {
		     *   return '<p>' + func(text) + '</p>';
		     * });
		     *
		     * p('fred, barney, & pebbles');
		     * // => '<p>fred, barney, &amp; pebbles</p>'
		     */
		    function wrap(value, wrapper) {
		      return partial(castFunction(wrapper), value);
		    }
		
		    /*------------------------------------------------------------------------*/
		
		    /**
		     * Casts `value` as an array if it's not one.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.4.0
		     * @category Lang
		     * @param {*} value The value to inspect.
		     * @returns {Array} Returns the cast array.
		     * @example
		     *
		     * _.castArray(1);
		     * // => [1]
		     *
		     * _.castArray({ 'a': 1 });
		     * // => [{ 'a': 1 }]
		     *
		     * _.castArray('abc');
		     * // => ['abc']
		     *
		     * _.castArray(null);
		     * // => [null]
		     *
		     * _.castArray(undefined);
		     * // => [undefined]
		     *
		     * _.castArray();
		     * // => []
		     *
		     * var array = [1, 2, 3];
		     * console.log(_.castArray(array) === array);
		     * // => true
		     */
		    function castArray() {
		      if (!arguments.length) {
		        return [];
		      }
		      var value = arguments[0];
		      return isArray(value) ? value : [value];
		    }
		
		    /**
		     * Creates a shallow clone of `value`.
		     *
		     * **Note:** This method is loosely based on the
		     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
		     * and supports cloning arrays, array buffers, booleans, date objects, maps,
		     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
		     * arrays. The own enumerable properties of `arguments` objects are cloned
		     * as plain objects. An empty object is returned for uncloneable values such
		     * as error objects, functions, DOM nodes, and WeakMaps.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Lang
		     * @param {*} value The value to clone.
		     * @returns {*} Returns the cloned value.
		     * @see _.cloneDeep
		     * @example
		     *
		     * var objects = [{ 'a': 1 }, { 'b': 2 }];
		     *
		     * var shallow = _.clone(objects);
		     * console.log(shallow[0] === objects[0]);
		     * // => true
		     */
		    function clone(value) {
		      return baseClone(value, CLONE_SYMBOLS_FLAG);
		    }
		
		    /**
		     * This method is like `_.clone` except that it accepts `customizer` which
		     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
		     * cloning is handled by the method instead. The `customizer` is invoked with
		     * up to four arguments; (value [, index|key, object, stack]).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Lang
		     * @param {*} value The value to clone.
		     * @param {Function} [customizer] The function to customize cloning.
		     * @returns {*} Returns the cloned value.
		     * @see _.cloneDeepWith
		     * @example
		     *
		     * function customizer(value) {
		     *   if (_.isElement(value)) {
		     *     return value.cloneNode(false);
		     *   }
		     * }
		     *
		     * var el = _.cloneWith(document.body, customizer);
		     *
		     * console.log(el === document.body);
		     * // => false
		     * console.log(el.nodeName);
		     * // => 'BODY'
		     * console.log(el.childNodes.length);
		     * // => 0
		     */
		    function cloneWith(value, customizer) {
		      customizer = typeof customizer == 'function' ? customizer : undefined;
		      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
		    }
		
		    /**
		     * This method is like `_.clone` except that it recursively clones `value`.
		     *
		     * @static
		     * @memberOf _
		     * @since 1.0.0
		     * @category Lang
		     * @param {*} value The value to recursively clone.
		     * @returns {*} Returns the deep cloned value.
		     * @see _.clone
		     * @example
		     *
		     * var objects = [{ 'a': 1 }, { 'b': 2 }];
		     *
		     * var deep = _.cloneDeep(objects);
		     * console.log(deep[0] === objects[0]);
		     * // => false
		     */
		    function cloneDeep(value) {
		      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
		    }
		
		    /**
		     * This method is like `_.cloneWith` except that it recursively clones `value`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Lang
		     * @param {*} value The value to recursively clone.
		     * @param {Function} [customizer] The function to customize cloning.
		     * @returns {*} Returns the deep cloned value.
		     * @see _.cloneWith
		     * @example
		     *
		     * function customizer(value) {
		     *   if (_.isElement(value)) {
		     *     return value.cloneNode(true);
		     *   }
		     * }
		     *
		     * var el = _.cloneDeepWith(document.body, customizer);
		     *
		     * console.log(el === document.body);
		     * // => false
		     * console.log(el.nodeName);
		     * // => 'BODY'
		     * console.log(el.childNodes.length);
		     * // => 20
		     */
		    function cloneDeepWith(value, customizer) {
		      customizer = typeof customizer == 'function' ? customizer : undefined;
		      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
		    }
		
		    /**
		     * Checks if `object` conforms to `source` by invoking the predicate
		     * properties of `source` with the corresponding property values of `object`.
		     *
		     * **Note:** This method is equivalent to `_.conforms` when `source` is
		     * partially applied.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.14.0
		     * @category Lang
		     * @param {Object} object The object to inspect.
		     * @param {Object} source The object of property predicates to conform to.
		     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
		     * @example
		     *
		     * var object = { 'a': 1, 'b': 2 };
		     *
		     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
		     * // => true
		     *
		     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
		     * // => false
		     */
		    function conformsTo(object, source) {
		      return source == null || baseConformsTo(object, source, keys(source));
		    }
		
		    /**
		     * Performs a
		     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
		     * comparison between two values to determine if they are equivalent.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Lang
		     * @param {*} value The value to compare.
		     * @param {*} other The other value to compare.
		     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
		     * @example
		     *
		     * var object = { 'a': 1 };
		     * var other = { 'a': 1 };
		     *
		     * _.eq(object, object);
		     * // => true
		     *
		     * _.eq(object, other);
		     * // => false
		     *
		     * _.eq('a', 'a');
		     * // => true
		     *
		     * _.eq('a', Object('a'));
		     * // => false
		     *
		     * _.eq(NaN, NaN);
		     * // => true
		     */
		    function eq(value, other) {
		      return value === other || (value !== value && other !== other);
		    }
		
		    /**
		     * Checks if `value` is greater than `other`.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.9.0
		     * @category Lang
		     * @param {*} value The value to compare.
		     * @param {*} other The other value to compare.
		     * @returns {boolean} Returns `true` if `value` is greater than `other`,
		     *  else `false`.
		     * @see _.lt
		     * @example
		     *
		     * _.gt(3, 1);
		     * // => true
		     *
		     * _.gt(3, 3);
		     * // => false
		     *
		     * _.gt(1, 3);
		     * // => false
		     */
		    var gt = createRelationalOperation(baseGt);
		
		    /**
		     * Checks if `value` is greater than or equal to `other`.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.9.0
		     * @category Lang
		     * @param {*} value The value to compare.
		     * @param {*} other The other value to compare.
		     * @returns {boolean} Returns `true` if `value` is greater than or equal to
		     *  `other`, else `false`.
		     * @see _.lte
		     * @example
		     *
		     * _.gte(3, 1);
		     * // => true
		     *
		     * _.gte(3, 3);
		     * // => true
		     *
		     * _.gte(1, 3);
		     * // => false
		     */
		    var gte = createRelationalOperation(function(value, other) {
		      return value >= other;
		    });
		
		    /**
		     * Checks if `value` is likely an `arguments` object.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
		     *  else `false`.
		     * @example
		     *
		     * _.isArguments(function() { return arguments; }());
		     * // => true
		     *
		     * _.isArguments([1, 2, 3]);
		     * // => false
		     */
		    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
		      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
		        !propertyIsEnumerable.call(value, 'callee');
		    };
		
		    /**
		     * Checks if `value` is classified as an `Array` object.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is an array, else `false`.
		     * @example
		     *
		     * _.isArray([1, 2, 3]);
		     * // => true
		     *
		     * _.isArray(document.body.children);
		     * // => false
		     *
		     * _.isArray('abc');
		     * // => false
		     *
		     * _.isArray(_.noop);
		     * // => false
		     */
		    var isArray = Array.isArray;
		
		    /**
		     * Checks if `value` is classified as an `ArrayBuffer` object.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.3.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
		     * @example
		     *
		     * _.isArrayBuffer(new ArrayBuffer(2));
		     * // => true
		     *
		     * _.isArrayBuffer(new Array(2));
		     * // => false
		     */
		    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;
		
		    /**
		     * Checks if `value` is array-like. A value is considered array-like if it's
		     * not a function and has a `value.length` that's an integer greater than or
		     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
		     * @example
		     *
		     * _.isArrayLike([1, 2, 3]);
		     * // => true
		     *
		     * _.isArrayLike(document.body.children);
		     * // => true
		     *
		     * _.isArrayLike('abc');
		     * // => true
		     *
		     * _.isArrayLike(_.noop);
		     * // => false
		     */
		    function isArrayLike(value) {
		      return value != null && isLength(value.length) && !isFunction(value);
		    }
		
		    /**
		     * This method is like `_.isArrayLike` except that it also checks if `value`
		     * is an object.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is an array-like object,
		     *  else `false`.
		     * @example
		     *
		     * _.isArrayLikeObject([1, 2, 3]);
		     * // => true
		     *
		     * _.isArrayLikeObject(document.body.children);
		     * // => true
		     *
		     * _.isArrayLikeObject('abc');
		     * // => false
		     *
		     * _.isArrayLikeObject(_.noop);
		     * // => false
		     */
		    function isArrayLikeObject(value) {
		      return isObjectLike(value) && isArrayLike(value);
		    }
		
		    /**
		     * Checks if `value` is classified as a boolean primitive or object.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
		     * @example
		     *
		     * _.isBoolean(false);
		     * // => true
		     *
		     * _.isBoolean(null);
		     * // => false
		     */
		    function isBoolean(value) {
		      return value === true || value === false ||
		        (isObjectLike(value) && baseGetTag(value) == boolTag);
		    }
		
		    /**
		     * Checks if `value` is a buffer.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.3.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
		     * @example
		     *
		     * _.isBuffer(new Buffer(2));
		     * // => true
		     *
		     * _.isBuffer(new Uint8Array(2));
		     * // => false
		     */
		    var isBuffer = nativeIsBuffer || stubFalse;
		
		    /**
		     * Checks if `value` is classified as a `Date` object.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
		     * @example
		     *
		     * _.isDate(new Date);
		     * // => true
		     *
		     * _.isDate('Mon April 23 2012');
		     * // => false
		     */
		    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;
		
		    /**
		     * Checks if `value` is likely a DOM element.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
		     * @example
		     *
		     * _.isElement(document.body);
		     * // => true
		     *
		     * _.isElement('<body>');
		     * // => false
		     */
		    function isElement(value) {
		      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
		    }
		
		    /**
		     * Checks if `value` is an empty object, collection, map, or set.
		     *
		     * Objects are considered empty if they have no own enumerable string keyed
		     * properties.
		     *
		     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
		     * jQuery-like collections are considered empty if they have a `length` of `0`.
		     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
		     * @example
		     *
		     * _.isEmpty(null);
		     * // => true
		     *
		     * _.isEmpty(true);
		     * // => true
		     *
		     * _.isEmpty(1);
		     * // => true
		     *
		     * _.isEmpty([1, 2, 3]);
		     * // => false
		     *
		     * _.isEmpty({ 'a': 1 });
		     * // => false
		     */
		    function isEmpty(value) {
		      if (value == null) {
		        return true;
		      }
		      if (isArrayLike(value) &&
		          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
		            isBuffer(value) || isTypedArray(value) || isArguments(value))) {
		        return !value.length;
		      }
		      var tag = getTag(value);
		      if (tag == mapTag || tag == setTag) {
		        return !value.size;
		      }
		      if (isPrototype(value)) {
		        return !baseKeys(value).length;
		      }
		      for (var key in value) {
		        if (hasOwnProperty.call(value, key)) {
		          return false;
		        }
		      }
		      return true;
		    }
		
		    /**
		     * Performs a deep comparison between two values to determine if they are
		     * equivalent.
		     *
		     * **Note:** This method supports comparing arrays, array buffers, booleans,
		     * date objects, error objects, maps, numbers, `Object` objects, regexes,
		     * sets, strings, symbols, and typed arrays. `Object` objects are compared
		     * by their own, not inherited, enumerable properties. Functions and DOM
		     * nodes are **not** supported.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Lang
		     * @param {*} value The value to compare.
		     * @param {*} other The other value to compare.
		     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
		     * @example
		     *
		     * var object = { 'a': 1 };
		     * var other = { 'a': 1 };
		     *
		     * _.isEqual(object, other);
		     * // => true
		     *
		     * object === other;
		     * // => false
		     */
		    function isEqual(value, other) {
		      return baseIsEqual(value, other);
		    }
		
		    /**
		     * This method is like `_.isEqual` except that it accepts `customizer` which
		     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
		     * are handled by the method instead. The `customizer` is invoked with up to
		     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Lang
		     * @param {*} value The value to compare.
		     * @param {*} other The other value to compare.
		     * @param {Function} [customizer] The function to customize comparisons.
		     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
		     * @example
		     *
		     * function isGreeting(value) {
		     *   return /^h(?:i|ello)$/.test(value);
		     * }
		     *
		     * function customizer(objValue, othValue) {
		     *   if (isGreeting(objValue) && isGreeting(othValue)) {
		     *     return true;
		     *   }
		     * }
		     *
		     * var array = ['hello', 'goodbye'];
		     * var other = ['hi', 'goodbye'];
		     *
		     * _.isEqualWith(array, other, customizer);
		     * // => true
		     */
		    function isEqualWith(value, other, customizer) {
		      customizer = typeof customizer == 'function' ? customizer : undefined;
		      var result = customizer ? customizer(value, other) : undefined;
		      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
		    }
		
		    /**
		     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
		     * `SyntaxError`, `TypeError`, or `URIError` object.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
		     * @example
		     *
		     * _.isError(new Error);
		     * // => true
		     *
		     * _.isError(Error);
		     * // => false
		     */
		    function isError(value) {
		      if (!isObjectLike(value)) {
		        return false;
		      }
		      var tag = baseGetTag(value);
		      return tag == errorTag || tag == domExcTag ||
		        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));
		    }
		
		    /**
		     * Checks if `value` is a finite primitive number.
		     *
		     * **Note:** This method is based on
		     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
		     * @example
		     *
		     * _.isFinite(3);
		     * // => true
		     *
		     * _.isFinite(Number.MIN_VALUE);
		     * // => true
		     *
		     * _.isFinite(Infinity);
		     * // => false
		     *
		     * _.isFinite('3');
		     * // => false
		     */
		    function isFinite(value) {
		      return typeof value == 'number' && nativeIsFinite(value);
		    }
		
		    /**
		     * Checks if `value` is classified as a `Function` object.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a function, else `false`.
		     * @example
		     *
		     * _.isFunction(_);
		     * // => true
		     *
		     * _.isFunction(/abc/);
		     * // => false
		     */
		    function isFunction(value) {
		      if (!isObject(value)) {
		        return false;
		      }
		      // The use of `Object#toString` avoids issues with the `typeof` operator
		      // in Safari 9 which returns 'object' for typed arrays and other constructors.
		      var tag = baseGetTag(value);
		      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
		    }
		
		    /**
		     * Checks if `value` is an integer.
		     *
		     * **Note:** This method is based on
		     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
		     * @example
		     *
		     * _.isInteger(3);
		     * // => true
		     *
		     * _.isInteger(Number.MIN_VALUE);
		     * // => false
		     *
		     * _.isInteger(Infinity);
		     * // => false
		     *
		     * _.isInteger('3');
		     * // => false
		     */
		    function isInteger(value) {
		      return typeof value == 'number' && value == toInteger(value);
		    }
		
		    /**
		     * Checks if `value` is a valid array-like length.
		     *
		     * **Note:** This method is loosely based on
		     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
		     * @example
		     *
		     * _.isLength(3);
		     * // => true
		     *
		     * _.isLength(Number.MIN_VALUE);
		     * // => false
		     *
		     * _.isLength(Infinity);
		     * // => false
		     *
		     * _.isLength('3');
		     * // => false
		     */
		    function isLength(value) {
		      return typeof value == 'number' &&
		        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
		    }
		
		    /**
		     * Checks if `value` is the
		     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
		     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
		     * @example
		     *
		     * _.isObject({});
		     * // => true
		     *
		     * _.isObject([1, 2, 3]);
		     * // => true
		     *
		     * _.isObject(_.noop);
		     * // => true
		     *
		     * _.isObject(null);
		     * // => false
		     */
		    function isObject(value) {
		      var type = typeof value;
		      return value != null && (type == 'object' || type == 'function');
		    }
		
		    /**
		     * Checks if `value` is object-like. A value is object-like if it's not `null`
		     * and has a `typeof` result of "object".
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
		     * @example
		     *
		     * _.isObjectLike({});
		     * // => true
		     *
		     * _.isObjectLike([1, 2, 3]);
		     * // => true
		     *
		     * _.isObjectLike(_.noop);
		     * // => false
		     *
		     * _.isObjectLike(null);
		     * // => false
		     */
		    function isObjectLike(value) {
		      return value != null && typeof value == 'object';
		    }
		
		    /**
		     * Checks if `value` is classified as a `Map` object.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.3.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
		     * @example
		     *
		     * _.isMap(new Map);
		     * // => true
		     *
		     * _.isMap(new WeakMap);
		     * // => false
		     */
		    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;
		
		    /**
		     * Performs a partial deep comparison between `object` and `source` to
		     * determine if `object` contains equivalent property values.
		     *
		     * **Note:** This method is equivalent to `_.matches` when `source` is
		     * partially applied.
		     *
		     * Partial comparisons will match empty array and empty object `source`
		     * values against any array or object value, respectively. See `_.isEqual`
		     * for a list of supported value comparisons.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Lang
		     * @param {Object} object The object to inspect.
		     * @param {Object} source The object of property values to match.
		     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
		     * @example
		     *
		     * var object = { 'a': 1, 'b': 2 };
		     *
		     * _.isMatch(object, { 'b': 2 });
		     * // => true
		     *
		     * _.isMatch(object, { 'b': 1 });
		     * // => false
		     */
		    function isMatch(object, source) {
		      return object === source || baseIsMatch(object, source, getMatchData(source));
		    }
		
		    /**
		     * This method is like `_.isMatch` except that it accepts `customizer` which
		     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
		     * are handled by the method instead. The `customizer` is invoked with five
		     * arguments: (objValue, srcValue, index|key, object, source).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Lang
		     * @param {Object} object The object to inspect.
		     * @param {Object} source The object of property values to match.
		     * @param {Function} [customizer] The function to customize comparisons.
		     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
		     * @example
		     *
		     * function isGreeting(value) {
		     *   return /^h(?:i|ello)$/.test(value);
		     * }
		     *
		     * function customizer(objValue, srcValue) {
		     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
		     *     return true;
		     *   }
		     * }
		     *
		     * var object = { 'greeting': 'hello' };
		     * var source = { 'greeting': 'hi' };
		     *
		     * _.isMatchWith(object, source, customizer);
		     * // => true
		     */
		    function isMatchWith(object, source, customizer) {
		      customizer = typeof customizer == 'function' ? customizer : undefined;
		      return baseIsMatch(object, source, getMatchData(source), customizer);
		    }
		
		    /**
		     * Checks if `value` is `NaN`.
		     *
		     * **Note:** This method is based on
		     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
		     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
		     * `undefined` and other non-number values.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
		     * @example
		     *
		     * _.isNaN(NaN);
		     * // => true
		     *
		     * _.isNaN(new Number(NaN));
		     * // => true
		     *
		     * isNaN(undefined);
		     * // => true
		     *
		     * _.isNaN(undefined);
		     * // => false
		     */
		    function isNaN(value) {
		      // An `NaN` primitive is the only value that is not equal to itself.
		      // Perform the `toStringTag` check first to avoid errors with some
		      // ActiveX objects in IE.
		      return isNumber(value) && value != +value;
		    }
		
		    /**
		     * Checks if `value` is a pristine native function.
		     *
		     * **Note:** This method can't reliably detect native functions in the presence
		     * of the core-js package because core-js circumvents this kind of detection.
		     * Despite multiple requests, the core-js maintainer has made it clear: any
		     * attempt to fix the detection will be obstructed. As a result, we're left
		     * with little choice but to throw an error. Unfortunately, this also affects
		     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
		     * which rely on core-js.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a native function,
		     *  else `false`.
		     * @example
		     *
		     * _.isNative(Array.prototype.push);
		     * // => true
		     *
		     * _.isNative(_);
		     * // => false
		     */
		    function isNative(value) {
		      if (isMaskable(value)) {
		        throw new Error(CORE_ERROR_TEXT);
		      }
		      return baseIsNative(value);
		    }
		
		    /**
		     * Checks if `value` is `null`.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
		     * @example
		     *
		     * _.isNull(null);
		     * // => true
		     *
		     * _.isNull(void 0);
		     * // => false
		     */
		    function isNull(value) {
		      return value === null;
		    }
		
		    /**
		     * Checks if `value` is `null` or `undefined`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
		     * @example
		     *
		     * _.isNil(null);
		     * // => true
		     *
		     * _.isNil(void 0);
		     * // => true
		     *
		     * _.isNil(NaN);
		     * // => false
		     */
		    function isNil(value) {
		      return value == null;
		    }
		
		    /**
		     * Checks if `value` is classified as a `Number` primitive or object.
		     *
		     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
		     * classified as numbers, use the `_.isFinite` method.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a number, else `false`.
		     * @example
		     *
		     * _.isNumber(3);
		     * // => true
		     *
		     * _.isNumber(Number.MIN_VALUE);
		     * // => true
		     *
		     * _.isNumber(Infinity);
		     * // => true
		     *
		     * _.isNumber('3');
		     * // => false
		     */
		    function isNumber(value) {
		      return typeof value == 'number' ||
		        (isObjectLike(value) && baseGetTag(value) == numberTag);
		    }
		
		    /**
		     * Checks if `value` is a plain object, that is, an object created by the
		     * `Object` constructor or one with a `[[Prototype]]` of `null`.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.8.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
		     * @example
		     *
		     * function Foo() {
		     *   this.a = 1;
		     * }
		     *
		     * _.isPlainObject(new Foo);
		     * // => false
		     *
		     * _.isPlainObject([1, 2, 3]);
		     * // => false
		     *
		     * _.isPlainObject({ 'x': 0, 'y': 0 });
		     * // => true
		     *
		     * _.isPlainObject(Object.create(null));
		     * // => true
		     */
		    function isPlainObject(value) {
		      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
		        return false;
		      }
		      var proto = getPrototype(value);
		      if (proto === null) {
		        return true;
		      }
		      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
		      return typeof Ctor == 'function' && Ctor instanceof Ctor &&
		        funcToString.call(Ctor) == objectCtorString;
		    }
		
		    /**
		     * Checks if `value` is classified as a `RegExp` object.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.1.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
		     * @example
		     *
		     * _.isRegExp(/abc/);
		     * // => true
		     *
		     * _.isRegExp('/abc/');
		     * // => false
		     */
		    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;
		
		    /**
		     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
		     * double precision number which isn't the result of a rounded unsafe integer.
		     *
		     * **Note:** This method is based on
		     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
		     * @example
		     *
		     * _.isSafeInteger(3);
		     * // => true
		     *
		     * _.isSafeInteger(Number.MIN_VALUE);
		     * // => false
		     *
		     * _.isSafeInteger(Infinity);
		     * // => false
		     *
		     * _.isSafeInteger('3');
		     * // => false
		     */
		    function isSafeInteger(value) {
		      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
		    }
		
		    /**
		     * Checks if `value` is classified as a `Set` object.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.3.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
		     * @example
		     *
		     * _.isSet(new Set);
		     * // => true
		     *
		     * _.isSet(new WeakSet);
		     * // => false
		     */
		    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;
		
		    /**
		     * Checks if `value` is classified as a `String` primitive or object.
		     *
		     * @static
		     * @since 0.1.0
		     * @memberOf _
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a string, else `false`.
		     * @example
		     *
		     * _.isString('abc');
		     * // => true
		     *
		     * _.isString(1);
		     * // => false
		     */
		    function isString(value) {
		      return typeof value == 'string' ||
		        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
		    }
		
		    /**
		     * Checks if `value` is classified as a `Symbol` primitive or object.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
		     * @example
		     *
		     * _.isSymbol(Symbol.iterator);
		     * // => true
		     *
		     * _.isSymbol('abc');
		     * // => false
		     */
		    function isSymbol(value) {
		      return typeof value == 'symbol' ||
		        (isObjectLike(value) && baseGetTag(value) == symbolTag);
		    }
		
		    /**
		     * Checks if `value` is classified as a typed array.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
		     * @example
		     *
		     * _.isTypedArray(new Uint8Array);
		     * // => true
		     *
		     * _.isTypedArray([]);
		     * // => false
		     */
		    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
		
		    /**
		     * Checks if `value` is `undefined`.
		     *
		     * @static
		     * @since 0.1.0
		     * @memberOf _
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
		     * @example
		     *
		     * _.isUndefined(void 0);
		     * // => true
		     *
		     * _.isUndefined(null);
		     * // => false
		     */
		    function isUndefined(value) {
		      return value === undefined;
		    }
		
		    /**
		     * Checks if `value` is classified as a `WeakMap` object.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.3.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
		     * @example
		     *
		     * _.isWeakMap(new WeakMap);
		     * // => true
		     *
		     * _.isWeakMap(new Map);
		     * // => false
		     */
		    function isWeakMap(value) {
		      return isObjectLike(value) && getTag(value) == weakMapTag;
		    }
		
		    /**
		     * Checks if `value` is classified as a `WeakSet` object.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.3.0
		     * @category Lang
		     * @param {*} value The value to check.
		     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
		     * @example
		     *
		     * _.isWeakSet(new WeakSet);
		     * // => true
		     *
		     * _.isWeakSet(new Set);
		     * // => false
		     */
		    function isWeakSet(value) {
		      return isObjectLike(value) && baseGetTag(value) == weakSetTag;
		    }
		
		    /**
		     * Checks if `value` is less than `other`.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.9.0
		     * @category Lang
		     * @param {*} value The value to compare.
		     * @param {*} other The other value to compare.
		     * @returns {boolean} Returns `true` if `value` is less than `other`,
		     *  else `false`.
		     * @see _.gt
		     * @example
		     *
		     * _.lt(1, 3);
		     * // => true
		     *
		     * _.lt(3, 3);
		     * // => false
		     *
		     * _.lt(3, 1);
		     * // => false
		     */
		    var lt = createRelationalOperation(baseLt);
		
		    /**
		     * Checks if `value` is less than or equal to `other`.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.9.0
		     * @category Lang
		     * @param {*} value The value to compare.
		     * @param {*} other The other value to compare.
		     * @returns {boolean} Returns `true` if `value` is less than or equal to
		     *  `other`, else `false`.
		     * @see _.gte
		     * @example
		     *
		     * _.lte(1, 3);
		     * // => true
		     *
		     * _.lte(3, 3);
		     * // => true
		     *
		     * _.lte(3, 1);
		     * // => false
		     */
		    var lte = createRelationalOperation(function(value, other) {
		      return value <= other;
		    });
		
		    /**
		     * Converts `value` to an array.
		     *
		     * @static
		     * @since 0.1.0
		     * @memberOf _
		     * @category Lang
		     * @param {*} value The value to convert.
		     * @returns {Array} Returns the converted array.
		     * @example
		     *
		     * _.toArray({ 'a': 1, 'b': 2 });
		     * // => [1, 2]
		     *
		     * _.toArray('abc');
		     * // => ['a', 'b', 'c']
		     *
		     * _.toArray(1);
		     * // => []
		     *
		     * _.toArray(null);
		     * // => []
		     */
		    function toArray(value) {
		      if (!value) {
		        return [];
		      }
		      if (isArrayLike(value)) {
		        return isString(value) ? stringToArray(value) : copyArray(value);
		      }
		      if (symIterator && value[symIterator]) {
		        return iteratorToArray(value[symIterator]());
		      }
		      var tag = getTag(value),
		          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);
		
		      return func(value);
		    }
		
		    /**
		     * Converts `value` to a finite number.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.12.0
		     * @category Lang
		     * @param {*} value The value to convert.
		     * @returns {number} Returns the converted number.
		     * @example
		     *
		     * _.toFinite(3.2);
		     * // => 3.2
		     *
		     * _.toFinite(Number.MIN_VALUE);
		     * // => 5e-324
		     *
		     * _.toFinite(Infinity);
		     * // => 1.7976931348623157e+308
		     *
		     * _.toFinite('3.2');
		     * // => 3.2
		     */
		    function toFinite(value) {
		      if (!value) {
		        return value === 0 ? value : 0;
		      }
		      value = toNumber(value);
		      if (value === INFINITY || value === -INFINITY) {
		        var sign = (value < 0 ? -1 : 1);
		        return sign * MAX_INTEGER;
		      }
		      return value === value ? value : 0;
		    }
		
		    /**
		     * Converts `value` to an integer.
		     *
		     * **Note:** This method is loosely based on
		     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Lang
		     * @param {*} value The value to convert.
		     * @returns {number} Returns the converted integer.
		     * @example
		     *
		     * _.toInteger(3.2);
		     * // => 3
		     *
		     * _.toInteger(Number.MIN_VALUE);
		     * // => 0
		     *
		     * _.toInteger(Infinity);
		     * // => 1.7976931348623157e+308
		     *
		     * _.toInteger('3.2');
		     * // => 3
		     */
		    function toInteger(value) {
		      var result = toFinite(value),
		          remainder = result % 1;
		
		      return result === result ? (remainder ? result - remainder : result) : 0;
		    }
		
		    /**
		     * Converts `value` to an integer suitable for use as the length of an
		     * array-like object.
		     *
		     * **Note:** This method is based on
		     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Lang
		     * @param {*} value The value to convert.
		     * @returns {number} Returns the converted integer.
		     * @example
		     *
		     * _.toLength(3.2);
		     * // => 3
		     *
		     * _.toLength(Number.MIN_VALUE);
		     * // => 0
		     *
		     * _.toLength(Infinity);
		     * // => 4294967295
		     *
		     * _.toLength('3.2');
		     * // => 3
		     */
		    function toLength(value) {
		      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
		    }
		
		    /**
		     * Converts `value` to a number.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Lang
		     * @param {*} value The value to process.
		     * @returns {number} Returns the number.
		     * @example
		     *
		     * _.toNumber(3.2);
		     * // => 3.2
		     *
		     * _.toNumber(Number.MIN_VALUE);
		     * // => 5e-324
		     *
		     * _.toNumber(Infinity);
		     * // => Infinity
		     *
		     * _.toNumber('3.2');
		     * // => 3.2
		     */
		    function toNumber(value) {
		      if (typeof value == 'number') {
		        return value;
		      }
		      if (isSymbol(value)) {
		        return NAN;
		      }
		      if (isObject(value)) {
		        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
		        value = isObject(other) ? (other + '') : other;
		      }
		      if (typeof value != 'string') {
		        return value === 0 ? value : +value;
		      }
		      value = value.replace(reTrim, '');
		      var isBinary = reIsBinary.test(value);
		      return (isBinary || reIsOctal.test(value))
		        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
		        : (reIsBadHex.test(value) ? NAN : +value);
		    }
		
		    /**
		     * Converts `value` to a plain object flattening inherited enumerable string
		     * keyed properties of `value` to own properties of the plain object.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Lang
		     * @param {*} value The value to convert.
		     * @returns {Object} Returns the converted plain object.
		     * @example
		     *
		     * function Foo() {
		     *   this.b = 2;
		     * }
		     *
		     * Foo.prototype.c = 3;
		     *
		     * _.assign({ 'a': 1 }, new Foo);
		     * // => { 'a': 1, 'b': 2 }
		     *
		     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
		     * // => { 'a': 1, 'b': 2, 'c': 3 }
		     */
		    function toPlainObject(value) {
		      return copyObject(value, keysIn(value));
		    }
		
		    /**
		     * Converts `value` to a safe integer. A safe integer can be compared and
		     * represented correctly.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Lang
		     * @param {*} value The value to convert.
		     * @returns {number} Returns the converted integer.
		     * @example
		     *
		     * _.toSafeInteger(3.2);
		     * // => 3
		     *
		     * _.toSafeInteger(Number.MIN_VALUE);
		     * // => 0
		     *
		     * _.toSafeInteger(Infinity);
		     * // => 9007199254740991
		     *
		     * _.toSafeInteger('3.2');
		     * // => 3
		     */
		    function toSafeInteger(value) {
		      return baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);
		    }
		
		    /**
		     * Converts `value` to a string. An empty string is returned for `null`
		     * and `undefined` values. The sign of `-0` is preserved.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Lang
		     * @param {*} value The value to convert.
		     * @returns {string} Returns the converted string.
		     * @example
		     *
		     * _.toString(null);
		     * // => ''
		     *
		     * _.toString(-0);
		     * // => '-0'
		     *
		     * _.toString([1, 2, 3]);
		     * // => '1,2,3'
		     */
		    function toString(value) {
		      return value == null ? '' : baseToString(value);
		    }
		
		    /*------------------------------------------------------------------------*/
		
		    /**
		     * Assigns own enumerable string keyed properties of source objects to the
		     * destination object. Source objects are applied from left to right.
		     * Subsequent sources overwrite property assignments of previous sources.
		     *
		     * **Note:** This method mutates `object` and is loosely based on
		     * [`Object.assign`](https://mdn.io/Object/assign).
		     *
		     * @static
		     * @memberOf _
		     * @since 0.10.0
		     * @category Object
		     * @param {Object} object The destination object.
		     * @param {...Object} [sources] The source objects.
		     * @returns {Object} Returns `object`.
		     * @see _.assignIn
		     * @example
		     *
		     * function Foo() {
		     *   this.a = 1;
		     * }
		     *
		     * function Bar() {
		     *   this.c = 3;
		     * }
		     *
		     * Foo.prototype.b = 2;
		     * Bar.prototype.d = 4;
		     *
		     * _.assign({ 'a': 0 }, new Foo, new Bar);
		     * // => { 'a': 1, 'c': 3 }
		     */
		    var assign = createAssigner(function(object, source) {
		      if (isPrototype(source) || isArrayLike(source)) {
		        copyObject(source, keys(source), object);
		        return;
		      }
		      for (var key in source) {
		        if (hasOwnProperty.call(source, key)) {
		          assignValue(object, key, source[key]);
		        }
		      }
		    });
		
		    /**
		     * This method is like `_.assign` except that it iterates over own and
		     * inherited source properties.
		     *
		     * **Note:** This method mutates `object`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @alias extend
		     * @category Object
		     * @param {Object} object The destination object.
		     * @param {...Object} [sources] The source objects.
		     * @returns {Object} Returns `object`.
		     * @see _.assign
		     * @example
		     *
		     * function Foo() {
		     *   this.a = 1;
		     * }
		     *
		     * function Bar() {
		     *   this.c = 3;
		     * }
		     *
		     * Foo.prototype.b = 2;
		     * Bar.prototype.d = 4;
		     *
		     * _.assignIn({ 'a': 0 }, new Foo, new Bar);
		     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
		     */
		    var assignIn = createAssigner(function(object, source) {
		      copyObject(source, keysIn(source), object);
		    });
		
		    /**
		     * This method is like `_.assignIn` except that it accepts `customizer`
		     * which is invoked to produce the assigned values. If `customizer` returns
		     * `undefined`, assignment is handled by the method instead. The `customizer`
		     * is invoked with five arguments: (objValue, srcValue, key, object, source).
		     *
		     * **Note:** This method mutates `object`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @alias extendWith
		     * @category Object
		     * @param {Object} object The destination object.
		     * @param {...Object} sources The source objects.
		     * @param {Function} [customizer] The function to customize assigned values.
		     * @returns {Object} Returns `object`.
		     * @see _.assignWith
		     * @example
		     *
		     * function customizer(objValue, srcValue) {
		     *   return _.isUndefined(objValue) ? srcValue : objValue;
		     * }
		     *
		     * var defaults = _.partialRight(_.assignInWith, customizer);
		     *
		     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
		     * // => { 'a': 1, 'b': 2 }
		     */
		    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
		      copyObject(source, keysIn(source), object, customizer);
		    });
		
		    /**
		     * This method is like `_.assign` except that it accepts `customizer`
		     * which is invoked to produce the assigned values. If `customizer` returns
		     * `undefined`, assignment is handled by the method instead. The `customizer`
		     * is invoked with five arguments: (objValue, srcValue, key, object, source).
		     *
		     * **Note:** This method mutates `object`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Object
		     * @param {Object} object The destination object.
		     * @param {...Object} sources The source objects.
		     * @param {Function} [customizer] The function to customize assigned values.
		     * @returns {Object} Returns `object`.
		     * @see _.assignInWith
		     * @example
		     *
		     * function customizer(objValue, srcValue) {
		     *   return _.isUndefined(objValue) ? srcValue : objValue;
		     * }
		     *
		     * var defaults = _.partialRight(_.assignWith, customizer);
		     *
		     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
		     * // => { 'a': 1, 'b': 2 }
		     */
		    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
		      copyObject(source, keys(source), object, customizer);
		    });
		
		    /**
		     * Creates an array of values corresponding to `paths` of `object`.
		     *
		     * @static
		     * @memberOf _
		     * @since 1.0.0
		     * @category Object
		     * @param {Object} object The object to iterate over.
		     * @param {...(string|string[])} [paths] The property paths to pick.
		     * @returns {Array} Returns the picked values.
		     * @example
		     *
		     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
		     *
		     * _.at(object, ['a[0].b.c', 'a[1]']);
		     * // => [3, 4]
		     */
		    var at = flatRest(baseAt);
		
		    /**
		     * Creates an object that inherits from the `prototype` object. If a
		     * `properties` object is given, its own enumerable string keyed properties
		     * are assigned to the created object.
		     *
		     * @static
		     * @memberOf _
		     * @since 2.3.0
		     * @category Object
		     * @param {Object} prototype The object to inherit from.
		     * @param {Object} [properties] The properties to assign to the object.
		     * @returns {Object} Returns the new object.
		     * @example
		     *
		     * function Shape() {
		     *   this.x = 0;
		     *   this.y = 0;
		     * }
		     *
		     * function Circle() {
		     *   Shape.call(this);
		     * }
		     *
		     * Circle.prototype = _.create(Shape.prototype, {
		     *   'constructor': Circle
		     * });
		     *
		     * var circle = new Circle;
		     * circle instanceof Circle;
		     * // => true
		     *
		     * circle instanceof Shape;
		     * // => true
		     */
		    function create(prototype, properties) {
		      var result = baseCreate(prototype);
		      return properties == null ? result : baseAssign(result, properties);
		    }
		
		    /**
		     * Assigns own and inherited enumerable string keyed properties of source
		     * objects to the destination object for all destination properties that
		     * resolve to `undefined`. Source objects are applied from left to right.
		     * Once a property is set, additional values of the same property are ignored.
		     *
		     * **Note:** This method mutates `object`.
		     *
		     * @static
		     * @since 0.1.0
		     * @memberOf _
		     * @category Object
		     * @param {Object} object The destination object.
		     * @param {...Object} [sources] The source objects.
		     * @returns {Object} Returns `object`.
		     * @see _.defaultsDeep
		     * @example
		     *
		     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
		     * // => { 'a': 1, 'b': 2 }
		     */
		    var defaults = baseRest(function(args) {
		      args.push(undefined, assignInDefaults);
		      return apply(assignInWith, undefined, args);
		    });
		
		    /**
		     * This method is like `_.defaults` except that it recursively assigns
		     * default properties.
		     *
		     * **Note:** This method mutates `object`.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.10.0
		     * @category Object
		     * @param {Object} object The destination object.
		     * @param {...Object} [sources] The source objects.
		     * @returns {Object} Returns `object`.
		     * @see _.defaults
		     * @example
		     *
		     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
		     * // => { 'a': { 'b': 2, 'c': 3 } }
		     */
		    var defaultsDeep = baseRest(function(args) {
		      args.push(undefined, mergeDefaults);
		      return apply(mergeWith, undefined, args);
		    });
		
		    /**
		     * This method is like `_.find` except that it returns the key of the first
		     * element `predicate` returns truthy for instead of the element itself.
		     *
		     * @static
		     * @memberOf _
		     * @since 1.1.0
		     * @category Object
		     * @param {Object} object The object to inspect.
		     * @param {Function} [predicate=_.identity] The function invoked per iteration.
		     * @returns {string|undefined} Returns the key of the matched element,
		     *  else `undefined`.
		     * @example
		     *
		     * var users = {
		     *   'barney':  { 'age': 36, 'active': true },
		     *   'fred':    { 'age': 40, 'active': false },
		     *   'pebbles': { 'age': 1,  'active': true }
		     * };
		     *
		     * _.findKey(users, function(o) { return o.age < 40; });
		     * // => 'barney' (iteration order is not guaranteed)
		     *
		     * // The `_.matches` iteratee shorthand.
		     * _.findKey(users, { 'age': 1, 'active': true });
		     * // => 'pebbles'
		     *
		     * // The `_.matchesProperty` iteratee shorthand.
		     * _.findKey(users, ['active', false]);
		     * // => 'fred'
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.findKey(users, 'active');
		     * // => 'barney'
		     */
		    function findKey(object, predicate) {
		      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
		    }
		
		    /**
		     * This method is like `_.findKey` except that it iterates over elements of
		     * a collection in the opposite order.
		     *
		     * @static
		     * @memberOf _
		     * @since 2.0.0
		     * @category Object
		     * @param {Object} object The object to inspect.
		     * @param {Function} [predicate=_.identity] The function invoked per iteration.
		     * @returns {string|undefined} Returns the key of the matched element,
		     *  else `undefined`.
		     * @example
		     *
		     * var users = {
		     *   'barney':  { 'age': 36, 'active': true },
		     *   'fred':    { 'age': 40, 'active': false },
		     *   'pebbles': { 'age': 1,  'active': true }
		     * };
		     *
		     * _.findLastKey(users, function(o) { return o.age < 40; });
		     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
		     *
		     * // The `_.matches` iteratee shorthand.
		     * _.findLastKey(users, { 'age': 36, 'active': true });
		     * // => 'barney'
		     *
		     * // The `_.matchesProperty` iteratee shorthand.
		     * _.findLastKey(users, ['active', false]);
		     * // => 'fred'
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.findLastKey(users, 'active');
		     * // => 'pebbles'
		     */
		    function findLastKey(object, predicate) {
		      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
		    }
		
		    /**
		     * Iterates over own and inherited enumerable string keyed properties of an
		     * object and invokes `iteratee` for each property. The iteratee is invoked
		     * with three arguments: (value, key, object). Iteratee functions may exit
		     * iteration early by explicitly returning `false`.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.3.0
		     * @category Object
		     * @param {Object} object The object to iterate over.
		     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		     * @returns {Object} Returns `object`.
		     * @see _.forInRight
		     * @example
		     *
		     * function Foo() {
		     *   this.a = 1;
		     *   this.b = 2;
		     * }
		     *
		     * Foo.prototype.c = 3;
		     *
		     * _.forIn(new Foo, function(value, key) {
		     *   console.log(key);
		     * });
		     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
		     */
		    function forIn(object, iteratee) {
		      return object == null
		        ? object
		        : baseFor(object, getIteratee(iteratee, 3), keysIn);
		    }
		
		    /**
		     * This method is like `_.forIn` except that it iterates over properties of
		     * `object` in the opposite order.
		     *
		     * @static
		     * @memberOf _
		     * @since 2.0.0
		     * @category Object
		     * @param {Object} object The object to iterate over.
		     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		     * @returns {Object} Returns `object`.
		     * @see _.forIn
		     * @example
		     *
		     * function Foo() {
		     *   this.a = 1;
		     *   this.b = 2;
		     * }
		     *
		     * Foo.prototype.c = 3;
		     *
		     * _.forInRight(new Foo, function(value, key) {
		     *   console.log(key);
		     * });
		     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
		     */
		    function forInRight(object, iteratee) {
		      return object == null
		        ? object
		        : baseForRight(object, getIteratee(iteratee, 3), keysIn);
		    }
		
		    /**
		     * Iterates over own enumerable string keyed properties of an object and
		     * invokes `iteratee` for each property. The iteratee is invoked with three
		     * arguments: (value, key, object). Iteratee functions may exit iteration
		     * early by explicitly returning `false`.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.3.0
		     * @category Object
		     * @param {Object} object The object to iterate over.
		     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		     * @returns {Object} Returns `object`.
		     * @see _.forOwnRight
		     * @example
		     *
		     * function Foo() {
		     *   this.a = 1;
		     *   this.b = 2;
		     * }
		     *
		     * Foo.prototype.c = 3;
		     *
		     * _.forOwn(new Foo, function(value, key) {
		     *   console.log(key);
		     * });
		     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
		     */
		    function forOwn(object, iteratee) {
		      return object && baseForOwn(object, getIteratee(iteratee, 3));
		    }
		
		    /**
		     * This method is like `_.forOwn` except that it iterates over properties of
		     * `object` in the opposite order.
		     *
		     * @static
		     * @memberOf _
		     * @since 2.0.0
		     * @category Object
		     * @param {Object} object The object to iterate over.
		     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		     * @returns {Object} Returns `object`.
		     * @see _.forOwn
		     * @example
		     *
		     * function Foo() {
		     *   this.a = 1;
		     *   this.b = 2;
		     * }
		     *
		     * Foo.prototype.c = 3;
		     *
		     * _.forOwnRight(new Foo, function(value, key) {
		     *   console.log(key);
		     * });
		     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
		     */
		    function forOwnRight(object, iteratee) {
		      return object && baseForOwnRight(object, getIteratee(iteratee, 3));
		    }
		
		    /**
		     * Creates an array of function property names from own enumerable properties
		     * of `object`.
		     *
		     * @static
		     * @since 0.1.0
		     * @memberOf _
		     * @category Object
		     * @param {Object} object The object to inspect.
		     * @returns {Array} Returns the function names.
		     * @see _.functionsIn
		     * @example
		     *
		     * function Foo() {
		     *   this.a = _.constant('a');
		     *   this.b = _.constant('b');
		     * }
		     *
		     * Foo.prototype.c = _.constant('c');
		     *
		     * _.functions(new Foo);
		     * // => ['a', 'b']
		     */
		    function functions(object) {
		      return object == null ? [] : baseFunctions(object, keys(object));
		    }
		
		    /**
		     * Creates an array of function property names from own and inherited
		     * enumerable properties of `object`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Object
		     * @param {Object} object The object to inspect.
		     * @returns {Array} Returns the function names.
		     * @see _.functions
		     * @example
		     *
		     * function Foo() {
		     *   this.a = _.constant('a');
		     *   this.b = _.constant('b');
		     * }
		     *
		     * Foo.prototype.c = _.constant('c');
		     *
		     * _.functionsIn(new Foo);
		     * // => ['a', 'b', 'c']
		     */
		    function functionsIn(object) {
		      return object == null ? [] : baseFunctions(object, keysIn(object));
		    }
		
		    /**
		     * Gets the value at `path` of `object`. If the resolved value is
		     * `undefined`, the `defaultValue` is returned in its place.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.7.0
		     * @category Object
		     * @param {Object} object The object to query.
		     * @param {Array|string} path The path of the property to get.
		     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
		     * @returns {*} Returns the resolved value.
		     * @example
		     *
		     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
		     *
		     * _.get(object, 'a[0].b.c');
		     * // => 3
		     *
		     * _.get(object, ['a', '0', 'b', 'c']);
		     * // => 3
		     *
		     * _.get(object, 'a.b.c', 'default');
		     * // => 'default'
		     */
		    function get(object, path, defaultValue) {
		      var result = object == null ? undefined : baseGet(object, path);
		      return result === undefined ? defaultValue : result;
		    }
		
		    /**
		     * Checks if `path` is a direct property of `object`.
		     *
		     * @static
		     * @since 0.1.0
		     * @memberOf _
		     * @category Object
		     * @param {Object} object The object to query.
		     * @param {Array|string} path The path to check.
		     * @returns {boolean} Returns `true` if `path` exists, else `false`.
		     * @example
		     *
		     * var object = { 'a': { 'b': 2 } };
		     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
		     *
		     * _.has(object, 'a');
		     * // => true
		     *
		     * _.has(object, 'a.b');
		     * // => true
		     *
		     * _.has(object, ['a', 'b']);
		     * // => true
		     *
		     * _.has(other, 'a');
		     * // => false
		     */
		    function has(object, path) {
		      return object != null && hasPath(object, path, baseHas);
		    }
		
		    /**
		     * Checks if `path` is a direct or inherited property of `object`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Object
		     * @param {Object} object The object to query.
		     * @param {Array|string} path The path to check.
		     * @returns {boolean} Returns `true` if `path` exists, else `false`.
		     * @example
		     *
		     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
		     *
		     * _.hasIn(object, 'a');
		     * // => true
		     *
		     * _.hasIn(object, 'a.b');
		     * // => true
		     *
		     * _.hasIn(object, ['a', 'b']);
		     * // => true
		     *
		     * _.hasIn(object, 'b');
		     * // => false
		     */
		    function hasIn(object, path) {
		      return object != null && hasPath(object, path, baseHasIn);
		    }
		
		    /**
		     * Creates an object composed of the inverted keys and values of `object`.
		     * If `object` contains duplicate values, subsequent values overwrite
		     * property assignments of previous values.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.7.0
		     * @category Object
		     * @param {Object} object The object to invert.
		     * @returns {Object} Returns the new inverted object.
		     * @example
		     *
		     * var object = { 'a': 1, 'b': 2, 'c': 1 };
		     *
		     * _.invert(object);
		     * // => { '1': 'c', '2': 'b' }
		     */
		    var invert = createInverter(function(result, value, key) {
		      result[value] = key;
		    }, constant(identity));
		
		    /**
		     * This method is like `_.invert` except that the inverted object is generated
		     * from the results of running each element of `object` thru `iteratee`. The
		     * corresponding inverted value of each inverted key is an array of keys
		     * responsible for generating the inverted value. The iteratee is invoked
		     * with one argument: (value).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.1.0
		     * @category Object
		     * @param {Object} object The object to invert.
		     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
		     * @returns {Object} Returns the new inverted object.
		     * @example
		     *
		     * var object = { 'a': 1, 'b': 2, 'c': 1 };
		     *
		     * _.invertBy(object);
		     * // => { '1': ['a', 'c'], '2': ['b'] }
		     *
		     * _.invertBy(object, function(value) {
		     *   return 'group' + value;
		     * });
		     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
		     */
		    var invertBy = createInverter(function(result, value, key) {
		      if (hasOwnProperty.call(result, value)) {
		        result[value].push(key);
		      } else {
		        result[value] = [key];
		      }
		    }, getIteratee);
		
		    /**
		     * Invokes the method at `path` of `object`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Object
		     * @param {Object} object The object to query.
		     * @param {Array|string} path The path of the method to invoke.
		     * @param {...*} [args] The arguments to invoke the method with.
		     * @returns {*} Returns the result of the invoked method.
		     * @example
		     *
		     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
		     *
		     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
		     * // => [2, 3]
		     */
		    var invoke = baseRest(baseInvoke);
		
		    /**
		     * Creates an array of the own enumerable property names of `object`.
		     *
		     * **Note:** Non-object values are coerced to objects. See the
		     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
		     * for more details.
		     *
		     * @static
		     * @since 0.1.0
		     * @memberOf _
		     * @category Object
		     * @param {Object} object The object to query.
		     * @returns {Array} Returns the array of property names.
		     * @example
		     *
		     * function Foo() {
		     *   this.a = 1;
		     *   this.b = 2;
		     * }
		     *
		     * Foo.prototype.c = 3;
		     *
		     * _.keys(new Foo);
		     * // => ['a', 'b'] (iteration order is not guaranteed)
		     *
		     * _.keys('hi');
		     * // => ['0', '1']
		     */
		    function keys(object) {
		      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
		    }
		
		    /**
		     * Creates an array of the own and inherited enumerable property names of `object`.
		     *
		     * **Note:** Non-object values are coerced to objects.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Object
		     * @param {Object} object The object to query.
		     * @returns {Array} Returns the array of property names.
		     * @example
		     *
		     * function Foo() {
		     *   this.a = 1;
		     *   this.b = 2;
		     * }
		     *
		     * Foo.prototype.c = 3;
		     *
		     * _.keysIn(new Foo);
		     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
		     */
		    function keysIn(object) {
		      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
		    }
		
		    /**
		     * The opposite of `_.mapValues`; this method creates an object with the
		     * same values as `object` and keys generated by running each own enumerable
		     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
		     * with three arguments: (value, key, object).
		     *
		     * @static
		     * @memberOf _
		     * @since 3.8.0
		     * @category Object
		     * @param {Object} object The object to iterate over.
		     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		     * @returns {Object} Returns the new mapped object.
		     * @see _.mapValues
		     * @example
		     *
		     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
		     *   return key + value;
		     * });
		     * // => { 'a1': 1, 'b2': 2 }
		     */
		    function mapKeys(object, iteratee) {
		      var result = {};
		      iteratee = getIteratee(iteratee, 3);
		
		      baseForOwn(object, function(value, key, object) {
		        baseAssignValue(result, iteratee(value, key, object), value);
		      });
		      return result;
		    }
		
		    /**
		     * Creates an object with the same keys as `object` and values generated
		     * by running each own enumerable string keyed property of `object` thru
		     * `iteratee`. The iteratee is invoked with three arguments:
		     * (value, key, object).
		     *
		     * @static
		     * @memberOf _
		     * @since 2.4.0
		     * @category Object
		     * @param {Object} object The object to iterate over.
		     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		     * @returns {Object} Returns the new mapped object.
		     * @see _.mapKeys
		     * @example
		     *
		     * var users = {
		     *   'fred':    { 'user': 'fred',    'age': 40 },
		     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
		     * };
		     *
		     * _.mapValues(users, function(o) { return o.age; });
		     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.mapValues(users, 'age');
		     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
		     */
		    function mapValues(object, iteratee) {
		      var result = {};
		      iteratee = getIteratee(iteratee, 3);
		
		      baseForOwn(object, function(value, key, object) {
		        baseAssignValue(result, key, iteratee(value, key, object));
		      });
		      return result;
		    }
		
		    /**
		     * This method is like `_.assign` except that it recursively merges own and
		     * inherited enumerable string keyed properties of source objects into the
		     * destination object. Source properties that resolve to `undefined` are
		     * skipped if a destination value exists. Array and plain object properties
		     * are merged recursively. Other objects and value types are overridden by
		     * assignment. Source objects are applied from left to right. Subsequent
		     * sources overwrite property assignments of previous sources.
		     *
		     * **Note:** This method mutates `object`.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.5.0
		     * @category Object
		     * @param {Object} object The destination object.
		     * @param {...Object} [sources] The source objects.
		     * @returns {Object} Returns `object`.
		     * @example
		     *
		     * var object = {
		     *   'a': [{ 'b': 2 }, { 'd': 4 }]
		     * };
		     *
		     * var other = {
		     *   'a': [{ 'c': 3 }, { 'e': 5 }]
		     * };
		     *
		     * _.merge(object, other);
		     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
		     */
		    var merge = createAssigner(function(object, source, srcIndex) {
		      baseMerge(object, source, srcIndex);
		    });
		
		    /**
		     * This method is like `_.merge` except that it accepts `customizer` which
		     * is invoked to produce the merged values of the destination and source
		     * properties. If `customizer` returns `undefined`, merging is handled by the
		     * method instead. The `customizer` is invoked with six arguments:
		     * (objValue, srcValue, key, object, source, stack).
		     *
		     * **Note:** This method mutates `object`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Object
		     * @param {Object} object The destination object.
		     * @param {...Object} sources The source objects.
		     * @param {Function} customizer The function to customize assigned values.
		     * @returns {Object} Returns `object`.
		     * @example
		     *
		     * function customizer(objValue, srcValue) {
		     *   if (_.isArray(objValue)) {
		     *     return objValue.concat(srcValue);
		     *   }
		     * }
		     *
		     * var object = { 'a': [1], 'b': [2] };
		     * var other = { 'a': [3], 'b': [4] };
		     *
		     * _.mergeWith(object, other, customizer);
		     * // => { 'a': [1, 3], 'b': [2, 4] }
		     */
		    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
		      baseMerge(object, source, srcIndex, customizer);
		    });
		
		    /**
		     * The opposite of `_.pick`; this method creates an object composed of the
		     * own and inherited enumerable property paths of `object` that are not omitted.
		     *
		     * **Note:** This method is considerably slower than `_.pick`.
		     *
		     * @static
		     * @since 0.1.0
		     * @memberOf _
		     * @category Object
		     * @param {Object} object The source object.
		     * @param {...(string|string[])} [paths] The property paths to omit.
		     * @returns {Object} Returns the new object.
		     * @example
		     *
		     * var object = { 'a': 1, 'b': '2', 'c': 3 };
		     *
		     * _.omit(object, ['a', 'c']);
		     * // => { 'b': '2' }
		     */
		    var omit = flatRest(function(object, paths) {
		      var result = {};
		      if (object == null) {
		        return result;
		      }
		      var isDeep = false;
		      paths = arrayMap(paths, function(path) {
		        path = castPath(path, object);
		        isDeep || (isDeep = path.length > 1);
		        return path;
		      });
		      copyObject(object, getAllKeysIn(object), result);
		      if (isDeep) {
		        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG);
		      }
		      var length = paths.length;
		      while (length--) {
		        baseUnset(result, paths[length]);
		      }
		      return result;
		    });
		
		    /**
		     * The opposite of `_.pickBy`; this method creates an object composed of
		     * the own and inherited enumerable string keyed properties of `object` that
		     * `predicate` doesn't return truthy for. The predicate is invoked with two
		     * arguments: (value, key).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Object
		     * @param {Object} object The source object.
		     * @param {Function} [predicate=_.identity] The function invoked per property.
		     * @returns {Object} Returns the new object.
		     * @example
		     *
		     * var object = { 'a': 1, 'b': '2', 'c': 3 };
		     *
		     * _.omitBy(object, _.isNumber);
		     * // => { 'b': '2' }
		     */
		    function omitBy(object, predicate) {
		      return pickBy(object, negate(getIteratee(predicate)));
		    }
		
		    /**
		     * Creates an object composed of the picked `object` properties.
		     *
		     * @static
		     * @since 0.1.0
		     * @memberOf _
		     * @category Object
		     * @param {Object} object The source object.
		     * @param {...(string|string[])} [paths] The property paths to pick.
		     * @returns {Object} Returns the new object.
		     * @example
		     *
		     * var object = { 'a': 1, 'b': '2', 'c': 3 };
		     *
		     * _.pick(object, ['a', 'c']);
		     * // => { 'a': 1, 'c': 3 }
		     */
		    var pick = flatRest(function(object, paths) {
		      return object == null ? {} : basePick(object, paths);
		    });
		
		    /**
		     * Creates an object composed of the `object` properties `predicate` returns
		     * truthy for. The predicate is invoked with two arguments: (value, key).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Object
		     * @param {Object} object The source object.
		     * @param {Function} [predicate=_.identity] The function invoked per property.
		     * @returns {Object} Returns the new object.
		     * @example
		     *
		     * var object = { 'a': 1, 'b': '2', 'c': 3 };
		     *
		     * _.pickBy(object, _.isNumber);
		     * // => { 'a': 1, 'c': 3 }
		     */
		    function pickBy(object, predicate) {
		      if (object == null) {
		        return {};
		      }
		      var props = arrayMap(getAllKeysIn(object), function(prop) {
		        return [prop];
		      });
		      predicate = getIteratee(predicate);
		      return basePickBy(object, props, function(value, path) {
		        return predicate(value, path[0]);
		      });
		    }
		
		    /**
		     * This method is like `_.get` except that if the resolved value is a
		     * function it's invoked with the `this` binding of its parent object and
		     * its result is returned.
		     *
		     * @static
		     * @since 0.1.0
		     * @memberOf _
		     * @category Object
		     * @param {Object} object The object to query.
		     * @param {Array|string} path The path of the property to resolve.
		     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
		     * @returns {*} Returns the resolved value.
		     * @example
		     *
		     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
		     *
		     * _.result(object, 'a[0].b.c1');
		     * // => 3
		     *
		     * _.result(object, 'a[0].b.c2');
		     * // => 4
		     *
		     * _.result(object, 'a[0].b.c3', 'default');
		     * // => 'default'
		     *
		     * _.result(object, 'a[0].b.c3', _.constant('default'));
		     * // => 'default'
		     */
		    function result(object, path, defaultValue) {
		      path = castPath(path, object);
		
		      var index = -1,
		          length = path.length;
		
		      // Ensure the loop is entered when path is empty.
		      if (!length) {
		        length = 1;
		        object = undefined;
		      }
		      while (++index < length) {
		        var value = object == null ? undefined : object[toKey(path[index])];
		        if (value === undefined) {
		          index = length;
		          value = defaultValue;
		        }
		        object = isFunction(value) ? value.call(object) : value;
		      }
		      return object;
		    }
		
		    /**
		     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
		     * it's created. Arrays are created for missing index properties while objects
		     * are created for all other missing properties. Use `_.setWith` to customize
		     * `path` creation.
		     *
		     * **Note:** This method mutates `object`.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.7.0
		     * @category Object
		     * @param {Object} object The object to modify.
		     * @param {Array|string} path The path of the property to set.
		     * @param {*} value The value to set.
		     * @returns {Object} Returns `object`.
		     * @example
		     *
		     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
		     *
		     * _.set(object, 'a[0].b.c', 4);
		     * console.log(object.a[0].b.c);
		     * // => 4
		     *
		     * _.set(object, ['x', '0', 'y', 'z'], 5);
		     * console.log(object.x[0].y.z);
		     * // => 5
		     */
		    function set(object, path, value) {
		      return object == null ? object : baseSet(object, path, value);
		    }
		
		    /**
		     * This method is like `_.set` except that it accepts `customizer` which is
		     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
		     * path creation is handled by the method instead. The `customizer` is invoked
		     * with three arguments: (nsValue, key, nsObject).
		     *
		     * **Note:** This method mutates `object`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Object
		     * @param {Object} object The object to modify.
		     * @param {Array|string} path The path of the property to set.
		     * @param {*} value The value to set.
		     * @param {Function} [customizer] The function to customize assigned values.
		     * @returns {Object} Returns `object`.
		     * @example
		     *
		     * var object = {};
		     *
		     * _.setWith(object, '[0][1]', 'a', Object);
		     * // => { '0': { '1': 'a' } }
		     */
		    function setWith(object, path, value, customizer) {
		      customizer = typeof customizer == 'function' ? customizer : undefined;
		      return object == null ? object : baseSet(object, path, value, customizer);
		    }
		
		    /**
		     * Creates an array of own enumerable string keyed-value pairs for `object`
		     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
		     * entries are returned.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @alias entries
		     * @category Object
		     * @param {Object} object The object to query.
		     * @returns {Array} Returns the key-value pairs.
		     * @example
		     *
		     * function Foo() {
		     *   this.a = 1;
		     *   this.b = 2;
		     * }
		     *
		     * Foo.prototype.c = 3;
		     *
		     * _.toPairs(new Foo);
		     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
		     */
		    var toPairs = createToPairs(keys);
		
		    /**
		     * Creates an array of own and inherited enumerable string keyed-value pairs
		     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
		     * or set, its entries are returned.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @alias entriesIn
		     * @category Object
		     * @param {Object} object The object to query.
		     * @returns {Array} Returns the key-value pairs.
		     * @example
		     *
		     * function Foo() {
		     *   this.a = 1;
		     *   this.b = 2;
		     * }
		     *
		     * Foo.prototype.c = 3;
		     *
		     * _.toPairsIn(new Foo);
		     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
		     */
		    var toPairsIn = createToPairs(keysIn);
		
		    /**
		     * An alternative to `_.reduce`; this method transforms `object` to a new
		     * `accumulator` object which is the result of running each of its own
		     * enumerable string keyed properties thru `iteratee`, with each invocation
		     * potentially mutating the `accumulator` object. If `accumulator` is not
		     * provided, a new object with the same `[[Prototype]]` will be used. The
		     * iteratee is invoked with four arguments: (accumulator, value, key, object).
		     * Iteratee functions may exit iteration early by explicitly returning `false`.
		     *
		     * @static
		     * @memberOf _
		     * @since 1.3.0
		     * @category Object
		     * @param {Object} object The object to iterate over.
		     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		     * @param {*} [accumulator] The custom accumulator value.
		     * @returns {*} Returns the accumulated value.
		     * @example
		     *
		     * _.transform([2, 3, 4], function(result, n) {
		     *   result.push(n *= n);
		     *   return n % 2 == 0;
		     * }, []);
		     * // => [4, 9]
		     *
		     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
		     *   (result[value] || (result[value] = [])).push(key);
		     * }, {});
		     * // => { '1': ['a', 'c'], '2': ['b'] }
		     */
		    function transform(object, iteratee, accumulator) {
		      var isArr = isArray(object),
		          isArrLike = isArr || isBuffer(object) || isTypedArray(object);
		
		      iteratee = getIteratee(iteratee, 4);
		      if (accumulator == null) {
		        var Ctor = object && object.constructor;
		        if (isArrLike) {
		          accumulator = isArr ? new Ctor : [];
		        }
		        else if (isObject(object)) {
		          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
		        }
		        else {
		          accumulator = {};
		        }
		      }
		      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {
		        return iteratee(accumulator, value, index, object);
		      });
		      return accumulator;
		    }
		
		    /**
		     * Removes the property at `path` of `object`.
		     *
		     * **Note:** This method mutates `object`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Object
		     * @param {Object} object The object to modify.
		     * @param {Array|string} path The path of the property to unset.
		     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
		     * @example
		     *
		     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
		     * _.unset(object, 'a[0].b.c');
		     * // => true
		     *
		     * console.log(object);
		     * // => { 'a': [{ 'b': {} }] };
		     *
		     * _.unset(object, ['a', '0', 'b', 'c']);
		     * // => true
		     *
		     * console.log(object);
		     * // => { 'a': [{ 'b': {} }] };
		     */
		    function unset(object, path) {
		      return object == null ? true : baseUnset(object, path);
		    }
		
		    /**
		     * This method is like `_.set` except that accepts `updater` to produce the
		     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
		     * is invoked with one argument: (value).
		     *
		     * **Note:** This method mutates `object`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.6.0
		     * @category Object
		     * @param {Object} object The object to modify.
		     * @param {Array|string} path The path of the property to set.
		     * @param {Function} updater The function to produce the updated value.
		     * @returns {Object} Returns `object`.
		     * @example
		     *
		     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
		     *
		     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
		     * console.log(object.a[0].b.c);
		     * // => 9
		     *
		     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
		     * console.log(object.x[0].y.z);
		     * // => 0
		     */
		    function update(object, path, updater) {
		      return object == null ? object : baseUpdate(object, path, castFunction(updater));
		    }
		
		    /**
		     * This method is like `_.update` except that it accepts `customizer` which is
		     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
		     * path creation is handled by the method instead. The `customizer` is invoked
		     * with three arguments: (nsValue, key, nsObject).
		     *
		     * **Note:** This method mutates `object`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.6.0
		     * @category Object
		     * @param {Object} object The object to modify.
		     * @param {Array|string} path The path of the property to set.
		     * @param {Function} updater The function to produce the updated value.
		     * @param {Function} [customizer] The function to customize assigned values.
		     * @returns {Object} Returns `object`.
		     * @example
		     *
		     * var object = {};
		     *
		     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
		     * // => { '0': { '1': 'a' } }
		     */
		    function updateWith(object, path, updater, customizer) {
		      customizer = typeof customizer == 'function' ? customizer : undefined;
		      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
		    }
		
		    /**
		     * Creates an array of the own enumerable string keyed property values of `object`.
		     *
		     * **Note:** Non-object values are coerced to objects.
		     *
		     * @static
		     * @since 0.1.0
		     * @memberOf _
		     * @category Object
		     * @param {Object} object The object to query.
		     * @returns {Array} Returns the array of property values.
		     * @example
		     *
		     * function Foo() {
		     *   this.a = 1;
		     *   this.b = 2;
		     * }
		     *
		     * Foo.prototype.c = 3;
		     *
		     * _.values(new Foo);
		     * // => [1, 2] (iteration order is not guaranteed)
		     *
		     * _.values('hi');
		     * // => ['h', 'i']
		     */
		    function values(object) {
		      return object == null ? [] : baseValues(object, keys(object));
		    }
		
		    /**
		     * Creates an array of the own and inherited enumerable string keyed property
		     * values of `object`.
		     *
		     * **Note:** Non-object values are coerced to objects.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Object
		     * @param {Object} object The object to query.
		     * @returns {Array} Returns the array of property values.
		     * @example
		     *
		     * function Foo() {
		     *   this.a = 1;
		     *   this.b = 2;
		     * }
		     *
		     * Foo.prototype.c = 3;
		     *
		     * _.valuesIn(new Foo);
		     * // => [1, 2, 3] (iteration order is not guaranteed)
		     */
		    function valuesIn(object) {
		      return object == null ? [] : baseValues(object, keysIn(object));
		    }
		
		    /*------------------------------------------------------------------------*/
		
		    /**
		     * Clamps `number` within the inclusive `lower` and `upper` bounds.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Number
		     * @param {number} number The number to clamp.
		     * @param {number} [lower] The lower bound.
		     * @param {number} upper The upper bound.
		     * @returns {number} Returns the clamped number.
		     * @example
		     *
		     * _.clamp(-10, -5, 5);
		     * // => -5
		     *
		     * _.clamp(10, -5, 5);
		     * // => 5
		     */
		    function clamp(number, lower, upper) {
		      if (upper === undefined) {
		        upper = lower;
		        lower = undefined;
		      }
		      if (upper !== undefined) {
		        upper = toNumber(upper);
		        upper = upper === upper ? upper : 0;
		      }
		      if (lower !== undefined) {
		        lower = toNumber(lower);
		        lower = lower === lower ? lower : 0;
		      }
		      return baseClamp(toNumber(number), lower, upper);
		    }
		
		    /**
		     * Checks if `n` is between `start` and up to, but not including, `end`. If
		     * `end` is not specified, it's set to `start` with `start` then set to `0`.
		     * If `start` is greater than `end` the params are swapped to support
		     * negative ranges.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.3.0
		     * @category Number
		     * @param {number} number The number to check.
		     * @param {number} [start=0] The start of the range.
		     * @param {number} end The end of the range.
		     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
		     * @see _.range, _.rangeRight
		     * @example
		     *
		     * _.inRange(3, 2, 4);
		     * // => true
		     *
		     * _.inRange(4, 8);
		     * // => true
		     *
		     * _.inRange(4, 2);
		     * // => false
		     *
		     * _.inRange(2, 2);
		     * // => false
		     *
		     * _.inRange(1.2, 2);
		     * // => true
		     *
		     * _.inRange(5.2, 4);
		     * // => false
		     *
		     * _.inRange(-3, -2, -6);
		     * // => true
		     */
		    function inRange(number, start, end) {
		      start = toFinite(start);
		      if (end === undefined) {
		        end = start;
		        start = 0;
		      } else {
		        end = toFinite(end);
		      }
		      number = toNumber(number);
		      return baseInRange(number, start, end);
		    }
		
		    /**
		     * Produces a random number between the inclusive `lower` and `upper` bounds.
		     * If only one argument is provided a number between `0` and the given number
		     * is returned. If `floating` is `true`, or either `lower` or `upper` are
		     * floats, a floating-point number is returned instead of an integer.
		     *
		     * **Note:** JavaScript follows the IEEE-754 standard for resolving
		     * floating-point values which can produce unexpected results.
		     *
		     * @static
		     * @memberOf _
		     * @since 0.7.0
		     * @category Number
		     * @param {number} [lower=0] The lower bound.
		     * @param {number} [upper=1] The upper bound.
		     * @param {boolean} [floating] Specify returning a floating-point number.
		     * @returns {number} Returns the random number.
		     * @example
		     *
		     * _.random(0, 5);
		     * // => an integer between 0 and 5
		     *
		     * _.random(5);
		     * // => also an integer between 0 and 5
		     *
		     * _.random(5, true);
		     * // => a floating-point number between 0 and 5
		     *
		     * _.random(1.2, 5.2);
		     * // => a floating-point number between 1.2 and 5.2
		     */
		    function random(lower, upper, floating) {
		      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
		        upper = floating = undefined;
		      }
		      if (floating === undefined) {
		        if (typeof upper == 'boolean') {
		          floating = upper;
		          upper = undefined;
		        }
		        else if (typeof lower == 'boolean') {
		          floating = lower;
		          lower = undefined;
		        }
		      }
		      if (lower === undefined && upper === undefined) {
		        lower = 0;
		        upper = 1;
		      }
		      else {
		        lower = toFinite(lower);
		        if (upper === undefined) {
		          upper = lower;
		          lower = 0;
		        } else {
		          upper = toFinite(upper);
		        }
		      }
		      if (lower > upper) {
		        var temp = lower;
		        lower = upper;
		        upper = temp;
		      }
		      if (floating || lower % 1 || upper % 1) {
		        var rand = nativeRandom();
		        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);
		      }
		      return baseRandom(lower, upper);
		    }
		
		    /*------------------------------------------------------------------------*/
		
		    /**
		     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category String
		     * @param {string} [string=''] The string to convert.
		     * @returns {string} Returns the camel cased string.
		     * @example
		     *
		     * _.camelCase('Foo Bar');
		     * // => 'fooBar'
		     *
		     * _.camelCase('--foo-bar--');
		     * // => 'fooBar'
		     *
		     * _.camelCase('__FOO_BAR__');
		     * // => 'fooBar'
		     */
		    var camelCase = createCompounder(function(result, word, index) {
		      word = word.toLowerCase();
		      return result + (index ? capitalize(word) : word);
		    });
		
		    /**
		     * Converts the first character of `string` to upper case and the remaining
		     * to lower case.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category String
		     * @param {string} [string=''] The string to capitalize.
		     * @returns {string} Returns the capitalized string.
		     * @example
		     *
		     * _.capitalize('FRED');
		     * // => 'Fred'
		     */
		    function capitalize(string) {
		      return upperFirst(toString(string).toLowerCase());
		    }
		
		    /**
		     * Deburrs `string` by converting
		     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
		     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
		     * letters to basic Latin letters and removing
		     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category String
		     * @param {string} [string=''] The string to deburr.
		     * @returns {string} Returns the deburred string.
		     * @example
		     *
		     * _.deburr('déjà vu');
		     * // => 'deja vu'
		     */
		    function deburr(string) {
		      string = toString(string);
		      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
		    }
		
		    /**
		     * Checks if `string` ends with the given target string.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category String
		     * @param {string} [string=''] The string to inspect.
		     * @param {string} [target] The string to search for.
		     * @param {number} [position=string.length] The position to search up to.
		     * @returns {boolean} Returns `true` if `string` ends with `target`,
		     *  else `false`.
		     * @example
		     *
		     * _.endsWith('abc', 'c');
		     * // => true
		     *
		     * _.endsWith('abc', 'b');
		     * // => false
		     *
		     * _.endsWith('abc', 'b', 2);
		     * // => true
		     */
		    function endsWith(string, target, position) {
		      string = toString(string);
		      target = baseToString(target);
		
		      var length = string.length;
		      position = position === undefined
		        ? length
		        : baseClamp(toInteger(position), 0, length);
		
		      var end = position;
		      position -= target.length;
		      return position >= 0 && string.slice(position, end) == target;
		    }
		
		    /**
		     * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
		     * corresponding HTML entities.
		     *
		     * **Note:** No other characters are escaped. To escape additional
		     * characters use a third-party library like [_he_](https://mths.be/he).
		     *
		     * Though the ">" character is escaped for symmetry, characters like
		     * ">" and "/" don't need escaping in HTML and have no special meaning
		     * unless they're part of a tag or unquoted attribute value. See
		     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
		     * (under "semi-related fun fact") for more details.
		     *
		     * When working with HTML you should always
		     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
		     * XSS vectors.
		     *
		     * @static
		     * @since 0.1.0
		     * @memberOf _
		     * @category String
		     * @param {string} [string=''] The string to escape.
		     * @returns {string} Returns the escaped string.
		     * @example
		     *
		     * _.escape('fred, barney, & pebbles');
		     * // => 'fred, barney, &amp; pebbles'
		     */
		    function escape(string) {
		      string = toString(string);
		      return (string && reHasUnescapedHtml.test(string))
		        ? string.replace(reUnescapedHtml, escapeHtmlChar)
		        : string;
		    }
		
		    /**
		     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
		     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category String
		     * @param {string} [string=''] The string to escape.
		     * @returns {string} Returns the escaped string.
		     * @example
		     *
		     * _.escapeRegExp('[lodash](https://lodash.com/)');
		     * // => '\[lodash\]\(https://lodash\.com/\)'
		     */
		    function escapeRegExp(string) {
		      string = toString(string);
		      return (string && reHasRegExpChar.test(string))
		        ? string.replace(reRegExpChar, '\\$&')
		        : string;
		    }
		
		    /**
		     * Converts `string` to
		     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category String
		     * @param {string} [string=''] The string to convert.
		     * @returns {string} Returns the kebab cased string.
		     * @example
		     *
		     * _.kebabCase('Foo Bar');
		     * // => 'foo-bar'
		     *
		     * _.kebabCase('fooBar');
		     * // => 'foo-bar'
		     *
		     * _.kebabCase('__FOO_BAR__');
		     * // => 'foo-bar'
		     */
		    var kebabCase = createCompounder(function(result, word, index) {
		      return result + (index ? '-' : '') + word.toLowerCase();
		    });
		
		    /**
		     * Converts `string`, as space separated words, to lower case.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category String
		     * @param {string} [string=''] The string to convert.
		     * @returns {string} Returns the lower cased string.
		     * @example
		     *
		     * _.lowerCase('--Foo-Bar--');
		     * // => 'foo bar'
		     *
		     * _.lowerCase('fooBar');
		     * // => 'foo bar'
		     *
		     * _.lowerCase('__FOO_BAR__');
		     * // => 'foo bar'
		     */
		    var lowerCase = createCompounder(function(result, word, index) {
		      return result + (index ? ' ' : '') + word.toLowerCase();
		    });
		
		    /**
		     * Converts the first character of `string` to lower case.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category String
		     * @param {string} [string=''] The string to convert.
		     * @returns {string} Returns the converted string.
		     * @example
		     *
		     * _.lowerFirst('Fred');
		     * // => 'fred'
		     *
		     * _.lowerFirst('FRED');
		     * // => 'fRED'
		     */
		    var lowerFirst = createCaseFirst('toLowerCase');
		
		    /**
		     * Pads `string` on the left and right sides if it's shorter than `length`.
		     * Padding characters are truncated if they can't be evenly divided by `length`.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category String
		     * @param {string} [string=''] The string to pad.
		     * @param {number} [length=0] The padding length.
		     * @param {string} [chars=' '] The string used as padding.
		     * @returns {string} Returns the padded string.
		     * @example
		     *
		     * _.pad('abc', 8);
		     * // => '  abc   '
		     *
		     * _.pad('abc', 8, '_-');
		     * // => '_-abc_-_'
		     *
		     * _.pad('abc', 3);
		     * // => 'abc'
		     */
		    function pad(string, length, chars) {
		      string = toString(string);
		      length = toInteger(length);
		
		      var strLength = length ? stringSize(string) : 0;
		      if (!length || strLength >= length) {
		        return string;
		      }
		      var mid = (length - strLength) / 2;
		      return (
		        createPadding(nativeFloor(mid), chars) +
		        string +
		        createPadding(nativeCeil(mid), chars)
		      );
		    }
		
		    /**
		     * Pads `string` on the right side if it's shorter than `length`. Padding
		     * characters are truncated if they exceed `length`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category String
		     * @param {string} [string=''] The string to pad.
		     * @param {number} [length=0] The padding length.
		     * @param {string} [chars=' '] The string used as padding.
		     * @returns {string} Returns the padded string.
		     * @example
		     *
		     * _.padEnd('abc', 6);
		     * // => 'abc   '
		     *
		     * _.padEnd('abc', 6, '_-');
		     * // => 'abc_-_'
		     *
		     * _.padEnd('abc', 3);
		     * // => 'abc'
		     */
		    function padEnd(string, length, chars) {
		      string = toString(string);
		      length = toInteger(length);
		
		      var strLength = length ? stringSize(string) : 0;
		      return (length && strLength < length)
		        ? (string + createPadding(length - strLength, chars))
		        : string;
		    }
		
		    /**
		     * Pads `string` on the left side if it's shorter than `length`. Padding
		     * characters are truncated if they exceed `length`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category String
		     * @param {string} [string=''] The string to pad.
		     * @param {number} [length=0] The padding length.
		     * @param {string} [chars=' '] The string used as padding.
		     * @returns {string} Returns the padded string.
		     * @example
		     *
		     * _.padStart('abc', 6);
		     * // => '   abc'
		     *
		     * _.padStart('abc', 6, '_-');
		     * // => '_-_abc'
		     *
		     * _.padStart('abc', 3);
		     * // => 'abc'
		     */
		    function padStart(string, length, chars) {
		      string = toString(string);
		      length = toInteger(length);
		
		      var strLength = length ? stringSize(string) : 0;
		      return (length && strLength < length)
		        ? (createPadding(length - strLength, chars) + string)
		        : string;
		    }
		
		    /**
		     * Converts `string` to an integer of the specified radix. If `radix` is
		     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
		     * hexadecimal, in which case a `radix` of `16` is used.
		     *
		     * **Note:** This method aligns with the
		     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
		     *
		     * @static
		     * @memberOf _
		     * @since 1.1.0
		     * @category String
		     * @param {string} string The string to convert.
		     * @param {number} [radix=10] The radix to interpret `value` by.
		     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		     * @returns {number} Returns the converted integer.
		     * @example
		     *
		     * _.parseInt('08');
		     * // => 8
		     *
		     * _.map(['6', '08', '10'], _.parseInt);
		     * // => [6, 8, 10]
		     */
		    function parseInt(string, radix, guard) {
		      if (guard || radix == null) {
		        radix = 0;
		      } else if (radix) {
		        radix = +radix;
		      }
		      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);
		    }
		
		    /**
		     * Repeats the given string `n` times.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category String
		     * @param {string} [string=''] The string to repeat.
		     * @param {number} [n=1] The number of times to repeat the string.
		     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		     * @returns {string} Returns the repeated string.
		     * @example
		     *
		     * _.repeat('*', 3);
		     * // => '***'
		     *
		     * _.repeat('abc', 2);
		     * // => 'abcabc'
		     *
		     * _.repeat('abc', 0);
		     * // => ''
		     */
		    function repeat(string, n, guard) {
		      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {
		        n = 1;
		      } else {
		        n = toInteger(n);
		      }
		      return baseRepeat(toString(string), n);
		    }
		
		    /**
		     * Replaces matches for `pattern` in `string` with `replacement`.
		     *
		     * **Note:** This method is based on
		     * [`String#replace`](https://mdn.io/String/replace).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category String
		     * @param {string} [string=''] The string to modify.
		     * @param {RegExp|string} pattern The pattern to replace.
		     * @param {Function|string} replacement The match replacement.
		     * @returns {string} Returns the modified string.
		     * @example
		     *
		     * _.replace('Hi Fred', 'Fred', 'Barney');
		     * // => 'Hi Barney'
		     */
		    function replace() {
		      var args = arguments,
		          string = toString(args[0]);
		
		      return args.length < 3 ? string : string.replace(args[1], args[2]);
		    }
		
		    /**
		     * Converts `string` to
		     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category String
		     * @param {string} [string=''] The string to convert.
		     * @returns {string} Returns the snake cased string.
		     * @example
		     *
		     * _.snakeCase('Foo Bar');
		     * // => 'foo_bar'
		     *
		     * _.snakeCase('fooBar');
		     * // => 'foo_bar'
		     *
		     * _.snakeCase('--FOO-BAR--');
		     * // => 'foo_bar'
		     */
		    var snakeCase = createCompounder(function(result, word, index) {
		      return result + (index ? '_' : '') + word.toLowerCase();
		    });
		
		    /**
		     * Splits `string` by `separator`.
		     *
		     * **Note:** This method is based on
		     * [`String#split`](https://mdn.io/String/split).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category String
		     * @param {string} [string=''] The string to split.
		     * @param {RegExp|string} separator The separator pattern to split by.
		     * @param {number} [limit] The length to truncate results to.
		     * @returns {Array} Returns the string segments.
		     * @example
		     *
		     * _.split('a-b-c', '-', 2);
		     * // => ['a', 'b']
		     */
		    function split(string, separator, limit) {
		      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
		        separator = limit = undefined;
		      }
		      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
		      if (!limit) {
		        return [];
		      }
		      string = toString(string);
		      if (string && (
		            typeof separator == 'string' ||
		            (separator != null && !isRegExp(separator))
		          )) {
		        separator = baseToString(separator);
		        if (!separator && hasUnicode(string)) {
		          return castSlice(stringToArray(string), 0, limit);
		        }
		      }
		      return string.split(separator, limit);
		    }
		
		    /**
		     * Converts `string` to
		     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
		     *
		     * @static
		     * @memberOf _
		     * @since 3.1.0
		     * @category String
		     * @param {string} [string=''] The string to convert.
		     * @returns {string} Returns the start cased string.
		     * @example
		     *
		     * _.startCase('--foo-bar--');
		     * // => 'Foo Bar'
		     *
		     * _.startCase('fooBar');
		     * // => 'Foo Bar'
		     *
		     * _.startCase('__FOO_BAR__');
		     * // => 'FOO BAR'
		     */
		    var startCase = createCompounder(function(result, word, index) {
		      return result + (index ? ' ' : '') + upperFirst(word);
		    });
		
		    /**
		     * Checks if `string` starts with the given target string.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category String
		     * @param {string} [string=''] The string to inspect.
		     * @param {string} [target] The string to search for.
		     * @param {number} [position=0] The position to search from.
		     * @returns {boolean} Returns `true` if `string` starts with `target`,
		     *  else `false`.
		     * @example
		     *
		     * _.startsWith('abc', 'a');
		     * // => true
		     *
		     * _.startsWith('abc', 'b');
		     * // => false
		     *
		     * _.startsWith('abc', 'b', 1);
		     * // => true
		     */
		    function startsWith(string, target, position) {
		      string = toString(string);
		      position = baseClamp(toInteger(position), 0, string.length);
		      target = baseToString(target);
		      return string.slice(position, position + target.length) == target;
		    }
		
		    /**
		     * Creates a compiled template function that can interpolate data properties
		     * in "interpolate" delimiters, HTML-escape interpolated data properties in
		     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
		     * properties may be accessed as free variables in the template. If a setting
		     * object is given, it takes precedence over `_.templateSettings` values.
		     *
		     * **Note:** In the development build `_.template` utilizes
		     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
		     * for easier debugging.
		     *
		     * For more information on precompiling templates see
		     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
		     *
		     * For more information on Chrome extension sandboxes see
		     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
		     *
		     * @static
		     * @since 0.1.0
		     * @memberOf _
		     * @category String
		     * @param {string} [string=''] The template string.
		     * @param {Object} [options={}] The options object.
		     * @param {RegExp} [options.escape=_.templateSettings.escape]
		     *  The HTML "escape" delimiter.
		     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
		     *  The "evaluate" delimiter.
		     * @param {Object} [options.imports=_.templateSettings.imports]
		     *  An object to import into the template as free variables.
		     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
		     *  The "interpolate" delimiter.
		     * @param {string} [options.sourceURL='lodash.templateSources[n]']
		     *  The sourceURL of the compiled template.
		     * @param {string} [options.variable='obj']
		     *  The data object variable name.
		     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		     * @returns {Function} Returns the compiled template function.
		     * @example
		     *
		     * // Use the "interpolate" delimiter to create a compiled template.
		     * var compiled = _.template('hello <%= user %>!');
		     * compiled({ 'user': 'fred' });
		     * // => 'hello fred!'
		     *
		     * // Use the HTML "escape" delimiter to escape data property values.
		     * var compiled = _.template('<b><%- value %></b>');
		     * compiled({ 'value': '<script>' });
		     * // => '<b>&lt;script&gt;</b>'
		     *
		     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
		     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
		     * compiled({ 'users': ['fred', 'barney'] });
		     * // => '<li>fred</li><li>barney</li>'
		     *
		     * // Use the internal `print` function in "evaluate" delimiters.
		     * var compiled = _.template('<% print("hello " + user); %>!');
		     * compiled({ 'user': 'barney' });
		     * // => 'hello barney!'
		     *
		     * // Use the ES template literal delimiter as an "interpolate" delimiter.
		     * // Disable support by replacing the "interpolate" delimiter.
		     * var compiled = _.template('hello ${ user }!');
		     * compiled({ 'user': 'pebbles' });
		     * // => 'hello pebbles!'
		     *
		     * // Use backslashes to treat delimiters as plain text.
		     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
		     * compiled({ 'value': 'ignored' });
		     * // => '<%- value %>'
		     *
		     * // Use the `imports` option to import `jQuery` as `jq`.
		     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
		     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
		     * compiled({ 'users': ['fred', 'barney'] });
		     * // => '<li>fred</li><li>barney</li>'
		     *
		     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
		     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
		     * compiled(data);
		     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
		     *
		     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
		     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
		     * compiled.source;
		     * // => function(data) {
		     * //   var __t, __p = '';
		     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
		     * //   return __p;
		     * // }
		     *
		     * // Use custom template delimiters.
		     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
		     * var compiled = _.template('hello {{ user }}!');
		     * compiled({ 'user': 'mustache' });
		     * // => 'hello mustache!'
		     *
		     * // Use the `source` property to inline compiled templates for meaningful
		     * // line numbers in error messages and stack traces.
		     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
		     *   var JST = {\
		     *     "main": ' + _.template(mainText).source + '\
		     *   };\
		     * ');
		     */
		    function template(string, options, guard) {
		      // Based on John Resig's `tmpl` implementation
		      // (http://ejohn.org/blog/javascript-micro-templating/)
		      // and Laura Doktorova's doT.js (https://github.com/olado/doT).
		      var settings = lodash.templateSettings;
		
		      if (guard && isIterateeCall(string, options, guard)) {
		        options = undefined;
		      }
		      string = toString(string);
		      options = assignInWith({}, options, settings, assignInDefaults);
		
		      var imports = assignInWith({}, options.imports, settings.imports, assignInDefaults),
		          importsKeys = keys(imports),
		          importsValues = baseValues(imports, importsKeys);
		
		      var isEscaping,
		          isEvaluating,
		          index = 0,
		          interpolate = options.interpolate || reNoMatch,
		          source = "__p += '";
		
		      // Compile the regexp to match each delimiter.
		      var reDelimiters = RegExp(
		        (options.escape || reNoMatch).source + '|' +
		        interpolate.source + '|' +
		        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
		        (options.evaluate || reNoMatch).source + '|$'
		      , 'g');
		
		      // Use a sourceURL for easier debugging.
		      var sourceURL = '//# sourceURL=' +
		        ('sourceURL' in options
		          ? options.sourceURL
		          : ('lodash.templateSources[' + (++templateCounter) + ']')
		        ) + '\n';
		
		      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
		        interpolateValue || (interpolateValue = esTemplateValue);
		
		        // Escape characters that can't be included in string literals.
		        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);
		
		        // Replace delimiters with snippets.
		        if (escapeValue) {
		          isEscaping = true;
		          source += "' +\n__e(" + escapeValue + ") +\n'";
		        }
		        if (evaluateValue) {
		          isEvaluating = true;
		          source += "';\n" + evaluateValue + ";\n__p += '";
		        }
		        if (interpolateValue) {
		          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
		        }
		        index = offset + match.length;
		
		        // The JS engine embedded in Adobe products needs `match` returned in
		        // order to produce the correct `offset` value.
		        return match;
		      });
		
		      source += "';\n";
		
		      // If `variable` is not specified wrap a with-statement around the generated
		      // code to add the data object to the top of the scope chain.
		      var variable = options.variable;
		      if (!variable) {
		        source = 'with (obj) {\n' + source + '\n}\n';
		      }
		      // Cleanup code by stripping empty strings.
		      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
		        .replace(reEmptyStringMiddle, '$1')
		        .replace(reEmptyStringTrailing, '$1;');
		
		      // Frame code as the function body.
		      source = 'function(' + (variable || 'obj') + ') {\n' +
		        (variable
		          ? ''
		          : 'obj || (obj = {});\n'
		        ) +
		        "var __t, __p = ''" +
		        (isEscaping
		           ? ', __e = _.escape'
		           : ''
		        ) +
		        (isEvaluating
		          ? ', __j = Array.prototype.join;\n' +
		            "function print() { __p += __j.call(arguments, '') }\n"
		          : ';\n'
		        ) +
		        source +
		        'return __p\n}';
		
		      var result = attempt(function() {
		        return Function(importsKeys, sourceURL + 'return ' + source)
		          .apply(undefined, importsValues);
		      });
		
		      // Provide the compiled function's source by its `toString` method or
		      // the `source` property as a convenience for inlining compiled templates.
		      result.source = source;
		      if (isError(result)) {
		        throw result;
		      }
		      return result;
		    }
		
		    /**
		     * Converts `string`, as a whole, to lower case just like
		     * [String#toLowerCase](https://mdn.io/toLowerCase).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category String
		     * @param {string} [string=''] The string to convert.
		     * @returns {string} Returns the lower cased string.
		     * @example
		     *
		     * _.toLower('--Foo-Bar--');
		     * // => '--foo-bar--'
		     *
		     * _.toLower('fooBar');
		     * // => 'foobar'
		     *
		     * _.toLower('__FOO_BAR__');
		     * // => '__foo_bar__'
		     */
		    function toLower(value) {
		      return toString(value).toLowerCase();
		    }
		
		    /**
		     * Converts `string`, as a whole, to upper case just like
		     * [String#toUpperCase](https://mdn.io/toUpperCase).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category String
		     * @param {string} [string=''] The string to convert.
		     * @returns {string} Returns the upper cased string.
		     * @example
		     *
		     * _.toUpper('--foo-bar--');
		     * // => '--FOO-BAR--'
		     *
		     * _.toUpper('fooBar');
		     * // => 'FOOBAR'
		     *
		     * _.toUpper('__foo_bar__');
		     * // => '__FOO_BAR__'
		     */
		    function toUpper(value) {
		      return toString(value).toUpperCase();
		    }
		
		    /**
		     * Removes leading and trailing whitespace or specified characters from `string`.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category String
		     * @param {string} [string=''] The string to trim.
		     * @param {string} [chars=whitespace] The characters to trim.
		     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		     * @returns {string} Returns the trimmed string.
		     * @example
		     *
		     * _.trim('  abc  ');
		     * // => 'abc'
		     *
		     * _.trim('-_-abc-_-', '_-');
		     * // => 'abc'
		     *
		     * _.map(['  foo  ', '  bar  '], _.trim);
		     * // => ['foo', 'bar']
		     */
		    function trim(string, chars, guard) {
		      string = toString(string);
		      if (string && (guard || chars === undefined)) {
		        return string.replace(reTrim, '');
		      }
		      if (!string || !(chars = baseToString(chars))) {
		        return string;
		      }
		      var strSymbols = stringToArray(string),
		          chrSymbols = stringToArray(chars),
		          start = charsStartIndex(strSymbols, chrSymbols),
		          end = charsEndIndex(strSymbols, chrSymbols) + 1;
		
		      return castSlice(strSymbols, start, end).join('');
		    }
		
		    /**
		     * Removes trailing whitespace or specified characters from `string`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category String
		     * @param {string} [string=''] The string to trim.
		     * @param {string} [chars=whitespace] The characters to trim.
		     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		     * @returns {string} Returns the trimmed string.
		     * @example
		     *
		     * _.trimEnd('  abc  ');
		     * // => '  abc'
		     *
		     * _.trimEnd('-_-abc-_-', '_-');
		     * // => '-_-abc'
		     */
		    function trimEnd(string, chars, guard) {
		      string = toString(string);
		      if (string && (guard || chars === undefined)) {
		        return string.replace(reTrimEnd, '');
		      }
		      if (!string || !(chars = baseToString(chars))) {
		        return string;
		      }
		      var strSymbols = stringToArray(string),
		          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;
		
		      return castSlice(strSymbols, 0, end).join('');
		    }
		
		    /**
		     * Removes leading whitespace or specified characters from `string`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category String
		     * @param {string} [string=''] The string to trim.
		     * @param {string} [chars=whitespace] The characters to trim.
		     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		     * @returns {string} Returns the trimmed string.
		     * @example
		     *
		     * _.trimStart('  abc  ');
		     * // => 'abc  '
		     *
		     * _.trimStart('-_-abc-_-', '_-');
		     * // => 'abc-_-'
		     */
		    function trimStart(string, chars, guard) {
		      string = toString(string);
		      if (string && (guard || chars === undefined)) {
		        return string.replace(reTrimStart, '');
		      }
		      if (!string || !(chars = baseToString(chars))) {
		        return string;
		      }
		      var strSymbols = stringToArray(string),
		          start = charsStartIndex(strSymbols, stringToArray(chars));
		
		      return castSlice(strSymbols, start).join('');
		    }
		
		    /**
		     * Truncates `string` if it's longer than the given maximum string length.
		     * The last characters of the truncated string are replaced with the omission
		     * string which defaults to "...".
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category String
		     * @param {string} [string=''] The string to truncate.
		     * @param {Object} [options={}] The options object.
		     * @param {number} [options.length=30] The maximum string length.
		     * @param {string} [options.omission='...'] The string to indicate text is omitted.
		     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
		     * @returns {string} Returns the truncated string.
		     * @example
		     *
		     * _.truncate('hi-diddly-ho there, neighborino');
		     * // => 'hi-diddly-ho there, neighbo...'
		     *
		     * _.truncate('hi-diddly-ho there, neighborino', {
		     *   'length': 24,
		     *   'separator': ' '
		     * });
		     * // => 'hi-diddly-ho there,...'
		     *
		     * _.truncate('hi-diddly-ho there, neighborino', {
		     *   'length': 24,
		     *   'separator': /,? +/
		     * });
		     * // => 'hi-diddly-ho there...'
		     *
		     * _.truncate('hi-diddly-ho there, neighborino', {
		     *   'omission': ' [...]'
		     * });
		     * // => 'hi-diddly-ho there, neig [...]'
		     */
		    function truncate(string, options) {
		      var length = DEFAULT_TRUNC_LENGTH,
		          omission = DEFAULT_TRUNC_OMISSION;
		
		      if (isObject(options)) {
		        var separator = 'separator' in options ? options.separator : separator;
		        length = 'length' in options ? toInteger(options.length) : length;
		        omission = 'omission' in options ? baseToString(options.omission) : omission;
		      }
		      string = toString(string);
		
		      var strLength = string.length;
		      if (hasUnicode(string)) {
		        var strSymbols = stringToArray(string);
		        strLength = strSymbols.length;
		      }
		      if (length >= strLength) {
		        return string;
		      }
		      var end = length - stringSize(omission);
		      if (end < 1) {
		        return omission;
		      }
		      var result = strSymbols
		        ? castSlice(strSymbols, 0, end).join('')
		        : string.slice(0, end);
		
		      if (separator === undefined) {
		        return result + omission;
		      }
		      if (strSymbols) {
		        end += (result.length - end);
		      }
		      if (isRegExp(separator)) {
		        if (string.slice(end).search(separator)) {
		          var match,
		              substring = result;
		
		          if (!separator.global) {
		            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
		          }
		          separator.lastIndex = 0;
		          while ((match = separator.exec(substring))) {
		            var newEnd = match.index;
		          }
		          result = result.slice(0, newEnd === undefined ? end : newEnd);
		        }
		      } else if (string.indexOf(baseToString(separator), end) != end) {
		        var index = result.lastIndexOf(separator);
		        if (index > -1) {
		          result = result.slice(0, index);
		        }
		      }
		      return result + omission;
		    }
		
		    /**
		     * The inverse of `_.escape`; this method converts the HTML entities
		     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
		     * their corresponding characters.
		     *
		     * **Note:** No other HTML entities are unescaped. To unescape additional
		     * HTML entities use a third-party library like [_he_](https://mths.be/he).
		     *
		     * @static
		     * @memberOf _
		     * @since 0.6.0
		     * @category String
		     * @param {string} [string=''] The string to unescape.
		     * @returns {string} Returns the unescaped string.
		     * @example
		     *
		     * _.unescape('fred, barney, &amp; pebbles');
		     * // => 'fred, barney, & pebbles'
		     */
		    function unescape(string) {
		      string = toString(string);
		      return (string && reHasEscapedHtml.test(string))
		        ? string.replace(reEscapedHtml, unescapeHtmlChar)
		        : string;
		    }
		
		    /**
		     * Converts `string`, as space separated words, to upper case.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category String
		     * @param {string} [string=''] The string to convert.
		     * @returns {string} Returns the upper cased string.
		     * @example
		     *
		     * _.upperCase('--foo-bar');
		     * // => 'FOO BAR'
		     *
		     * _.upperCase('fooBar');
		     * // => 'FOO BAR'
		     *
		     * _.upperCase('__foo_bar__');
		     * // => 'FOO BAR'
		     */
		    var upperCase = createCompounder(function(result, word, index) {
		      return result + (index ? ' ' : '') + word.toUpperCase();
		    });
		
		    /**
		     * Converts the first character of `string` to upper case.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category String
		     * @param {string} [string=''] The string to convert.
		     * @returns {string} Returns the converted string.
		     * @example
		     *
		     * _.upperFirst('fred');
		     * // => 'Fred'
		     *
		     * _.upperFirst('FRED');
		     * // => 'FRED'
		     */
		    var upperFirst = createCaseFirst('toUpperCase');
		
		    /**
		     * Splits `string` into an array of its words.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category String
		     * @param {string} [string=''] The string to inspect.
		     * @param {RegExp|string} [pattern] The pattern to match words.
		     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
		     * @returns {Array} Returns the words of `string`.
		     * @example
		     *
		     * _.words('fred, barney, & pebbles');
		     * // => ['fred', 'barney', 'pebbles']
		     *
		     * _.words('fred, barney, & pebbles', /[^, ]+/g);
		     * // => ['fred', 'barney', '&', 'pebbles']
		     */
		    function words(string, pattern, guard) {
		      string = toString(string);
		      pattern = guard ? undefined : pattern;
		
		      if (pattern === undefined) {
		        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
		      }
		      return string.match(pattern) || [];
		    }
		
		    /*------------------------------------------------------------------------*/
		
		    /**
		     * Attempts to invoke `func`, returning either the result or the caught error
		     * object. Any additional arguments are provided to `func` when it's invoked.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Util
		     * @param {Function} func The function to attempt.
		     * @param {...*} [args] The arguments to invoke `func` with.
		     * @returns {*} Returns the `func` result or error object.
		     * @example
		     *
		     * // Avoid throwing errors for invalid selectors.
		     * var elements = _.attempt(function(selector) {
		     *   return document.querySelectorAll(selector);
		     * }, '>_>');
		     *
		     * if (_.isError(elements)) {
		     *   elements = [];
		     * }
		     */
		    var attempt = baseRest(function(func, args) {
		      try {
		        return apply(func, undefined, args);
		      } catch (e) {
		        return isError(e) ? e : new Error(e);
		      }
		    });
		
		    /**
		     * Binds methods of an object to the object itself, overwriting the existing
		     * method.
		     *
		     * **Note:** This method doesn't set the "length" property of bound functions.
		     *
		     * @static
		     * @since 0.1.0
		     * @memberOf _
		     * @category Util
		     * @param {Object} object The object to bind and assign the bound methods to.
		     * @param {...(string|string[])} methodNames The object method names to bind.
		     * @returns {Object} Returns `object`.
		     * @example
		     *
		     * var view = {
		     *   'label': 'docs',
		     *   'click': function() {
		     *     console.log('clicked ' + this.label);
		     *   }
		     * };
		     *
		     * _.bindAll(view, ['click']);
		     * jQuery(element).on('click', view.click);
		     * // => Logs 'clicked docs' when clicked.
		     */
		    var bindAll = flatRest(function(object, methodNames) {
		      arrayEach(methodNames, function(key) {
		        key = toKey(key);
		        baseAssignValue(object, key, bind(object[key], object));
		      });
		      return object;
		    });
		
		    /**
		     * Creates a function that iterates over `pairs` and invokes the corresponding
		     * function of the first predicate to return truthy. The predicate-function
		     * pairs are invoked with the `this` binding and arguments of the created
		     * function.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Util
		     * @param {Array} pairs The predicate-function pairs.
		     * @returns {Function} Returns the new composite function.
		     * @example
		     *
		     * var func = _.cond([
		     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
		     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
		     *   [_.stubTrue,                      _.constant('no match')]
		     * ]);
		     *
		     * func({ 'a': 1, 'b': 2 });
		     * // => 'matches A'
		     *
		     * func({ 'a': 0, 'b': 1 });
		     * // => 'matches B'
		     *
		     * func({ 'a': '1', 'b': '2' });
		     * // => 'no match'
		     */
		    function cond(pairs) {
		      var length = pairs == null ? 0 : pairs.length,
		          toIteratee = getIteratee();
		
		      pairs = !length ? [] : arrayMap(pairs, function(pair) {
		        if (typeof pair[1] != 'function') {
		          throw new TypeError(FUNC_ERROR_TEXT);
		        }
		        return [toIteratee(pair[0]), pair[1]];
		      });
		
		      return baseRest(function(args) {
		        var index = -1;
		        while (++index < length) {
		          var pair = pairs[index];
		          if (apply(pair[0], this, args)) {
		            return apply(pair[1], this, args);
		          }
		        }
		      });
		    }
		
		    /**
		     * Creates a function that invokes the predicate properties of `source` with
		     * the corresponding property values of a given object, returning `true` if
		     * all predicates return truthy, else `false`.
		     *
		     * **Note:** The created function is equivalent to `_.conformsTo` with
		     * `source` partially applied.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Util
		     * @param {Object} source The object of property predicates to conform to.
		     * @returns {Function} Returns the new spec function.
		     * @example
		     *
		     * var objects = [
		     *   { 'a': 2, 'b': 1 },
		     *   { 'a': 1, 'b': 2 }
		     * ];
		     *
		     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
		     * // => [{ 'a': 1, 'b': 2 }]
		     */
		    function conforms(source) {
		      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
		    }
		
		    /**
		     * Creates a function that returns `value`.
		     *
		     * @static
		     * @memberOf _
		     * @since 2.4.0
		     * @category Util
		     * @param {*} value The value to return from the new function.
		     * @returns {Function} Returns the new constant function.
		     * @example
		     *
		     * var objects = _.times(2, _.constant({ 'a': 1 }));
		     *
		     * console.log(objects);
		     * // => [{ 'a': 1 }, { 'a': 1 }]
		     *
		     * console.log(objects[0] === objects[1]);
		     * // => true
		     */
		    function constant(value) {
		      return function() {
		        return value;
		      };
		    }
		
		    /**
		     * Checks `value` to determine whether a default value should be returned in
		     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
		     * or `undefined`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.14.0
		     * @category Util
		     * @param {*} value The value to check.
		     * @param {*} defaultValue The default value.
		     * @returns {*} Returns the resolved value.
		     * @example
		     *
		     * _.defaultTo(1, 10);
		     * // => 1
		     *
		     * _.defaultTo(undefined, 10);
		     * // => 10
		     */
		    function defaultTo(value, defaultValue) {
		      return (value == null || value !== value) ? defaultValue : value;
		    }
		
		    /**
		     * Creates a function that returns the result of invoking the given functions
		     * with the `this` binding of the created function, where each successive
		     * invocation is supplied the return value of the previous.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Util
		     * @param {...(Function|Function[])} [funcs] The functions to invoke.
		     * @returns {Function} Returns the new composite function.
		     * @see _.flowRight
		     * @example
		     *
		     * function square(n) {
		     *   return n * n;
		     * }
		     *
		     * var addSquare = _.flow([_.add, square]);
		     * addSquare(1, 2);
		     * // => 9
		     */
		    var flow = createFlow();
		
		    /**
		     * This method is like `_.flow` except that it creates a function that
		     * invokes the given functions from right to left.
		     *
		     * @static
		     * @since 3.0.0
		     * @memberOf _
		     * @category Util
		     * @param {...(Function|Function[])} [funcs] The functions to invoke.
		     * @returns {Function} Returns the new composite function.
		     * @see _.flow
		     * @example
		     *
		     * function square(n) {
		     *   return n * n;
		     * }
		     *
		     * var addSquare = _.flowRight([square, _.add]);
		     * addSquare(1, 2);
		     * // => 9
		     */
		    var flowRight = createFlow(true);
		
		    /**
		     * This method returns the first argument it receives.
		     *
		     * @static
		     * @since 0.1.0
		     * @memberOf _
		     * @category Util
		     * @param {*} value Any value.
		     * @returns {*} Returns `value`.
		     * @example
		     *
		     * var object = { 'a': 1 };
		     *
		     * console.log(_.identity(object) === object);
		     * // => true
		     */
		    function identity(value) {
		      return value;
		    }
		
		    /**
		     * Creates a function that invokes `func` with the arguments of the created
		     * function. If `func` is a property name, the created function returns the
		     * property value for a given element. If `func` is an array or object, the
		     * created function returns `true` for elements that contain the equivalent
		     * source properties, otherwise it returns `false`.
		     *
		     * @static
		     * @since 4.0.0
		     * @memberOf _
		     * @category Util
		     * @param {*} [func=_.identity] The value to convert to a callback.
		     * @returns {Function} Returns the callback.
		     * @example
		     *
		     * var users = [
		     *   { 'user': 'barney', 'age': 36, 'active': true },
		     *   { 'user': 'fred',   'age': 40, 'active': false }
		     * ];
		     *
		     * // The `_.matches` iteratee shorthand.
		     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
		     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
		     *
		     * // The `_.matchesProperty` iteratee shorthand.
		     * _.filter(users, _.iteratee(['user', 'fred']));
		     * // => [{ 'user': 'fred', 'age': 40 }]
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.map(users, _.iteratee('user'));
		     * // => ['barney', 'fred']
		     *
		     * // Create custom iteratee shorthands.
		     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
		     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
		     *     return func.test(string);
		     *   };
		     * });
		     *
		     * _.filter(['abc', 'def'], /ef/);
		     * // => ['def']
		     */
		    function iteratee(func) {
		      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
		    }
		
		    /**
		     * Creates a function that performs a partial deep comparison between a given
		     * object and `source`, returning `true` if the given object has equivalent
		     * property values, else `false`.
		     *
		     * **Note:** The created function is equivalent to `_.isMatch` with `source`
		     * partially applied.
		     *
		     * Partial comparisons will match empty array and empty object `source`
		     * values against any array or object value, respectively. See `_.isEqual`
		     * for a list of supported value comparisons.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Util
		     * @param {Object} source The object of property values to match.
		     * @returns {Function} Returns the new spec function.
		     * @example
		     *
		     * var objects = [
		     *   { 'a': 1, 'b': 2, 'c': 3 },
		     *   { 'a': 4, 'b': 5, 'c': 6 }
		     * ];
		     *
		     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
		     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
		     */
		    function matches(source) {
		      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
		    }
		
		    /**
		     * Creates a function that performs a partial deep comparison between the
		     * value at `path` of a given object to `srcValue`, returning `true` if the
		     * object value is equivalent, else `false`.
		     *
		     * **Note:** Partial comparisons will match empty array and empty object
		     * `srcValue` values against any array or object value, respectively. See
		     * `_.isEqual` for a list of supported value comparisons.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.2.0
		     * @category Util
		     * @param {Array|string} path The path of the property to get.
		     * @param {*} srcValue The value to match.
		     * @returns {Function} Returns the new spec function.
		     * @example
		     *
		     * var objects = [
		     *   { 'a': 1, 'b': 2, 'c': 3 },
		     *   { 'a': 4, 'b': 5, 'c': 6 }
		     * ];
		     *
		     * _.find(objects, _.matchesProperty('a', 4));
		     * // => { 'a': 4, 'b': 5, 'c': 6 }
		     */
		    function matchesProperty(path, srcValue) {
		      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
		    }
		
		    /**
		     * Creates a function that invokes the method at `path` of a given object.
		     * Any additional arguments are provided to the invoked method.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.7.0
		     * @category Util
		     * @param {Array|string} path The path of the method to invoke.
		     * @param {...*} [args] The arguments to invoke the method with.
		     * @returns {Function} Returns the new invoker function.
		     * @example
		     *
		     * var objects = [
		     *   { 'a': { 'b': _.constant(2) } },
		     *   { 'a': { 'b': _.constant(1) } }
		     * ];
		     *
		     * _.map(objects, _.method('a.b'));
		     * // => [2, 1]
		     *
		     * _.map(objects, _.method(['a', 'b']));
		     * // => [2, 1]
		     */
		    var method = baseRest(function(path, args) {
		      return function(object) {
		        return baseInvoke(object, path, args);
		      };
		    });
		
		    /**
		     * The opposite of `_.method`; this method creates a function that invokes
		     * the method at a given path of `object`. Any additional arguments are
		     * provided to the invoked method.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.7.0
		     * @category Util
		     * @param {Object} object The object to query.
		     * @param {...*} [args] The arguments to invoke the method with.
		     * @returns {Function} Returns the new invoker function.
		     * @example
		     *
		     * var array = _.times(3, _.constant),
		     *     object = { 'a': array, 'b': array, 'c': array };
		     *
		     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
		     * // => [2, 0]
		     *
		     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
		     * // => [2, 0]
		     */
		    var methodOf = baseRest(function(object, args) {
		      return function(path) {
		        return baseInvoke(object, path, args);
		      };
		    });
		
		    /**
		     * Adds all own enumerable string keyed function properties of a source
		     * object to the destination object. If `object` is a function, then methods
		     * are added to its prototype as well.
		     *
		     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
		     * avoid conflicts caused by modifying the original.
		     *
		     * @static
		     * @since 0.1.0
		     * @memberOf _
		     * @category Util
		     * @param {Function|Object} [object=lodash] The destination object.
		     * @param {Object} source The object of functions to add.
		     * @param {Object} [options={}] The options object.
		     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
		     * @returns {Function|Object} Returns `object`.
		     * @example
		     *
		     * function vowels(string) {
		     *   return _.filter(string, function(v) {
		     *     return /[aeiou]/i.test(v);
		     *   });
		     * }
		     *
		     * _.mixin({ 'vowels': vowels });
		     * _.vowels('fred');
		     * // => ['e']
		     *
		     * _('fred').vowels().value();
		     * // => ['e']
		     *
		     * _.mixin({ 'vowels': vowels }, { 'chain': false });
		     * _('fred').vowels();
		     * // => ['e']
		     */
		    function mixin(object, source, options) {
		      var props = keys(source),
		          methodNames = baseFunctions(source, props);
		
		      if (options == null &&
		          !(isObject(source) && (methodNames.length || !props.length))) {
		        options = source;
		        source = object;
		        object = this;
		        methodNames = baseFunctions(source, keys(source));
		      }
		      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
		          isFunc = isFunction(object);
		
		      arrayEach(methodNames, function(methodName) {
		        var func = source[methodName];
		        object[methodName] = func;
		        if (isFunc) {
		          object.prototype[methodName] = function() {
		            var chainAll = this.__chain__;
		            if (chain || chainAll) {
		              var result = object(this.__wrapped__),
		                  actions = result.__actions__ = copyArray(this.__actions__);
		
		              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });
		              result.__chain__ = chainAll;
		              return result;
		            }
		            return func.apply(object, arrayPush([this.value()], arguments));
		          };
		        }
		      });
		
		      return object;
		    }
		
		    /**
		     * Reverts the `_` variable to its previous value and returns a reference to
		     * the `lodash` function.
		     *
		     * @static
		     * @since 0.1.0
		     * @memberOf _
		     * @category Util
		     * @returns {Function} Returns the `lodash` function.
		     * @example
		     *
		     * var lodash = _.noConflict();
		     */
		    function noConflict() {
		      if (root._ === this) {
		        root._ = oldDash;
		      }
		      return this;
		    }
		
		    /**
		     * This method returns `undefined`.
		     *
		     * @static
		     * @memberOf _
		     * @since 2.3.0
		     * @category Util
		     * @example
		     *
		     * _.times(2, _.noop);
		     * // => [undefined, undefined]
		     */
		    function noop() {
		      // No operation performed.
		    }
		
		    /**
		     * Creates a function that gets the argument at index `n`. If `n` is negative,
		     * the nth argument from the end is returned.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Util
		     * @param {number} [n=0] The index of the argument to return.
		     * @returns {Function} Returns the new pass-thru function.
		     * @example
		     *
		     * var func = _.nthArg(1);
		     * func('a', 'b', 'c', 'd');
		     * // => 'b'
		     *
		     * var func = _.nthArg(-2);
		     * func('a', 'b', 'c', 'd');
		     * // => 'c'
		     */
		    function nthArg(n) {
		      n = toInteger(n);
		      return baseRest(function(args) {
		        return baseNth(args, n);
		      });
		    }
		
		    /**
		     * Creates a function that invokes `iteratees` with the arguments it receives
		     * and returns their results.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Util
		     * @param {...(Function|Function[])} [iteratees=[_.identity]]
		     *  The iteratees to invoke.
		     * @returns {Function} Returns the new function.
		     * @example
		     *
		     * var func = _.over([Math.max, Math.min]);
		     *
		     * func(1, 2, 3, 4);
		     * // => [4, 1]
		     */
		    var over = createOver(arrayMap);
		
		    /**
		     * Creates a function that checks if **all** of the `predicates` return
		     * truthy when invoked with the arguments it receives.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Util
		     * @param {...(Function|Function[])} [predicates=[_.identity]]
		     *  The predicates to check.
		     * @returns {Function} Returns the new function.
		     * @example
		     *
		     * var func = _.overEvery([Boolean, isFinite]);
		     *
		     * func('1');
		     * // => true
		     *
		     * func(null);
		     * // => false
		     *
		     * func(NaN);
		     * // => false
		     */
		    var overEvery = createOver(arrayEvery);
		
		    /**
		     * Creates a function that checks if **any** of the `predicates` return
		     * truthy when invoked with the arguments it receives.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Util
		     * @param {...(Function|Function[])} [predicates=[_.identity]]
		     *  The predicates to check.
		     * @returns {Function} Returns the new function.
		     * @example
		     *
		     * var func = _.overSome([Boolean, isFinite]);
		     *
		     * func('1');
		     * // => true
		     *
		     * func(null);
		     * // => true
		     *
		     * func(NaN);
		     * // => false
		     */
		    var overSome = createOver(arraySome);
		
		    /**
		     * Creates a function that returns the value at `path` of a given object.
		     *
		     * @static
		     * @memberOf _
		     * @since 2.4.0
		     * @category Util
		     * @param {Array|string} path The path of the property to get.
		     * @returns {Function} Returns the new accessor function.
		     * @example
		     *
		     * var objects = [
		     *   { 'a': { 'b': 2 } },
		     *   { 'a': { 'b': 1 } }
		     * ];
		     *
		     * _.map(objects, _.property('a.b'));
		     * // => [2, 1]
		     *
		     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
		     * // => [1, 2]
		     */
		    function property(path) {
		      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
		    }
		
		    /**
		     * The opposite of `_.property`; this method creates a function that returns
		     * the value at a given path of `object`.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.0.0
		     * @category Util
		     * @param {Object} object The object to query.
		     * @returns {Function} Returns the new accessor function.
		     * @example
		     *
		     * var array = [0, 1, 2],
		     *     object = { 'a': array, 'b': array, 'c': array };
		     *
		     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
		     * // => [2, 0]
		     *
		     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
		     * // => [2, 0]
		     */
		    function propertyOf(object) {
		      return function(path) {
		        return object == null ? undefined : baseGet(object, path);
		      };
		    }
		
		    /**
		     * Creates an array of numbers (positive and/or negative) progressing from
		     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
		     * `start` is specified without an `end` or `step`. If `end` is not specified,
		     * it's set to `start` with `start` then set to `0`.
		     *
		     * **Note:** JavaScript follows the IEEE-754 standard for resolving
		     * floating-point values which can produce unexpected results.
		     *
		     * @static
		     * @since 0.1.0
		     * @memberOf _
		     * @category Util
		     * @param {number} [start=0] The start of the range.
		     * @param {number} end The end of the range.
		     * @param {number} [step=1] The value to increment or decrement by.
		     * @returns {Array} Returns the range of numbers.
		     * @see _.inRange, _.rangeRight
		     * @example
		     *
		     * _.range(4);
		     * // => [0, 1, 2, 3]
		     *
		     * _.range(-4);
		     * // => [0, -1, -2, -3]
		     *
		     * _.range(1, 5);
		     * // => [1, 2, 3, 4]
		     *
		     * _.range(0, 20, 5);
		     * // => [0, 5, 10, 15]
		     *
		     * _.range(0, -4, -1);
		     * // => [0, -1, -2, -3]
		     *
		     * _.range(1, 4, 0);
		     * // => [1, 1, 1]
		     *
		     * _.range(0);
		     * // => []
		     */
		    var range = createRange();
		
		    /**
		     * This method is like `_.range` except that it populates values in
		     * descending order.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Util
		     * @param {number} [start=0] The start of the range.
		     * @param {number} end The end of the range.
		     * @param {number} [step=1] The value to increment or decrement by.
		     * @returns {Array} Returns the range of numbers.
		     * @see _.inRange, _.range
		     * @example
		     *
		     * _.rangeRight(4);
		     * // => [3, 2, 1, 0]
		     *
		     * _.rangeRight(-4);
		     * // => [-3, -2, -1, 0]
		     *
		     * _.rangeRight(1, 5);
		     * // => [4, 3, 2, 1]
		     *
		     * _.rangeRight(0, 20, 5);
		     * // => [15, 10, 5, 0]
		     *
		     * _.rangeRight(0, -4, -1);
		     * // => [-3, -2, -1, 0]
		     *
		     * _.rangeRight(1, 4, 0);
		     * // => [1, 1, 1]
		     *
		     * _.rangeRight(0);
		     * // => []
		     */
		    var rangeRight = createRange(true);
		
		    /**
		     * This method returns a new empty array.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.13.0
		     * @category Util
		     * @returns {Array} Returns the new empty array.
		     * @example
		     *
		     * var arrays = _.times(2, _.stubArray);
		     *
		     * console.log(arrays);
		     * // => [[], []]
		     *
		     * console.log(arrays[0] === arrays[1]);
		     * // => false
		     */
		    function stubArray() {
		      return [];
		    }
		
		    /**
		     * This method returns `false`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.13.0
		     * @category Util
		     * @returns {boolean} Returns `false`.
		     * @example
		     *
		     * _.times(2, _.stubFalse);
		     * // => [false, false]
		     */
		    function stubFalse() {
		      return false;
		    }
		
		    /**
		     * This method returns a new empty object.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.13.0
		     * @category Util
		     * @returns {Object} Returns the new empty object.
		     * @example
		     *
		     * var objects = _.times(2, _.stubObject);
		     *
		     * console.log(objects);
		     * // => [{}, {}]
		     *
		     * console.log(objects[0] === objects[1]);
		     * // => false
		     */
		    function stubObject() {
		      return {};
		    }
		
		    /**
		     * This method returns an empty string.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.13.0
		     * @category Util
		     * @returns {string} Returns the empty string.
		     * @example
		     *
		     * _.times(2, _.stubString);
		     * // => ['', '']
		     */
		    function stubString() {
		      return '';
		    }
		
		    /**
		     * This method returns `true`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.13.0
		     * @category Util
		     * @returns {boolean} Returns `true`.
		     * @example
		     *
		     * _.times(2, _.stubTrue);
		     * // => [true, true]
		     */
		    function stubTrue() {
		      return true;
		    }
		
		    /**
		     * Invokes the iteratee `n` times, returning an array of the results of
		     * each invocation. The iteratee is invoked with one argument; (index).
		     *
		     * @static
		     * @since 0.1.0
		     * @memberOf _
		     * @category Util
		     * @param {number} n The number of times to invoke `iteratee`.
		     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
		     * @returns {Array} Returns the array of results.
		     * @example
		     *
		     * _.times(3, String);
		     * // => ['0', '1', '2']
		     *
		     *  _.times(4, _.constant(0));
		     * // => [0, 0, 0, 0]
		     */
		    function times(n, iteratee) {
		      n = toInteger(n);
		      if (n < 1 || n > MAX_SAFE_INTEGER) {
		        return [];
		      }
		      var index = MAX_ARRAY_LENGTH,
		          length = nativeMin(n, MAX_ARRAY_LENGTH);
		
		      iteratee = getIteratee(iteratee);
		      n -= MAX_ARRAY_LENGTH;
		
		      var result = baseTimes(length, iteratee);
		      while (++index < n) {
		        iteratee(index);
		      }
		      return result;
		    }
		
		    /**
		     * Converts `value` to a property path array.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Util
		     * @param {*} value The value to convert.
		     * @returns {Array} Returns the new property path array.
		     * @example
		     *
		     * _.toPath('a.b.c');
		     * // => ['a', 'b', 'c']
		     *
		     * _.toPath('a[0].b.c');
		     * // => ['a', '0', 'b', 'c']
		     */
		    function toPath(value) {
		      if (isArray(value)) {
		        return arrayMap(value, toKey);
		      }
		      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
		    }
		
		    /**
		     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
		     *
		     * @static
		     * @since 0.1.0
		     * @memberOf _
		     * @category Util
		     * @param {string} [prefix=''] The value to prefix the ID with.
		     * @returns {string} Returns the unique ID.
		     * @example
		     *
		     * _.uniqueId('contact_');
		     * // => 'contact_104'
		     *
		     * _.uniqueId();
		     * // => '105'
		     */
		    function uniqueId(prefix) {
		      var id = ++idCounter;
		      return toString(prefix) + id;
		    }
		
		    /*------------------------------------------------------------------------*/
		
		    /**
		     * Adds two numbers.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.4.0
		     * @category Math
		     * @param {number} augend The first number in an addition.
		     * @param {number} addend The second number in an addition.
		     * @returns {number} Returns the total.
		     * @example
		     *
		     * _.add(6, 4);
		     * // => 10
		     */
		    var add = createMathOperation(function(augend, addend) {
		      return augend + addend;
		    }, 0);
		
		    /**
		     * Computes `number` rounded up to `precision`.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.10.0
		     * @category Math
		     * @param {number} number The number to round up.
		     * @param {number} [precision=0] The precision to round up to.
		     * @returns {number} Returns the rounded up number.
		     * @example
		     *
		     * _.ceil(4.006);
		     * // => 5
		     *
		     * _.ceil(6.004, 2);
		     * // => 6.01
		     *
		     * _.ceil(6040, -2);
		     * // => 6100
		     */
		    var ceil = createRound('ceil');
		
		    /**
		     * Divide two numbers.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.7.0
		     * @category Math
		     * @param {number} dividend The first number in a division.
		     * @param {number} divisor The second number in a division.
		     * @returns {number} Returns the quotient.
		     * @example
		     *
		     * _.divide(6, 4);
		     * // => 1.5
		     */
		    var divide = createMathOperation(function(dividend, divisor) {
		      return dividend / divisor;
		    }, 1);
		
		    /**
		     * Computes `number` rounded down to `precision`.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.10.0
		     * @category Math
		     * @param {number} number The number to round down.
		     * @param {number} [precision=0] The precision to round down to.
		     * @returns {number} Returns the rounded down number.
		     * @example
		     *
		     * _.floor(4.006);
		     * // => 4
		     *
		     * _.floor(0.046, 2);
		     * // => 0.04
		     *
		     * _.floor(4060, -2);
		     * // => 4000
		     */
		    var floor = createRound('floor');
		
		    /**
		     * Computes the maximum value of `array`. If `array` is empty or falsey,
		     * `undefined` is returned.
		     *
		     * @static
		     * @since 0.1.0
		     * @memberOf _
		     * @category Math
		     * @param {Array} array The array to iterate over.
		     * @returns {*} Returns the maximum value.
		     * @example
		     *
		     * _.max([4, 2, 8, 6]);
		     * // => 8
		     *
		     * _.max([]);
		     * // => undefined
		     */
		    function max(array) {
		      return (array && array.length)
		        ? baseExtremum(array, identity, baseGt)
		        : undefined;
		    }
		
		    /**
		     * This method is like `_.max` except that it accepts `iteratee` which is
		     * invoked for each element in `array` to generate the criterion by which
		     * the value is ranked. The iteratee is invoked with one argument: (value).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Math
		     * @param {Array} array The array to iterate over.
		     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
		     * @returns {*} Returns the maximum value.
		     * @example
		     *
		     * var objects = [{ 'n': 1 }, { 'n': 2 }];
		     *
		     * _.maxBy(objects, function(o) { return o.n; });
		     * // => { 'n': 2 }
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.maxBy(objects, 'n');
		     * // => { 'n': 2 }
		     */
		    function maxBy(array, iteratee) {
		      return (array && array.length)
		        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)
		        : undefined;
		    }
		
		    /**
		     * Computes the mean of the values in `array`.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Math
		     * @param {Array} array The array to iterate over.
		     * @returns {number} Returns the mean.
		     * @example
		     *
		     * _.mean([4, 2, 8, 6]);
		     * // => 5
		     */
		    function mean(array) {
		      return baseMean(array, identity);
		    }
		
		    /**
		     * This method is like `_.mean` except that it accepts `iteratee` which is
		     * invoked for each element in `array` to generate the value to be averaged.
		     * The iteratee is invoked with one argument: (value).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.7.0
		     * @category Math
		     * @param {Array} array The array to iterate over.
		     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
		     * @returns {number} Returns the mean.
		     * @example
		     *
		     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
		     *
		     * _.meanBy(objects, function(o) { return o.n; });
		     * // => 5
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.meanBy(objects, 'n');
		     * // => 5
		     */
		    function meanBy(array, iteratee) {
		      return baseMean(array, getIteratee(iteratee, 2));
		    }
		
		    /**
		     * Computes the minimum value of `array`. If `array` is empty or falsey,
		     * `undefined` is returned.
		     *
		     * @static
		     * @since 0.1.0
		     * @memberOf _
		     * @category Math
		     * @param {Array} array The array to iterate over.
		     * @returns {*} Returns the minimum value.
		     * @example
		     *
		     * _.min([4, 2, 8, 6]);
		     * // => 2
		     *
		     * _.min([]);
		     * // => undefined
		     */
		    function min(array) {
		      return (array && array.length)
		        ? baseExtremum(array, identity, baseLt)
		        : undefined;
		    }
		
		    /**
		     * This method is like `_.min` except that it accepts `iteratee` which is
		     * invoked for each element in `array` to generate the criterion by which
		     * the value is ranked. The iteratee is invoked with one argument: (value).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Math
		     * @param {Array} array The array to iterate over.
		     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
		     * @returns {*} Returns the minimum value.
		     * @example
		     *
		     * var objects = [{ 'n': 1 }, { 'n': 2 }];
		     *
		     * _.minBy(objects, function(o) { return o.n; });
		     * // => { 'n': 1 }
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.minBy(objects, 'n');
		     * // => { 'n': 1 }
		     */
		    function minBy(array, iteratee) {
		      return (array && array.length)
		        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)
		        : undefined;
		    }
		
		    /**
		     * Multiply two numbers.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.7.0
		     * @category Math
		     * @param {number} multiplier The first number in a multiplication.
		     * @param {number} multiplicand The second number in a multiplication.
		     * @returns {number} Returns the product.
		     * @example
		     *
		     * _.multiply(6, 4);
		     * // => 24
		     */
		    var multiply = createMathOperation(function(multiplier, multiplicand) {
		      return multiplier * multiplicand;
		    }, 1);
		
		    /**
		     * Computes `number` rounded to `precision`.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.10.0
		     * @category Math
		     * @param {number} number The number to round.
		     * @param {number} [precision=0] The precision to round to.
		     * @returns {number} Returns the rounded number.
		     * @example
		     *
		     * _.round(4.006);
		     * // => 4
		     *
		     * _.round(4.006, 2);
		     * // => 4.01
		     *
		     * _.round(4060, -2);
		     * // => 4100
		     */
		    var round = createRound('round');
		
		    /**
		     * Subtract two numbers.
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Math
		     * @param {number} minuend The first number in a subtraction.
		     * @param {number} subtrahend The second number in a subtraction.
		     * @returns {number} Returns the difference.
		     * @example
		     *
		     * _.subtract(6, 4);
		     * // => 2
		     */
		    var subtract = createMathOperation(function(minuend, subtrahend) {
		      return minuend - subtrahend;
		    }, 0);
		
		    /**
		     * Computes the sum of the values in `array`.
		     *
		     * @static
		     * @memberOf _
		     * @since 3.4.0
		     * @category Math
		     * @param {Array} array The array to iterate over.
		     * @returns {number} Returns the sum.
		     * @example
		     *
		     * _.sum([4, 2, 8, 6]);
		     * // => 20
		     */
		    function sum(array) {
		      return (array && array.length)
		        ? baseSum(array, identity)
		        : 0;
		    }
		
		    /**
		     * This method is like `_.sum` except that it accepts `iteratee` which is
		     * invoked for each element in `array` to generate the value to be summed.
		     * The iteratee is invoked with one argument: (value).
		     *
		     * @static
		     * @memberOf _
		     * @since 4.0.0
		     * @category Math
		     * @param {Array} array The array to iterate over.
		     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
		     * @returns {number} Returns the sum.
		     * @example
		     *
		     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
		     *
		     * _.sumBy(objects, function(o) { return o.n; });
		     * // => 20
		     *
		     * // The `_.property` iteratee shorthand.
		     * _.sumBy(objects, 'n');
		     * // => 20
		     */
		    function sumBy(array, iteratee) {
		      return (array && array.length)
		        ? baseSum(array, getIteratee(iteratee, 2))
		        : 0;
		    }
		
		    /*------------------------------------------------------------------------*/
		
		    // Add methods that return wrapped values in chain sequences.
		    lodash.after = after;
		    lodash.ary = ary;
		    lodash.assign = assign;
		    lodash.assignIn = assignIn;
		    lodash.assignInWith = assignInWith;
		    lodash.assignWith = assignWith;
		    lodash.at = at;
		    lodash.before = before;
		    lodash.bind = bind;
		    lodash.bindAll = bindAll;
		    lodash.bindKey = bindKey;
		    lodash.castArray = castArray;
		    lodash.chain = chain;
		    lodash.chunk = chunk;
		    lodash.compact = compact;
		    lodash.concat = concat;
		    lodash.cond = cond;
		    lodash.conforms = conforms;
		    lodash.constant = constant;
		    lodash.countBy = countBy;
		    lodash.create = create;
		    lodash.curry = curry;
		    lodash.curryRight = curryRight;
		    lodash.debounce = debounce;
		    lodash.defaults = defaults;
		    lodash.defaultsDeep = defaultsDeep;
		    lodash.defer = defer;
		    lodash.delay = delay;
		    lodash.difference = difference;
		    lodash.differenceBy = differenceBy;
		    lodash.differenceWith = differenceWith;
		    lodash.drop = drop;
		    lodash.dropRight = dropRight;
		    lodash.dropRightWhile = dropRightWhile;
		    lodash.dropWhile = dropWhile;
		    lodash.fill = fill;
		    lodash.filter = filter;
		    lodash.flatMap = flatMap;
		    lodash.flatMapDeep = flatMapDeep;
		    lodash.flatMapDepth = flatMapDepth;
		    lodash.flatten = flatten;
		    lodash.flattenDeep = flattenDeep;
		    lodash.flattenDepth = flattenDepth;
		    lodash.flip = flip;
		    lodash.flow = flow;
		    lodash.flowRight = flowRight;
		    lodash.fromPairs = fromPairs;
		    lodash.functions = functions;
		    lodash.functionsIn = functionsIn;
		    lodash.groupBy = groupBy;
		    lodash.initial = initial;
		    lodash.intersection = intersection;
		    lodash.intersectionBy = intersectionBy;
		    lodash.intersectionWith = intersectionWith;
		    lodash.invert = invert;
		    lodash.invertBy = invertBy;
		    lodash.invokeMap = invokeMap;
		    lodash.iteratee = iteratee;
		    lodash.keyBy = keyBy;
		    lodash.keys = keys;
		    lodash.keysIn = keysIn;
		    lodash.map = map;
		    lodash.mapKeys = mapKeys;
		    lodash.mapValues = mapValues;
		    lodash.matches = matches;
		    lodash.matchesProperty = matchesProperty;
		    lodash.memoize = memoize;
		    lodash.merge = merge;
		    lodash.mergeWith = mergeWith;
		    lodash.method = method;
		    lodash.methodOf = methodOf;
		    lodash.mixin = mixin;
		    lodash.negate = negate;
		    lodash.nthArg = nthArg;
		    lodash.omit = omit;
		    lodash.omitBy = omitBy;
		    lodash.once = once;
		    lodash.orderBy = orderBy;
		    lodash.over = over;
		    lodash.overArgs = overArgs;
		    lodash.overEvery = overEvery;
		    lodash.overSome = overSome;
		    lodash.partial = partial;
		    lodash.partialRight = partialRight;
		    lodash.partition = partition;
		    lodash.pick = pick;
		    lodash.pickBy = pickBy;
		    lodash.property = property;
		    lodash.propertyOf = propertyOf;
		    lodash.pull = pull;
		    lodash.pullAll = pullAll;
		    lodash.pullAllBy = pullAllBy;
		    lodash.pullAllWith = pullAllWith;
		    lodash.pullAt = pullAt;
		    lodash.range = range;
		    lodash.rangeRight = rangeRight;
		    lodash.rearg = rearg;
		    lodash.reject = reject;
		    lodash.remove = remove;
		    lodash.rest = rest;
		    lodash.reverse = reverse;
		    lodash.sampleSize = sampleSize;
		    lodash.set = set;
		    lodash.setWith = setWith;
		    lodash.shuffle = shuffle;
		    lodash.slice = slice;
		    lodash.sortBy = sortBy;
		    lodash.sortedUniq = sortedUniq;
		    lodash.sortedUniqBy = sortedUniqBy;
		    lodash.split = split;
		    lodash.spread = spread;
		    lodash.tail = tail;
		    lodash.take = take;
		    lodash.takeRight = takeRight;
		    lodash.takeRightWhile = takeRightWhile;
		    lodash.takeWhile = takeWhile;
		    lodash.tap = tap;
		    lodash.throttle = throttle;
		    lodash.thru = thru;
		    lodash.toArray = toArray;
		    lodash.toPairs = toPairs;
		    lodash.toPairsIn = toPairsIn;
		    lodash.toPath = toPath;
		    lodash.toPlainObject = toPlainObject;
		    lodash.transform = transform;
		    lodash.unary = unary;
		    lodash.union = union;
		    lodash.unionBy = unionBy;
		    lodash.unionWith = unionWith;
		    lodash.uniq = uniq;
		    lodash.uniqBy = uniqBy;
		    lodash.uniqWith = uniqWith;
		    lodash.unset = unset;
		    lodash.unzip = unzip;
		    lodash.unzipWith = unzipWith;
		    lodash.update = update;
		    lodash.updateWith = updateWith;
		    lodash.values = values;
		    lodash.valuesIn = valuesIn;
		    lodash.without = without;
		    lodash.words = words;
		    lodash.wrap = wrap;
		    lodash.xor = xor;
		    lodash.xorBy = xorBy;
		    lodash.xorWith = xorWith;
		    lodash.zip = zip;
		    lodash.zipObject = zipObject;
		    lodash.zipObjectDeep = zipObjectDeep;
		    lodash.zipWith = zipWith;
		
		    // Add aliases.
		    lodash.entries = toPairs;
		    lodash.entriesIn = toPairsIn;
		    lodash.extend = assignIn;
		    lodash.extendWith = assignInWith;
		
		    // Add methods to `lodash.prototype`.
		    mixin(lodash, lodash);
		
		    /*------------------------------------------------------------------------*/
		
		    // Add methods that return unwrapped values in chain sequences.
		    lodash.add = add;
		    lodash.attempt = attempt;
		    lodash.camelCase = camelCase;
		    lodash.capitalize = capitalize;
		    lodash.ceil = ceil;
		    lodash.clamp = clamp;
		    lodash.clone = clone;
		    lodash.cloneDeep = cloneDeep;
		    lodash.cloneDeepWith = cloneDeepWith;
		    lodash.cloneWith = cloneWith;
		    lodash.conformsTo = conformsTo;
		    lodash.deburr = deburr;
		    lodash.defaultTo = defaultTo;
		    lodash.divide = divide;
		    lodash.endsWith = endsWith;
		    lodash.eq = eq;
		    lodash.escape = escape;
		    lodash.escapeRegExp = escapeRegExp;
		    lodash.every = every;
		    lodash.find = find;
		    lodash.findIndex = findIndex;
		    lodash.findKey = findKey;
		    lodash.findLast = findLast;
		    lodash.findLastIndex = findLastIndex;
		    lodash.findLastKey = findLastKey;
		    lodash.floor = floor;
		    lodash.forEach = forEach;
		    lodash.forEachRight = forEachRight;
		    lodash.forIn = forIn;
		    lodash.forInRight = forInRight;
		    lodash.forOwn = forOwn;
		    lodash.forOwnRight = forOwnRight;
		    lodash.get = get;
		    lodash.gt = gt;
		    lodash.gte = gte;
		    lodash.has = has;
		    lodash.hasIn = hasIn;
		    lodash.head = head;
		    lodash.identity = identity;
		    lodash.includes = includes;
		    lodash.indexOf = indexOf;
		    lodash.inRange = inRange;
		    lodash.invoke = invoke;
		    lodash.isArguments = isArguments;
		    lodash.isArray = isArray;
		    lodash.isArrayBuffer = isArrayBuffer;
		    lodash.isArrayLike = isArrayLike;
		    lodash.isArrayLikeObject = isArrayLikeObject;
		    lodash.isBoolean = isBoolean;
		    lodash.isBuffer = isBuffer;
		    lodash.isDate = isDate;
		    lodash.isElement = isElement;
		    lodash.isEmpty = isEmpty;
		    lodash.isEqual = isEqual;
		    lodash.isEqualWith = isEqualWith;
		    lodash.isError = isError;
		    lodash.isFinite = isFinite;
		    lodash.isFunction = isFunction;
		    lodash.isInteger = isInteger;
		    lodash.isLength = isLength;
		    lodash.isMap = isMap;
		    lodash.isMatch = isMatch;
		    lodash.isMatchWith = isMatchWith;
		    lodash.isNaN = isNaN;
		    lodash.isNative = isNative;
		    lodash.isNil = isNil;
		    lodash.isNull = isNull;
		    lodash.isNumber = isNumber;
		    lodash.isObject = isObject;
		    lodash.isObjectLike = isObjectLike;
		    lodash.isPlainObject = isPlainObject;
		    lodash.isRegExp = isRegExp;
		    lodash.isSafeInteger = isSafeInteger;
		    lodash.isSet = isSet;
		    lodash.isString = isString;
		    lodash.isSymbol = isSymbol;
		    lodash.isTypedArray = isTypedArray;
		    lodash.isUndefined = isUndefined;
		    lodash.isWeakMap = isWeakMap;
		    lodash.isWeakSet = isWeakSet;
		    lodash.join = join;
		    lodash.kebabCase = kebabCase;
		    lodash.last = last;
		    lodash.lastIndexOf = lastIndexOf;
		    lodash.lowerCase = lowerCase;
		    lodash.lowerFirst = lowerFirst;
		    lodash.lt = lt;
		    lodash.lte = lte;
		    lodash.max = max;
		    lodash.maxBy = maxBy;
		    lodash.mean = mean;
		    lodash.meanBy = meanBy;
		    lodash.min = min;
		    lodash.minBy = minBy;
		    lodash.stubArray = stubArray;
		    lodash.stubFalse = stubFalse;
		    lodash.stubObject = stubObject;
		    lodash.stubString = stubString;
		    lodash.stubTrue = stubTrue;
		    lodash.multiply = multiply;
		    lodash.nth = nth;
		    lodash.noConflict = noConflict;
		    lodash.noop = noop;
		    lodash.now = now;
		    lodash.pad = pad;
		    lodash.padEnd = padEnd;
		    lodash.padStart = padStart;
		    lodash.parseInt = parseInt;
		    lodash.random = random;
		    lodash.reduce = reduce;
		    lodash.reduceRight = reduceRight;
		    lodash.repeat = repeat;
		    lodash.replace = replace;
		    lodash.result = result;
		    lodash.round = round;
		    lodash.runInContext = runInContext;
		    lodash.sample = sample;
		    lodash.size = size;
		    lodash.snakeCase = snakeCase;
		    lodash.some = some;
		    lodash.sortedIndex = sortedIndex;
		    lodash.sortedIndexBy = sortedIndexBy;
		    lodash.sortedIndexOf = sortedIndexOf;
		    lodash.sortedLastIndex = sortedLastIndex;
		    lodash.sortedLastIndexBy = sortedLastIndexBy;
		    lodash.sortedLastIndexOf = sortedLastIndexOf;
		    lodash.startCase = startCase;
		    lodash.startsWith = startsWith;
		    lodash.subtract = subtract;
		    lodash.sum = sum;
		    lodash.sumBy = sumBy;
		    lodash.template = template;
		    lodash.times = times;
		    lodash.toFinite = toFinite;
		    lodash.toInteger = toInteger;
		    lodash.toLength = toLength;
		    lodash.toLower = toLower;
		    lodash.toNumber = toNumber;
		    lodash.toSafeInteger = toSafeInteger;
		    lodash.toString = toString;
		    lodash.toUpper = toUpper;
		    lodash.trim = trim;
		    lodash.trimEnd = trimEnd;
		    lodash.trimStart = trimStart;
		    lodash.truncate = truncate;
		    lodash.unescape = unescape;
		    lodash.uniqueId = uniqueId;
		    lodash.upperCase = upperCase;
		    lodash.upperFirst = upperFirst;
		
		    // Add aliases.
		    lodash.each = forEach;
		    lodash.eachRight = forEachRight;
		    lodash.first = head;
		
		    mixin(lodash, (function() {
		      var source = {};
		      baseForOwn(lodash, function(func, methodName) {
		        if (!hasOwnProperty.call(lodash.prototype, methodName)) {
		          source[methodName] = func;
		        }
		      });
		      return source;
		    }()), { 'chain': false });
		
		    /*------------------------------------------------------------------------*/
		
		    /**
		     * The semantic version number.
		     *
		     * @static
		     * @memberOf _
		     * @type {string}
		     */
		    lodash.VERSION = VERSION;
		
		    // Assign default placeholders.
		    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
		      lodash[methodName].placeholder = lodash;
		    });
		
		    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
		    arrayEach(['drop', 'take'], function(methodName, index) {
		      LazyWrapper.prototype[methodName] = function(n) {
		        var filtered = this.__filtered__;
		        if (filtered && !index) {
		          return new LazyWrapper(this);
		        }
		        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);
		
		        var result = this.clone();
		        if (filtered) {
		          result.__takeCount__ = nativeMin(n, result.__takeCount__);
		        } else {
		          result.__views__.push({
		            'size': nativeMin(n, MAX_ARRAY_LENGTH),
		            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
		          });
		        }
		        return result;
		      };
		
		      LazyWrapper.prototype[methodName + 'Right'] = function(n) {
		        return this.reverse()[methodName](n).reverse();
		      };
		    });
		
		    // Add `LazyWrapper` methods that accept an `iteratee` value.
		    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {
		      var type = index + 1,
		          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;
		
		      LazyWrapper.prototype[methodName] = function(iteratee) {
		        var result = this.clone();
		        result.__iteratees__.push({
		          'iteratee': getIteratee(iteratee, 3),
		          'type': type
		        });
		        result.__filtered__ = result.__filtered__ || isFilter;
		        return result;
		      };
		    });
		
		    // Add `LazyWrapper` methods for `_.head` and `_.last`.
		    arrayEach(['head', 'last'], function(methodName, index) {
		      var takeName = 'take' + (index ? 'Right' : '');
		
		      LazyWrapper.prototype[methodName] = function() {
		        return this[takeName](1).value()[0];
		      };
		    });
		
		    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.
		    arrayEach(['initial', 'tail'], function(methodName, index) {
		      var dropName = 'drop' + (index ? '' : 'Right');
		
		      LazyWrapper.prototype[methodName] = function() {
		        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
		      };
		    });
		
		    LazyWrapper.prototype.compact = function() {
		      return this.filter(identity);
		    };
		
		    LazyWrapper.prototype.find = function(predicate) {
		      return this.filter(predicate).head();
		    };
		
		    LazyWrapper.prototype.findLast = function(predicate) {
		      return this.reverse().find(predicate);
		    };
		
		    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
		      if (typeof path == 'function') {
		        return new LazyWrapper(this);
		      }
		      return this.map(function(value) {
		        return baseInvoke(value, path, args);
		      });
		    });
		
		    LazyWrapper.prototype.reject = function(predicate) {
		      return this.filter(negate(getIteratee(predicate)));
		    };
		
		    LazyWrapper.prototype.slice = function(start, end) {
		      start = toInteger(start);
		
		      var result = this;
		      if (result.__filtered__ && (start > 0 || end < 0)) {
		        return new LazyWrapper(result);
		      }
		      if (start < 0) {
		        result = result.takeRight(-start);
		      } else if (start) {
		        result = result.drop(start);
		      }
		      if (end !== undefined) {
		        end = toInteger(end);
		        result = end < 0 ? result.dropRight(-end) : result.take(end - start);
		      }
		      return result;
		    };
		
		    LazyWrapper.prototype.takeRightWhile = function(predicate) {
		      return this.reverse().takeWhile(predicate).reverse();
		    };
		
		    LazyWrapper.prototype.toArray = function() {
		      return this.take(MAX_ARRAY_LENGTH);
		    };
		
		    // Add `LazyWrapper` methods to `lodash.prototype`.
		    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
		      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
		          isTaker = /^(?:head|last)$/.test(methodName),
		          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],
		          retUnwrapped = isTaker || /^find/.test(methodName);
		
		      if (!lodashFunc) {
		        return;
		      }
		      lodash.prototype[methodName] = function() {
		        var value = this.__wrapped__,
		            args = isTaker ? [1] : arguments,
		            isLazy = value instanceof LazyWrapper,
		            iteratee = args[0],
		            useLazy = isLazy || isArray(value);
		
		        var interceptor = function(value) {
		          var result = lodashFunc.apply(lodash, arrayPush([value], args));
		          return (isTaker && chainAll) ? result[0] : result;
		        };
		
		        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
		          // Avoid lazy use if the iteratee has a "length" value other than `1`.
		          isLazy = useLazy = false;
		        }
		        var chainAll = this.__chain__,
		            isHybrid = !!this.__actions__.length,
		            isUnwrapped = retUnwrapped && !chainAll,
		            onlyLazy = isLazy && !isHybrid;
		
		        if (!retUnwrapped && useLazy) {
		          value = onlyLazy ? value : new LazyWrapper(this);
		          var result = func.apply(value, args);
		          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });
		          return new LodashWrapper(result, chainAll);
		        }
		        if (isUnwrapped && onlyLazy) {
		          return func.apply(this, args);
		        }
		        result = this.thru(interceptor);
		        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;
		      };
		    });
		
		    // Add `Array` methods to `lodash.prototype`.
		    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {
		      var func = arrayProto[methodName],
		          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
		          retUnwrapped = /^(?:pop|shift)$/.test(methodName);
		
		      lodash.prototype[methodName] = function() {
		        var args = arguments;
		        if (retUnwrapped && !this.__chain__) {
		          var value = this.value();
		          return func.apply(isArray(value) ? value : [], args);
		        }
		        return this[chainName](function(value) {
		          return func.apply(isArray(value) ? value : [], args);
		        });
		      };
		    });
		
		    // Map minified method names to their real names.
		    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
		      var lodashFunc = lodash[methodName];
		      if (lodashFunc) {
		        var key = (lodashFunc.name + ''),
		            names = realNames[key] || (realNames[key] = []);
		
		        names.push({ 'name': methodName, 'func': lodashFunc });
		      }
		    });
		
		    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{
		      'name': 'wrapper',
		      'func': undefined
		    }];
		
		    // Add methods to `LazyWrapper`.
		    LazyWrapper.prototype.clone = lazyClone;
		    LazyWrapper.prototype.reverse = lazyReverse;
		    LazyWrapper.prototype.value = lazyValue;
		
		    // Add chain sequence methods to the `lodash` wrapper.
		    lodash.prototype.at = wrapperAt;
		    lodash.prototype.chain = wrapperChain;
		    lodash.prototype.commit = wrapperCommit;
		    lodash.prototype.next = wrapperNext;
		    lodash.prototype.plant = wrapperPlant;
		    lodash.prototype.reverse = wrapperReverse;
		    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;
		
		    // Add lazy aliases.
		    lodash.prototype.first = lodash.prototype.head;
		
		    if (symIterator) {
		      lodash.prototype[symIterator] = wrapperToIterator;
		    }
		    return lodash;
		  });
		
		  /*--------------------------------------------------------------------------*/
		
		  // Export lodash.
		  var _ = runInContext();
		
		  // Some AMD build optimizers, like r.js, check for condition patterns like:
		  if (true) {
		    // Expose Lodash on the global object to prevent errors when Lodash is
		    // loaded by a script tag in the presence of an AMD loader.
		    // See http://requirejs.org/docs/errors.html#mismatch for more details.
		    // Use `_.noConflict` to remove Lodash from the global object.
		    root._ = _;
		
		    // Define as an anonymous module so, through path mapping, it can be
		    // referenced as the "underscore" module.
		    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {
		      return _;
		    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		  }
		  // Check for `exports` after `define` in case a build optimizer adds it.
		  else if (freeModule) {
		    // Export for Node.js.
		    (freeModule.exports = _)._ = _;
		    // Export for CommonJS support.
		    freeExports._ = _;
		  }
		  else {
		    // Export to the global object.
		    root._ = _;
		  }
		}.call(this));
		
		/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(24)(module)))
	
	/***/ },
	/* 147 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		/**
		 * Switch Component Style for tingle
		 * @author ruiyang.dry
		 *
		 * Copyright 2014-2016, Tingle Team, Alinw.
		 * All rights reserved.
		 */
		
		module.exports = __webpack_require__(148);
		
	
	
	/***/ },
	/* 148 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		/**
		 * Switch Component for tingle
		 * @author ruiyang.dry
		 *
		 * Copyright 2014-2016, Tingle Team, Alinw.
		 * All rights reserved.
		 */
		var classnames = __webpack_require__(45);
		
		var Context = __webpack_require__(47);
		
		var Switch = function (_React$Component) {
		    _inherits(Switch, _React$Component);
		
		    function Switch(props) {
		        _classCallCheck(this, Switch);
		
		        return _possibleConstructorReturn(this, Object.getPrototypeOf(Switch).call(this, props));
		    }
		
		    _createClass(Switch, [{
		        key: 'handleChange',
		        value: function handleChange(event) {
		            var t = this;
		            if (t.props.readOnly) {
		                return;
		            }
		            t.props.onChange(!t.props.on, event);
		        }
		    }, {
		        key: 'render',
		        value: function render() {
		            var t = this;
		            var classSet = _defineProperty({
		                "active": t.props.on,
		                "readOnly": t.props.readOnly
		            }, t.props.className, !!t.props.className);
		            return React.createElement(
		                'div',
		                {
		                    className: classnames(Context.prefixClass('switch'), classSet),
		                    readOnly: t.props.readOnly,
		                    onClick: t.handleChange.bind(this) },
		                React.createElement(
		                    'div',
		                    { className: Context.prefixClass('switch-back') },
		                    React.createElement('div', { className: Context.prefixClass('switch-radius') })
		                )
		            );
		        }
		    }]);
		
		    return Switch;
		}(React.Component);
		
		Switch.defaultProps = {
		    on: true,
		    onChange: function onChange() {},
		
		    readOnly: false
		};
		
		// http://facebook.github.io/react/docs/reusable-components.html
		Switch.propTypes = {
		    on: React.PropTypes.bool,
		    onChange: React.PropTypes.func,
		    readOnly: React.PropTypes.bool
		};
		
		Switch.displayName = "Switch";
		
		module.exports = Switch;
		
	
	
	/***/ },
	/* 149 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		/**
		 * SwitchField Component Style for tingle
		 * @author 
		 *
		 * Copyright 2014-2016, Tingle Team, Alinw.
		 * All rights reserved.
		 */
		
		module.exports = __webpack_require__(150);
		
	
	
	/***/ },
	/* 150 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		/**
		 * SwitchField Component for tingle
		 * @dongrui.yang
		 *
		 * Copyright 2014-2016, Tingle Team.
		 * All rights reserved.
		 */
		var Switch = __webpack_require__(147);
		var Field = __webpack_require__(87);
		var classnames = __webpack_require__(45);
		var Context = __webpack_require__(47);
		
		var SwitchField = function (_React$Component) {
		    _inherits(SwitchField, _React$Component);
		
		    function SwitchField(props) {
		        _classCallCheck(this, SwitchField);
		
		        return _possibleConstructorReturn(this, Object.getPrototypeOf(SwitchField).call(this, props));
		    }
		
		    _createClass(SwitchField, [{
		        key: 'handleChange',
		        value: function handleChange(on) {
		            this.props.onChange(on);
		        }
		    }, {
		        key: 'render',
		        value: function render() {
		            var t = this;
		            return React.createElement(
		                Field,
		                _extends({}, t.props, { className: classnames(Context.prefixClass('switch-field'), t.props.className, {
		                        'readOnly': t.props.readOnly
		                    }) }),
		                React.createElement(
		                    'div',
		                    { className: 't-FBH' },
		                    React.createElement('div', { className: 't-FB1' }),
		                    React.createElement(Switch, { on: this.props.on, readOnly: t.props.readOnly, onChange: this.handleChange.bind(this) })
		                )
		            );
		        }
		    }]);
		
		    return SwitchField;
		}(React.Component);
		
		SwitchField.defaultProps = {
		    label: '',
		    className: ''
		};
		
		// http://facebook.github.io/react/docs/reusable-components.html
		SwitchField.propTypes = {
		    label: React.PropTypes.string.isRequired,
		    className: React.PropTypes.string
		};
		
		SwitchField.displayName = 'SwitchField';
		
		module.exports = SwitchField;
		
	
	
	/***/ },
	/* 151 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		/**
		 * Tab Component Style for tingle
		 * @author zhangshun@alipay.com
		 *
		 * Copyright 2014-2016, Tingle Team, Alinw.
		 * All rights reserved.
		 */
		
		module.exports = __webpack_require__(152);
		
	
	
	/***/ },
	/* 152 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		/**
		 * Tab Component for tingle
		 * @author zhangshun@alipay.com
		 *
		 * Copyright 2014-2016, Tingle Team.
		 * All rights reserved.
		 */
		var React = __webpack_require__(2);
		var classnames = __webpack_require__(45);
		var Context = __webpack_require__(47);
		var Scroller = __webpack_require__(84);
		var TabItem = __webpack_require__(153);
		var prefixClass = Context.prefixClass;
		var iScroll = __webpack_require__(86);
		
		var Tab = function (_React$Component) {
		    _inherits(Tab, _React$Component);
		
		    function Tab(props) {
		        _classCallCheck(this, Tab);
		
		        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Tab).call(this, props));
		
		        _this.state = {
		            active: props.active
		        };
		        return _this;
		    }
		
		    _createClass(Tab, [{
		        key: 'componentDidMount',
		        value: function componentDidMount() {
		            // 计算宽度和滚动
		            var t = this;
		            if (!t.props.showScroll) {
		                return;
		            }
		            var w = 0;
		            var scrollEl = ReactDOM.findDOMNode(t.refs.scroll);
		            var chNodes = scrollEl.childNodes;
		            for (var i = 0, l = chNodes.length; i < l; i++) {
		                w += chNodes[i].offsetWidth + 1;
		            }
		
		            scrollEl.style.width = w + "px";
		            // 实例化滚动
		            t.refs.head.scroller.refresh();
		        }
		    }, {
		        key: 'componentWillReceiveProps',
		        value: function componentWillReceiveProps(nextProps) {
		            var t = this;
		            if (nextProps.active !== t.state.active) {
		                t.setState({
		                    active: nextProps.active
		                });
		            }
		        }
		    }, {
		        key: 'componentDidUpdate',
		        value: function componentDidUpdate(prevProps, prevState) {
		            //fix issue #8
		            if (this.state.active !== prevState.active) {
		                this.setActiveTabItemVisible();
		            }
		        }
		    }, {
		        key: 'setActiveTabItemVisible',
		        value: function setActiveTabItemVisible() {
		            if (!this.props.showScroll) {
		                //没有scroll的时候，active tab必然是可见的
		                return true;
		            }
		
		            var activeTab = this.findActiveTab();
		            if (!this.tabVisible(activeTab)) {
		                this.refs.head.scroller.scrollToElement(activeTab, 'auto', true, true);
		            }
		        }
		    }, {
		        key: 'tabVisible',
		        value: function tabVisible(tab) {
		            var scroller = this.refs.head.scroller;
		            var tabOffset = iScroll.utils.offset(tab);
		            var wrapperWidth = scroller.wrapperWidth;
		
		            //scroll使用的offset像素坐标都是负值，使用的时候做Math.abs处理，方便计算
		            var headOffsetRange = {
		                left: Math.abs(scroller.x),
		                right: Math.abs(scroller.x + -wrapperWidth)
		            };
		
		            var tabLeft = Math.abs(tabOffset.left);
		            var tabRight = Math.abs(tabOffset.right);
		
		            if (tabLeft >= headOffsetRange.left) {
		                return tabLeft < headOffsetRange.right;
		            }
		
		            if (tabRight < headOffsetRange.left) {
		                return tabRight <= headOffsetRange.right;
		            }
		        }
		    }, {
		        key: 'findActiveTab',
		        value: function findActiveTab() {
		            var refKey = 'tab_' + this.state.active;
		            return ReactDOM.findDOMNode(this.refs[refKey]);
		        }
		    }, {
		        key: 'handleChange',
		        value: function handleChange(active, data, e) {
		            var t = this;
		            var preActive = t.state.active;
		            t.setState({
		                active: active
		            });
		            t.props.onChange({
		                active: active,
		                preActive: preActive,
		                data: data,
		                e: e
		            });
		        }
		    }, {
		        key: 'render',
		        value: function render() {
		            var _classnames;
		
		            var t = this;
		            return React.createElement(
		                'div',
		                { ref: 'root', className: classnames((_classnames = {}, _defineProperty(_classnames, prefixClass('tab'), true), _defineProperty(_classnames, t.props.type, true), _defineProperty(_classnames, t.props.className, !!t.props.className), _defineProperty(_classnames, "fixed-top", !!t.props.fixedTop), _defineProperty(_classnames, "fixed-bottom", !t.props.fixedTop && !!t.props.fixedBottom), _classnames)) },
		                t._renderHead(),
		                t._renderBody(),
		                t.props.showScroll && t._renderPendant()
		            );
		        }
		    }, {
		        key: '_renderHead',
		        value: function _renderHead() {
		            var t = this;
		            if (t.props.showScroll) {
		                //添加右边icon
		                return React.createElement(
		                    Scroller,
		                    { className: prefixClass('tab-head'), scrollX: true, scrollY: false, ref: 'head' },
		                    t._renderHeadContent(true, t)
		                );
		            } else {
		                return React.createElement(
		                    'div',
		                    { className: prefixClass('tab-head'), ref: 'head' },
		                    t._renderHeadContent(false, t)
		                );
		            }
		        }
		    }, {
		        key: '_renderHeadContent',
		        value: function _renderHeadContent(scroll, t) {
		            var _classnames2;
		
		            return React.createElement(
		                'div',
		                { className: classnames((_classnames2 = {}, _defineProperty(_classnames2, prefixClass('tab-head-scroll'), scroll), _defineProperty(_classnames2, prefixClass('tab-head-container'), true), _defineProperty(_classnames2, prefixClass('CL'), scroll), _defineProperty(_classnames2, prefixClass('FBH'), !scroll), _classnames2)), ref: 'scroll' },
		                React.Children.map(t.props.children, function (child, active) {
		                    var _classnames3;
		
		                    var _className = classnames((_classnames3 = {}, _defineProperty(_classnames3, prefixClass('tab-head-item'), true), _defineProperty(_classnames3, prefixClass('FAC'), true), _defineProperty(_classnames3, prefixClass('FL'), scroll), _defineProperty(_classnames3, prefixClass('FB1'), !scroll), _defineProperty(_classnames3, 'active', t.state.active == active), _classnames3));
		                    return React.createElement(
		                        'div',
		                        { className: _className, key: active, active: active, ref: 'tab_' + active,
		                            onClick: t.handleChange.bind(t, active, child.props.data) },
		                        React.createElement(
		                            'span',
		                            null,
		                            child.props.title
		                        )
		                    );
		                })
		            );
		        }
		    }, {
		        key: '_renderPendant',
		        value: function _renderPendant() {
		            //渲染右边自定义的小零件
		            var t = this;
		            var pendant = t.props.pendant;
		
		            if (pendant && React.isValidElement(pendant)) {
		                return React.cloneElement(pendant, {
		                    role: "pendant"
		                });
		            }
		        }
		    }, {
		        key: '_renderBody',
		        value: function _renderBody() {
		            var t = this;
		            var activeBody = [];
		
		            React.Children.forEach(t.props.children, function (child, active) {
		                var _classnames4;
		
		                var _className = classnames((_classnames4 = {}, _defineProperty(_classnames4, prefixClass('tab-body-item'), true), _defineProperty(_classnames4, prefixClass('hide'), t.state.active !== active), _classnames4));
		                activeBody.push(React.createElement(
		                    'div',
		                    { className: _className, key: active, active: t.state.active === active },
		                    child
		                ));
		            });
		
		            if (t.props.destroyInactiveTabPane) {
		                activeBody = activeBody.filter(function (body) {
		                    return body.props.active;
		                });
		            }
		
		            return React.createElement(
		                'div',
		                { className: prefixClass('tab-body') },
		                activeBody
		            );
		        }
		    }]);
		
		    return Tab;
		}(React.Component);
		
		Tab.defaultProps = {
		    active: 0,
		    type: '',
		    onChange: Context.noop,
		    showScroll: false,
		    destroyInactiveTabPane: false,
		    //固定顶部
		    fixedTop: false,
		    //固定底部
		    fixedBottom: false
		};
		
		// http://facebook.github.io/react/docs/reusable-components.html
		Tab.propTypes = {
		    active: React.PropTypes.number,
		    type: React.PropTypes.oneOf(['', 'brick']),
		    onChange: React.PropTypes.func,
		    showScroll: React.PropTypes.bool,
		    destroyInactiveTabPane: React.PropTypes.bool,
		    pendant: React.PropTypes.element,
		    fixedTop: React.PropTypes.bool,
		    fixedBottom: React.PropTypes.bool
		};
		
		Tab.Item = TabItem;
		Tab.displayName = 'Tab';
		
		module.exports = Tab;
		
	
	
	/***/ },
	/* 153 */
	/***/ function(module, exports) {
	
		'use strict';
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		/**
		 * Tab item
		 * author: zhangshun
		 * date: 2015-05-22
		 */
		
		var TabItem = function (_React$Component) {
		    _inherits(TabItem, _React$Component);
		
		    function TabItem(props) {
		        _classCallCheck(this, TabItem);
		
		        return _possibleConstructorReturn(this, Object.getPrototypeOf(TabItem).call(this, props));
		    }
		
		    _createClass(TabItem, [{
		        key: 'render',
		        value: function render() {
		            return React.createElement(
		                'div',
		                null,
		                this.props.children
		            );
		        }
		    }]);
		
		    return TabItem;
		}(React.Component);
		
		TabItem.defaultProps = {
		    title: '',
		    data: {}
		};
		
		// http://facebook.github.io/react/docs/reusable-components.html
		TabItem.propTypes = {
		    title: React.PropTypes.node,
		    data: React.PropTypes.object
		};
		
		TabItem.displayName = 'TabItem';
		
		module.exports = TabItem;
		
	
	
	/***/ },
	/* 154 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		/**
		 * TabBar Component Style for tingle
		 * @author zhouwenjie
		 *
		 * Copyright 2014-2016, Tingle Team, Alinw.
		 * All rights reserved.
		 */
		
		module.exports = __webpack_require__(155);
		
	
	
	/***/ },
	/* 155 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		/**
		 * TabBar Component for tingle
		 * @author zhouwenjie
		 *
		 * Copyright 2014-2016, Tingle Team.
		 * All rights reserved.
		 */
		var React = __webpack_require__(2);
		var classnames = __webpack_require__(45);
		var Context = __webpack_require__(47);
		
		var _require = __webpack_require__(51),
		    HBox = _require.HBox;
		
		var TabBarItem = __webpack_require__(156);
		
		var TabBar = function (_React$Component) {
		  _inherits(TabBar, _React$Component);
		
		  function TabBar(props) {
		    _classCallCheck(this, TabBar);
		
		    var _this = _possibleConstructorReturn(this, (TabBar.__proto__ || Object.getPrototypeOf(TabBar)).call(this, props));
		
		    _this.state = {
		      activeIndex: props.activeIndex
		    };
		    return _this;
		  }
		
		  _createClass(TabBar, [{
		    key: 'componentWillReceiveProps',
		    value: function componentWillReceiveProps(nextProps) {
		      var t = this;
		      var nextActiveIndex = nextProps.activeIndex;
		      if (nextActiveIndex !== t.state.activeIndex) {
		        t.setActiveIndex(nextActiveIndex);
		      }
		    }
		  }, {
		    key: 'onItemClick',
		    value: function onItemClick(index) {
		      if (index !== this.state.activeIndex) {
		        this.setActiveIndex(index);
		      }
		    }
		  }, {
		    key: 'setActiveIndex',
		    value: function setActiveIndex(index) {
		      var t = this;
		      t.setState({
		        activeIndex: index
		      }, function () {
		        t.props.onChange(index);
		      });
		    }
		  }, {
		    key: 'renderItems',
		    value: function renderItems() {
		      var t = this;
		      return React.createElement(
		        HBox,
		        {
		          className: Context.prefixClass('tab-bar-items'),
		          style: t.props.tabBarStyle,
		          hAlign: 'center',
		          vAlign: 'center'
		        },
		        React.Children.map(t.props.children, function (child, idx) {
		          if (!child) {
		            return null;
		          }
		          return React.createElement(TabBarItem, {
		            key: idx,
		            item: child,
		            active: idx === t.state.activeIndex,
		            onClick: t.onItemClick.bind(t, idx)
		          });
		        })
		      );
		    }
		  }, {
		    key: 'renderContents',
		    value: function renderContents() {
		      var t = this;
		      var contents = React.Children.map(t.props.children, function (child, idx) {
		        if (!child || !child.props.children) {
		          return null;
		        }
		        var className = classnames(Context.prefixClass('tab-bar-content'), {
		          'active': idx === t.state.activeIndex
		        });
		        return React.createElement(
		          'div',
		          { key: idx, className: className },
		          child.props && child.props.children
		        );
		      });
		      var noContents = !contents || contents.every(function (content) {
		        return content == null;
		      });
		      if (noContents) {
		        return null;
		      }
		      return React.createElement(
		        'div',
		        { className: Context.prefixClass('tab-bar-contents') },
		        contents
		      );
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      var t = this;
		      var className = classnames(Context.prefixClass('tab-bar'), _defineProperty({}, t.props.className, !!t.props.className));
		      return React.createElement(
		        'div',
		        { ref: 'root', className: className },
		        t.renderContents(),
		        t.renderItems()
		      );
		    }
		  }]);
		
		  return TabBar;
		}(React.Component);
		
		TabBar.displayName = 'TabBar';
		TabBar.propTypes = {
		  className: React.PropTypes.string,
		  activeIndex: React.PropTypes.number,
		  onChange: React.PropTypes.func,
		  tabBarStyle: React.PropTypes.object
		};
		TabBar.defaultProps = {
		  activeIndex: 0,
		  onChange: function onChange() {}
		};
		
		TabBar.Item = TabBarItem;
		
		module.exports = TabBar;
		
	
	
	/***/ },
	/* 156 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		/**
		 * TabBar Component for tingle
		 * @author zhouwenjie
		 *
		 * Copyright 2014-2016, Tingle Team.
		 * All rights reserved.
		 */
		var classnames = __webpack_require__(45);
		var assign = __webpack_require__(144);
		
		var Context = __webpack_require__(47);
		
		var _require = __webpack_require__(51),
		    Box = _require.Box;
		
		var Icon = __webpack_require__(89);
		
		var isUrl = function isUrl(str) {
		  return (/\/\/.+/g.test(str)
		  );
		};
		var isArray = function isArray(obj) {
		  return Object.prototype.toString.call(obj) === '[object Array]';
		};
		
		var TabBarItemBadge = function (_React$Component) {
		  _inherits(TabBarItemBadge, _React$Component);
		
		  function TabBarItemBadge() {
		    _classCallCheck(this, TabBarItemBadge);
		
		    return _possibleConstructorReturn(this, (TabBarItemBadge.__proto__ || Object.getPrototypeOf(TabBarItemBadge)).apply(this, arguments));
		  }
		
		  _createClass(TabBarItemBadge, [{
		    key: 'render',
		    value: function render() {
		      var _props = this.props,
		          badge = _props.badge,
		          badgeStyle = _props.badgeStyle;
		
		      var badgeText = void 0;
		      if (badge == null) {
		        return null;
		      }
		      if (/^-?\d+(\.\d*)?|\.\d+$/.test(badge)) {
		        badgeText = parseInt(badge, 10);
		        if (badgeText > 99) {
		          badgeText = '99+';
		        }
		      }
		      return React.createElement(
		        'span',
		        { style: badgeStyle, className: classnames(Context.prefixClass('tab-bar-item-badge'), {
		            'point': !badgeText
		          }) },
		        badgeText
		      );
		    }
		  }]);
		
		  return TabBarItemBadge;
		}(React.Component);
		
		TabBarItemBadge.displayName = 'TabBarItemBadge';
		TabBarItemBadge.propTypes = {
		  badge: React.PropTypes.oneOfType([React.PropTypes.bool, React.PropTypes.number, React.PropTypes.string]),
		  badgeStyle: React.PropTypes.object
		};
		
		var TabBarItemIcon = function (_React$Component2) {
		  _inherits(TabBarItemIcon, _React$Component2);
		
		  function TabBarItemIcon() {
		    _classCallCheck(this, TabBarItemIcon);
		
		    return _possibleConstructorReturn(this, (TabBarItemIcon.__proto__ || Object.getPrototypeOf(TabBarItemIcon)).apply(this, arguments));
		  }
		
		  _createClass(TabBarItemIcon, [{
		    key: 'getIcon',
		    value: function getIcon() {
		      var icon = this.props.icon;
		
		      return isArray(icon) ? icon[0] : icon;
		    }
		  }, {
		    key: 'getActiveIcon',
		    value: function getActiveIcon() {
		      var _props2 = this.props,
		          icon = _props2.icon,
		          activeIcon = _props2.activeIcon;
		
		      if (activeIcon) {
		        return activeIcon;
		      }
		      return isArray(icon) ? icon[1] : icon;
		    }
		  }, {
		    key: 'renderImgIcon',
		    value: function renderImgIcon(icon, title, style) {
		      var className = Context.prefixClass('tab-bar-item-img-icon');
		      return React.createElement('img', { className: className, style: style, src: icon, alt: title });
		    }
		  }, {
		    key: 'renderTingleIcon',
		    value: function renderTingleIcon(icon) {
		      var style = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
		
		      var className = Context.prefixClass('tab-bar-item-tingle-icon');
		      return React.createElement(Icon, { width: 25, height: 25, className: className, style: style, name: icon });
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      var _props3 = this.props,
		          active = _props3.active,
		          title = _props3.title,
		          iconStyle = _props3.iconStyle,
		          activeIconStyle = _props3.activeIconStyle,
		          badge = _props3.badge,
		          badgeStyle = _props3.badgeStyle;
		
		      var currentIconStyle = assign({}, iconStyle, active ? activeIconStyle : {});
		      var currentIcon = active ? this.getActiveIcon() : this.getIcon();
		      if (!currentIcon) {
		        return null;
		      }
		      var iconElem = void 0;
		      if (isUrl(currentIcon)) {
		        iconElem = this.renderImgIcon(currentIcon, title, currentIconStyle);
		      } else {
		        iconElem = this.renderTingleIcon(currentIcon, currentIconStyle);
		      }
		      return React.createElement(
		        'div',
		        { className: Context.prefixClass('tab-bar-item-icon') },
		        React.createElement(TabBarItemBadge, { badge: badge, badgeStyle: badgeStyle }),
		        iconElem
		      );
		    }
		  }]);
		
		  return TabBarItemIcon;
		}(React.Component);
		
		TabBarItemIcon.displayName = 'TabBarItemIcon';
		TabBarItemIcon.propTypes = {
		  active: React.PropTypes.bool,
		  icon: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.array]),
		  activeIcon: React.PropTypes.string,
		  iconStyle: React.PropTypes.object,
		  activeIconStyle: React.PropTypes.object
		};
		
		var TabBarItemTitle = function (_React$Component3) {
		  _inherits(TabBarItemTitle, _React$Component3);
		
		  function TabBarItemTitle() {
		    _classCallCheck(this, TabBarItemTitle);
		
		    return _possibleConstructorReturn(this, (TabBarItemTitle.__proto__ || Object.getPrototypeOf(TabBarItemTitle)).apply(this, arguments));
		  }
		
		  _createClass(TabBarItemTitle, [{
		    key: 'render',
		    value: function render() {
		      var _props4 = this.props,
		          active = _props4.active,
		          title = _props4.title,
		          titleStyle = _props4.titleStyle,
		          activeTitleStyle = _props4.activeTitleStyle;
		
		      var currentTitleStyle = active ? activeTitleStyle : titleStyle;
		      return React.createElement(
		        'span',
		        {
		          className: Context.prefixClass('tab-bar-item-label'),
		          style: currentTitleStyle },
		        title
		      );
		    }
		  }]);
		
		  return TabBarItemTitle;
		}(React.Component);
		
		TabBarItemTitle.displayName = 'TabBarItemTitle';
		TabBarItemTitle.propTypes = {
		  active: React.PropTypes.bool,
		  title: React.PropTypes.string,
		  titleStyle: React.PropTypes.object,
		  activeTitleStyle: React.PropTypes.object
		};
		
		var TabBarItem = function (_React$Component4) {
		  _inherits(TabBarItem, _React$Component4);
		
		  function TabBarItem() {
		    _classCallCheck(this, TabBarItem);
		
		    return _possibleConstructorReturn(this, (TabBarItem.__proto__ || Object.getPrototypeOf(TabBarItem)).apply(this, arguments));
		  }
		
		  _createClass(TabBarItem, [{
		    key: 'render',
		    value: function render() {
		      var t = this;
		      var item = t.props.item;
		      var active = t.props.active;
		      return React.createElement(
		        Box,
		        { className: classnames(Context.prefixClass('tab-bar-item'), {
		            'active': active
		          }), onClick: t.props.onClick, flex: 1
		        },
		        React.createElement(TabBarItemIcon, _extends({}, item.props, { active: active })),
		        React.createElement(TabBarItemTitle, _extends({}, item.props, { active: active }))
		      );
		    }
		  }]);
		
		  return TabBarItem;
		}(React.Component);
		
		TabBarItem.displayName = 'TabBarItem';
		TabBarItem.propTypes = {
		  className: React.PropTypes.string,
		  item: React.PropTypes.element,
		  titleStyle: React.PropTypes.object,
		  activeTitleStyle: React.PropTypes.object,
		  iconStyle: React.PropTypes.object,
		  activeIconStyle: React.PropTypes.object
		};
		
		
		module.exports = TabBarItem;
		
	
	
	/***/ },
	/* 157 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		/**
		 * TextareaField Component Style for tingle
		 * @author zhangshun@alipay.com
		 *
		 * Copyright 2014-2016, Tingle Team, Alinw.
		 * All rights reserved.
		 */
		
		module.exports = __webpack_require__(158);
		
	
	
	/***/ },
	/* 158 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		/**
		 * TextareaField Component for tingle
		 * @author zhangshun@alipay.com
		 *
		 * Copyright 2014-2016, Tingle Team.
		 * All rights reserved.
		 */
		var React = __webpack_require__(2);
		var classnames = __webpack_require__(45);
		var Context = __webpack_require__(47);
		var calculateHeight = __webpack_require__(159);
		var Field = __webpack_require__(87);
		
		var prefixClass = Context.prefixClass;
		
		var TextareaField = function (_React$Component) {
		    _inherits(TextareaField, _React$Component);
		
		    function TextareaField(props) {
		        _classCallCheck(this, TextareaField);
		
		        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(TextareaField).call(this, props));
		
		        _this.state = {
		            height: null
		        };
		        return _this;
		    }
		
		    _createClass(TextareaField, [{
		        key: 'componentDidMount',
		        value: function componentDidMount() {
		            this._resize();
		        }
		    }, {
		        key: 'componentWillReceiveProps',
		        value: function componentWillReceiveProps(nextProps) {
		            if ('value' in nextProps) {
		                this._resize();
		            }
		        }
		    }, {
		        key: '_resize',
		        value: function _resize() {
		            this.setState(calculateHeight(ReactDOM.findDOMNode(this.refs.textarea), this.props.minRows || this.props.rows, this.props.maxRows));
		        }
		    }, {
		        key: 'handleChange',
		        value: function handleChange(e) {
		            this._resize();
		            this.props.onChange(e.target.value, e);
		        }
		    }, {
		        key: 'handleFocus',
		        value: function handleFocus(e) {
		            this.props.onFocus(e);
		        }
		    }, {
		        key: 'handleBlur',
		        value: function handleBlur(e) {
		            this.props.onBlur(e);
		        }
		    }, {
		        key: 'render',
		        value: function render() {
		            var _classnames;
		
		            var t = this;
		            var _t$props = t.props;
		            var placeholder = _t$props.placeholder;
		            var label = _t$props.label;
		            var readOnly = _t$props.readOnly;
		
		            var style = {
		                height: t.state.height
		            };
		
		            return React.createElement(
		                Field,
		                _extends({}, t.props, { multiLine: true, className: classnames((_classnames = {}, _defineProperty(_classnames, prefixClass('textarea-field'), true), _defineProperty(_classnames, 'readonly', readOnly), _defineProperty(_classnames, t.props.className, !!t.props.className), _classnames)) }),
		                React.createElement('textarea', { ref: 'textarea',
		                    className: prefixClass('textarea-field-content'),
		                    style: style,
		                    placeholder: placeholder,
		                    value: t.props.value,
		                    readOnly: readOnly,
		                    rows: t.props.minRows,
		                    onChange: t.handleChange.bind(t),
		                    onFocus: t.handleFocus.bind(t),
		                    onBlur: t.handleBlur.bind(t) })
		            );
		        }
		    }]);
		
		    return TextareaField;
		}(React.Component);
		
		;
		
		TextareaField.defaultProps = {
		    placeholder: '',
		    onChange: Context.noop,
		    onFocus: Context.noop,
		    onBlur: Context.noop,
		    readOnly: false,
		    minRows: 1,
		    maxRows: 10,
		    value: ''
		};
		
		// http://facebook.github.io/react/docs/reusable-components.html
		TextareaField.propTypes = {
		    value: React.PropTypes.string,
		    placeholder: React.PropTypes.string,
		    onChange: React.PropTypes.func,
		    onFocus: React.PropTypes.func,
		    onBlur: React.PropTypes.func,
		    readOnly: React.PropTypes.bool,
		    minRows: React.PropTypes.number,
		    maxRows: React.PropTypes.number,
		    className: React.PropTypes.string
		};
		
		TextareaField.displayName = 'TextareaField';
		
		module.exports = TextareaField;
		
	
	
	/***/ },
	/* 159 */
	/***/ function(module, exports) {
	
		'use strict';
		
		var HIDDEN_TEXTAREA_STYLE = ['height: 0', 'visibility: hidden', 'overflow: hidden', 'position: absolute', 'z-index: -1000', 'top: 0', 'right: 0'];
		
		var STYLES = ['letter-spacing', 'line-height', 'padding-top', 'padding-bottom', 'padding-left', 'padding-right', 'font-family', 'font-weight', 'font-size', 'text-transform', 'width', 'border-width', 'box-sizing'];
		
		var shadowTextarea = null;
		
		function getStyleInfo(textarea) {
		    var computedStyle = window.getComputedStyle(textarea);
		    var boxSizing = getPrefixedStyle(computedStyle, 'box-sizing');
		    var heightAdjust = 0;
		    var padding = getStyleNumber(computedStyle, 'padding-top') + getStyleNumber(computedStyle, 'padding-bottom');
		    var border = getStyleNumber(computedStyle, 'border-bottom-width') + getStyleNumber(computedStyle, 'border-top-width');
		    if (boxSizing === 'border-box') heightAdjust += border;else if (boxSizing === 'content-box') heightAdjust -= padding;
		    return {
		        styles: STYLES.map(function (name) {
		            return name + ':' + computedStyle.getPropertyValue(name);
		        }),
		        padding: padding,
		        border: border,
		        heightAdjust: heightAdjust
		    };
		}
		
		function getPrefixedStyle(computedStyle, name) {
		    var prefix = ['-o-', '-ms-', '-moz-', '-webkit-', ''];
		    var tmp = void 0;
		    for (var i = prefix.length; i--;) {
		        if (tmp = computedStyle.getPropertyValue(prefix[i] + name)) return tmp;
		    }return null;
		}
		
		function getStyleNumber(computedStyle, name) {
		    return parseFloat(computedStyle.getPropertyValue(name));
		}
		
		function getSingleRowHeight(textarea) {
		    var tmp = textarea.value;
		    textarea.value = 'x';
		    var result = textarea.scrollHeight;
		    textarea.value = tmp;
		    return result;
		}
		
		module.exports = function calculateHeight(textarea, minRows, maxRows) {
		    if (!shadowTextarea) document.body.appendChild(shadowTextarea = document.createElement('textarea'));
		    var _styleInfo = getStyleInfo(textarea);
		    var styles = _styleInfo.styles;
		    var heightAdjust = _styleInfo.heightAdjust;
		    var padding = _styleInfo.padding;
		    var border = _styleInfo.border;
		
		    shadowTextarea.setAttribute('style', styles.concat(HIDDEN_TEXTAREA_STYLE).join(';'));
		    shadowTextarea.value = textarea.value;
		    var height = shadowTextarea.scrollHeight + heightAdjust;
		    var minHeight = -Infinity;
		    var maxHeight = Infinity;
		
		    if (minRows !== null || maxRows !== null) {
		        var singleRowHeight = getSingleRowHeight(shadowTextarea) - padding;
		        if (minRows !== null) {
		            minHeight = singleRowHeight * minRows + padding + heightAdjust;
		            height = Math.max(minHeight, height);
		        }
		        if (maxRows !== null) {
		            maxHeight = singleRowHeight * maxRows + padding + heightAdjust;
		            height = Math.min(maxHeight, height);
		        }
		    }
		
		    return {
		        height: height,
		        minHeight: minHeight,
		        maxHeight: maxHeight
		    };
		};
		
	
	
	/***/ },
	/* 160 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		/**
		 * TextField Component Style for tingle
		 * @author jiasong.js
		 *
		 * Copyright 2014-2016, Tingle Team, Alinw.
		 * All rights reserved.
		 */
		
		module.exports = __webpack_require__(161);
		
	
	
	/***/ },
	/* 161 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		/**
		 * TextField Component for tingle
		 * @author
		 *
		 * Copyright 2014-2016, Tingle Team.
		 * All rights reserved.
		 */
		var classnames = __webpack_require__(45);
		var Context = __webpack_require__(47);
		var Field = __webpack_require__(87);
		
		var prefixClass = Context.prefixClass;
		
		var TextField = function (_React$Component) {
		    _inherits(TextField, _React$Component);
		
		    function TextField(props) {
		        _classCallCheck(this, TextField);
		
		        return _possibleConstructorReturn(this, Object.getPrototypeOf(TextField).call(this, props));
		    }
		
		    _createClass(TextField, [{
		        key: 'handleChange',
		        value: function handleChange(e) {
		            var value = this.props.filter(e.target.value);
		            this.props.onChange(value, e);
		        }
		    }, {
		        key: 'handleFocus',
		        value: function handleFocus(e) {
		            var t = this;
		            t.props.onFocus(t.props.value);
		        }
		    }, {
		        key: 'handleBlur',
		        value: function handleBlur(e) {
		            var t = this;
		            t.props.onBlur(t.props.value, e);
		        }
		    }, {
		        key: 'render',
		        value: function render() {
		            var t = this;
		
		            return React.createElement(
		                Field,
		                _extends({}, t.props, { className: classnames(prefixClass('text-field'), t.props.className, {
		                        readonly: t.props.readOnly
		                    }) }),
		                React.createElement(
		                    'div',
		                    { ref: 'placeholder', className: classnames(prefixClass('omit text-field-placeholder'), _defineProperty({}, prefixClass('DN'), t.props.value !== '' || t.props.readOnly)) },
		                    t.props.placeholder
		                ),
		                React.createElement('input', { ref: 'input', className: prefixClass('text-field-input'),
		                    type: t.props.type, value: t.props.value, readOnly: t.props.readOnly,
		                    onChange: t.handleChange.bind(t),
		                    onFocus: t.handleFocus.bind(t),
		                    onBlur: t.handleBlur.bind(t) })
		            );
		        }
		    }]);
		
		    return TextField;
		}(React.Component);
		
		TextField.defaultProps = {
		    className: '',
		    filter: function filter(v) {
		        return v;
		    },
		    label: '',
		    onChange: Context.noop,
		    onFocus: Context.noop,
		    onBlur: Context.noop,
		    placeholder: '',
		    readOnly: false,
		    type: 'text',
		    value: ''
		};
		
		TextField.propTypes = {
		    className: React.PropTypes.string,
		    filter: React.PropTypes.func,
		    label: React.PropTypes.string,
		    onChange: React.PropTypes.func,
		    onFocus: React.PropTypes.func,
		    onBlur: React.PropTypes.func,
		    placeholder: React.PropTypes.string,
		    readOnly: React.PropTypes.bool,
		    type: React.PropTypes.string
		};
		
		TextField.displayName = 'TextField';
		
		module.exports = TextField;
		
	
	
	/***/ },
	/* 162 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		/**
		 * Toast Component Style for tingle
		 * @author minjie
		 *
		 * Copyright 2014-2016, Tingle Team, Alinw.
		 * All rights reserved.
		 */
		
		module.exports = __webpack_require__(163);
		
	
	
	/***/ },
	/* 163 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		/**
		 * Toast Component for tingle
		 * @author minjie
		 *
		 * Copyright 2014-2016, Tingle Team.
		 * All rights reserved.
		 */
		/* eslint-disable */
		var React = __webpack_require__(2);
		var ReactDOM = __webpack_require__(42);
		var classnames = __webpack_require__(45);
		
		var _require = __webpack_require__(51);
		
		var VBox = _require.VBox;
		
		var Layer = __webpack_require__(59);
		var Icon = __webpack_require__(89);
		
		var _require2 = __webpack_require__(47);
		
		var prefixClass = _require2.prefixClass;
		var noop = _require2.noop;
		
		
		var iconNames = {
		    success: 'check-round',
		    error: 'cross-round',
		    fail: 'toast-fail',
		    loading: 'toast-loading'
		};
		
		var Toast = function (_React$Component) {
		    _inherits(Toast, _React$Component);
		
		    function Toast(props) {
		        _classCallCheck(this, Toast);
		
		        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Toast).call(this, props));
		
		        _this.state = {
		            visible: props.visible,
		            icon: _this.getIconName(props)
		        };
		        return _this;
		    }
		
		    _createClass(Toast, [{
		        key: 'getIconName',
		        value: function getIconName(props) {
		            return props.icon || iconNames[props.type];
		        }
		    }, {
		        key: 'componentWillReceiveProps',
		        value: function componentWillReceiveProps(nextProps) {
		            this.setState({
		                visible: nextProps.visible,
		                icon: this.getIconName(nextProps)
		            });
		        }
		    }, {
		        key: 'startCountdown',
		        value: function startCountdown() {
		            var t = this;
		            t.timer = setTimeout(function () {
		                t.setState({
		                    visible: false
		                });
		                clearTimeout(t.timer);
		            }, t.props.duration);
		        }
		    }, {
		        key: 'handleDidHide',
		        value: function handleDidHide() {
		            this.props.onDidHide();
		        }
		    }, {
		        key: 'renderIcon',
		        value: function renderIcon(icon) {
		            if (!icon) {
		                return null;
		            }
		            // svg loader 无法解析 loading 的 svg
		            // 使用 dangerouslySetInnerHTML={{__html: toastLoading}} 在 uc 内核也有问题
		            // 临时方案使用 background
		            if (icon === 'toast-loading') {
		                return React.createElement('div', { className: prefixClass('toast-icon toast-icon-loading') });
		            }
		            return React.createElement(Icon, { className: classnames(prefixClass('toast-icon'), _defineProperty({}, icon, !!icon)), name: icon, fill: '#fff' });
		        }
		    }, {
		        key: 'render',
		        value: function render() {
		            var t = this;
		            var _t$state = t.state;
		            var visible = _t$state.visible;
		            var icon = _t$state.icon;
		            var _t$props = t.props;
		            var className = _t$props.className;
		            var content = _t$props.content;
		            var autoHide = _t$props.autoHide;
		
		            var other = _objectWithoutProperties(_t$props, ['className', 'content', 'autoHide']);
		
		            // 如果可见 且 可自动关闭 则开始倒计时
		
		
		            visible && autoHide && t.startCountdown();
		
		            return React.createElement(
		                Layer,
		                _extends({ ref: 'root' }, other, { className: classnames(prefixClass('toast'), _defineProperty({}, className, !!className)), visible: visible, onDidHide: t.handleDidHide.bind(t) }),
		                React.createElement(
		                    VBox,
		                    { hAlign: 'center' },
		                    this.renderIcon(icon),
		                    content && React.createElement(
		                        'div',
		                        { className: prefixClass('toast-content') },
		                        content
		                    )
		                )
		            );
		        }
		    }]);
		
		    return Toast;
		}(React.Component);
		
		Toast.defaultProps = {
		    width: 'auto',
		    height: 'auto',
		    hasMask: false,
		    onDidHide: noop,
		    visible: false,
		    autoHide: true,
		    content: '',
		    icon: '',
		    duration: 1500
		};
		
		// http://facebook.github.io/react/docs/reusable-components.html
		Toast.propTypes = {
		    visible: React.PropTypes.bool,
		    hasMask: React.PropTypes.bool,
		    autoHide: React.PropTypes.bool,
		    onDidHide: React.PropTypes.func,
		    width: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.number]),
		    content: React.PropTypes.string,
		    icon: React.PropTypes.string,
		    duration: React.PropTypes.number
		};
		
		var WRAPPER_ID = '__TingleGlobalToast__';
		var doc = document;
		var wrapper = doc.getElementById(WRAPPER_ID);
		if (!wrapper) {
		    wrapper = doc.createElement('div');
		    wrapper.id = WRAPPER_ID;
		    doc.body.appendChild(wrapper);
		}
		ReactDOM.render(React.createElement(Toast, { visible: false }), wrapper);
		
		Toast.show = function (props) {
		    props.visible = true;
		    ReactDOM.render(React.createElement(Toast, props), wrapper);
		};
		
		Toast.hide = function (fn) {
		    ReactDOM.render(React.createElement(Toast, { visible: false, onDidHide: fn }), wrapper);
		};
		
		Toast.displayName = 'Toast';
		
		module.exports = Toast;
		
	
	
	/***/ }
	/******/ ])
	});
	;
	//# sourceMappingURL=tingle-ui.js.map

/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Icon Component Style for tingle
	 * @author fushan
	 *
	 * Copyright 2014-2016, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	module.exports = __webpack_require__(52);
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFRQSxPQUFPLE9BQVAsR0FBaUIsUUFBUSxRQUFSLENBQWpCIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBJY29uIENvbXBvbmVudCBTdHlsZSBmb3IgdGluZ2xlXG4gKiBAYXV0aG9yIGZ1c2hhblxuICpcbiAqIENvcHlyaWdodCAyMDE0LTIwMTYsIFRpbmdsZSBUZWFtLCBBbGludy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL0ljb24nKTtcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==


/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * Icon Component for tinglejs
	 * @auther hanyu
	 *
	 * Copyright 2014-2016, Tingle Team.
	 * All rights reserved.
	 */
	var React = __webpack_require__(7);
	var classnames = __webpack_require__(4);
	var svg4everybody = __webpack_require__(53);
	var webkitUA = /\bAppleWebKit\/(\d+)\b/;
	
	var _require = __webpack_require__(1);
	
	var prefixClass = _require.prefixClass;
	
	var Icon = function (_React$Component) {
	    _inherits(Icon, _React$Component);
	
	    function Icon(props) {
	        _classCallCheck(this, Icon);
	
	        return _possibleConstructorReturn(this, Object.getPrototypeOf(Icon).call(this, props));
	    }
	
	    _createClass(Icon, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            var webkitUAVersion = (navigator.userAgent.match(webkitUA) || [])[1];
	            svg4everybody({
	                polyfill: webkitUAVersion === '600' || webkitUAVersion < 537
	            });
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var t = this;
	
	            var _t$props = t.props;
	            var className = _t$props.className;
	            var width = _t$props.width;
	            var height = _t$props.height;
	            var fill = _t$props.fill;
	
	            var other = _objectWithoutProperties(_t$props, ['className', 'width', 'height', 'fill']);
	
	            return React.createElement(
	                'div',
	                { onClick: t.props.onClick.bind(t), className: classnames(prefixClass('icon'), _defineProperty({}, className, !!className)) },
	                React.createElement(
	                    'svg',
	                    _extends({ className: prefixClass('icon-svg'), fill: fill, width: width, height: height }, other),
	                    React.createElement('use', { xlinkHref: '#' + t.props.name })
	                ),
	                React.createElement('div', { className: prefixClass('icon-mask') })
	            );
	        }
	    }]);
	
	    return Icon;
	}(React.Component);
	
	Icon.defaultProps = {
	    className: '',
	    name: '',
	    width: 32,
	    height: 32,
	    fill: '#000',
	    onClick: function onClick() {}
	};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	Icon.propTypes = {
	    className: React.PropTypes.string,
	    name: React.PropTypes.string.isRequired,
	    width: React.PropTypes.number,
	    height: React.PropTypes.number,
	    fill: React.PropTypes.string,
	    onClick: React.PropTypes.func
	};
	
	Icon.displayName = 'Icon';
	
	module.exports = Icon;
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkljb24uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFPQSxJQUFNLFFBQVEsUUFBUSxPQUFSLENBQVI7QUFDTixJQUFNLGFBQWEsUUFBUSxZQUFSLENBQWI7QUFDTixJQUFJLGdCQUFnQixRQUFRLGlCQUFSLENBQWhCO0FBQ0osSUFBSSxXQUFXLHdCQUFYOztlQUNrQixRQUFRLHFCQUFSOztJQUFmOztJQUVEOzs7QUFFRixhQUZFLElBRUYsQ0FBWSxLQUFaLEVBQW1COzhCQUZqQixNQUVpQjs7c0VBRmpCLGlCQUdRLFFBRFM7S0FBbkI7O2lCQUZFOzs0Q0FNa0I7QUFDaEIsZ0JBQUksa0JBQWtCLENBQUMsVUFBVSxTQUFWLENBQW9CLEtBQXBCLENBQTBCLFFBQTFCLEtBQXVDLEVBQXZDLENBQUQsQ0FBNEMsQ0FBNUMsQ0FBbEIsQ0FEWTtBQUVoQiwwQkFBYztBQUNWLDBCQUFVLG9CQUFvQixLQUFwQixJQUE2QixrQkFBa0IsR0FBbEI7YUFEM0MsRUFGZ0I7Ozs7aUNBT1g7QUFDTCxnQkFBSSxJQUFJLElBQUosQ0FEQzs7MkJBRzRDLEVBQUUsS0FBRixDQUg1QztnQkFHQSwrQkFIQTtnQkFHVyx1QkFIWDtnQkFHa0IseUJBSGxCO2dCQUcwQixxQkFIMUI7O2dCQUdtQyxxRkFIbkM7O0FBS0wsbUJBQ0k7O2tCQUFLLFNBQVMsRUFBRSxLQUFGLENBQVEsT0FBUixDQUFnQixJQUFoQixDQUFxQixDQUFyQixDQUFULEVBQWtDLFdBQVcsV0FBVyxZQUFZLE1BQVosQ0FBWCxzQkFDOUMsV0FBWSxDQUFDLENBQUMsU0FBRCxDQURpQyxDQUFYLEVBQXZDO2dCQUdJOzsrQkFBSyxXQUFXLFlBQVksVUFBWixDQUFYLEVBQW9DLE1BQU0sSUFBTixFQUFZLE9BQU8sS0FBUCxFQUFjLFFBQVEsTUFBUixJQUFvQixNQUF2RjtvQkFDSSw2QkFBSyxXQUFXLE1BQU0sRUFBRSxLQUFGLENBQVEsSUFBUixFQUF0QixDQURKO2lCQUhKO2dCQU1JLDZCQUFLLFdBQVcsWUFBWSxXQUFaLENBQVgsRUFBTCxDQU5KO2FBREosQ0FMSzs7OztXQWJQO0VBQWEsTUFBTSxTQUFOOztBQStCbkIsS0FBSyxZQUFMLEdBQW9CO0FBQ2hCLGVBQVcsRUFBWDtBQUNBLFVBQU0sRUFBTjtBQUNBLFdBQU8sRUFBUDtBQUNBLFlBQVEsRUFBUjtBQUNBLFVBQU0sTUFBTjtBQUNBLGFBQVMsbUJBQU0sRUFBTjtDQU5iOzs7QUFXQSxLQUFLLFNBQUwsR0FBaUI7QUFDYixlQUFXLE1BQU0sU0FBTixDQUFnQixNQUFoQjtBQUNYLFVBQU0sTUFBTSxTQUFOLENBQWdCLE1BQWhCLENBQXVCLFVBQXZCO0FBQ04sV0FBTyxNQUFNLFNBQU4sQ0FBZ0IsTUFBaEI7QUFDUCxZQUFRLE1BQU0sU0FBTixDQUFnQixNQUFoQjtBQUNSLFVBQU0sTUFBTSxTQUFOLENBQWdCLE1BQWhCO0FBQ04sYUFBUyxNQUFNLFNBQU4sQ0FBZ0IsSUFBaEI7Q0FOYjs7QUFTQSxLQUFLLFdBQUwsR0FBbUIsTUFBbkI7O0FBRUEsT0FBTyxPQUFQLEdBQWlCLElBQWpCIiwiZmlsZSI6Ikljb24uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEljb24gQ29tcG9uZW50IGZvciB0aW5nbGVqc1xuICogQGF1dGhlciBoYW55dVxuICpcbiAqIENvcHlyaWdodCAyMDE0LTIwMTYsIFRpbmdsZSBUZWFtLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqL1xuY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuY29uc3QgY2xhc3NuYW1lcyA9IHJlcXVpcmUoJ2NsYXNzbmFtZXMnKTtcbmxldCBzdmc0ZXZlcnlib2R5ID0gcmVxdWlyZSgnLi9zdmc0ZXZlcnlib2R5Jyk7XG5sZXQgd2Via2l0VUEgPSAvXFxiQXBwbGVXZWJLaXRcXC8oXFxkKylcXGIvO1xuY29uc3Qge3ByZWZpeENsYXNzfSA9IHJlcXVpcmUoJ0BhbGkvdGluZ2xlLWNvbnRleHQnKTtcblxuY2xhc3MgSWNvbiBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgfVxuXG4gICAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgICAgIGxldCB3ZWJraXRVQVZlcnNpb24gPSAobmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaCh3ZWJraXRVQSkgfHwgW10pWzFdO1xuICAgICAgICBzdmc0ZXZlcnlib2R5KHtcbiAgICAgICAgICAgIHBvbHlmaWxsOiB3ZWJraXRVQVZlcnNpb24gPT09ICc2MDAnIHx8IHdlYmtpdFVBVmVyc2lvbiA8IDUzN1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGxldCB0ID0gdGhpcztcblxuICAgICAgICBsZXQge2NsYXNzTmFtZSwgd2lkdGgsIGhlaWdodCwgZmlsbCwgLi4ub3RoZXJ9ID0gdC5wcm9wcztcbiAgXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IG9uQ2xpY2s9e3QucHJvcHMub25DbGljay5iaW5kKHQpfSBjbGFzc05hbWU9e2NsYXNzbmFtZXMocHJlZml4Q2xhc3MoJ2ljb24nKSwge1xuICAgICAgICAgICAgICAgW2NsYXNzTmFtZV06ICEhY2xhc3NOYW1lXG4gICAgICAgICAgICB9KX0+IFxuICAgICAgICAgICAgICAgIDxzdmcgY2xhc3NOYW1lPXtwcmVmaXhDbGFzcygnaWNvbi1zdmcnKX0gZmlsbD17ZmlsbH0gd2lkdGg9e3dpZHRofSBoZWlnaHQ9e2hlaWdodH0gey4uLm90aGVyfT5cbiAgICAgICAgICAgICAgICAgICAgPHVzZSB4bGlua0hyZWY9eycjJyArIHQucHJvcHMubmFtZX0vPlxuICAgICAgICAgICAgICAgIDwvc3ZnPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtwcmVmaXhDbGFzcygnaWNvbi1tYXNrJyl9PjwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxufVxuXG5JY29uLmRlZmF1bHRQcm9wcyA9IHtcbiAgICBjbGFzc05hbWU6ICcnLFxuICAgIG5hbWU6ICcnLFxuICAgIHdpZHRoOiAzMixcbiAgICBoZWlnaHQ6IDMyLFxuICAgIGZpbGw6ICcjMDAwJyxcbiAgICBvbkNsaWNrOiAoKSA9PiB7fVxufTtcblxuXG4vLyBodHRwOi8vZmFjZWJvb2suZ2l0aHViLmlvL3JlYWN0L2RvY3MvcmV1c2FibGUtY29tcG9uZW50cy5odG1sXG5JY29uLnByb3BUeXBlcyA9IHtcbiAgICBjbGFzc05hbWU6IFJlYWN0LlByb3BUeXBlcy5zdHJpbmcsXG4gICAgbmFtZTogUmVhY3QuUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICAgIHdpZHRoOiBSZWFjdC5Qcm9wVHlwZXMubnVtYmVyLFxuICAgIGhlaWdodDogUmVhY3QuUHJvcFR5cGVzLm51bWJlcixcbiAgICBmaWxsOiBSZWFjdC5Qcm9wVHlwZXMuc3RyaW5nLFxuICAgIG9uQ2xpY2s6IFJlYWN0LlByb3BUeXBlcy5mdW5jXG59O1xuXG5JY29uLmRpc3BsYXlOYW1lID0gJ0ljb24nO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEljb247XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=


/***/ },
/* 53 */
/***/ function(module, exports) {

	'use strict';
	
	/*! svg4everybody v2.0.3 | github.com/jonathantneal/svg4everybody */
	// https://github.com/jonathantneal/svg4everybody.git
	function embed(svg, target) {
		// if the target exists
		if (target) {
			// create a document fragment to hold the contents of the target
			var fragment = document.createDocumentFragment();
	
			// cache the closest matching viewBox
			var viewBox = !svg.getAttribute('viewBox') && target.getAttribute('viewBox');
	
			// conditionally set the viewBox on the svg
			if (viewBox) {
				svg.setAttribute('viewBox', viewBox);
			}
	
			// clone the target
			var clone = target.cloneNode(true);
	
			// copy the contents of the clone into the fragment
			while (clone.childNodes.length) {
				fragment.appendChild(clone.firstChild);
			}
	
			// append the fragment into the svg
			svg.appendChild(fragment);
		}
	}
	
	function loadreadystatechange(xhr) {
		// listen to changes in the request
		xhr.onreadystatechange = function () {
			// if the request is ready
			if (xhr.readyState === 4) {
				// get the cached html document
				var cachedDocument = xhr._cachedDocument;
	
				// ensure the cached html document based on the xhr response
				if (!cachedDocument) {
					cachedDocument = xhr._cachedDocument = document.implementation.createHTMLDocument('');
	
					cachedDocument.body.innerHTML = xhr.responseText;
	
					xhr._cachedTarget = {};
				}
	
				// clear the xhr embeds list and embed each item
				xhr._embeds.splice(0).map(function (item) {
					// get the cached target
					var target = xhr._cachedTarget[item.id];
	
					// ensure the cached target
					if (!target) {
						target = xhr._cachedTarget[item.id] = cachedDocument.getElementById(item.id);
					}
	
					// embed the target into the svg
					embed(item.svg, target);
				});
			}
		};
	
		// test the ready state change immediately
		xhr.onreadystatechange();
	}
	
	function svg4everybody(rawopts) {
		var opts = Object(rawopts);
	
		// create legacy support variables
		var nosvg;
		var fallback;
	
		// set whether the polyfill will be activated or not
		var polyfill;
		var olderIEUA = /\bMSIE [1-8]\.0\b/;
		var newerIEUA = /\bTrident\/[567]\b|\bMSIE (?:9|10)\.0\b/;
		var webkitUA = /\bAppleWebKit\/(\d+)\b/;
		var olderEdgeUA = /\bEdge\/12\.(\d+)\b/;
	
		if ('polyfill' in opts) {
			polyfill = opts.polyfill;
		} else {
			polyfill = newerIEUA.test(navigator.userAgent) || (navigator.userAgent.match(olderEdgeUA) || [])[1] < 10547 || (navigator.userAgent.match(webkitUA) || [])[1] < 537;
		}
	
		// create xhr requests object
		var requests = {};
	
		// use request animation frame or a timeout to search the dom for svgs
		var requestAnimationFrame = window.requestAnimationFrame || setTimeout;
	
		// get a live collection of use elements on the page
		var uses = document.getElementsByTagName('use');
	
		function oninterval() {
			// get the cached <use> index
			var index = 0;
	
			// while the index exists in the live <use> collection
			while (index < uses.length) {
				// get the current <use>
				var use = uses[index];
	
				// get the current <svg>
				var svg = use.parentNode;
	
				if (svg && /svg/i.test(svg.nodeName)) {
					var src = use.getAttribute('xlink:href');
	
					if (polyfill) {
						if (!opts.validate || opts.validate(src, svg, use)) {
							// remove the <use> element
							svg.removeChild(use);
	
							// parse the src and get the url and id
							var srcSplit = src.split('#');
							var url = srcSplit.shift();
							var id = srcSplit.join('#');
	
							// if the link is external
							if (url.length) {
								// get the cached xhr request
								var xhr = requests[url];
	
								// ensure the xhr request exists
								if (!xhr) {
									xhr = requests[url] = new XMLHttpRequest();
	
									xhr.open('GET', url);
	
									xhr.send();
	
									xhr._embeds = [];
								}
	
								// add the svg and id as an item to the xhr embeds list
								xhr._embeds.push({
									svg: svg,
									id: id
								});
	
								// prepare the xhr ready state change event
								loadreadystatechange(xhr);
							} else {
								// embed the local id into the svg
								embed(svg, document.getElementById(id));
							}
						}
					}
				} else {
					// increase the index when the previous value was not "valid"
					++index;
				}
			}
	
			// continue the interval
			requestAnimationFrame(oninterval, 67);
		}
	
		// conditionally start the interval if the polyfill is active
		if (polyfill) {
			oninterval();
		}
	}
	
	module.exports = svg4everybody;
	//# sourceMappingURL=data:application/json;base64,


/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(55);

/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var TingleUI = __webpack_require__(50);
	var Toast = TingleUI.Toast,
	    Button = TingleUI.Button,
	    Boxs = TingleUI.Boxs;
	
	var HBox = Boxs.HBox;
	var Box = Boxs.Box;
	
	var Page = function (_React$Component) {
	    _inherits(Page, _React$Component);
	
	    function Page(props) {
	        _classCallCheck(this, Page);
	
	        return _possibleConstructorReturn(this, (Page.__proto__ || Object.getPrototypeOf(Page)).call(this, props));
	    }
	
	    _createClass(Page, [{
	        key: 'handleClick',
	        value: function handleClick(options) {
	            Toast.show(options);
	        }
	    }, {
	        key: 'changeTheme',
	        value: function changeTheme() {
	            var element = document.getElementById('current-theme');
	            var href = element.href;
	            var timestamp = new Date().getTime();
	            if (~href.indexOf('default')) {
	                element.href = href.replace(/default\.css(.*)/, '') + 'blue.css?' + timestamp;
	            } else if (~href.indexOf('blue')) {
	                element.href = href.replace(/blue\.css(.*)/, '') + 'dd.css?' + timestamp;
	            } else if (~href.indexOf('dd')) {
	                element.href = href.replace(/dd\.css(.*)/, '') + 'default.css?' + timestamp;
	            }
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var t = this;
	            return React.createElement(
	                'div',
	                { className: 'page-button' },
	                React.createElement(
	                    'div',
	                    { className: 't-PL16 t-PR16' },
	                    React.createElement(
	                        Button,
	                        { type: 'primary', onClick: t.handleClick.bind(t, {
	                                type: 'success',
	                                content: '提交成功'
	                            }) },
	                        '\u4E00\u7EA7\u6309\u94AE'
	                    ),
	                    React.createElement(
	                        Button,
	                        { type: 'secondary', onClick: t.handleClick.bind(t, {
	                                type: 'error',
	                                content: '提交出错'
	                            }) },
	                        '\u4E8C \u7EA7 \u6309 \u94AE'
	                    ),
	                    React.createElement(
	                        Button,
	                        { type: 'minor', onClick: t.handleClick.bind(t, {
	                                type: 'fail',
	                                content: '取消'
	                            }) },
	                        '\u5E7D\u7075\u6309\u94AE'
	                    ),
	                    React.createElement(
	                        HBox,
	                        null,
	                        React.createElement(
	                            Box,
	                            { flex: 1, className: 't-PR8' },
	                            React.createElement(
	                                Button,
	                                { type: 'primary', onClick: t.handleClick.bind(t, { content: '提交失败' }) },
	                                '\u5C0F\u6309\u94AE'
	                            )
	                        ),
	                        React.createElement(
	                            Box,
	                            { flex: 1, className: 't-PL8' },
	                            React.createElement(
	                                Button,
	                                { type: 'secondary', onClick: t.changeTheme.bind(t) },
	                                '\u5207\u6362\u4E3B\u9898'
	                            )
	                        )
	                    ),
	                    React.createElement(
	                        Button,
	                        { disabled: true },
	                        '\u7981\u7528\u6309\u94AE'
	                    )
	                ),
	                React.createElement(
	                    Button,
	                    { className: 'fixed-button tPF', onClick: t.handleClick.bind(t, { content: '请稍后', type: 'loading' }) },
	                    '\u901A\u680F\u6309\u94AE'
	                )
	            );
	        }
	    }]);
	
	    return Page;
	}(React.Component);
	
	module.exports = Page;

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(57);

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var TingleUI = __webpack_require__(50);
	var Group = TingleUI.Group,
	    Tab = TingleUI.Tab,
	    List = TingleUI.List,
	    Avatar = TingleUI.Avatar,
	    Button = TingleUI.Button,
	    Boxs = TingleUI.Boxs,
	    Icon = TingleUI.Icon;
	
	var HBox = Boxs.HBox;
	var Box = Boxs.Box;
	
	var Page = function (_React$Component) {
	    _inherits(Page, _React$Component);
	
	    function Page(props) {
	        _classCallCheck(this, Page);
	
	        var _this = _possibleConstructorReturn(this, (Page.__proto__ || Object.getPrototypeOf(Page)).call(this, props));
	
	        _this.state = {
	            type: ''
	        };
	        return _this;
	    }
	
	    _createClass(Page, [{
	        key: 'handleChange',
	        value: function handleChange() {}
	    }, {
	        key: 'changeTheme',
	        value: function changeTheme() {
	            var element = document.getElementById('current-theme');
	            var href = element.href;
	            var timestamp = new Date().getTime();
	            if (~href.indexOf('default')) {
	                element.href = href.replace(/default\.css(.*)/, '') + 'blue.css?' + timestamp;
	            } else if (~href.indexOf('blue')) {
	                element.href = href.replace(/blue\.css(.*)/, '') + 'dd.css?' + timestamp;
	            } else if (~href.indexOf('dd')) {
	                element.href = href.replace(/dd\.css(.*)/, '') + 'default.css?' + timestamp;
	            }
	        }
	    }, {
	        key: 'handleClick',
	        value: function handleClick() {
	            this.setState({
	                type: this.state.type === '' ? 'brick' : ''
	            });
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var t = this;
	            return React.createElement(
	                Tab,
	                { className: 'page-list', type: t.state.type, onChange: t.handleChange.bind(t) },
	                React.createElement(
	                    Tab.Item,
	                    { title: '\u8D21\u732E\u8005' },
	                    React.createElement(
	                        Group.List,
	                        { borderTopNone: true, lineIndent: 15, itemIndent: [15, 15] },
	                        React.createElement(
	                            'div',
	                            { className: 'about-item t-FBH t-FBAC', onClick: t.handleChange.bind(t) },
	                            React.createElement(
	                                'div',
	                                null,
	                                React.createElement(Avatar, { size: '40', name: '\u5C0F\u660E' })
	                            ),
	                            React.createElement(
	                                'p',
	                                { className: 'info t-FB1' },
	                                React.createElement(
	                                    'span',
	                                    { className: 'nickname' },
	                                    '\u5C0F\u660E'
	                                )
	                            )
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'about-item t-FBH t-FBAC', onClick: t.handleChange.bind(t) },
	                            React.createElement(
	                                'div',
	                                null,
	                                React.createElement(Avatar, { size: '40', name: '\u5C0F\u7EA2' })
	                            ),
	                            React.createElement(
	                                'p',
	                                { className: 'info t-FB1' },
	                                React.createElement(
	                                    'span',
	                                    { className: 'nickname' },
	                                    '\u5C0F\u7EA2'
	                                )
	                            )
	                        )
	                    ),
	                    React.createElement(
	                        Button,
	                        { className: 'list-change-theme', type: 'primary', onClick: t.changeTheme.bind(t) },
	                        '\u5207\u6362\u4E3B\u9898'
	                    )
	                ),
	                React.createElement(
	                    Tab.Item,
	                    { title: '\u670D\u52A1\u4E8E\u9879\u76EE' },
	                    React.createElement(
	                        Group,
	                        { className: 'project-tingle' },
	                        React.createElement(
	                            Group.Head,
	                            null,
	                            '\u9879\u76EE\u540D\u79F0'
	                        ),
	                        React.createElement(
	                            Group.List,
	                            { lineIndent: 15, itemIndent: [15, 15] },
	                            React.createElement(
	                                'div',
	                                { className: 't-LH44 t-omit' },
	                                '\u9879\u76EE\u4E00'
	                            ),
	                            React.createElement(
	                                'div',
	                                { className: 't-LH44 t-omit' },
	                                '\u9879\u76EE\u4E8C'
	                            )
	                        )
	                    )
	                ),
	                React.createElement(
	                    Tab.Item,
	                    { title: '\u5217\u8868' },
	                    React.createElement(
	                        Tab,
	                        { type: 'brick' },
	                        React.createElement(
	                            Tab.Item,
	                            { title: '\u5217\u8868\u4E00' },
	                            React.createElement(List, {
	                                layout: 'left',
	                                hasRightIcon: true,
	                                iconName: 'angle-right',
	                                iconWidth: 20,
	                                isDelete: true,
	                                demoTitle: '\u5DE6\u56FE\u53F3\u6587\u6709\u7BAD\u5934icon',
	                                data: [{
	                                    imgUrl: "https://img.alicdn.com/tps/TB16A2fJFXXXXbQXFXXXXXXXXXX-480-640.jpg",
	                                    text: "前端开发工程师",
	                                    title: "马慧（穆心）"
	                                }, {
	                                    imgUrl: "https://img.alicdn.com/tps/TB15YftJFXXXXafXpXXXXXXXXXX-699-698.jpg",
	                                    text: "资深交互设计师",
	                                    title: "周姮"
	                                }, {
	                                    imgUrl: "https://img.alicdn.com/tps/TB1P1vaLpXXXXXxaXXXXXXXXXXX-50-50.jpg",
	                                    text: "交互设计师",
	                                    title: "郝晓敏 (钰馨）"
	                                }] }),
	                            React.createElement(List, {
	                                layout: 'right',
	                                hasRightIcon: false,
	                                isDelete: false,
	                                demoTitle: '\u53F3\u56FE\u5DE6\u6587\u65E0\u7BAD\u5934',
	                                data: [{
	                                    imgUrl: "https://img.alicdn.com/tps/TB1j2u5JFXXXXaEXVXXXXXXXXXX-564-1004.jpg",
	                                    text: "静静的看着这世界，最后疯了",
	                                    title: "远眺"
	                                }, {
	                                    imgUrl: "https://img.alicdn.com/tps/TB1GnjaJFXXXXcpXFXXXXXXXXXX-2448-1836.jpg",
	                                    text: "就想要这样一间小木屋，夏天挫冰吃，冬天为炉取暖，秋天静看落叶，春天畅闻花香",
	                                    title: "小木屋"
	                                }, {
	                                    imgUrl: "https://img.alicdn.com/tps/TB1KC9.JFXXXXX0XVXXXXXXXXXX-225-225.jpg",
	                                    text: "能和心爱的人一起睡觉，是件幸福的事情",
	                                    title: "幸福"
	                                }] }),
	                            React.createElement(List, {
	                                layout: 'left',
	                                hasRightIcon: false,
	                                isDelete: true,
	                                demoTitle: '\u5DE6\u56FE\u53F3\u6587\u65E0\u7BAD\u5934\u53EF\u6ED1\u52A8\u5220\u9664',
	                                data: [{
	                                    imgUrl: "https://img.alicdn.com/tps/TB15YftJFXXXXafXpXXXXXXXXXX-699-698.jpg",
	                                    text: "中午一起吃饭吗？",
	                                    title: "周姮",
	                                    date: "10月12日"
	                                }, {
	                                    imgUrl: "https://img.alicdn.com/tps/TB1P1vaLpXXXXXxaXXXXXXXXXXX-50-50.jpg",
	                                    text: "在哪个会议室？",
	                                    title: "郝晓敏 (钰馨）",
	                                    date: "今天"
	                                }] })
	                        ),
	                        React.createElement(
	                            Tab.Item,
	                            { title: '\u5217\u8868\u4E8C' },
	                            React.createElement(
	                                Group,
	                                { className: 'demo-t-list' },
	                                React.createElement(
	                                    Group.Head,
	                                    { className: 't-demo-title' },
	                                    '\u56FE\u52A0\u6807\u9898'
	                                ),
	                                React.createElement(
	                                    Group.List,
	                                    { lineIndent: 15 },
	                                    React.createElement(
	                                        'div',
	                                        null,
	                                        React.createElement(
	                                            'div',
	                                            { className: 'demo-t-list-wrap-single' },
	                                            React.createElement(
	                                                HBox,
	                                                { vAlign: 'center' },
	                                                React.createElement(
	                                                    HBox,
	                                                    { flex: 1 },
	                                                    React.createElement(
	                                                        Box,
	                                                        null,
	                                                        React.createElement('img', { src: 'https://img.alicdn.com/tps/TB1S02rJFXXXXcuXpXXXXXXXXXX-58-58.png', className: 'demo-t-list-img' })
	                                                    ),
	                                                    React.createElement(
	                                                        Box,
	                                                        { className: 'demo-t-list-text-content-single', flex: 1 },
	                                                        React.createElement(
	                                                            'p',
	                                                            { className: 'demo-t-list-title-single omit' },
	                                                            '\u624B\u673A\u901A\u8BAF\u5F55'
	                                                        )
	                                                    )
	                                                ),
	                                                React.createElement(
	                                                    Box,
	                                                    null,
	                                                    React.createElement(Icon, { name: 'angle-right', width: 20, fill: '#ccc', className: 'demo-t-list-arrow' })
	                                                )
	                                            )
	                                        )
	                                    ),
	                                    React.createElement(
	                                        'div',
	                                        null,
	                                        React.createElement(
	                                            'div',
	                                            { className: 'demo-t-list-wrap-single' },
	                                            React.createElement(
	                                                HBox,
	                                                { vAlign: 'center' },
	                                                React.createElement(
	                                                    HBox,
	                                                    { flex: 1 },
	                                                    React.createElement(
	                                                        Box,
	                                                        null,
	                                                        React.createElement('img', { src: 'https://img.alicdn.com/tps/TB1eoLXJFXXXXaFXVXXXXXXXXXX-60-60.png', className: 'demo-t-list-img' })
	                                                    ),
	                                                    React.createElement(
	                                                        Box,
	                                                        { className: 'demo-t-list-text-content-single', flex: 1 },
	                                                        React.createElement(
	                                                            'p',
	                                                            { className: 'demo-t-list-title-single omit' },
	                                                            '\u7279\u522B\u5173\u6CE8'
	                                                        )
	                                                    )
	                                                ),
	                                                React.createElement(
	                                                    Box,
	                                                    null,
	                                                    React.createElement(Icon, { name: 'angle-right', width: 20, fill: '#ccc', className: 'demo-t-list-arrow' })
	                                                )
	                                            )
	                                        )
	                                    )
	                                )
	                            ),
	                            React.createElement(
	                                Group,
	                                { className: 'demo-t-list' },
	                                React.createElement(
	                                    Group.Head,
	                                    { className: 't-demo-title' },
	                                    '\u4FE1\u606F\u5361\u5217\u8868'
	                                ),
	                                React.createElement(
	                                    Group.List,
	                                    { lineIndent: 80 },
	                                    React.createElement(
	                                        'div',
	                                        { className: 'demo3-t-list-wrap' },
	                                        React.createElement(
	                                            HBox,
	                                            { vAlign: 'center' },
	                                            React.createElement(
	                                                HBox,
	                                                { flex: 1 },
	                                                React.createElement(
	                                                    Box,
	                                                    null,
	                                                    React.createElement('img', { src: 'https://img.alicdn.com/tps/TB1HInCJFXXXXXcXpXXXXXXXXXX-60-60.png', className: 'demo3-t-list-img' })
	                                                ),
	                                                React.createElement(
	                                                    Box,
	                                                    { className: 'demo3-t-list-text-content', flex: 1 },
	                                                    React.createElement(
	                                                        'p',
	                                                        { className: 'demo3-t-list-title t-omit' },
	                                                        '\u4FE1\u606F\u5361\u7247\u540D\u79F0',
	                                                        React.createElement('span', { className: 'demo3-t-list-cricle' })
	                                                    ),
	                                                    React.createElement(
	                                                        'p',
	                                                        { className: 'demo3-t-list-text t-omit' },
	                                                        '\u8F85\u52A9\u4FE1\u606F\u4ECB\u7ECD\u8F85\u52A9\u4FE1\u606F\u4ECB\u7ECD\u8F85\u52A9\u4FE1\u606F\u4ECB\u7ECD'
	                                                    ),
	                                                    React.createElement(
	                                                        'p',
	                                                        { className: 'demo3-t-list-time t-omit' },
	                                                        '\u6709\u6548\u671F\uFF1A2016.10.12-2016.11.21'
	                                                    )
	                                                )
	                                            )
	                                        )
	                                    ),
	                                    React.createElement(
	                                        'div',
	                                        { className: 'demo3-t-list-wrap' },
	                                        React.createElement(
	                                            HBox,
	                                            { vAlign: 'center' },
	                                            React.createElement(
	                                                HBox,
	                                                { flex: 1 },
	                                                React.createElement(
	                                                    Box,
	                                                    null,
	                                                    React.createElement('img', { src: 'https://img.alicdn.com/tps/TB1HInCJFXXXXXcXpXXXXXXXXXX-60-60.png', className: 'demo3-t-list-img' })
	                                                ),
	                                                React.createElement(
	                                                    Box,
	                                                    { className: 'demo3-t-list-text-content', flex: 1 },
	                                                    React.createElement(
	                                                        'p',
	                                                        { className: 'demo3-t-list-title t-omit' },
	                                                        '\u4FE1\u606F\u5361\u7247\u540D\u79F0',
	                                                        React.createElement('span', { className: 'demo3-t-list-cricle' })
	                                                    ),
	                                                    React.createElement(
	                                                        'p',
	                                                        { className: 'demo3-t-list-text t-omit' },
	                                                        '\u8F85\u52A9\u4FE1\u606F\u4ECB\u7ECD\u8F85\u52A9\u4FE1\u606F\u4ECB\u7ECD\u8F85\u52A9\u4FE1\u606F\u4ECB\u7ECD'
	                                                    ),
	                                                    React.createElement(
	                                                        'p',
	                                                        { className: 'demo3-t-list-time t-omit' },
	                                                        '\u6709\u6548\u671F\uFF1A2016.10.12-2016.11.21'
	                                                    )
	                                                )
	                                            )
	                                        )
	                                    )
	                                )
	                            )
	                        ),
	                        React.createElement(
	                            Tab.Item,
	                            { title: '\u5217\u8868\u4E09' },
	                            React.createElement(
	                                Group,
	                                { className: 'demo-t-list' },
	                                React.createElement(
	                                    Group.Head,
	                                    { className: 't-demo-title' },
	                                    '\u56FE\u6587\u7EB5\u6392'
	                                ),
	                                React.createElement(
	                                    Group.List,
	                                    null,
	                                    React.createElement(
	                                        'div',
	                                        { className: 'demo2-t-list-wrap' },
	                                        React.createElement(
	                                            HBox,
	                                            { vAlign: 'center' },
	                                            React.createElement(
	                                                HBox,
	                                                { flex: 1 },
	                                                React.createElement(
	                                                    Box,
	                                                    { className: 'demo2-t-list-img-wrap' },
	                                                    React.createElement('img', { src: 'https://img.alicdn.com/tps/TB1mKYuJFXXXXbFXpXXXXXXXXXX-375-140.png', className: 'demo2-t-list-img' })
	                                                )
	                                            )
	                                        ),
	                                        React.createElement(
	                                            HBox,
	                                            { className: 'demo2-t-list-title' },
	                                            React.createElement(
	                                                Box,
	                                                { flex: 1 },
	                                                React.createElement(
	                                                    'p',
	                                                    { className: 'demo2-t-list-title-content t-omit' },
	                                                    '\u6807\u9898'
	                                                )
	                                            ),
	                                            React.createElement(
	                                                Box,
	                                                null,
	                                                React.createElement(
	                                                    'span',
	                                                    { className: 'demo2-t-list-time' },
	                                                    '2015.08.09'
	                                                )
	                                            )
	                                        )
	                                    ),
	                                    React.createElement(
	                                        'div',
	                                        { className: 'demo2-t-list-wrap' },
	                                        React.createElement(
	                                            HBox,
	                                            { vAlign: 'center' },
	                                            React.createElement(
	                                                HBox,
	                                                { flex: 1 },
	                                                React.createElement(
	                                                    Box,
	                                                    { className: 'demo2-t-list-img-wrap' },
	                                                    React.createElement('img', { src: 'https://img.alicdn.com/tps/TB1EtbhJFXXXXc5XFXXXXXXXXXX-375-140.png', className: 'demo2-t-list-img' })
	                                                )
	                                            )
	                                        ),
	                                        React.createElement(
	                                            HBox,
	                                            { className: 'demo2-t-list-title' },
	                                            React.createElement(
	                                                Box,
	                                                { flex: 1 },
	                                                React.createElement(
	                                                    'p',
	                                                    { className: 'demo2-t-list-title-content t-omit' },
	                                                    '\u6807\u9898\u6587\u5B57'
	                                                )
	                                            ),
	                                            React.createElement(
	                                                Box,
	                                                null,
	                                                React.createElement(
	                                                    'span',
	                                                    { className: 'demo2-t-list-time' },
	                                                    '2015.08.09'
	                                                )
	                                            )
	                                        )
	                                    )
	                                )
	                            )
	                        )
	                    )
	                )
	            );
	        }
	    }]);
	
	    return Page;
	}(React.Component);
	
	module.exports = Page;

/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(59);

/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var TingleUI = __webpack_require__(50);
	var Group = TingleUI.Group,
	    TextField = TingleUI.TextField,
	    TextareaField = TingleUI.TextareaField,
	    Slot = TingleUI.Slot,
	    SelectField = TingleUI.SelectField,
	    Note = TingleUI.Note,
	    Button = TingleUI.Button,
	    CheckboxField = TingleUI.CheckboxField,
	    RadioField = TingleUI.RadioField,
	    Toast = TingleUI.Toast,
	    SwitchField = TingleUI.SwitchField;
	
	var Page = function (_React$Component) {
	    _inherits(Page, _React$Component);
	
	    function Page(props) {
	        _classCallCheck(this, Page);
	
	        var _this = _possibleConstructorReturn(this, (Page.__proto__ || Object.getPrototypeOf(Page)).call(this, props));
	
	        var t = _this;
	        var dates = Slot.formatDataValue([[2015, 2016], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]]);
	        var monthArray = [{ value: 0, text: '一月' }, { value: 1, text: '二月' }, { value: 2, text: '三月' }, { value: 3, text: '四月' }, { value: 4, text: '五月' }, { value: 5, text: '六月' }, { value: 6, text: '七月' }, { value: 7, text: '八月' }, { value: 8, text: '九月' }, { value: 9, text: '十月' }, { value: 10, text: '十一月' }, { value: 11, text: '十二月' }];
	        var relations = [{ value: 0, text: '朋友' }, { value: 1, text: '家人' }, { value: 2, text: '合作伙伴' }, { value: 3, text: '供应商' }];
	        var buildings = Slot.formatDataValue([['西溪', '黄龙', '龙章'], ['1号楼', '2号楼', '3号楼', '4号楼']]);
	        var checkboxFieldProps = {
	            data: [{
	                checked: false,
	                text: React.createElement(
	                    'span',
	                    null,
	                    '\u540C\u610F',
	                    React.createElement(
	                        'a',
	                        { href: 'javascript:;' },
	                        '\u300A\u8BBF\u5BA2\u534F\u8BAE\u300B'
	                    )
	                ),
	                disable: false
	            }],
	            onChange: function onChange(item, index, AllData) {
	                t.handleChange('checked');
	            }
	        };
	        var element = document.getElementById('current-theme');
	        var href = element.href;
	        var radioFieldProps = {
	            data: [{
	                checked: ~href.indexOf('default'),
	                text: "橙",
	                disable: false,
	                value: 'default'
	            }, {
	                checked: ~href.indexOf('blue'),
	                text: "蓝",
	                disable: false,
	                value: 'blue'
	            }, {
	                checked: ~href.indexOf('dd'),
	                text: "钉钉蓝",
	                disable: false,
	                value: 'dd'
	            }],
	            onChange: function onChange(value, index, data) {
	                var timestamp = new Date().getTime();
	                if (~value.indexOf('default')) {
	                    element.href = href.replace(/(blue|dd|default)\.css(.*)/, '') + 'default.css?' + timestamp;
	                } else if (~value.indexOf('dd')) {
	                    element.href = href.replace(/(blue|dd|default)\.css(.*)/, '') + 'dd.css?' + timestamp;
	                } else if (~value.indexOf('blue')) {
	                    element.href = href.replace(/(blue|dd|default)\.css(.*)/, '') + 'blue.css?' + timestamp;
	                }
	            }
	        };
	        _this.state = {
	            dates: dates.data,
	            monthArray: monthArray,
	            relations: relations,
	            buildings: buildings.data,
	            required1: '',
	            required2: dates.value,
	            required3: dates.value,
	            required5: '小明',
	            required6: '13223223987',
	            required7: buildings.value,
	            required8: '',
	            optional9: false,
	            optional10: true,
	            optional11: '',
	            disabled: true,
	            checkboxFieldProps: checkboxFieldProps,
	            radioFieldProps: radioFieldProps,
	            checked: true
	        };
	        return _this;
	    }
	
	    _createClass(Page, [{
	        key: 'handleChange',
	        value: function handleChange(label, value) {
	            var t = this;
	            t.setState(_defineProperty({}, label, value), function () {
	                var disabled = false;
	                for (var key in t.state) {
	                    if (/^required\d+$/.test(key) && !t.state[key]) {
	                        disabled = true;
	                        break;
	                    }
	                }
	                if (!t.state.checked) {
	                    disabled = true;
	                }
	                if (disabled !== t.state.disabled) {
	                    t.setState({
	                        disabled: disabled
	                    });
	                }
	            });
	        }
	    }, {
	        key: 'handleClick',
	        value: function handleClick() {
	            for (var key in this.state) {
	                if (/^required\d+$/.test(key) && !this.state[key]) {
	                    Toast.show({
	                        type: 'error',
	                        content: '请填写必填项',
	                        onHide: function onHide() {}
	                    });
	                    return;
	                }
	            }
	            Toast.show({
	                type: 'error',
	                content: '提交出错'
	            });
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var t = this;
	            return React.createElement(
	                'div',
	                { className: 'page-form' },
	                React.createElement(
	                    'div',
	                    null,
	                    React.createElement(Note, { message: '10.1 - 10.8 \u56ED\u533A\u5C01\u56ED\uFF0C\u4E0D\u63A5\u53D7\u5165\u56ED\u7533\u8BF7\uFF0C\u8BF7\u63D0\u524D\u505A\u597D\u51C6\u5907', type: 'warning', closeText: '\u67E5\u770B\u8BE6\u60C5' })
	                ),
	                React.createElement(
	                    Group,
	                    null,
	                    React.createElement(
	                        Group.Head,
	                        null,
	                        '\u5FC5\u586B'
	                    ),
	                    React.createElement(
	                        Group.List,
	                        { lineIndent: 18 },
	                        React.createElement(TextField, { label: '\u6765\u8BBF\u5355\u4F4D', placeholder: '\u8BF7\u8F93\u5165', value: t.state.required1,
	                            onChange: t.handleChange.bind(t, 'required1') }),
	                        React.createElement(SelectField, { label: '\u6765\u8BBF\u76EE\u7684', options: t.state.relations, value: t.state.required4,
	                            onSelect: t.handleChange.bind(t, 'required4') }),
	                        React.createElement(TextField, { label: '\u8BBF\u5BA2\u59D3\u540D', placeholder: '\u8BF7\u8F93\u5165', value: t.state.required5,
	                            onChange: t.handleChange.bind(t, 'required5') }),
	                        React.createElement(TextField, { label: '\u8BBF\u5BA2\u624B\u673A', placeholder: '\u8BF7\u8F93\u5165', value: t.state.required6,
	                            onChange: t.handleChange.bind(t, 'required6') }),
	                        React.createElement(TextField, { label: '\u6765\u8BBF\u4EBA\u6570', placeholder: '\u8BF7\u8F93\u5165', value: t.state.required8,
	                            onChange: t.handleChange.bind(t, 'required8') }),
	                        React.createElement(SwitchField, { label: '\u8FDB\u5165\u5DE5\u4F5C\u533A', on: t.state.optional9,
	                            onChange: t.handleChange.bind(t, 'optional9') }),
	                        React.createElement(SwitchField, { label: 'WIFI', on: t.state.optional10,
	                            onChange: t.handleChange.bind(t, 'optional10') })
	                    )
	                ),
	                React.createElement(
	                    Group,
	                    null,
	                    React.createElement(
	                        Group.Head,
	                        null,
	                        '\u4E3B\u9898'
	                    ),
	                    React.createElement(RadioField, _extends({ lineIndent: 18 }, t.state.radioFieldProps))
	                ),
	                React.createElement(
	                    Group,
	                    null,
	                    React.createElement(
	                        Group.Head,
	                        null,
	                        '\u9009\u586B'
	                    ),
	                    React.createElement(
	                        Group.List,
	                        { lineIndent: 18 },
	                        React.createElement(TextareaField, { label: '\u5907\u6CE8', minRows: 3, placeholder: '\u8BF7\u8F93\u5165', value: t.state.optional11,
	                            onChange: t.handleChange.bind(t, 'optional11') })
	                    )
	                ),
	                React.createElement(
	                    Group,
	                    null,
	                    React.createElement(
	                        Group.Head,
	                        null,
	                        '\u5FC5\u586B'
	                    ),
	                    React.createElement(CheckboxField, _extends({ className: 't-MR10' }, t.state.checkboxFieldProps))
	                ),
	                React.createElement(
	                    'div',
	                    { style: { padding: '30px 15px' } },
	                    React.createElement(
	                        Button,
	                        { type: 'primary', onClick: this.handleClick.bind(this) },
	                        '\u63D0\u4EA4'
	                    )
	                )
	            );
	        }
	    }]);
	
	    return Page;
	}(React.Component);
	
	module.exports = Page;

/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(61);

/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var TingleUI = __webpack_require__(50);
	var Grid = TingleUI.Grid,
	    Icon = TingleUI.Icon;
	
	var Page = function (_React$Component) {
	    _inherits(Page, _React$Component);
	
	    function Page(props) {
	        _classCallCheck(this, Page);
	
	        var _this = _possibleConstructorReturn(this, (Page.__proto__ || Object.getPrototypeOf(Page)).call(this, props));
	
	        _this.state = {
	            icons: [{
	                icon: 'cross'
	            }, {
	                icon: 'angle-down'
	            }, {
	                icon: 'angle-left'
	            }, {
	                icon: 'angle-right'
	            }, {
	                icon: 'angle-up'
	            }, {
	                icon: 'map'
	            }, {
	                icon: 'pen'
	            }, {
	                icon: 'check'
	            }, {
	                icon: 'check-round'
	            }, {
	                icon: 'info-circle'
	            }, {
	                icon: 'info-round'
	            }, {
	                icon: 'minus-circle'
	            }, {
	                icon: 'minus-round'
	            }, {
	                icon: 'plus-circle'
	            }, {
	                icon: 'plus-round'
	            }, {
	                icon: 'plus'
	            }, {
	                icon: 'note-round'
	            }, {
	                icon: 'user'
	            }, {
	                icon: 'search'
	            }, {
	                icon: 'setting'
	            }, {
	                icon: 'time'
	            }, {
	                icon: 'star'
	            }]
	        };
	        return _this;
	    }
	
	    _createClass(Page, [{
	        key: 'render',
	        value: function render() {
	            var t = this;
	            return React.createElement(
	                'div',
	                { className: 'icon-page' },
	                React.createElement(
	                    Grid,
	                    { square: true, col: 3 },
	                    t.state.icons.map(function (item, index) {
	                        return React.createElement(
	                            'div',
	                            { key: index, className: 't-FBV t-FBAC t-FBJC icon-grid-item t-TE' },
	                            React.createElement(
	                                'div',
	                                { className: 'icon-grid-icon' },
	                                React.createElement(Icon, { name: 'show-icon-bg', className: 'icon-bg' }),
	                                React.createElement(Icon, { name: item.icon, className: 'icon-is' })
	                            ),
	                            React.createElement(
	                                'div',
	                                { className: 't-FC6 icon-text' },
	                                item.text || item.icon
	                            )
	                        );
	                    })
	                )
	            );
	        }
	    }]);
	
	    return Page;
	}(React.Component);
	
	module.exports = Page;

/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(63);

/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var TingleUI = __webpack_require__(50);
	var Button = TingleUI.Button,
	    Dialog = TingleUI.Dialog;
	
	var Page = function (_React$Component) {
	    _inherits(Page, _React$Component);
	
	    function Page(props) {
	        _classCallCheck(this, Page);
	
	        var _this = _possibleConstructorReturn(this, (Page.__proto__ || Object.getPrototypeOf(Page)).call(this, props));
	
	        _this.state = {
	            show: true
	        };
	        return _this;
	    }
	
	    _createClass(Page, [{
	        key: 'handleAlert',
	        value: function handleAlert() {
	            Dialog.alert({
	                title: '测试',
	                content: '我是测试我是测试我是测试我是测试我是测试',
	                onConfirm: function onConfirm() {
	                    console.log('alert confirm');
	                }
	            });
	        }
	    }, {
	        key: 'handleTitle',
	        value: function handleTitle() {
	            Dialog.alert({
	                content: '我是测试内容我是测试内容',
	                onConfirm: function onConfirm() {
	                    console.log('no title confirm');
	                }
	            });
	        }
	    }, {
	        key: 'handleMultiLines',
	        value: function handleMultiLines() {
	            Dialog.alert({
	                title: '测试',
	                content: '我是测试内容我是测试内容我是测试内容我是测试内容我是测试内容我是测试内容我是测试内',
	                onConfirm: function onConfirm() {
	                    console.log('multi lines confirm');
	                }
	            });
	        }
	    }, {
	        key: 'handleConfirm',
	        value: function handleConfirm() {
	            Dialog.confirm({
	                title: '测试',
	                content: '我是测试内容我是测试内容我是测试内容我是测试内容我是测试内容我是测试内容我是测试内',
	                onConfirm: function onConfirm() {
	                    console.log('confirm confirm');
	                },
	                onCancel: function onCancel() {
	                    console.log('confirm cancel');
	                }
	            });
	        }
	    }, {
	        key: 'handlePage',
	        value: function handlePage() {
	            this.refs.mainDialog.show();
	        }
	    }, {
	        key: 'handleMultiLayer',
	        value: function handleMultiLayer() {
	            this.refs.popDialog.show();
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var t = this;
	            var buttons = [{
	                content: '取消',
	                callback: function callback() {
	                    console.log('page cancel');
	                }
	            }, {
	                content: '异步',
	                callback: function callback() {
	                    setTimeout(function () {
	                        t.refs.mainDialog.hide();
	                    }, 2000);
	                    return false;
	                }
	            }, {
	                content: '确定',
	                callback: function callback() {
	                    console.log('page confirm');
	                },
	
	                primary: true
	            }];
	            var popButton = [{
	                content: '测试',
	                callback: function callback() {
	                    console.log('pop button');
	                },
	                primary: true
	            }];
	
	            return React.createElement(
	                'div',
	                { className: 'page-dialog' },
	                React.createElement(
	                    Button,
	                    { className: 'demo', onClick: t.handleAlert.bind(t) },
	                    'alert'
	                ),
	                React.createElement(
	                    Button,
	                    { className: 'demo', onClick: t.handleConfirm.bind(t) },
	                    'confirm'
	                ),
	                React.createElement(
	                    Button,
	                    { className: 'demo', onClick: t.handleTitle.bind(t) },
	                    'no title'
	                ),
	                React.createElement(
	                    Button,
	                    { className: 'demo', onClick: t.handleMultiLines.bind(t) },
	                    'multi lines'
	                ),
	                React.createElement(
	                    Button,
	                    { className: 'demo', onClick: t.handlePage.bind(t) },
	                    'page'
	                ),
	                React.createElement(
	                    Button,
	                    { className: 'demo', onClick: t.handleMultiLayer.bind(t) },
	                    'multi layer'
	                ),
	                React.createElement(
	                    Dialog,
	                    { ref: 'mainDialog', title: '\u9875\u9762\u4E0A', buttons: buttons },
	                    '\u6211\u662F\u6D4B\u8BD5\u5185\u5BB9\u6211\u662F\u6D4B\u8BD5\u5185\u5BB9\u6211\u662F\u6D4B\u8BD5\u5185\u5BB9\u6211\u662F\u6D4B\u8BD5\u5185\u5BB9\u6211\u662F\u6D4B\u8BD5\u5185\u5BB9\u6211\u662F\u6D4B\u8BD5\u5185\u5BB9\u6211\u662F\u6D4B\u8BD5\u5185'
	                ),
	                React.createElement(
	                    Dialog,
	                    { ref: 'popDialog', buttons: buttons },
	                    React.createElement(
	                        'div',
	                        { onClick: t.handleTitle.bind(t) },
	                        '\u70B9\u6211\u51FA\u7B2C\u4E8C\u5C42'
	                    )
	                )
	            );
	        }
	    }]);
	
	    return Page;
	}(React.Component);
	
	module.exports = Page;

/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(65);

/***/ },
/* 65 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var TingleUI = __webpack_require__(50);
	var Gallery = TingleUI.Gallery,
	    NavBar = TingleUI.NavBar;
	
	var Page = function (_React$Component) {
	    _inherits(Page, _React$Component);
	
	    function Page(props) {
	        _classCallCheck(this, Page);
	
	        var _this = _possibleConstructorReturn(this, (Page.__proto__ || Object.getPrototypeOf(Page)).call(this, props));
	
	        _this.state = {
	            className: '',
	            title: '我是标题我是标题',
	            rightText: '更多',
	            isShow: true,
	            images: [{
	                src: 'https://gw.alicdn.com/tps/TB1HMQVJpXXXXbZXpXXXXXXXXXX-640-340.jpg',
	                name: '信息平台前端团队',
	                href: 'http://www.alibaba-inc.com'
	            }, {
	                src: 'https://gw.alicdn.com/tps/TB1X.oFJpXXXXbMXVXXXXXXXXXX-484-282.png',
	                name: '信息平台前端团队',
	                href: 'http://www.alibaba-inc.com'
	            }, {
	                src: 'https://gw.alicdn.com/tps/TB1E2M9JpXXXXXQXXXXXXXXXXXX-820-356.png',
	                name: '信息平台前端团队',
	                href: 'http://www.alibaba-inc.com'
	            }, {
	                src: 'https://gw.alicdn.com/tps/TB1Qy3RJpXXXXcxXFXXXXXXXXXX-2000-680.jpg',
	                name: '信息平台前端团队 突破十大障碍最终登上人生巅峰',
	                href: 'http://www.alibaba-inc.com'
	            }]
	        };
	        return _this;
	    }
	
	    _createClass(Page, [{
	        key: 'handleOnLeftClick',
	        value: function handleOnLeftClick() {
	            alert('返回事件');
	        }
	    }, {
	        key: 'handleOnRightClick',
	        value: function handleOnRightClick() {
	            alert('更多事件');
	        }
	    }, {
	        key: 'handleCloseViewClick',
	        value: function handleCloseViewClick() {
	            alert('关闭webView事件');
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var t = this;
	            return React.createElement(
	                'div',
	                null,
	                React.createElement(NavBar, { className: this.state.className + ' t-hide', title: this.state.title, isShow: this.state.isShow,
	                    onLeftClick: this.handleOnLeftClick.bind(this),
	                    onRightClick: this.handleOnRightClick.bind(this),
	                    closeViewClick: this.handleCloseViewClick.bind(this) }),
	                React.createElement(Gallery, { images: this.state.images,
	                    active: 1,
	                    showNav: true })
	            );
	        }
	    }]);
	
	    return Page;
	}(React.Component);
	
	module.exports = Page;

/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(67);

/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var TingleUI = __webpack_require__(50);
	var _ReactRouter = ReactRouter,
	    hashHistory = _ReactRouter.hashHistory,
	    browserHistory = _ReactRouter.browserHistory;
	var Note = TingleUI.Note,
	    Icon = TingleUI.Icon,
	    TabBar = TingleUI.TabBar,
	    NavBar = TingleUI.NavBar,
	    Group = TingleUI.Group,
	    Tab = TingleUI.Tab,
	    Boxs = TingleUI.Boxs,
	    Avatar = TingleUI.Avatar,
	    Grid = TingleUI.Grid;
	
	var HBox = Boxs.HBox;
	var Box = Boxs.Box;
	var Icon2 = __webpack_require__(68);
	
	var Page = function (_React$Component) {
	    _inherits(Page, _React$Component);
	
	    function Page(props) {
	        _classCallCheck(this, Page);
	
	        var _this = _possibleConstructorReturn(this, (Page.__proto__ || Object.getPrototypeOf(Page)).call(this, props));
	
	        _this.state = {
	            activeIndex: 0,
	            className: 'scene-nav'
	        };
	        return _this;
	    }
	
	    _createClass(Page, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            var className = document.body.className;
	            document.body.className = className + ' scene-body';
	            try {
	                Ali.setTitle('顺风车', function (result) {
	                    result.error && alert(result.error);
	                });
	            } catch (e) {
	                console.log('请使用手机打开');
	            }
	        }
	    }, {
	        key: 'componentWillUnmount',
	        value: function componentWillUnmount() {
	            var className = document.body.className;
	            document.body.className = className.replace(/ scene-body/, '');
	            try {
	                Ali.setTitle({ text: 'tingle-ui' }, function (result) {
	                    result.error && alert(result.error);
	                });
	            } catch (e) {
	                console.log('请使用手机打开');
	            }
	        }
	    }, {
	        key: 'handleTabBarClick',
	        value: function handleTabBarClick() {}
	    }, {
	        key: 'handleChange',
	        value: function handleChange() {}
	    }, {
	        key: 'handleOnLeftClick',
	        value: function handleOnLeftClick() {
	            hashHistory.replace('/');
	        }
	    }, {
	        key: 'handleOnRightClick',
	        value: function handleOnRightClick() {}
	    }, {
	        key: 'handleCloseViewClick',
	        value: function handleCloseViewClick() {}
	    }, {
	        key: 'render',
	        value: function render() {
	            var t = this;
	            return React.createElement(
	                'div',
	                { className: 'page-secne' },
	                window.Ali.setTitle || 1 ? null : React.createElement(NavBar, { className: this.state.className, title: '顺风车', rightText: '\u5237\u65B0', isShow: this.state.isShow,
	                    onLeftClick: this.handleOnLeftClick.bind(this),
	                    onRightClick: this.handleOnRightClick.bind(this),
	                    closeViewClick: this.handleCloseViewClick.bind(this) }),
	                React.createElement(
	                    TabBar,
	                    { className: 'scene-tab-bar', activeIndex: this.state.activeIndex, onChange: this.handleTabBarClick.bind(this) },
	                    React.createElement(
	                        TabBar.Item,
	                        { title: '\u9996\u9875', icon: 'scene-home' },
	                        React.createElement(
	                            'div',
	                            null,
	                            React.createElement(Note, { message: '\u7533\u62A5\u516C\u76CA\u65F6\u66F4\u65B9\u4FBF\u8BB0\u5F97\u4E86\uFF0C\u53D1\u5E03\u660E\u5929\u65E9\u4E0A\u7684\u7684\uFF0C\u8BF7\u63D0\u524D\u505A\u597D\u51C6\u5907', type: 'warning', closeText: '\u67E5\u770B\u8BE6\u60C5' }),
	                            React.createElement(
	                                'p',
	                                { className: 'scene-warn' },
	                                '\u51ED\u5DE5\u724C\u514D\u8D39\u4E58\u8F66'
	                            ),
	                            React.createElement(
	                                Grid,
	                                { square: true, col: 2 },
	                                React.createElement(
	                                    'div',
	                                    { className: 'scene-home t-FBV t-FBAC t-FBJC' },
	                                    React.createElement(Icon, { fill: '#3053AB', name: 'people', width: 100, height: 100, className: 'icon-is' }),
	                                    React.createElement(
	                                        'div',
	                                        { className: 't-FC6 icon-text' },
	                                        '\u6211\u8981\u634E\u4EBA'
	                                    )
	                                ),
	                                React.createElement(
	                                    'div',
	                                    { className: 'scene-home t-FBV t-FBAC t-FBJC' },
	                                    React.createElement(Icon, { fill: '#4E9C0B', name: 'lift', width: 100, height: 100, className: 'icon-is' }),
	                                    React.createElement(
	                                        'div',
	                                        { className: 't-FC6 icon-text' },
	                                        '\u6C42\u642D\u8F66'
	                                    )
	                                ),
	                                React.createElement(
	                                    'div',
	                                    { className: 'scene-home t-FBV t-FBAC t-FBJC' },
	                                    React.createElement(Icon, { fill: '#FFB600', name: 'apply', width: 100, height: 100, className: 'icon-is' }),
	                                    React.createElement(
	                                        'div',
	                                        { className: 't-FC6 icon-text' },
	                                        '\u516C\u76CA\u8F66\u4F4D\u62A5\u540D'
	                                    )
	                                ),
	                                React.createElement(
	                                    'div',
	                                    { className: 'scene-home t-FBV t-FBAC t-FBJC' },
	                                    React.createElement(Icon, { fill: '#de3e3e', name: 'benefit', width: 100, height: 100, className: 'icon-is' }),
	                                    React.createElement(
	                                        'div',
	                                        { className: 't-FC6 icon-text' },
	                                        '\u6211\u8981\u7533\u62A5\u516C\u76CA\u65F6'
	                                    )
	                                )
	                            )
	                        )
	                    ),
	                    React.createElement(
	                        TabBar.Item,
	                        { title: '\u642D\u4E58\u5217\u8868', icon: 'scene-list' },
	                        React.createElement(
	                            Tab,
	                            { onChange: t.handleChange.bind(t) },
	                            React.createElement(
	                                Tab.Item,
	                                { title: '\u6211\u662F\u4E58\u5BA2' },
	                                React.createElement(
	                                    Tab,
	                                    { className: 't-tab-secondary', type: 'brick', onChange: t.handleChange.bind(t) },
	                                    React.createElement(
	                                        Tab.Item,
	                                        { title: '\u5168\u90E8' },
	                                        React.createElement(
	                                            Group,
	                                            { className: 'demo-t-list' },
	                                            React.createElement(
	                                                Group.List,
	                                                { borderTopNone: true },
	                                                React.createElement(
	                                                    'div',
	                                                    { className: 'demo-t-list-wrap' },
	                                                    React.createElement(
	                                                        HBox,
	                                                        { vAlign: 'center' },
	                                                        React.createElement(
	                                                            HBox,
	                                                            { flex: 1 },
	                                                            React.createElement(
	                                                                Box,
	                                                                null,
	                                                                React.createElement(Avatar, { className: 't-MR10', size: '60', name: '\u5C0F\u660E' })
	                                                            ),
	                                                            React.createElement(
	                                                                Box,
	                                                                { className: 'demo-t-list-text-content', flex: 1 },
	                                                                React.createElement(
	                                                                    'p',
	                                                                    { className: 'demo-t-list-title t-omit' },
	                                                                    '\u987A\u98CE\u8F66',
	                                                                    React.createElement(
	                                                                        'span',
	                                                                        { className: 'demo-t-list-title-tag' },
	                                                                        '\u5DF2\u5B8C\u6210'
	                                                                    )
	                                                                ),
	                                                                React.createElement(
	                                                                    'p',
	                                                                    { className: 'demo-t-list-text t-omit2' },
	                                                                    '\u897F\u6EAA\u56ED\u533A-\u897F\u6EAA\u82B1\u56ED'
	                                                                ),
	                                                                React.createElement(
	                                                                    'p',
	                                                                    { className: 'demo-t-list-time t-omit' },
	                                                                    '\u65F6\u95F4\uFF1A2016-02-12'
	                                                                )
	                                                            ),
	                                                            React.createElement(
	                                                                'div',
	                                                                { className: 't-FBV t-FBAC' },
	                                                                React.createElement(Icon, { fill: '#ccc', width: 26, height: 68, className: 't-FB1', name: 'angle-right' })
	                                                            )
	                                                        )
	                                                    )
	                                                )
	                                            ),
	                                            React.createElement(
	                                                Group.List,
	                                                null,
	                                                React.createElement(
	                                                    'div',
	                                                    { className: 'demo-t-list-wrap' },
	                                                    React.createElement(
	                                                        HBox,
	                                                        { vAlign: 'center' },
	                                                        React.createElement(
	                                                            HBox,
	                                                            { flex: 1 },
	                                                            React.createElement(
	                                                                Box,
	                                                                null,
	                                                                React.createElement(Avatar, { src: 'https://img.alicdn.com/tps/TB1cnJcKpXXXXbbXpXXXXXXXXXX-150-150.png', className: 't-MR10', size: '60', name: '\u5C0F\u660E' })
	                                                            ),
	                                                            React.createElement(
	                                                                Box,
	                                                                { className: 'demo-t-list-text-content', flex: 1 },
	                                                                React.createElement(
	                                                                    'p',
	                                                                    { className: 'demo-t-list-title t-omit' },
	                                                                    '\u987A\u98CE\u8F66',
	                                                                    React.createElement(
	                                                                        'span',
	                                                                        { className: 'demo-t-list-title-tag' },
	                                                                        '\u672A\u5B8C\u6210'
	                                                                    )
	                                                                ),
	                                                                React.createElement(
	                                                                    'p',
	                                                                    { className: 'demo-t-list-text t-omit2' },
	                                                                    '\u897F\u6EAA\u56ED\u533A-\u897F\u6EAA\u82B1\u56ED'
	                                                                ),
	                                                                React.createElement(
	                                                                    'p',
	                                                                    { className: 'demo-t-list-time t-omit' },
	                                                                    '\u65F6\u95F4\uFF1A2016-02-13'
	                                                                )
	                                                            ),
	                                                            React.createElement(
	                                                                'div',
	                                                                { className: 't-FBV' },
	                                                                React.createElement(Icon, { fill: '#ccc', width: 26, height: 68, className: 't-FB1', name: 'angle-right' })
	                                                            )
	                                                        )
	                                                    )
	                                                )
	                                            )
	                                        )
	                                    ),
	                                    React.createElement(
	                                        Tab.Item,
	                                        { title: '\u5DF2\u5B8C\u6210' },
	                                        React.createElement(
	                                            Group.List,
	                                            { borderTopNone: true },
	                                            React.createElement(
	                                                'div',
	                                                { className: 'demo-t-list-wrap' },
	                                                React.createElement(
	                                                    HBox,
	                                                    { vAlign: 'center' },
	                                                    React.createElement(
	                                                        HBox,
	                                                        { flex: 1 },
	                                                        React.createElement(
	                                                            Box,
	                                                            null,
	                                                            React.createElement(Avatar, { className: 't-MR10', size: '60', name: '\u5C0F\u660E' })
	                                                        ),
	                                                        React.createElement(
	                                                            Box,
	                                                            { className: 'demo-t-list-text-content', flex: 1 },
	                                                            React.createElement(
	                                                                'p',
	                                                                { className: 'demo-t-list-title t-omit' },
	                                                                '\u987A\u98CE\u8F66',
	                                                                React.createElement(
	                                                                    'span',
	                                                                    { className: 'demo-t-list-title-tag' },
	                                                                    '\u5DF2\u5B8C\u6210'
	                                                                )
	                                                            ),
	                                                            React.createElement(
	                                                                'p',
	                                                                { className: 'demo-t-list-text t-omit2' },
	                                                                '\u897F\u6EAA\u56ED\u533A-\u897F\u6EAA\u82B1\u56ED'
	                                                            ),
	                                                            React.createElement(
	                                                                'p',
	                                                                { className: 'demo-t-list-time t-omit' },
	                                                                '\u65F6\u95F4\uFF1A2016-02-12'
	                                                            )
	                                                        ),
	                                                        React.createElement(
	                                                            'div',
	                                                            { className: 't-FBV' },
	                                                            React.createElement(Icon, { fill: '#ccc', width: 26, height: 68, className: 't-FB1', name: 'angle-right' })
	                                                        )
	                                                    )
	                                                )
	                                            )
	                                        )
	                                    )
	                                )
	                            ),
	                            React.createElement(
	                                Tab.Item,
	                                { title: '\u6211\u662F\u53F8\u673A' },
	                                React.createElement(
	                                    'div',
	                                    { className: 'scene-list-record' },
	                                    '\u6682\u65E0\u53D1\u5E03\u8BB0\u5F55'
	                                )
	                            )
	                        )
	                    ),
	                    React.createElement(
	                        TabBar.Item,
	                        { title: 'FAQ', icon: 'info-round' },
	                        React.createElement(
	                            'div',
	                            { className: 'scene-faq' },
	                            React.createElement(
	                                Tab,
	                                { onChange: t.handleChange.bind(t) },
	                                React.createElement(
	                                    Tab.Item,
	                                    { title: '\u4E58\u5BA2\u7BC7' },
	                                    React.createElement(
	                                        'div',
	                                        { className: 'scene-faq-list' },
	                                        React.createElement(
	                                            'dl',
	                                            null,
	                                            React.createElement(
	                                                'dt',
	                                                null,
	                                                '1\u3001\u65B0\u624B\u600E\u6837\u642D\u987A\u98CE\u8F66\uFF1F'
	                                            ),
	                                            React.createElement(
	                                                'dd',
	                                                null,
	                                                '\u731B\u51FB\u624B\u673A\u4E0A\u7684app\u56FE\u6807\uFF0C\u5728\u66F4\u591A\u4E2D\u627E\u5230\u201C\u987A\u98CE\u8F66\u201D\u5E76\u8F7B\u70B9\u4E00\u4E0B\uFF0C\u201C\u6C42\u642D\u8F66\u201D\u4F1A\u5E26\u7ED9\u60A8\u7F8E\u5999\u7684\u56DE\u5BB6\u4E4B\u65C5\u3002'
	                                            )
	                                        ),
	                                        React.createElement(
	                                            'dl',
	                                            null,
	                                            React.createElement(
	                                                'dt',
	                                                null,
	                                                '2\u3001\u4E3A\u4EC0\u4E48\u6211\u603B\u662F\u641C\u7D22\u4E0D\u5230\u8DEF\u8FC7\u6211\u5BB6\u7684\u8F66\u554A\uFF1F'
	                                            ),
	                                            React.createElement(
	                                                'dd',
	                                                null,
	                                                '\u8DEF\u7EBF\u641C\u7D22\u529F\u80FD\u4EC5\u4F1A\u5339\u914D\u9014\u5F84\u70B9\u548C\u7EC8\u70B9\uFF0C\u67D0\u4E9B\u53F8\u673A\u586B\u5199\u9014\u5F84\u70B9\u7684\u65F6\u5E76\u4E0D\u77E5\u9053\u6216\u4E0D\u8BB0\u5F97\u8DEF\u8FC7\u67D0\u4E2A\u5C0F\u533A\u3002\u4F8B\u5982\uFF1A\u76EE\u7684\u5730\u4E3A\u848B\u6751\u7684\u8F66\u5927\u591A\u6570\u90FD\u4F1A\u7ECF\u8FC7\u897F\u6EAA\u82B1\u56ED\uFF0C\u53EF\u662F\u6709\u4E9B\u53F8\u673A\u53EA\u4F1A\u586B\u5199\u201C\u6587\u4E00\u897F\u8DEF\u201D\u6216\u201C\u6587\u4E00\u8DEF\u201D\uFF0C\u6211\u4EEC\u63A8\u8350\u60A8\u5206\u522B\u641C\u7D22\u201C\u897F\u6EAA\u82B1\u56ED\u201D\uFF0C\u201C\u6587\u4E00\u897F\u8DEF\u201D\uFF0C\u201C\u6587\u4E00\u8DEF\u201D\u7B49\u3002\u6CE8\uFF1A\u672A\u6765\u6211\u4EEC\u5C06\u63A8\u51FA\u7EBF\u8DEF\u6807\u7B7E\u529F\u80FD\uFF0C\u8BA9\u53F8\u673A\u548C\u4E58\u5BA2\u5171\u540C\u5B8C\u5584\u9014\u5F84\u70B9\u4FE1\u606F\u3002'
	                                            )
	                                        ),
	                                        React.createElement(
	                                            'dl',
	                                            null,
	                                            React.createElement(
	                                                'dt',
	                                                null,
	                                                '3\u3001\u5982\u4F55\u9884\u7EA6\u987A\u98CE\u8F66\uFF1F'
	                                            ),
	                                            React.createElement(
	                                                'dd',
	                                                null,
	                                                '\u5728\u641C\u7D22\u7ED3\u679C\u4E2D\u70B9\u60A8\u60F3\u4E58\u5750\u7684\u8DEF\u7EBF\uFF0C\u6211\u4EEC\u5C06\u663E\u793A\u53F8\u673A\u7684\u201C\u82B1\u540D\u201D\u548C\u201C\u7535\u8BDD\u201D\u7B49\u4FE1\u606F\uFF0C\u5EFA\u8BAE\u60A8\u5148\u548C\u53F8\u673A\u786E\u8BA4\u53EF\u642D\u8F66\u540E\uFF0C\u518D\u70B9\u51FB\u9875\u9762\u6700\u4E0B\u65B9\u7684\u201C\u9884\u7EA6\u201D\u6309\u94AE\u5373\u53EF\u3002'
	                                            )
	                                        ),
	                                        React.createElement(
	                                            'dl',
	                                            null,
	                                            React.createElement(
	                                                'dt',
	                                                null,
	                                                '4\u3001\u5982\u4F55\u786E\u8BA4\u6216\u53D6\u6D88\u5DF2\u9884\u7EA6\u7684\u987A\u98CE\u8F66\uFF1F'
	                                            ),
	                                            React.createElement(
	                                                'dd',
	                                                null,
	                                                '\u5728\u642D\u4E58\u5217\u8868\u4E2D\u9009\u62E9\u201C\u6211\u7684\u642D\u4E58\u201D\u5E76\u70B9\u5F00\u5DF2\u9884\u7EA6\u7684\u987A\u98CE\u8F66\uFF0C\u4ED4\u7EC6\u770B\u9875\u9762\u6700\u4E0B\u65B9\uFF0C\u70B9\u51FB\u201C\u6210\u529F\u642D\u4E58\u201D\u5B8C\u6210\u786E\u8BA4\uFF08\u53F8\u673A\u53EF\u83B7\u5BF9\u5E94\u7684\u516C\u76CA\u65F6\u5956\u52B1\uFF09\uFF1B\u70B9\u51FB\u201C\u56E0\u6545\u53D6\u6D88\u201D\u53D6\u6D88\u9884\u7EA6\uFF08\u5EFA\u8BAE\u53D1\u8F66\u524D\u53D6\u6D88\u7684\u4EB2\u7535\u8BDD\u901A\u77E5\u4E0B\u53F8\u673A\uFF09\u3002'
	                                            )
	                                        )
	                                    )
	                                ),
	                                React.createElement(
	                                    Tab.Item,
	                                    { title: '\u53F8\u673A\u7BC7' },
	                                    React.createElement(
	                                        'div',
	                                        { className: 'scene-faq-list' },
	                                        React.createElement(
	                                            'dl',
	                                            null,
	                                            React.createElement(
	                                                'dt',
	                                                null,
	                                                '1\u3001\u5982\u4F55\u53D1\u5E03\u987A\u98CE\u8F66\u4FE1\u606F\uFF1F'
	                                            ),
	                                            React.createElement(
	                                                'dd',
	                                                null,
	                                                '\u8BF7\u60A8\u5728\u624B\u673A\u5BA2\u6237\u7AEF\u7684\u66F4\u591A\u91CC\u70B9\u5F00\u201C\u987A\u98CE\u8F66\u201D\u56FE\u6807\uFF0C\u9009\u62E9\u201C\u6211\u8981\u634E\u4EBA\u201D-\u201C\u6DFB\u52A0\u5E38\u7528\u8DEF\u7EBF\u201D\uFF0C\u6DFB\u52A0\u60A8\u5E38\u8D70\u7684\u8DEF\u7EBF\u4FE1\u606F\uFF0C\u7136\u540E\u70B9\u4E00\u4E0B\u521A\u6DFB\u52A0\u7684\u8DEF\u7EBF\u5E76\u786E\u8BA4\u53D1\u5E03\u5373\u53EF\u3002'
	                                            )
	                                        ),
	                                        React.createElement(
	                                            'dl',
	                                            null,
	                                            React.createElement(
	                                                'dt',
	                                                null,
	                                                '2\u3001\u5982\u4F55\u67E5\u770B\u5DF2\u53D1\u5E03\u987A\u98CE\u8F66\u4FE1\u606F\uFF1F'
	                                            ),
	                                            React.createElement(
	                                                'dd',
	                                                null,
	                                                '\u5728\u642D\u4E58\u5217\u8868\u4E2D\u9009\u62E9\u201C\u6211\u7684\u53D1\u5E03\u201D\uFF0C\u53EF\u67E5\u770B\u5DF2\u53D1\u5E03\u7684\u987A\u98CE\u8F66\u4FE1\u606F\uFF0C\u70B9\u51FB\u5176\u4E2D\u4E00\u6761\u53EF\u67E5\u770B\u5BF9\u5E94\u9884\u7EA6\u8FC7\u7684\u4E58\u5BA2\u5217\u8868\u3002'
	                                            )
	                                        ),
	                                        React.createElement(
	                                            'dl',
	                                            null,
	                                            React.createElement(
	                                                'dt',
	                                                null,
	                                                '3\u3001\u5982\u4F55\u83B7\u5F97\u987A\u98CE\u8F66\u8F66\u724C\uFF1F'
	                                            ),
	                                            React.createElement(
	                                                'dd',
	                                                null,
	                                                '\u5728\u60A8\u5F00\u8F66\u4E0A\u73ED\u7ECF\u8FC7\u516C\u4EA4\u7AD9\u65F6\uFF0C\u6211\u4EEC\u7684\u8F66\u724C\u53EF\u4EE5\u5E2E\u52A9\u7B49\u8F66\u7684\u540C\u4E8B\u8FA8\u522B\u548C\u642D\u8F66\uFF0C\u5E0C\u671B\u60A8\u76F4\u63A5\u8054\u7CFB\u4EE5\u4E0B\u8D1F\u8D23\u4EBA\u9886\u53D6\u4E13\u7528\u8F66\u724C'
	                                            ),
	                                            React.createElement(
	                                                'dd',
	                                                null,
	                                                '1\u53F7\u697C:\u821C\u80151-2-N-58'
	                                            ),
	                                            React.createElement(
	                                                'dd',
	                                                null,
	                                                '2\u53F7\u697C:\u5143\u5B9C2-3-S-119'
	                                            ),
	                                            React.createElement(
	                                                'dd',
	                                                null,
	                                                '3\u53F7\u697C:\u7EA2\u836F3-3-S-196'
	                                            ),
	                                            React.createElement(
	                                                'dd',
	                                                null,
	                                                '4\u53F7\u697C:\u4E42\u4E8C4-3-N-83'
	                                            ),
	                                            React.createElement(
	                                                'dd',
	                                                null,
	                                                '5\u53F7\u697C:\u6218\u54E55-2-S-74'
	                                            ),
	                                            React.createElement(
	                                                'dd',
	                                                null,
	                                                '6\u53F7\u697C:\u5706\u5F716-3-N-295'
	                                            )
	                                        ),
	                                        React.createElement(
	                                            'dl',
	                                            null,
	                                            React.createElement(
	                                                'dt',
	                                                null,
	                                                '4\u3001\u5982\u4F55\u83B7\u5F97\u987A\u98CE\u8F66\u8F66\u6807\u5FBD\u7AE0\uFF1F'
	                                            ),
	                                            React.createElement(
	                                                'dd',
	                                                null,
	                                                '\u53F8\u673A\u7D2F\u79EF\u6EE120\u516C\u76CA\u65F6\uFF080.5\u516C\u76CA\u65F6/\u6B21\uFF0C\u6309\u6210\u529F\u5E26\u5230\u4E58\u5BA2\u8BA1\u7B97\uFF09\u5373\u53EF\u7533\u8BF7\u987A\u98CE\u8F66\u8F66\u6807\u5FBD\u7AE0\uFF0C\u5F53\u524D\u5BA2\u6237\u7AEF\u4E0D\u652F\u6301\u4E3B\u52A8\u7533\u8BF7\uFF0C\u987A\u98CE\u8F66\u7BA1\u59D4\u4F1A\u5C06\u5B9A\u671F\u7ED9\u6EE1\u8DB3\u6761\u4EF6\u7684\u53F8\u673A\u96C6\u4E2D\u5236\u4F5C\u548C\u53D1\u653E\uFF01'
	                                            )
	                                        )
	                                    )
	                                )
	                            )
	                        )
	                    ),
	                    React.createElement(
	                        TabBar.Item,
	                        { title: '\u6CD5\u5F8B\u58F0\u660E', icon: 'scene-law' },
	                        React.createElement(
	                            'div',
	                            { className: 'scene-law' },
	                            React.createElement(
	                                'p',
	                                null,
	                                '\u4E3A\u7F13\u89E3\u540C\u5B66\u4EEC\u4E0A\u4E0B\u73ED\u7684\u4EA4\u901A\u538B\u529B\uFF0C\u5021\u5BFC\u73AF\u4FDD\u8282\u80FD\u3001\u7EFF\u8272\u51FA\u884C\u3001\u6587\u660E\u4EA4\u901A\u7684\u7406\u5FF5\uFF0C\u987A\u98CE\u8F66\u5E73\u53F0\u5F00\u53D1\u5C0F\u7EC4\u7279\u63D0\u4F9B\u987A\u98CE\u8F66\u516C\u76CA\u4FE1\u606F\u53D1\u5E03\u5E73\u53F0\u3002\u63D0\u8BF7\u540C\u5B66\u4EEC\u7279\u522B\u6CE8\u610F\uFF1A\u673A\u52A8\u8F66\u51FA\u884C\u98CE\u9669\u8F83\u9AD8\uFF0C\u5404\u4F4D\u540C\u5B66\u52A1\u5FC5\u6CE8\u610F\u5B89\u5168\uFF0C\u5BA1\u614E\u9009\u62E9\u51FA\u884C\u65B9\u5F0F\uFF0C\u9075\u5B88\u4EA4\u901A\u89C4\u5219\u3001\u6587\u660E\u51FA\u884C\u3002'
	                            ),
	                            React.createElement(
	                                'p',
	                                null,
	                                '\u505A\u4E3A\u53D1\u5E03\u7EBF\u8DEF\u7684\u53F8\u673A\uFF0C\u672C\u4EBA\u786E\u8BA4\u62E5\u6709\u5408\u6CD5\u6709\u6548\u7684\u9A7E\u9A76\u8D44\u683C\uFF0C\u81EA\u613F\u4F5C\u4E3A\u53F8\u673A\u53C2\u52A0\u987A\u98CE\u8F66\u516C\u76CA\u6D3B\u52A8\uFF0C\u987A\u98CE\u8F66\u642D\u8F7D\u8FC7\u7A0B\u5C06\u4E0D\u6536\u53D6\u4EFB\u4F55\u8D39\u7528\u3002\u672C\u4EBA\u5728\u642D\u8F7D\u8FC7\u7A0B\u4E2D\uFF0C\u5C06\u4E25\u683C\u9075\u5B88\u4EA4\u901A\u89C4\u5219\u53CA\u76F8\u5173\u6CD5\u5F8B\u89C4\u5B9A\uFF0C\u5BF9\u4E58\u8F66\u4EBA\u7684\u5371\u9669\u884C\u4E3A\u8FDB\u884C\u5FC5\u8981\u7684\u63D0\u9192\u548C\u5236\u6B62\uFF0C\u5C3D\u5230\u8C28\u614E\u9A7E\u9A76\u3001\u5408\u7406\u63D0\u9192\u7B49\u6CE8\u610F\u4E49\u52A1\u3002\u82E5\u5728\u642D\u8F7D\u8FC7\u7A0B\u4E2D\u53D1\u73B0\u4EA4\u901A\u610F\u5916\uFF0C\u672C\u4EBA\u5C06\u53CA\u65F6\u62A5\u8B66\u3001\u901A\u77E5\u4FDD\u9669\u516C\u53F8\u3001\u7EF4\u62A4\u73B0\u573A\uFF0C\u79EF\u6781\u4E0E\u7B2C\u4E09\u65B9\u914D\u5408\u89E3\u51B3\u7EA0\u7EB7\u3002'
	                            ),
	                            React.createElement(
	                                'p',
	                                null,
	                                '\u505A\u4E3A\u987A\u98CE\u8F66\u642D\u4E58\u4E58\u5BA2\uFF0C\u672C\u4EBA\u81EA\u613F\u4F5C\u4E3A\u4E58\u5BA2\u53C2\u52A0\u987A\u98CE\u8F66\u516C\u76CA\u6D3B\u52A8\u3002\u5728\u987A\u98CE\u8F66\u642D\u4E58\u8FC7\u7A0B\u4E2D\uFF0C\u672C\u4EBA\u5C06\u4E25\u683C\u9075\u5B88\u4EA4\u901A\u89C4\u5219\u53CA\u76F8\u5173\u6CD5\u5F8B\u89C4\u5B9A\uFF0C\u4E0D\u5E72\u6270\u8F66\u8F86\u884C\u9A76\u3002\u82E5\u5728\u642D\u4E58\u8FC7\u7A0B\u4E2D\u53D1\u751F\u4EA4\u901A\u610F\u5916\uFF0C\u672C\u4EBA\u5C06\u534F\u52A9\u9A7E\u8F66\u4EBA\u62A5\u8B66\u3001\u901A\u77E5\u4FDD\u9669\u516C\u53F8\u3001\u7EF4\u62A4\u73B0\u573A\uFF0C\u79EF\u6781\u914D\u5408\u9A7E\u8F66\u4EBA\u4E0E\u7B2C\u4E09\u65B9\u89E3\u51B3\u7EA0\u7EB7\u3002'
	                            )
	                        )
	                    )
	                )
	            );
	        }
	    }]);
	
	    return Page;
	}(React.Component);
	
	module.exports = Page;

/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var React = __webpack_require__(7);
	var helpers = __webpack_require__(8)(__webpack_require__(47));
	
	module.exports = React.createClass({
	
	    displayName: "Apply",
	
	    getDefaultProps: function getDefaultProps() {
	        return { "0": "{", "1": "s", "2": "t", "3": "y", "4": "l", "5": "e", "6": ":", "7": "{", "8": "}", "9": "}", "width": "200", "height": "200", "viewBox": "0 0 200 200", "version": "1.1", "xmlns": "http://www.w3.org/2000/svg", "data-svgreactloader": "[[\"http://www.w3.org/2000/svg\",\"xlink\",\"http://www.w3.org/1999/xlink\"]]" };
	    },
	    componentDidMount: function componentDidMount() {
	        helpers.applyXmlAttributes(this);
	    },
	    render: function render() {
	        var props = this.props;
	        var children = props.children;
	
	        return React.createElement(
	            'svg',
	            this.props,
	            React.createElement(
	                'defs',
	                null,
	                React.createElement(
	                    'style',
	                    { type: 'text/css' },
	                    '\n@font-face { font-family: ifont; src: url("http://at.alicdn.com/t/font_1442373896_4754455.eot?#iefix") format("embedded-opentype"), url("http://at.alicdn.com/t/font_1442373896_4754455.woff") format("woff"), url("http://at.alicdn.com/t/font_1442373896_4754455.ttf") format("truetype"), url("http://at.alicdn.com/t/font_1442373896_4754455.svg#ifont") format("svg"); }\n\n'
	                )
	            ),
	            React.createElement(
	                'g',
	                { className: 'transform-group' },
	                React.createElement(
	                    'g',
	                    { transform: 'scale(0.1953125, 0.1953125)' },
	                    React.createElement('path', { d: 'M190.231087 546.83539l155.550729-78.723969c0 0 139.522684 166.099992 161.116491 408.477228l-119.148657 51.347458C387.74965 927.936107 228.564138 744.602615 190.231087 546.83539zM412.607804 942.581666 514.345929 903.82292 494.96758 991.021911ZM1019.738441 900.454196 1019.738441 124.669394c0-87.942935-61.703317-113.511263-95.000678-114.752534L67.67789 9.91686l0 1.702782C61.596382 12.346189 55.479057 13.551644 49.292148 15.804964-79.645456 62.524009 112.44856 456.161251 182.341397 526.125719l155.142429-78.29725c0 0-75.337849-297.626561-185.976692-401.599587l772.556271-0.01842c2.411933 0.089028 59.363016 3.121084 59.363016 78.45791l0.033769 776.776386c0 0.355087 1.347694 38.157042-22.198581 62.980403-14.607696 15.424294-36.489052 23.260773-65.035202 23.260773L153.494395 987.685933c-3.670599 0-90.000803-1.028423-90.000803-90.177835L63.493591 733.572398 27.180548 733.572398l0 163.936723c0 100.036367 82.624812 126.489856 126.312824 126.489856l742.733035 0c38.900985 0 69.647243-11.631922 91.419106-34.609239C1022.184143 952.936501 1019.843842 901.659651 1019.738441 900.454196zM576.439126 263.820618l296.52446 0 0 72.625064-296.52446 0 0-72.625064ZM434.186262 445.38072l435.764712 0 0 69.610404-435.764712 0 0-69.610404ZM582.4664 660.240229l284.46889 0 0 75.637678-284.46889 0 0-75.637678Z', fill: '#272636' })
	                )
	            ),
	            React.Children.map(children, function (c) {
	                return c;
	            })
	        );
	    }
	});

/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(70);

/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var TingleUI = __webpack_require__(50);
	var Calendar = TingleUI.Calendar,
	    Button = TingleUI.Button,
	    Context = TingleUI.Context;
	
	
	var classnames = __webpack_require__(4);
	var prefixClass = Context.prefixClass;
	
	var Demo = function (_React$Component) {
	    _inherits(Demo, _React$Component);
	
	    function Demo(props) {
	        _classCallCheck(this, Demo);
	
	        var _this = _possibleConstructorReturn(this, (Demo.__proto__ || Object.getPrototypeOf(Demo)).call(this, props));
	
	        _this.state = {
	            show: false,
	            show2: false,
	            show3: false,
	            locale: 'zh-cn'
	        };
	        return _this;
	    }
	
	    _createClass(Demo, [{
	        key: '_handleClick',
	        value: function _handleClick(show) {
	            var t = this;
	            t.setState(_defineProperty({}, show, true));
	        }
	    }, {
	        key: 'onCloseCalendar',
	        value: function onCloseCalendar(show) {
	            var t = this;
	            t.setState(_defineProperty({}, show, false));
	        }
	    }, {
	        key: 'handleCalendarData',
	        value: function handleCalendarData(show, values) {
	            alert(JSON.stringify(values));
	
	            var t = this;
	            t.setState(_defineProperty({}, show, false));
	        }
	    }, {
	        key: 'handleSelecting',
	        value: function handleSelecting(data, e) {
	            console.log(data, e.target);
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var t = this;
	            return React.createElement(
	                'div',
	                { className: prefixClass('calendar-demo') },
	                React.createElement(
	                    Button,
	                    { onClick: t._handleClick.bind(t, 'show') },
	                    '\u70B9\u6211\u9009\u62E9\u65E5\u671F'
	                ),
	                React.createElement(
	                    Button,
	                    { type: 'secondary', onClick: t._handleClick.bind(t, 'show2') },
	                    '\u70B9\u6211\u9009\u62E9\u65E5\u671F(\u6708\u9762\u677F)'
	                ),
	                React.createElement(
	                    Button,
	                    { type: 'danger', onClick: t._handleClick.bind(t, 'show3') },
	                    '\u70B9\u6211\u9009\u62E9\u65E5\u671F(\u5E74\u9762\u677F)'
	                ),
	                React.createElement(Calendar, { visible: t.state.show,
	                    singleMode: true,
	                    value: '2016-01-02',
	                    showHalfDay: false,
	                    showBottomPanel: false,
	                    extraClass: '',
	                    onSelecting: t.handleSelecting,
	                    topPanelTitle: "请选择时间",
	                    onCancel: t.onCloseCalendar.bind(t, 'show'),
	                    onOk: t.handleCalendarData.bind(t, 'show'),
	                    locale: t.state.locale }),
	                React.createElement(Calendar.MonthCalendar, {
	                    visible: t.state.show2,
	                    singleMode: true,
	                    onCancel: t.onCloseCalendar.bind(t, 'show2'),
	                    onOk: t.handleCalendarData.bind(t, 'show2'),
	                    locale: t.state.locale }),
	                React.createElement(Calendar.YearCalendar, {
	                    visible: t.state.show3,
	                    singleMode: false,
	                    onCancel: t.onCloseCalendar.bind(t, 'show3'),
	                    onOk: t.handleCalendarData.bind(t, 'show3'),
	                    locale: t.state.locale })
	            );
	        }
	    }]);
	
	    return Demo;
	}(React.Component);
	
	;
	
	module.exports = Demo;

/***/ }
/******/ ]);
//# sourceMappingURL=demo.js.map