'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Field Component for tingle
 * @author gnosaij
 *
 * Copyright 2014-2016, Tingle Team.
 * All rights reserved.
 */
var React = require('react');
var classnames = require('classnames');
var Icon = require('@ali/tingle-icon');
var Context = require('@ali/tingle-context');

var prefixClass = Context.prefixClass;

var Field = function (_React$Component) {
    _inherits(Field, _React$Component);

    function Field(props) {
        _classCallCheck(this, Field);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(Field).call(this, props));
    }

    _createClass(Field, [{
        key: 'render',
        value: function render() {
            var _classnames2;

            var t = this;
            var requiredTag = React.createElement(Icon, { name: 'field-required', className: prefixClass('field-layout-label-required'), width: 6, height: 6, fill: 'red' });
            return React.createElement(
                'div',
                { className: classnames(prefixClass('field'), _defineProperty({}, t.props.className, !!t.props.className)) },
                t.props.label && t.props.layout === 'v' && React.createElement(
                    'div',
                    { className: prefixClass('field-layout-v-label') },
                    t.props.label,
                    this.props.required && requiredTag
                ),
                React.createElement(
                    'div',
                    { className: classnames(prefixClass('field-box FBH'), (_classnames2 = {}, _defineProperty(_classnames2, prefixClass('TE'), t.props.tappable), _defineProperty(_classnames2, prefixClass('FBAC'), !t.props.multiLine), _classnames2)) },
                    t.props.label && t.props.layout === 'h' && React.createElement(
                        'div',
                        { className: prefixClass('field-layout-h-label') },
                        t.props.label,
                        this.props.required && requiredTag
                    ),
                    React.createElement(
                        'div',
                        { className: classnames(prefixClass('FB1 PR'), _defineProperty({}, prefixClass('field-multi'), t.props.multiLine)) },
                        t.props.children
                    ),
                    t.props.icon && t.props.icon.name && React.createElement(
                        'div',
                        { className: prefixClass('FBH FBAC field-icon') },
                        React.createElement(Icon, t.props.icon)
                    )
                )
            );
        }
    }]);

    return Field;
}(React.Component);

Field.defaultProps = {
    label: '',
    tappable: false,
    required: false,
    multiLine: false,
    icon: {},
    layout: 'h'
};

// http://facebook.github.io/react/docs/reusable-components.html
Field.propTypes = {
    label: React.PropTypes.string,
    icon: React.PropTypes.object,
    required: React.PropTypes.bool,
    tappable: React.PropTypes.bool,
    multiLine: React.PropTypes.bool,
    layout: React.PropTypes.oneOf(['h', 'v'])
};

Field.displayName = 'Field';

module.exports = Field;
//# sourceMappingURL=data:application/json;base64,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V0FBTixHQUFvQixPQUFwQjs7QUFFQSxPQUFPLE9BQVAsR0FBaUIsS0FBakIiLCJmaWxlIjoiRmllbGQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEZpZWxkIENvbXBvbmVudCBmb3IgdGluZ2xlXG4gKiBAYXV0aG9yIGdub3NhaWpcbiAqXG4gKiBDb3B5cmlnaHQgMjAxNC0yMDE2LCBUaW5nbGUgVGVhbS5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKi9cbmNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbmNvbnN0IGNsYXNzbmFtZXMgPSByZXF1aXJlKCdjbGFzc25hbWVzJyk7XG5jb25zdCBJY29uID0gcmVxdWlyZSgnQGFsaS90aW5nbGUtaWNvbicpO1xuY29uc3QgQ29udGV4dCA9IHJlcXVpcmUoJ0BhbGkvdGluZ2xlLWNvbnRleHQnKTtcblxubGV0IHByZWZpeENsYXNzID0gQ29udGV4dC5wcmVmaXhDbGFzcztcblxuY2xhc3MgRmllbGQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGxldCB0ID0gdGhpcztcbiAgICAgICAgbGV0IHJlcXVpcmVkVGFnID0gPEljb24gbmFtZT1cImZpZWxkLXJlcXVpcmVkXCIgY2xhc3NOYW1lPXtwcmVmaXhDbGFzcygnZmllbGQtbGF5b3V0LWxhYmVsLXJlcXVpcmVkJyl9IHdpZHRoPXs2fSBoZWlnaHQ9ezZ9IGZpbGw9XCJyZWRcIiAvPjtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjbGFzc25hbWVzKHByZWZpeENsYXNzKCdmaWVsZCcpLCB7XG4gICAgICAgICAgICAgICAgICAgIFt0LnByb3BzLmNsYXNzTmFtZV06ICEhdC5wcm9wcy5jbGFzc05hbWVcbiAgICAgICAgICAgICAgICB9KX0+XG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB0LnByb3BzLmxhYmVsICYmIHQucHJvcHMubGF5b3V0ID09PSAndicgJiZcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3ByZWZpeENsYXNzKCdmaWVsZC1sYXlvdXQtdi1sYWJlbCcpfT5cbiAgICAgICAgICAgICAgICAgICAge3QucHJvcHMubGFiZWx9XG4gICAgICAgICAgICAgICAgICAgIHt0aGlzLnByb3BzLnJlcXVpcmVkICYmIHJlcXVpcmVkVGFnfVxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e2NsYXNzbmFtZXMocHJlZml4Q2xhc3MoJ2ZpZWxkLWJveCBGQkgnKSwge1xuICAgICAgICAgICAgICAgICAgICBbcHJlZml4Q2xhc3MoJ1RFJyldOiB0LnByb3BzLnRhcHBhYmxlLFxuICAgICAgICAgICAgICAgICAgICBbcHJlZml4Q2xhc3MoJ0ZCQUMnKV06ICF0LnByb3BzLm11bHRpTGluZVxuICAgICAgICAgICAgICAgIH0pfT5cbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgdC5wcm9wcy5sYWJlbCAmJiB0LnByb3BzLmxheW91dCA9PT0gJ2gnICYmXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17cHJlZml4Q2xhc3MoJ2ZpZWxkLWxheW91dC1oLWxhYmVsJyl9PlxuICAgICAgICAgICAgICAgICAgICAgICAge3QucHJvcHMubGFiZWx9XG4gICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5wcm9wcy5yZXF1aXJlZCAmJiByZXF1aXJlZFRhZ31cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjbGFzc25hbWVzKHByZWZpeENsYXNzKCdGQjEgUFInKSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgW3ByZWZpeENsYXNzKCdmaWVsZC1tdWx0aScpXTogdC5wcm9wcy5tdWx0aUxpbmVcbiAgICAgICAgICAgICAgICAgICAgfSl9PlxuICAgICAgICAgICAgICAgICAgICAgICAge3QucHJvcHMuY2hpbGRyZW59XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0LnByb3BzLmljb24gJiYgdC5wcm9wcy5pY29uLm5hbWUgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtwcmVmaXhDbGFzcygnRkJIIEZCQUMgZmllbGQtaWNvbicpfT48SWNvbiB7Li4udC5wcm9wcy5pY29ufS8+PC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuRmllbGQuZGVmYXVsdFByb3BzID0ge1xuICAgIGxhYmVsOiAnJyxcbiAgICB0YXBwYWJsZTogZmFsc2UsXG4gICAgcmVxdWlyZWQ6IGZhbHNlLFxuICAgIG11bHRpTGluZTogZmFsc2UsXG4gICAgaWNvbjoge30sXG4gICAgbGF5b3V0OiAnaCdcbn07XG5cbi8vIGh0dHA6Ly9mYWNlYm9vay5naXRodWIuaW8vcmVhY3QvZG9jcy9yZXVzYWJsZS1jb21wb25lbnRzLmh0bWxcbkZpZWxkLnByb3BUeXBlcyA9IHtcbiAgICBsYWJlbDogUmVhY3QuUHJvcFR5cGVzLnN0cmluZyxcbiAgICBpY29uOiBSZWFjdC5Qcm9wVHlwZXMub2JqZWN0LFxuICAgIHJlcXVpcmVkOiBSZWFjdC5Qcm9wVHlwZXMuYm9vbCxcbiAgICB0YXBwYWJsZTogUmVhY3QuUHJvcFR5cGVzLmJvb2wsXG4gICAgbXVsdGlMaW5lOiBSZWFjdC5Qcm9wVHlwZXMuYm9vbCxcbiAgICBsYXlvdXQ6IFJlYWN0LlByb3BUeXBlcy5vbmVPZihbJ2gnLCAndiddKVxufTtcblxuRmllbGQuZGlzcGxheU5hbWUgPSAnRmllbGQnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEZpZWxkO1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
