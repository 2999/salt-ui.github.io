/**
 * Field Component for tingle
 * @author gnosaij
 *
 * Copyright 2014-2016, Tingle Team.
 * All rights reserved.
 */
const React = require('react');
const classnames = require('classnames');
const Icon = require('@ali/tingle-icon');
const Context = require('@ali/tingle-context');

let prefixClass = Context.prefixClass;

class Field extends React.Component {
    constructor(props) {
        super(props);
    }

    render() {
        let t = this;
        let requiredTag = <Icon name="field-required" className={prefixClass('field-layout-label-required')} width={6} height={6} fill="red" />;
        return (
            <div className={classnames(prefixClass('field'), {
                    [t.props.className]: !!t.props.className
                })}>
                {
                    t.props.label && t.props.layout === 'v' &&
                    <div className={prefixClass('field-layout-v-label')}>
                    {t.props.label}
                    {this.props.required && requiredTag}
                    </div>
                }
                <div className={classnames(prefixClass('field-box FBH'), {
                    [prefixClass('TE')]: t.props.tappable,
                    [prefixClass('FBAC')]: !t.props.multiLine
                })}>
                    {
                        t.props.label && t.props.layout === 'h' &&
                        <div className={prefixClass('field-layout-h-label')}>
                        {t.props.label}
                        {this.props.required && requiredTag}
                        </div>
                    }
                    <div className={classnames(prefixClass('FB1 PR'), {
                        [prefixClass('field-multi')]: t.props.multiLine
                    })}>
                        {t.props.children}
                    </div>
                    {
                        t.props.icon && t.props.icon.name &&
                        <div className={prefixClass('FBH FBAC field-icon')}><Icon {...t.props.icon}/></div>
                    }
                </div>
            </div>
        );
    }
}

Field.defaultProps = {
    label: '',
    tappable: false,
    required: false,
    multiLine: false,
    icon: {},
    layout: 'h'
};

// http://facebook.github.io/react/docs/reusable-components.html
Field.propTypes = {
    label: React.PropTypes.string,
    icon: React.PropTypes.object,
    required: React.PropTypes.bool,
    tappable: React.PropTypes.bool,
    multiLine: React.PropTypes.bool,
    layout: React.PropTypes.oneOf(['h', 'v'])
};

Field.displayName = 'Field';

module.exports = Field;
