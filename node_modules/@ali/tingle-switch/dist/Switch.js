'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Switch Component for tingle
 * @author ruiyang.dry
 *
 * Copyright 2014-2016, Tingle Team, Alinw.
 * All rights reserved.
 */
var classnames = require('classnames');

var Context = require('@ali/tingle-context');

var Switch = function (_React$Component) {
    _inherits(Switch, _React$Component);

    function Switch(props) {
        _classCallCheck(this, Switch);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(Switch).call(this, props));
    }

    _createClass(Switch, [{
        key: 'handleChange',
        value: function handleChange(event) {
            var t = this;
            if (t.props.readOnly) {
                return;
            }
            t.props.onChange(!t.props.on, event);
        }
    }, {
        key: 'render',
        value: function render() {
            var t = this;
            var classSet = _defineProperty({
                "active": t.props.on,
                "readOnly": t.props.readOnly
            }, t.props.className, !!t.props.className);
            return React.createElement(
                'div',
                {
                    className: classnames(Context.prefixClass('switch'), classSet),
                    readOnly: t.props.readOnly,
                    onClick: t.handleChange.bind(this) },
                React.createElement(
                    'div',
                    { className: Context.prefixClass('switch-back') },
                    React.createElement('div', { className: Context.prefixClass('switch-radius') })
                )
            );
        }
    }]);

    return Switch;
}(React.Component);

Switch.defaultProps = {
    on: true,
    onChange: function onChange() {},

    readOnly: false
};

// http://facebook.github.io/react/docs/reusable-components.html
Switch.propTypes = {
    on: React.PropTypes.bool,
    onChange: React.PropTypes.func,
    readOnly: React.PropTypes.bool
};

Switch.displayName = "Switch";

module.exports = Switch;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlN3aXRjaC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBT0EsSUFBSSxhQUFhLFFBQVEsWUFBUixDQUFqQjs7QUFFQSxJQUFNLFVBQVUsUUFBUSxxQkFBUixDQUFoQjs7SUFFTSxNOzs7QUFFRixvQkFBWSxLQUFaLEVBQW1CO0FBQUE7O0FBQUEseUZBQ1QsS0FEUztBQUVsQjs7OztxQ0FFWSxLLEVBQU87QUFDaEIsZ0JBQUksSUFBSSxJQUFSO0FBQ0EsZ0JBQUksRUFBRSxLQUFGLENBQVEsUUFBWixFQUFzQjtBQUNsQjtBQUNIO0FBQ0QsY0FBRSxLQUFGLENBQVEsUUFBUixDQUFpQixDQUFDLEVBQUUsS0FBRixDQUFRLEVBQTFCLEVBQThCLEtBQTlCO0FBQ0g7OztpQ0FFUTtBQUNMLGdCQUFJLElBQUksSUFBUjtBQUNBLGdCQUFJO0FBQ0EsMEJBQVUsRUFBRSxLQUFGLENBQVEsRUFEbEI7QUFFQSw0QkFBWSxFQUFFLEtBQUYsQ0FBUTtBQUZwQixlQUdDLEVBQUUsS0FBRixDQUFRLFNBSFQsRUFHcUIsQ0FBQyxDQUFDLEVBQUUsS0FBRixDQUFRLFNBSC9CLENBQUo7QUFLQSxtQkFDSTtBQUFBO2dCQUFBO0FBQ0ksK0JBQVcsV0FBVyxRQUFRLFdBQVIsQ0FBb0IsUUFBcEIsQ0FBWCxFQUEwQyxRQUExQyxDQURmO0FBRUksOEJBQVUsRUFBRSxLQUFGLENBQVEsUUFGdEI7QUFHSSw2QkFBUyxFQUFFLFlBQUYsQ0FBZSxJQUFmLENBQW9CLElBQXBCLENBSGI7Z0JBSUk7QUFBQTtvQkFBQSxFQUFLLFdBQVcsUUFBUSxXQUFSLENBQW9CLGFBQXBCLENBQWhCO29CQUNJLDZCQUFLLFdBQVcsUUFBUSxXQUFSLENBQW9CLGVBQXBCLENBQWhCO0FBREo7QUFKSixhQURKO0FBVUg7Ozs7RUEvQmdCLE1BQU0sUzs7QUFrQzNCLE9BQU8sWUFBUCxHQUFzQjtBQUNsQixRQUFJLElBRGM7QUFFbEIsWUFGa0Isc0JBRVAsQ0FDVixDQUhpQjs7QUFJbEIsY0FBVTtBQUpRLENBQXRCOzs7QUFRQSxPQUFPLFNBQVAsR0FBbUI7QUFDZixRQUFJLE1BQU0sU0FBTixDQUFnQixJQURMO0FBRWYsY0FBVSxNQUFNLFNBQU4sQ0FBZ0IsSUFGWDtBQUdmLGNBQVUsTUFBTSxTQUFOLENBQWdCO0FBSFgsQ0FBbkI7O0FBTUEsT0FBTyxXQUFQLEdBQXFCLFFBQXJCOztBQUVBLE9BQU8sT0FBUCxHQUFpQixNQUFqQiIsImZpbGUiOiJTd2l0Y2guanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFN3aXRjaCBDb21wb25lbnQgZm9yIHRpbmdsZVxuICogQGF1dGhvciBydWl5YW5nLmRyeVxuICpcbiAqIENvcHlyaWdodCAyMDE0LTIwMTYsIFRpbmdsZSBUZWFtLCBBbGludy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKi9cbmxldCBjbGFzc25hbWVzID0gcmVxdWlyZSgnY2xhc3NuYW1lcycpO1xuXG5jb25zdCBDb250ZXh0ID0gcmVxdWlyZSgnQGFsaS90aW5nbGUtY29udGV4dCcpO1xuXG5jbGFzcyBTd2l0Y2ggZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuXG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgIH1cblxuICAgIGhhbmRsZUNoYW5nZShldmVudCkge1xuICAgICAgICBsZXQgdCA9IHRoaXM7XG4gICAgICAgIGlmICh0LnByb3BzLnJlYWRPbmx5KSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdC5wcm9wcy5vbkNoYW5nZSghdC5wcm9wcy5vbiwgZXZlbnQpXG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICBsZXQgdCA9IHRoaXM7XG4gICAgICAgIGxldCBjbGFzc1NldCA9IHtcbiAgICAgICAgICAgIFwiYWN0aXZlXCI6IHQucHJvcHMub24sXG4gICAgICAgICAgICBcInJlYWRPbmx5XCI6IHQucHJvcHMucmVhZE9ubHksXG4gICAgICAgICAgICBbdC5wcm9wcy5jbGFzc05hbWVdOiAhIXQucHJvcHMuY2xhc3NOYW1lXG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtjbGFzc25hbWVzKENvbnRleHQucHJlZml4Q2xhc3MoJ3N3aXRjaCcpLCBjbGFzc1NldCl9XG4gICAgICAgICAgICAgICAgcmVhZE9ubHk9e3QucHJvcHMucmVhZE9ubHl9XG4gICAgICAgICAgICAgICAgb25DbGljaz17dC5oYW5kbGVDaGFuZ2UuYmluZCh0aGlzKX0+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e0NvbnRleHQucHJlZml4Q2xhc3MoJ3N3aXRjaC1iYWNrJyl9PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Q29udGV4dC5wcmVmaXhDbGFzcygnc3dpdGNoLXJhZGl1cycpfT48L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuU3dpdGNoLmRlZmF1bHRQcm9wcyA9IHtcbiAgICBvbjogdHJ1ZSxcbiAgICBvbkNoYW5nZSgpIHtcbiAgICB9LFxuICAgIHJlYWRPbmx5OiBmYWxzZVxufTtcblxuLy8gaHR0cDovL2ZhY2Vib29rLmdpdGh1Yi5pby9yZWFjdC9kb2NzL3JldXNhYmxlLWNvbXBvbmVudHMuaHRtbFxuU3dpdGNoLnByb3BUeXBlcyA9IHtcbiAgICBvbjogUmVhY3QuUHJvcFR5cGVzLmJvb2wsXG4gICAgb25DaGFuZ2U6IFJlYWN0LlByb3BUeXBlcy5mdW5jLFxuICAgIHJlYWRPbmx5OiBSZWFjdC5Qcm9wVHlwZXMuYm9vbFxufTtcblxuU3dpdGNoLmRpc3BsYXlOYW1lID0gXCJTd2l0Y2hcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBTd2l0Y2g7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
