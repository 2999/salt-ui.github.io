/**
 * CheckboxField Component for tingle
 * @author shanchao
 *
 * Copyright 2014-2016, Tingle Team.
 * All rights reserved.
 */
const React = require('react');
const classnames = require('classnames');
const Icon = require('@ali/tingle-icon');
const Context = require('@ali/tingle-context');
const Group = require('@ali/tingle-group');

let prefixClass = Context.prefixClass;
class CheckboxField extends React.Component {

    constructor(props) {
        super(props);
    }

    clickAction(value, item, index, data) {
        let t = this;
        let {onChange} = t.props;
        let disable = item.disable;
        if (disable) {
            return;
        }
        item.checked = !item.checked;
        onChange && onChange(value, index, data);
        t.forceUpdate();

    }

    render() {
        let t = this;
        let props = t.props;
        let {className, data:checkboxArray, groupListArgument, groupListFlag, label} = props;
        const requiredTag = (
            <Icon name="field-required" className={prefixClass('field-layout-label-required')} width={6} height={6} fill="red" />
        );

        let checkboxArrayComponent = checkboxArray.map(function (item, index, data) {

            let {checked,disable, value} = item;
   
            let iconName = checked ? "check-round" : "";
            let iconClassName = classnames(prefixClass("checkbox-field-icon"), {"checked": checked}, {"noChecked": !checked}, {"disable": disable});

            let textClassName = classnames(prefixClass("checkbox-field-text FBH FBAC"), {"disable": disable});

            let iconTag = checked 
                                ? <Icon key="check-round" width={22} height={22} name="check-round" className={iconClassName}/>
                                : <div className={iconClassName}></div> ;

            let finalItemJSX = (

                <div onClick={t.clickAction.bind(t, value, item,index, checkboxArray)} key={index}
                     className={prefixClass("checkbox-field-row FBAC FBH")}>
                    <div className={prefixClass("checkbox-field-icon-div FBH FBAC")}>
                        {iconTag}
                    </div>
                    <div ref={"text" + index} className={textClassName}>{item.text}</div>
                </div>

            );
            return (
                finalItemJSX
            );
        });


        let finalJSX = (
            <Group className={classnames(prefixClass('checkbox-field'), {
                [className]: !!className
            })}>
                {
                    label == ''
                    ? null 
                    : (
                         <Group.Head className={classnames(prefixClass('checkbox-label'))}>
                         {label}
                         {this.props.required && requiredTag}
                         </Group.Head>
                    )
                }
                <Group.List {...groupListArgument} >
                    {checkboxArrayComponent}
                </Group.List>
            </Group>
        );

        if (!groupListFlag) {
            finalJSX = (
                <div ref='root' className={classnames(prefixClass('checkbox-field'), {
                    [className]: !!className
                })}>
                    {checkboxArrayComponent}
                </div>
            )
        }
        return finalJSX;
    }

    getData(){
        let t = this;
        return t.props.data;
    }
}

CheckboxField.defaultProps = {
    data: [],
    onChange: function () {
    },
    groupListFlag: true,
    groupListArgument: {
        lineIndent: 0,
        itemIndent: 15
    },
    label:''
};

// http://facebook.github.io/react/docs/reusable-components.html
CheckboxField.propTypes = {
    className: React.PropTypes.string,
    data: React.PropTypes.array,
    onChange: React.PropTypes.func,
    groupListFlag: React.PropTypes.bool,
    groupListArgument: React.PropTypes.object
};

CheckboxField.displayName = 'CheckboxField';

module.exports = CheckboxField;
