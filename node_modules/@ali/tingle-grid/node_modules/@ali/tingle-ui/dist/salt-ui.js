(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"), require("react-dom"));
	else if(typeof define === 'function' && define.amd)
		define(["react", "react-dom"], factory);
	else if(typeof exports === 'object')
		exports["TingleUI"] = factory(require("react"), require("react-dom"));
	else
		root["TingleUI"] = factory(root["React"], root["ReactDOM"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_111__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * TingleUI All in One!
	 * @author alex.mm
	 *
	 * Copyright 2014-2016, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	var IconSource = __webpack_require__(1);
	var WRAPPER_ID = '__TingleIconSymbols__';
	var doc = document;
	var wrapper = doc.getElementById(WRAPPER_ID);
	if (!wrapper) {
	    wrapper = doc.createElement('div');
	    wrapper.id = WRAPPER_ID;
	    wrapper.style.display = "none";
	    doc.body.appendChild(wrapper);
	    ReactDOM.render(React.createElement(IconSource, null), wrapper);
	}
	
	var VERSION = void 0;
	(VERSION = "1.0.29");
	
	// 按照字母顺序排序
	var TingleUI = {
	    version: VERSION,
	    Avatar: __webpack_require__(112),
	    Boxs: __webpack_require__(121),
	    Button: __webpack_require__(124),
	    Calendar: __webpack_require__(127),
	    CheckboxField: __webpack_require__(155),
	    Context: __webpack_require__(116),
	    DatetimeField: __webpack_require__(167),
	    Dialog: __webpack_require__(180),
	    Field: __webpack_require__(177),
	    Gallery: __webpack_require__(183),
	    Group: __webpack_require__(162),
	    Grid: __webpack_require__(190),
	    Icon: __webpack_require__(158),
	    Layer: __webpack_require__(132),
	    List: __webpack_require__(193),
	    Mask: __webpack_require__(135),
	    NavBar: __webpack_require__(196),
	    Note: __webpack_require__(199),
	    //Picker: require('@ali/tingle-picker'),
	    RadioField: __webpack_require__(202),
	    SearchBar: __webpack_require__(205),
	    SelectField: __webpack_require__(218),
	    Scroller: __webpack_require__(173),
	    Slide: __webpack_require__(186),
	    Slot: __webpack_require__(170),
	    Switch: __webpack_require__(221),
	    SwitchField: __webpack_require__(224),
	    Tab: __webpack_require__(227),
	    TabBar: __webpack_require__(231),
	    TextareaField: __webpack_require__(235),
	    TextField: __webpack_require__(239),
	    Toast: __webpack_require__(242)
	};
	
	(window.SaltUI = TingleUI);
	
	module.exports = TingleUI;

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var React = __webpack_require__(2);
	var helpers = __webpack_require__(3)(__webpack_require__(111));
	
	module.exports = React.createClass({
	
	  displayName: "TingleIconSymbols",
	
	  getDefaultProps: function getDefaultProps() {
	    return { "0": "{", "1": "s", "2": "t", "3": "y", "4": "l", "5": "e", "6": ":", "7": "{", "8": "}", "9": "}", "xmlns": "http://www.w3.org/2000/svg", "data-svgreactloader": "[[\"http://www.w3.org/2000/svg\",\"xlink\",\"http://www.w3.org/1999/xlink\"]]" };
	  },
	  componentDidMount: function componentDidMount() {
	    helpers.applyXmlAttributes(this);
	  },
	  render: function render() {
	    var props = this.props;
	    var children = props.children;
	
	    return React.createElement(
	      'svg',
	      this.props,
	      React.createElement(
	        'symbol',
	        { id: 'field-required', viewBox: '0 0 200 200' },
	        React.createElement(
	          'g',
	          { className: 'transform-group' },
	          React.createElement(
	            'g',
	            { transform: 'scale(0.1953125, 0.1953125)' },
	            React.createElement('path', { d: 'M723.776 440.512 536.768 512l186.944 71.488c47.616 18.368 75.136 33.024 82.496 44.032 7.296 11.008 11.008 22.016 11.008 33.024 0 29.376-5.568 45.888-16.704 49.472-11.072 3.712-22.208 5.504-33.28 5.504-11.2 0-22.272-2.752-33.344-8.256-11.136-5.504-24.064-13.76-38.848-24.768L523.072 528.512l38.912 230.976c3.648 11.008 5.504 21.12 5.504 30.272 0 9.216 0 15.616 0 19.264 0 22.016-5.504 37.632-16.64 46.72C539.712 864.96 526.784 869.504 512 869.504c-11.328 0-23.552-3.648-36.8-11.008-13.248-7.296-19.776-23.808-19.776-49.472 0-7.296 0.96-14.656 2.816-22.016 1.92-7.296 2.816-16.512 2.816-27.52l45.184-230.976-175.232 153.984c-11.328 7.36-23.552 14.656-36.8 22.016-13.248 7.36-25.408 11.008-36.672 11.008-11.328 0-22.592-3.648-33.92-11.008-11.328-7.296-16.96-22.016-16.96-44.032 0-14.656 5.504-27.52 16.512-38.528s36.608-23.808 76.992-38.528L487.296 512 300.288 440.512C274.624 429.504 252.608 419.456 234.304 410.24c-18.368-9.152-27.52-24.768-27.52-46.72 0-18.304 5.504-32.064 16.576-41.28C234.496 313.152 245.504 308.48 256.704 308.48c11.072 0 23.104 2.752 36.096 8.256 12.864 5.504 24.896 13.76 36.096 24.768l172.032 153.984L462.08 264.512c0-11.008-0.96-20.096-2.816-27.52-1.92-7.296-2.752-14.656-2.752-22.016 0-14.656 5.504-28.352 16.64-41.28C484.288 160.96 497.28 154.496 512 154.496c22.656 0 37.568 7.36 45.248 22.016 7.488 14.656 11.328 27.52 11.328 38.528 0 7.36 0 15.616 0 24.768 0 9.216-1.92 17.408-5.696 24.768L517.696 495.488l175.168-153.984c15.04-14.656 28.16-23.808 39.552-27.52 11.328-3.648 22.592-5.504 33.92-5.504 15.04 0 27.264 5.504 36.672 16.512S817.28 348.864 817.28 363.52c0 14.656-3.712 26.624-11.008 35.776C798.848 408.448 771.392 422.208 723.776 440.512z' })
	          )
	        )
	      ),
	      React.createElement(
	        'symbol',
	        { id: 'tingle-icon-symbols' },
	        React.createElement(
	          'symbol',
	          { id: 'angle-down', viewBox: '0 0 24 24' },
	          React.createElement(
	            'g',
	            { id: 'expand-more' },
	            React.createElement('polygon', { points: '16.6,8.6 12,13.2 7.4,8.6 6,10 12,16 18,10 ' })
	          )
	        ),
	        React.createElement(
	          'symbol',
	          { id: 'angle-left', viewBox: '0 0 24 24' },
	          React.createElement(
	            'g',
	            { id: 'chevron-left' },
	            React.createElement('polygon', { points: '15.4,7.4 14,6 8,12 14,18 15.4,16.6 10.8,12 ' })
	          )
	        ),
	        React.createElement(
	          'symbol',
	          { id: 'angle-right', viewBox: '0 0 24 24' },
	          React.createElement(
	            'g',
	            { id: 'chevron-right' },
	            React.createElement('polygon', { points: '10,6 8.6,7.4 13.2,12 8.6,16.6 10,18 16,12 ' })
	          )
	        ),
	        React.createElement(
	          'symbol',
	          { id: 'angle-up', viewBox: '0 0 24 24' },
	          React.createElement(
	            'g',
	            { id: 'expand-less' },
	            React.createElement('polygon', { points: '12,8 6,14 7.4,15.4 12,10.8 16.6,15.4 18,14 ' })
	          )
	        ),
	        React.createElement(
	          'symbol',
	          { id: 'check-round', viewBox: '0 0 20 20' },
	          React.createElement(
	            'title',
	            null,
	            'check-round'
	          ),
	          React.createElement(
	            'desc',
	            null,
	            'Created with Sketch.'
	          ),
	          React.createElement(
	            'g',
	            { id: 'Page-1', stroke: 'none', strokeWidth: '1', fillRule: 'evenodd' },
	            React.createElement(
	              'g',
	              { id: 'check-round' },
	              React.createElement(
	                'g',
	                { id: 'check-circle' },
	                React.createElement('path', { d: 'M10,0 C4.5,0 0,4.5 0,10 C0,15.5 4.5,20 10,20 C15.5,20 20,15.5 20,10 C20,4.5 15.5,0 10,0 L10,0 Z M8,15 L3,10 L4.4,8.6 L8,12.2 L15.6,4.6 L17,6 L8,15 L8,15 Z', id: 'Shape' })
	              )
	            )
	          )
	        ),
	        React.createElement(
	          'symbol',
	          { id: 'check', viewBox: '0 0 24 24' },
	          React.createElement(
	            'g',
	            { id: 'check' },
	            React.createElement('polygon', { points: '9,16.2 4.8,12 3.4,13.4 9,19 21,7 19.6,5.6 ' })
	          )
	        ),
	        React.createElement(
	          'symbol',
	          { id: 'cross-round', viewBox: '0 0 24 24' },
	          React.createElement(
	            'g',
	            { id: 'cancel' },
	            React.createElement('path', { d: 'M12,2C6.5,2,2,6.5,2,12s4.5,10,10,10c5.5,0,10-4.5,10-10S17.5,2,12,2z M17,15.6L15.6,17L12,13.4L8.4,17L7,15.6l3.6-3.6L7,8.4L8.4,7l3.6,3.6L15.6,7L17,8.4L13.4,12L17,15.6z' })
	          )
	        ),
	        React.createElement(
	          'symbol',
	          { id: 'cross', viewBox: '0 0 24 24' },
	          React.createElement(
	            'g',
	            { id: 'clear' },
	            React.createElement('polygon', { points: '19,6.4 17.6,5 12,10.6 6.4,5 5,6.4 10.6,12 5,17.6 6.4,19 12,13.4 17.6,19 19,17.6 13.4,12 ' })
	          )
	        ),
	        React.createElement(
	          'symbol',
	          { id: 'empty-circle', viewBox: '0 0 24 24' },
	          React.createElement('path', { d: 'M12,2C6.5,2,2,6.5,2,12s4.5,10,10,10s10-4.5,10-10S17.5,2,12,2z M12,20c-4.4,0-8-3.6-8-8s3.6-8,8-8s8,3.6,8,8S16.4,20,12,20 z' })
	        ),
	        React.createElement(
	          'symbol',
	          { id: 'info-circle', viewBox: '0 0 24 24' },
	          React.createElement(
	            'g',
	            { id: 'info-outline' },
	            React.createElement('path', { d: 'M11,17h2v-6h-2V17z M12,2C6.5,2,2,6.5,2,12s4.5,10,10,10c5.5,0,10-4.5,10-10S17.5,2,12,2z M12,20c-4.4,0-8-3.6-8-8s3.6-8,8-8c4.4,0,8,3.6,8,8S16.4,20,12,20z M11,9h2V7h-2V9z' })
	          )
	        ),
	        React.createElement(
	          'symbol',
	          { id: 'info-round', viewBox: '0 0 24 24' },
	          React.createElement(
	            'g',
	            { id: 'info' },
	            React.createElement('path', { d: 'M12,2C6.5,2,2,6.5,2,12s4.5,10,10,10c5.5,0,10-4.5,10-10S17.5,2,12,2z M13,17h-2v-6h2V17z M13,9h-2V7h2V9z' })
	          )
	        ),
	        React.createElement(
	          'symbol',
	          { id: 'map', viewBox: '0 0 24 24' },
	          React.createElement(
	            'g',
	            { id: 'place' },
	            React.createElement('path', { d: 'M12,2C8.1,2,5,5.1,5,9c0,5.2,7,13,7,13s7-7.8,7-13C19,5.1,15.9,2,12,2z M12,11.5c-1.4,0-2.5-1.1-2.5-2.5s1.1-2.5,2.5-2.5c1.4,0,2.5,1.1,2.5,2.5S13.4,11.5,12,11.5z' })
	          )
	        ),
	        React.createElement(
	          'symbol',
	          { id: 'minus-circle', viewBox: '0 0 24 24' },
	          React.createElement(
	            'g',
	            { id: 'unknown-4' },
	            React.createElement('path', { d: 'M12,2C6.5,2,2,6.5,2,12s4.5,10,10,10c5.5,0,10-4.5,10-10C22,6.5,17.5,2,12,2z M12,20c-4.4,0-8-3.6-8-8c0-4.4,3.6-8,8-8c4.4,0,8,3.6,8,8C20,16.4,16.4,20,12,20z M8,13h8v-2H8V13z' })
	          )
	        ),
	        React.createElement(
	          'symbol',
	          { id: 'minus-round', viewBox: '0 0 24 24' },
	          React.createElement(
	            'g',
	            { id: 'remove-circle' },
	            React.createElement('path', { d: 'M12,2C6.5,2,2,6.5,2,12s4.5,10,10,10c5.5,0,10-4.5,10-10S17.5,2,12,2z M17,13H7v-2h10V13z' })
	          )
	        ),
	        React.createElement(
	          'symbol',
	          { id: 'note-round', viewBox: '0 0 24 24' },
	          React.createElement(
	            'g',
	            { id: 'error' },
	            React.createElement('path', { d: 'M12,2C6.5,2,2,6.5,2,12s4.5,10,10,10c5.5,0,10-4.5,10-10S17.5,2,12,2z M13,17h-2v-2h2V17z M13,13h-2V7h2V13z' })
	          )
	        ),
	        React.createElement(
	          'symbol',
	          { id: 'pen', viewBox: '0 0 24 24' },
	          React.createElement(
	            'g',
	            { id: 'create' },
	            React.createElement('path', { d: 'M3,17.2V21h3.8L17.8,9.9l-3.8-3.8L3,17.2z M20.7,7c0.4-0.4,0.4-1,0-1.4l-2.3-2.3c-0.4-0.4-1-0.4-1.4,0l-1.8,1.8l3.8,3.8L20.7,7z' })
	          )
	        ),
	        React.createElement(
	          'symbol',
	          { id: 'plus-circle', viewBox: '0 0 24 24' },
	          React.createElement(
	            'g',
	            { id: 'unknown-3' },
	            React.createElement('path', { d: 'M13,8h-2v3H8v2h3v3h2v-3h3v-2h-3V8z M12,2C6.5,2,2,6.5,2,12s4.5,10,10,10c5.5,0,10-4.5,10-10C22,6.5,17.5,2,12,2z M12,20c-4.4,0-8-3.6-8-8c0-4.4,3.6-8,8-8c4.4,0,8,3.6,8,8C20,16.4,16.4,20,12,20z' })
	          )
	        ),
	        React.createElement(
	          'symbol',
	          { id: 'plus-round', viewBox: '0 0 24 24' },
	          React.createElement(
	            'g',
	            { id: 'add-circle' },
	            React.createElement('path', { d: 'M12,2C6.5,2,2,6.5,2,12s4.5,10,10,10c5.5,0,10-4.5,10-10S17.5,2,12,2z M17,13h-4v4h-2v-4H7v-2h4V7h2v4h4V13z' })
	          )
	        ),
	        React.createElement(
	          'symbol',
	          { id: 'plus', viewBox: '0 0 24 24' },
	          React.createElement(
	            'g',
	            { id: 'add' },
	            React.createElement('path', { d: 'M19,13h-6v6h-2v-6H5v-2h6V5h2v6h6V13z' })
	          )
	        ),
	        React.createElement(
	          'symbol',
	          { id: 'search', viewBox: '0 0 24 24' },
	          React.createElement(
	            'g',
	            { id: 'search' },
	            React.createElement('path', { d: 'M15.5,14h-0.8l-0.3-0.3c1-1.1,1.6-2.6,1.6-4.2C16,5.9,13.1,3,9.5,3C5.9,3,3,5.9,3,9.5S5.9,16,9.5,16c1.6,0,3.1-0.6,4.2-1.6l0.3,0.3v0.8l5,5l1.5-1.5L15.5,14z M9.5,14C7,14,5,12,5,9.5S7,5,9.5,5C12,5,14,7,14,9.5S12,14,9.5,14z' })
	          )
	        ),
	        React.createElement(
	          'symbol',
	          { id: 'setting', viewBox: '0 0 24 24' },
	          React.createElement(
	            'g',
	            { id: 'settings' },
	            React.createElement('path', { d: 'M19.4,13c0-0.3,0.1-0.6,0.1-1s0-0.7-0.1-1l2.1-1.7c0.2-0.2,0.2-0.4,0.1-0.6l-2-3.5C19.5,5.1,19.3,5,19,5.1l-2.5,1c-0.5-0.4-1.1-0.7-1.7-1l-0.4-2.6C14.5,2.2,14.2,2,14,2h-4C9.8,2,9.5,2.2,9.5,2.4L9.1,5.1C8.5,5.3,8,5.7,7.4,6.1L5,5.1C4.7,5,4.5,5.1,4.3,5.3l-2,3.5C2.2,8.9,2.3,9.2,2.5,9.4L4.6,11c0,0.3-0.1,0.6-0.1,1s0,0.7,0.1,1l-2.1,1.7c-0.2,0.2-0.2,0.4-0.1,0.6l2,3.5C4.5,18.9,4.7,19,5,18.9l2.5-1c0.5,0.4,1.1,0.7,1.7,1l0.4,2.6c0,0.2,0.2,0.4,0.5,0.4h4c0.2,0,0.5-0.2,0.5-0.4l0.4-2.6c0.6-0.3,1.2-0.6,1.7-1l2.5,1c0.2,0.1,0.5,0,0.6-0.2l2-3.5c0.1-0.2,0.1-0.5-0.1-0.6L19.4,13z M12,15.5c-1.9,0-3.5-1.6-3.5-3.5s1.6-3.5,3.5-3.5s3.5,1.6,3.5,3.5S13.9,15.5,12,15.5z' })
	          )
	        ),
	        React.createElement(
	          'symbol',
	          { id: 'star', viewBox: '0 0 24 24' },
	          React.createElement(
	            'g',
	            { id: 'star' },
	            React.createElement('polygon', { points: '12,17.273 18.18,21 16.545,13.971 22,9.244 14.809,8.627 12,2 9.191,8.627 2,9.244 7.455,13.971 5.82,21 ' })
	          )
	        ),
	        React.createElement(
	          'symbol',
	          { id: 'time', viewBox: '0 0 24 24' },
	          React.createElement(
	            'g',
	            { id: 'schedule' },
	            React.createElement('path', { fillOpacity: '0.9', d: 'M12,2C6.5,2,2,6.5,2,12s4.5,10,10,10c5.5,0,10-4.5,10-10S17.5,2,12,2z M12,20c-4.4,0-8-3.6-8-8s3.6-8,8-8c4.4,0,8,3.6,8,8S16.4,20,12,20z' }),
	            React.createElement('polygon', { fillOpacity: '0.9', points: '12.5,7 11,7 11,13 16.2,16.2 17,14.9 12.5,12.2 ' })
	          )
	        ),
	        React.createElement(
	          'symbol',
	          { id: 'user', viewBox: '0 0 24 24' },
	          React.createElement(
	            'g',
	            { id: 'person' },
	            React.createElement('path', { d: 'M12,12c2.2,0,4-1.8,4-4c0-2.2-1.8-4-4-4C9.8,4,8,5.8,8,8C8,10.2,9.8,12,12,12z M12,14c-2.7,0-8,1.3-8,4v2h16v-2C20,15.3,14.7,14,12,14z' })
	          )
	        )
	      ),
	      React.createElement(
	        'symbol',
	        { id: 'list-minus-circle', viewBox: '0 0 24 24' },
	        React.createElement(
	          'g',
	          { id: 'unknown-4' },
	          React.createElement('path', { d: 'M12,2C6.5,2,2,6.5,2,12s4.5,10,10,10c5.5,0,10-4.5,10-10C22,6.5,17.5,2,12,2z M12,20c-4.4,0-8-3.6-8-8c0-4.4,3.6-8,8-8c4.4,0,8,3.6,8,8C20,16.4,16.4,20,12,20z M8,13h8v-2H8V13z' })
	        )
	      ),
	      React.createElement(
	        'symbol',
	        { id: 'note-message', viewBox: '0 0 16 16' },
	        React.createElement(
	          'g',
	          { className: 'transform-group' },
	          React.createElement(
	            'g',
	            { transform: 'scale(0.015625, 0.015625)' },
	            React.createElement('path', { d: 'M511.736499 64.4775c-246.457158 0-447.121364 200.541409-447.121364 447.121364 0 246.580978 200.63146 447.088618 447.121364 447.088618 246.553349 0 447.121364-200.506617 447.121364-447.088618C958.858886 265.018909 758.316453 64.4775 511.736499 64.4775L511.736499 64.4775zM511.736499 902.715703c-215.72625 0-391.178237-175.48064-391.178237-391.149585 0-215.790718 175.450964-391.208936 391.178237-391.208936 215.72625 0 391.214053 175.417195 391.214053 391.208936C902.977157 727.233016 727.463772 902.715703 511.736499 902.715703L511.736499 902.715703zM552.385291 451.746708l-81.297584 0c-11.235902 0-20.319791 9.106402-20.319791 20.319791l0 43.073005 0 14.3488 0 189.726086c0 11.213389 9.091052 20.319791 20.320814 20.319791l81.297584 0c11.234879 0 20.319791-9.106402 20.319791-20.319791L572.706105 529.488303l0-14.3488 0-43.073005C572.706105 460.852086 563.615053 451.746708 552.385291 451.746708zM447.352119 348.014158c0 35.558867 28.826536 64.385403 64.384379 64.385403 35.55989 0 64.386426-28.826536 64.386426-64.385403s-28.826536-64.385403-64.386426-64.385403C476.177632 283.628756 447.352119 312.455291 447.352119 348.014158L447.352119 348.014158z' })
	          )
	        )
	      ),
	      React.createElement(
	        'symbol',
	        { id: 'note-warning', viewBox: '0 0 16 16' },
	        React.createElement(
	          'g',
	          { className: 'transform-group' },
	          React.createElement(
	            'g',
	            { transform: 'scale(0.015625, 0.015625)' },
	            React.createElement('path', { d: 'M512 764.224c-25.408 0-46.016-20.544-46.016-45.952 0-25.408 20.608-46.016 46.016-46.016s46.016 20.544 46.016 46.016C558.016 743.68 537.408 764.224 512 764.224L512 764.224 512 764.224zM512 764.224M512 611.648c-21.248 0-38.528-17.28-38.528-38.528L473.472 284.992c0-21.248 17.28-38.528 38.528-38.528s38.528 17.28 38.528 38.528l0 288.128C550.528 594.368 533.248 611.648 512 611.648L512 611.648zM512 611.648M512 64C264.576 64 64 264.576 64 512s200.576 448 448 448 448-200.576 448-448S759.424 64 512 64L512 64zM512 900.224c-214.08 0-388.288-174.144-388.288-388.224S297.92 123.776 512 123.776 900.288 297.856 900.288 512 726.08 900.224 512 900.224L512 900.224zM512 900.224' })
	          )
	        )
	      ),
	      React.createElement(
	        'symbol',
	        { id: 'toast-error', viewBox: '0 0 24 24' },
	        React.createElement(
	          'g',
	          { id: 'clear' },
	          React.createElement('polygon', { points: '19,6.4 17.6,5 12,10.6 6.4,5 5,6.4 10.6,12 5,17.6 6.4,19 12,13.4 17.6,19 19,17.6 13.4,12 ' })
	        )
	      ),
	      React.createElement(
	        'symbol',
	        { id: 'toast-fail', viewBox: '0 0 108.364 108.364' },
	        React.createElement(
	          'g',
	          null,
	          React.createElement(
	            'g',
	            null,
	            React.createElement('path', { d: 'M54.182,0C24.258,0,0,24.258,0,54.182c0,29.924,24.258,54.183,54.182,54.183c29.923,0,54.182-24.259,54.182-54.183 C108.364,24.258,84.105,0,54.182,0z M68.713,33.622c3.424,0,6.201,2.777,6.201,6.201c0,3.426-2.777,6.203-6.201,6.203 c-3.423,0-6.203-2.777-6.203-6.203C62.51,36.399,65.29,33.622,68.713,33.622z M40.594,33.622c3.423,0,6.2,2.777,6.2,6.201 c0,3.426-2.777,6.203-6.2,6.203c-3.423,0-6.201-2.777-6.201-6.203C34.393,36.399,37.17,33.622,40.594,33.622z M76.607,79.098 c-1.521,0.66-3.286-0.041-3.944-1.562c-2.894-6.689-9.731-11.012-17.421-11.012c-7.868,0-14.747,4.32-17.523,11.005 c-0.479,1.153-1.596,1.85-2.771,1.85c-0.384,0-0.773-0.073-1.15-0.229c-1.53-0.637-2.255-2.393-1.62-3.922 c3.71-8.932,12.764-14.703,23.064-14.703c10.084,0,19.084,5.742,22.928,14.63C78.828,76.674,78.128,78.439,76.607,79.098z' })
	          )
	        ),
	        React.createElement('g', null),
	        React.createElement('g', null),
	        React.createElement('g', null),
	        React.createElement('g', null),
	        React.createElement('g', null),
	        React.createElement('g', null),
	        React.createElement('g', null),
	        React.createElement('g', null),
	        React.createElement('g', null),
	        React.createElement('g', null),
	        React.createElement('g', null),
	        React.createElement('g', null),
	        React.createElement('g', null),
	        React.createElement('g', null),
	        React.createElement('g', null)
	      ),
	      React.createElement(
	        'symbol',
	        { id: 'toast-loading', viewBox: '0 0 399.389 399.389' },
	        React.createElement(
	          'g',
	          null,
	          React.createElement('path', { d: 'M340.896,58.489C303.18,20.773,253.031,0.001,199.693,0.001c-53.34,0-103.487,20.771-141.204,58.488 C20.772,96.207,0,146.355,0,199.694c0,53.34,20.772,103.489,58.49,141.206c37.717,37.717,87.864,58.488,141.204,58.488 c53.339,0,103.486-20.771,141.205-58.488c37.717-37.717,58.49-87.865,58.49-141.206C399.387,146.355,378.613,96.207,340.896,58.489 z M77.457,199.694c0-67.401,54.835-122.236,122.236-122.236S321.93,132.293,321.93,199.694s-54.836,122.237-122.237,122.237 S77.457,267.096,77.457,199.694z M328.061,328.063c-34.289,34.287-79.877,53.17-128.368,53.17v-41.147 c77.413,0,140.389-62.979,140.389-140.391c0-77.412-62.979-140.391-140.389-140.391c-4.593,0-9.134,0.229-13.615,0.662V18.655 c4.508-0.332,9.049-0.5,13.615-0.5c48.491,0,94.079,18.883,128.368,53.171c34.289,34.289,53.172,79.878,53.172,128.368 C381.232,248.187,362.35,293.776,328.061,328.063z' })
	        ),
	        React.createElement('g', null),
	        React.createElement('g', null),
	        React.createElement('g', null),
	        React.createElement('g', null),
	        React.createElement('g', null),
	        React.createElement('g', null),
	        React.createElement('g', null),
	        React.createElement('g', null),
	        React.createElement('g', null),
	        React.createElement('g', null),
	        React.createElement('g', null),
	        React.createElement('g', null),
	        React.createElement('g', null),
	        React.createElement('g', null),
	        React.createElement('g', null)
	      ),
	      React.createElement(
	        'symbol',
	        { id: 'toast-success', viewBox: '0 0 24 24' },
	        React.createElement(
	          'g',
	          { id: 'check' },
	          React.createElement('polygon', { points: '9,16.2 4.8,12 3.4,13.4 9,19 21,7 19.6,5.6 ' })
	        )
	      ),
	      React.Children.map(children, function (c) {
	        return c;
	      })
	    );
	  }
	});

/***/ },
/* 2 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_2__;

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	var forEach  = __webpack_require__(4);
	var ATTR_KEY = 'data-svgreactloader';
	
	var MODULE = {
	    /**
	     * @param {HTMLElement}
	     */
	    applyAttributes: function (el) {
	        var data = MODULE.hasXmlAttributes(el);
	        if (data) {
	            forEach(JSON.parse(data), function (args) {
	                var method = 'setAttribute' + (args.length === 3 ? 'NS' : '');
	                el[method].apply(el, args);
	            });
	        }
	    },
	    /**
	     * @param {HTMLElement}
	     */
	    hasXmlAttributes: function (el) {
	        return el && el.getAttribute(ATTR_KEY);
	    },
	    /**
	     * @param {React.Component}
	     */
	    applyXmlAttributes: function (component) {
	        var domEl = MODULE.reactDOM.findDOMNode(component);
	        var fn = MODULE.applyAttributes;
	
	        if (domEl) {
	            fn(domEl);
	            forEach(domEl.querySelectorAll('[' + ATTR_KEY + ']'), fn);
	        }
	    }
	};
	
	module.exports = function helpers (reactDOM) {
	    if (!MODULE.reactDOM) {
	        MODULE.reactDOM = reactDOM;
	    }
	    return MODULE;
	};


/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	var arrayEach = __webpack_require__(5),
	    baseEach = __webpack_require__(6),
	    baseIteratee = __webpack_require__(30),
	    isArray = __webpack_require__(25);
	
	/**
	 * Iterates over elements of `collection` and invokes `iteratee` for each element.
	 * The iteratee is invoked with three arguments: (value, index|key, collection).
	 * Iteratee functions may exit iteration early by explicitly returning `false`.
	 *
	 * **Note:** As with other "Collections" methods, objects with a "length"
	 * property are iterated like arrays. To avoid this behavior use `_.forIn`
	 * or `_.forOwn` for object iteration.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @alias each
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	 * @returns {Array|Object} Returns `collection`.
	 * @see _.forEachRight
	 * @example
	 *
	 * _([1, 2]).forEach(function(value) {
	 *   console.log(value);
	 * });
	 * // => Logs `1` then `2`.
	 *
	 * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
	 *   console.log(key);
	 * });
	 * // => Logs 'a' then 'b' (iteration order is not guaranteed).
	 */
	function forEach(collection, iteratee) {
	  var func = isArray(collection) ? arrayEach : baseEach;
	  return func(collection, baseIteratee(iteratee, 3));
	}
	
	module.exports = forEach;


/***/ },
/* 5 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `_.forEach` for arrays without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns `array`.
	 */
	function arrayEach(array, iteratee) {
	  var index = -1,
	      length = array ? array.length : 0;
	
	  while (++index < length) {
	    if (iteratee(array[index], index, array) === false) {
	      break;
	    }
	  }
	  return array;
	}
	
	module.exports = arrayEach;


/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	var baseForOwn = __webpack_require__(7),
	    createBaseEach = __webpack_require__(29);
	
	/**
	 * The base implementation of `_.forEach` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array|Object} Returns `collection`.
	 */
	var baseEach = createBaseEach(baseForOwn);
	
	module.exports = baseEach;


/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	var baseFor = __webpack_require__(8),
	    keys = __webpack_require__(10);
	
	/**
	 * The base implementation of `_.forOwn` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Object} object The object to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Object} Returns `object`.
	 */
	function baseForOwn(object, iteratee) {
	  return object && baseFor(object, iteratee, keys);
	}
	
	module.exports = baseForOwn;


/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	var createBaseFor = __webpack_require__(9);
	
	/**
	 * The base implementation of `baseForOwn` which iterates over `object`
	 * properties returned by `keysFunc` and invokes `iteratee` for each property.
	 * Iteratee functions may exit iteration early by explicitly returning `false`.
	 *
	 * @private
	 * @param {Object} object The object to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @param {Function} keysFunc The function to get the keys of `object`.
	 * @returns {Object} Returns `object`.
	 */
	var baseFor = createBaseFor();
	
	module.exports = baseFor;


/***/ },
/* 9 */
/***/ function(module, exports) {

	/**
	 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
	 *
	 * @private
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Function} Returns the new base function.
	 */
	function createBaseFor(fromRight) {
	  return function(object, iteratee, keysFunc) {
	    var index = -1,
	        iterable = Object(object),
	        props = keysFunc(object),
	        length = props.length;
	
	    while (length--) {
	      var key = props[fromRight ? length : ++index];
	      if (iteratee(iterable[key], key, iterable) === false) {
	        break;
	      }
	    }
	    return object;
	  };
	}
	
	module.exports = createBaseFor;


/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	var baseHas = __webpack_require__(11),
	    baseKeys = __webpack_require__(13),
	    indexKeys = __webpack_require__(14),
	    isArrayLike = __webpack_require__(18),
	    isIndex = __webpack_require__(27),
	    isPrototype = __webpack_require__(28);
	
	/**
	 * Creates an array of the own enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects. See the
	 * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)
	 * for more details.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keys(new Foo);
	 * // => ['a', 'b'] (iteration order is not guaranteed)
	 *
	 * _.keys('hi');
	 * // => ['0', '1']
	 */
	function keys(object) {
	  var isProto = isPrototype(object);
	  if (!(isProto || isArrayLike(object))) {
	    return baseKeys(object);
	  }
	  var indexes = indexKeys(object),
	      skipIndexes = !!indexes,
	      result = indexes || [],
	      length = result.length;
	
	  for (var key in object) {
	    if (baseHas(object, key) &&
	        !(skipIndexes && (key == 'length' || isIndex(key, length))) &&
	        !(isProto && key == 'constructor')) {
	      result.push(key);
	    }
	  }
	  return result;
	}
	
	module.exports = keys;


/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	var getPrototype = __webpack_require__(12);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * The base implementation of `_.has` without support for deep paths.
	 *
	 * @private
	 * @param {Object} [object] The object to query.
	 * @param {Array|string} key The key to check.
	 * @returns {boolean} Returns `true` if `key` exists, else `false`.
	 */
	function baseHas(object, key) {
	  // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,
	  // that are composed entirely of index properties, return `false` for
	  // `hasOwnProperty` checks of them.
	  return object != null &&
	    (hasOwnProperty.call(object, key) ||
	      (typeof object == 'object' && key in object && getPrototype(object) === null));
	}
	
	module.exports = baseHas;


/***/ },
/* 12 */
/***/ function(module, exports) {

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeGetPrototype = Object.getPrototypeOf;
	
	/**
	 * Gets the `[[Prototype]]` of `value`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {null|Object} Returns the `[[Prototype]]`.
	 */
	function getPrototype(value) {
	  return nativeGetPrototype(Object(value));
	}
	
	module.exports = getPrototype;


/***/ },
/* 13 */
/***/ function(module, exports) {

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeKeys = Object.keys;
	
	/**
	 * The base implementation of `_.keys` which doesn't skip the constructor
	 * property of prototypes or treat sparse arrays as dense.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function baseKeys(object) {
	  return nativeKeys(Object(object));
	}
	
	module.exports = baseKeys;


/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	var baseTimes = __webpack_require__(15),
	    isArguments = __webpack_require__(16),
	    isArray = __webpack_require__(25),
	    isLength = __webpack_require__(23),
	    isString = __webpack_require__(26);
	
	/**
	 * Creates an array of index keys for `object` values of arrays,
	 * `arguments` objects, and strings, otherwise `null` is returned.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array|null} Returns index keys, else `null`.
	 */
	function indexKeys(object) {
	  var length = object ? object.length : undefined;
	  if (isLength(length) &&
	      (isArray(object) || isString(object) || isArguments(object))) {
	    return baseTimes(length, String);
	  }
	  return null;
	}
	
	module.exports = indexKeys;


/***/ },
/* 15 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.times` without support for iteratee shorthands
	 * or max array length checks.
	 *
	 * @private
	 * @param {number} n The number of times to invoke `iteratee`.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the array of results.
	 */
	function baseTimes(n, iteratee) {
	  var index = -1,
	      result = Array(n);
	
	  while (++index < n) {
	    result[index] = iteratee(index);
	  }
	  return result;
	}
	
	module.exports = baseTimes;


/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	var isArrayLikeObject = __webpack_require__(17);
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;
	
	/** Built-in value references. */
	var propertyIsEnumerable = objectProto.propertyIsEnumerable;
	
	/**
	 * Checks if `value` is likely an `arguments` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is correctly classified,
	 *  else `false`.
	 * @example
	 *
	 * _.isArguments(function() { return arguments; }());
	 * // => true
	 *
	 * _.isArguments([1, 2, 3]);
	 * // => false
	 */
	function isArguments(value) {
	  // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.
	  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&
	    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);
	}
	
	module.exports = isArguments;


/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	var isArrayLike = __webpack_require__(18),
	    isObjectLike = __webpack_require__(24);
	
	/**
	 * This method is like `_.isArrayLike` except that it also checks if `value`
	 * is an object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array-like object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArrayLikeObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLikeObject(document.body.children);
	 * // => true
	 *
	 * _.isArrayLikeObject('abc');
	 * // => false
	 *
	 * _.isArrayLikeObject(_.noop);
	 * // => false
	 */
	function isArrayLikeObject(value) {
	  return isObjectLike(value) && isArrayLike(value);
	}
	
	module.exports = isArrayLikeObject;


/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	var getLength = __webpack_require__(19),
	    isFunction = __webpack_require__(21),
	    isLength = __webpack_require__(23);
	
	/**
	 * Checks if `value` is array-like. A value is considered array-like if it's
	 * not a function and has a `value.length` that's an integer greater than or
	 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	 * @example
	 *
	 * _.isArrayLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLike(document.body.children);
	 * // => true
	 *
	 * _.isArrayLike('abc');
	 * // => true
	 *
	 * _.isArrayLike(_.noop);
	 * // => false
	 */
	function isArrayLike(value) {
	  return value != null && isLength(getLength(value)) && !isFunction(value);
	}
	
	module.exports = isArrayLike;


/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	var baseProperty = __webpack_require__(20);
	
	/**
	 * Gets the "length" property value of `object`.
	 *
	 * **Note:** This function is used to avoid a
	 * [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792) that affects
	 * Safari on at least iOS 8.1-8.3 ARM64.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {*} Returns the "length" value.
	 */
	var getLength = baseProperty('length');
	
	module.exports = getLength;


/***/ },
/* 20 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.property` without support for deep paths.
	 *
	 * @private
	 * @param {string} key The key of the property to get.
	 * @returns {Function} Returns the new accessor function.
	 */
	function baseProperty(key) {
	  return function(object) {
	    return object == null ? undefined : object[key];
	  };
	}
	
	module.exports = baseProperty;


/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(22);
	
	/** `Object#toString` result references. */
	var funcTag = '[object Function]',
	    genTag = '[object GeneratorFunction]';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;
	
	/**
	 * Checks if `value` is classified as a `Function` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is correctly classified,
	 *  else `false`.
	 * @example
	 *
	 * _.isFunction(_);
	 * // => true
	 *
	 * _.isFunction(/abc/);
	 * // => false
	 */
	function isFunction(value) {
	  // The use of `Object#toString` avoids issues with the `typeof` operator
	  // in Safari 8 which returns 'object' for typed array and weak map constructors,
	  // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.
	  var tag = isObject(value) ? objectToString.call(value) : '';
	  return tag == funcTag || tag == genTag;
	}
	
	module.exports = isFunction;


/***/ },
/* 22 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is the
	 * [language type](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)
	 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(_.noop);
	 * // => true
	 *
	 * _.isObject(null);
	 * // => false
	 */
	function isObject(value) {
	  var type = typeof value;
	  return !!value && (type == 'object' || type == 'function');
	}
	
	module.exports = isObject;


/***/ },
/* 23 */
/***/ function(module, exports) {

	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;
	
	/**
	 * Checks if `value` is a valid array-like length.
	 *
	 * **Note:** This function is loosely based on
	 * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a valid length,
	 *  else `false`.
	 * @example
	 *
	 * _.isLength(3);
	 * // => true
	 *
	 * _.isLength(Number.MIN_VALUE);
	 * // => false
	 *
	 * _.isLength(Infinity);
	 * // => false
	 *
	 * _.isLength('3');
	 * // => false
	 */
	function isLength(value) {
	  return typeof value == 'number' &&
	    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	}
	
	module.exports = isLength;


/***/ },
/* 24 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return !!value && typeof value == 'object';
	}
	
	module.exports = isObjectLike;


/***/ },
/* 25 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is classified as an `Array` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @type {Function}
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is correctly classified,
	 *  else `false`.
	 * @example
	 *
	 * _.isArray([1, 2, 3]);
	 * // => true
	 *
	 * _.isArray(document.body.children);
	 * // => false
	 *
	 * _.isArray('abc');
	 * // => false
	 *
	 * _.isArray(_.noop);
	 * // => false
	 */
	var isArray = Array.isArray;
	
	module.exports = isArray;


/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	var isArray = __webpack_require__(25),
	    isObjectLike = __webpack_require__(24);
	
	/** `Object#toString` result references. */
	var stringTag = '[object String]';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;
	
	/**
	 * Checks if `value` is classified as a `String` primitive or object.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is correctly classified,
	 *  else `false`.
	 * @example
	 *
	 * _.isString('abc');
	 * // => true
	 *
	 * _.isString(1);
	 * // => false
	 */
	function isString(value) {
	  return typeof value == 'string' ||
	    (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);
	}
	
	module.exports = isString;


/***/ },
/* 27 */
/***/ function(module, exports) {

	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;
	
	/** Used to detect unsigned integer values. */
	var reIsUint = /^(?:0|[1-9]\d*)$/;
	
	/**
	 * Checks if `value` is a valid array-like index.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	 */
	function isIndex(value, length) {
	  length = length == null ? MAX_SAFE_INTEGER : length;
	  return !!length &&
	    (typeof value == 'number' || reIsUint.test(value)) &&
	    (value > -1 && value % 1 == 0 && value < length);
	}
	
	module.exports = isIndex;


/***/ },
/* 28 */
/***/ function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Checks if `value` is likely a prototype object.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
	 */
	function isPrototype(value) {
	  var Ctor = value && value.constructor,
	      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;
	
	  return value === proto;
	}
	
	module.exports = isPrototype;


/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	var isArrayLike = __webpack_require__(18);
	
	/**
	 * Creates a `baseEach` or `baseEachRight` function.
	 *
	 * @private
	 * @param {Function} eachFunc The function to iterate over a collection.
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Function} Returns the new base function.
	 */
	function createBaseEach(eachFunc, fromRight) {
	  return function(collection, iteratee) {
	    if (collection == null) {
	      return collection;
	    }
	    if (!isArrayLike(collection)) {
	      return eachFunc(collection, iteratee);
	    }
	    var length = collection.length,
	        index = fromRight ? length : -1,
	        iterable = Object(collection);
	
	    while ((fromRight ? index-- : ++index < length)) {
	      if (iteratee(iterable[index], index, iterable) === false) {
	        break;
	      }
	    }
	    return collection;
	  };
	}
	
	module.exports = createBaseEach;


/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	var baseMatches = __webpack_require__(31),
	    baseMatchesProperty = __webpack_require__(94),
	    identity = __webpack_require__(108),
	    isArray = __webpack_require__(25),
	    property = __webpack_require__(109);
	
	/**
	 * The base implementation of `_.iteratee`.
	 *
	 * @private
	 * @param {*} [value=_.identity] The value to convert to an iteratee.
	 * @returns {Function} Returns the iteratee.
	 */
	function baseIteratee(value) {
	  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
	  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
	  if (typeof value == 'function') {
	    return value;
	  }
	  if (value == null) {
	    return identity;
	  }
	  if (typeof value == 'object') {
	    return isArray(value)
	      ? baseMatchesProperty(value[0], value[1])
	      : baseMatches(value);
	  }
	  return property(value);
	}
	
	module.exports = baseIteratee;


/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsMatch = __webpack_require__(32),
	    getMatchData = __webpack_require__(91),
	    matchesStrictComparable = __webpack_require__(93);
	
	/**
	 * The base implementation of `_.matches` which doesn't clone `source`.
	 *
	 * @private
	 * @param {Object} source The object of property values to match.
	 * @returns {Function} Returns the new spec function.
	 */
	function baseMatches(source) {
	  var matchData = getMatchData(source);
	  if (matchData.length == 1 && matchData[0][2]) {
	    return matchesStrictComparable(matchData[0][0], matchData[0][1]);
	  }
	  return function(object) {
	    return object === source || baseIsMatch(object, source, matchData);
	  };
	}
	
	module.exports = baseMatches;


/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	var Stack = __webpack_require__(33),
	    baseIsEqual = __webpack_require__(72);
	
	/** Used to compose bitmasks for comparison styles. */
	var UNORDERED_COMPARE_FLAG = 1,
	    PARTIAL_COMPARE_FLAG = 2;
	
	/**
	 * The base implementation of `_.isMatch` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Object} object The object to inspect.
	 * @param {Object} source The object of property values to match.
	 * @param {Array} matchData The property names, values, and compare flags to match.
	 * @param {Function} [customizer] The function to customize comparisons.
	 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	 */
	function baseIsMatch(object, source, matchData, customizer) {
	  var index = matchData.length,
	      length = index,
	      noCustomizer = !customizer;
	
	  if (object == null) {
	    return !length;
	  }
	  object = Object(object);
	  while (index--) {
	    var data = matchData[index];
	    if ((noCustomizer && data[2])
	          ? data[1] !== object[data[0]]
	          : !(data[0] in object)
	        ) {
	      return false;
	    }
	  }
	  while (++index < length) {
	    data = matchData[index];
	    var key = data[0],
	        objValue = object[key],
	        srcValue = data[1];
	
	    if (noCustomizer && data[2]) {
	      if (objValue === undefined && !(key in object)) {
	        return false;
	      }
	    } else {
	      var stack = new Stack;
	      if (customizer) {
	        var result = customizer(objValue, srcValue, key, object, source, stack);
	      }
	      if (!(result === undefined
	            ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)
	            : result
	          )) {
	        return false;
	      }
	    }
	  }
	  return true;
	}
	
	module.exports = baseIsMatch;


/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	var ListCache = __webpack_require__(34),
	    stackClear = __webpack_require__(42),
	    stackDelete = __webpack_require__(43),
	    stackGet = __webpack_require__(44),
	    stackHas = __webpack_require__(45),
	    stackSet = __webpack_require__(46);
	
	/**
	 * Creates a stack cache object to store key-value pairs.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function Stack(entries) {
	  this.__data__ = new ListCache(entries);
	}
	
	// Add methods to `Stack`.
	Stack.prototype.clear = stackClear;
	Stack.prototype['delete'] = stackDelete;
	Stack.prototype.get = stackGet;
	Stack.prototype.has = stackHas;
	Stack.prototype.set = stackSet;
	
	module.exports = Stack;


/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	var listCacheClear = __webpack_require__(35),
	    listCacheDelete = __webpack_require__(36),
	    listCacheGet = __webpack_require__(39),
	    listCacheHas = __webpack_require__(40),
	    listCacheSet = __webpack_require__(41);
	
	/**
	 * Creates an list cache object.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function ListCache(entries) {
	  var index = -1,
	      length = entries ? entries.length : 0;
	
	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}
	
	// Add methods to `ListCache`.
	ListCache.prototype.clear = listCacheClear;
	ListCache.prototype['delete'] = listCacheDelete;
	ListCache.prototype.get = listCacheGet;
	ListCache.prototype.has = listCacheHas;
	ListCache.prototype.set = listCacheSet;
	
	module.exports = ListCache;


/***/ },
/* 35 */
/***/ function(module, exports) {

	/**
	 * Removes all key-value entries from the list cache.
	 *
	 * @private
	 * @name clear
	 * @memberOf ListCache
	 */
	function listCacheClear() {
	  this.__data__ = [];
	}
	
	module.exports = listCacheClear;


/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(37);
	
	/** Used for built-in method references. */
	var arrayProto = Array.prototype;
	
	/** Built-in value references. */
	var splice = arrayProto.splice;
	
	/**
	 * Removes `key` and its value from the list cache.
	 *
	 * @private
	 * @name delete
	 * @memberOf ListCache
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function listCacheDelete(key) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);
	
	  if (index < 0) {
	    return false;
	  }
	  var lastIndex = data.length - 1;
	  if (index == lastIndex) {
	    data.pop();
	  } else {
	    splice.call(data, index, 1);
	  }
	  return true;
	}
	
	module.exports = listCacheDelete;


/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	var eq = __webpack_require__(38);
	
	/**
	 * Gets the index at which the `key` is found in `array` of key-value pairs.
	 *
	 * @private
	 * @param {Array} array The array to search.
	 * @param {*} key The key to search for.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function assocIndexOf(array, key) {
	  var length = array.length;
	  while (length--) {
	    if (eq(array[length][0], key)) {
	      return length;
	    }
	  }
	  return -1;
	}
	
	module.exports = assocIndexOf;


/***/ },
/* 38 */
/***/ function(module, exports) {

	/**
	 * Performs a
	 * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	 * comparison between two values to determine if they are equivalent.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 * @example
	 *
	 * var object = { 'user': 'fred' };
	 * var other = { 'user': 'fred' };
	 *
	 * _.eq(object, object);
	 * // => true
	 *
	 * _.eq(object, other);
	 * // => false
	 *
	 * _.eq('a', 'a');
	 * // => true
	 *
	 * _.eq('a', Object('a'));
	 * // => false
	 *
	 * _.eq(NaN, NaN);
	 * // => true
	 */
	function eq(value, other) {
	  return value === other || (value !== value && other !== other);
	}
	
	module.exports = eq;


/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(37);
	
	/**
	 * Gets the list cache value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf ListCache
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function listCacheGet(key) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);
	
	  return index < 0 ? undefined : data[index][1];
	}
	
	module.exports = listCacheGet;


/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(37);
	
	/**
	 * Checks if a list cache value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf ListCache
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function listCacheHas(key) {
	  return assocIndexOf(this.__data__, key) > -1;
	}
	
	module.exports = listCacheHas;


/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(37);
	
	/**
	 * Sets the list cache `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf ListCache
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the list cache instance.
	 */
	function listCacheSet(key, value) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);
	
	  if (index < 0) {
	    data.push([key, value]);
	  } else {
	    data[index][1] = value;
	  }
	  return this;
	}
	
	module.exports = listCacheSet;


/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	var ListCache = __webpack_require__(34);
	
	/**
	 * Removes all key-value entries from the stack.
	 *
	 * @private
	 * @name clear
	 * @memberOf Stack
	 */
	function stackClear() {
	  this.__data__ = new ListCache;
	}
	
	module.exports = stackClear;


/***/ },
/* 43 */
/***/ function(module, exports) {

	/**
	 * Removes `key` and its value from the stack.
	 *
	 * @private
	 * @name delete
	 * @memberOf Stack
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function stackDelete(key) {
	  return this.__data__['delete'](key);
	}
	
	module.exports = stackDelete;


/***/ },
/* 44 */
/***/ function(module, exports) {

	/**
	 * Gets the stack value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf Stack
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function stackGet(key) {
	  return this.__data__.get(key);
	}
	
	module.exports = stackGet;


/***/ },
/* 45 */
/***/ function(module, exports) {

	/**
	 * Checks if a stack value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf Stack
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function stackHas(key) {
	  return this.__data__.has(key);
	}
	
	module.exports = stackHas;


/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	var ListCache = __webpack_require__(34),
	    MapCache = __webpack_require__(47);
	
	/** Used as the size to enable large array optimizations. */
	var LARGE_ARRAY_SIZE = 200;
	
	/**
	 * Sets the stack `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf Stack
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the stack cache instance.
	 */
	function stackSet(key, value) {
	  var cache = this.__data__;
	  if (cache instanceof ListCache && cache.__data__.length == LARGE_ARRAY_SIZE) {
	    cache = this.__data__ = new MapCache(cache.__data__);
	  }
	  cache.set(key, value);
	  return this;
	}
	
	module.exports = stackSet;


/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	var mapCacheClear = __webpack_require__(48),
	    mapCacheDelete = __webpack_require__(66),
	    mapCacheGet = __webpack_require__(69),
	    mapCacheHas = __webpack_require__(70),
	    mapCacheSet = __webpack_require__(71);
	
	/**
	 * Creates a map cache object to store key-value pairs.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function MapCache(entries) {
	  var index = -1,
	      length = entries ? entries.length : 0;
	
	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}
	
	// Add methods to `MapCache`.
	MapCache.prototype.clear = mapCacheClear;
	MapCache.prototype['delete'] = mapCacheDelete;
	MapCache.prototype.get = mapCacheGet;
	MapCache.prototype.has = mapCacheHas;
	MapCache.prototype.set = mapCacheSet;
	
	module.exports = MapCache;


/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	var Hash = __webpack_require__(49),
	    ListCache = __webpack_require__(34),
	    Map = __webpack_require__(65);
	
	/**
	 * Removes all key-value entries from the map.
	 *
	 * @private
	 * @name clear
	 * @memberOf MapCache
	 */
	function mapCacheClear() {
	  this.__data__ = {
	    'hash': new Hash,
	    'map': new (Map || ListCache),
	    'string': new Hash
	  };
	}
	
	module.exports = mapCacheClear;


/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	var hashClear = __webpack_require__(50),
	    hashDelete = __webpack_require__(61),
	    hashGet = __webpack_require__(62),
	    hashHas = __webpack_require__(63),
	    hashSet = __webpack_require__(64);
	
	/**
	 * Creates a hash object.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function Hash(entries) {
	  var index = -1,
	      length = entries ? entries.length : 0;
	
	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}
	
	// Add methods to `Hash`.
	Hash.prototype.clear = hashClear;
	Hash.prototype['delete'] = hashDelete;
	Hash.prototype.get = hashGet;
	Hash.prototype.has = hashHas;
	Hash.prototype.set = hashSet;
	
	module.exports = Hash;


/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(51);
	
	/**
	 * Removes all key-value entries from the hash.
	 *
	 * @private
	 * @name clear
	 * @memberOf Hash
	 */
	function hashClear() {
	  this.__data__ = nativeCreate ? nativeCreate(null) : {};
	}
	
	module.exports = hashClear;


/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(52);
	
	/* Built-in method references that are verified to be native. */
	var nativeCreate = getNative(Object, 'create');
	
	module.exports = nativeCreate;


/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsNative = __webpack_require__(53),
	    getValue = __webpack_require__(60);
	
	/**
	 * Gets the native function at `key` of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {string} key The key of the method to get.
	 * @returns {*} Returns the function if it's native, else `undefined`.
	 */
	function getNative(object, key) {
	  var value = getValue(object, key);
	  return baseIsNative(value) ? value : undefined;
	}
	
	module.exports = getNative;


/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	var isFunction = __webpack_require__(21),
	    isHostObject = __webpack_require__(54),
	    isMasked = __webpack_require__(55),
	    isObject = __webpack_require__(22),
	    toSource = __webpack_require__(59);
	
	/**
	 * Used to match `RegExp`
	 * [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns).
	 */
	var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
	
	/** Used to detect host constructors (Safari). */
	var reIsHostCtor = /^\[object .+?Constructor\]$/;
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to resolve the decompiled source of functions. */
	var funcToString = Function.prototype.toString;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/** Used to detect if a method is native. */
	var reIsNative = RegExp('^' +
	  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
	  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
	);
	
	/**
	 * The base implementation of `_.isNative` without bad shim checks.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a native function,
	 *  else `false`.
	 */
	function baseIsNative(value) {
	  if (!isObject(value) || isMasked(value)) {
	    return false;
	  }
	  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;
	  return pattern.test(toSource(value));
	}
	
	module.exports = baseIsNative;


/***/ },
/* 54 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is a host object in IE < 9.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
	 */
	function isHostObject(value) {
	  // Many host objects are `Object` objects that can coerce to strings
	  // despite having improperly defined `toString` methods.
	  var result = false;
	  if (value != null && typeof value.toString != 'function') {
	    try {
	      result = !!(value + '');
	    } catch (e) {}
	  }
	  return result;
	}
	
	module.exports = isHostObject;


/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	var coreJsData = __webpack_require__(56);
	
	/** Used to detect methods masquerading as native. */
	var maskSrcKey = (function() {
	  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
	  return uid ? ('Symbol(src)_1.' + uid) : '';
	}());
	
	/**
	 * Checks if `func` has its source masked.
	 *
	 * @private
	 * @param {Function} func The function to check.
	 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
	 */
	function isMasked(func) {
	  return !!maskSrcKey && (maskSrcKey in func);
	}
	
	module.exports = isMasked;


/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	var root = __webpack_require__(57);
	
	/** Used to detect overreaching core-js shims. */
	var coreJsData = root['__core-js_shared__'];
	
	module.exports = coreJsData;


/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {var checkGlobal = __webpack_require__(58);
	
	/** Detect free variable `global` from Node.js. */
	var freeGlobal = checkGlobal(typeof global == 'object' && global);
	
	/** Detect free variable `self`. */
	var freeSelf = checkGlobal(typeof self == 'object' && self);
	
	/** Detect `this` as the global object. */
	var thisGlobal = checkGlobal(typeof this == 'object' && this);
	
	/** Used as a reference to the global object. */
	var root = freeGlobal || freeSelf || thisGlobal || Function('return this')();
	
	module.exports = root;
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 58 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is a global object.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {null|Object} Returns `value` if it's a global object, else `null`.
	 */
	function checkGlobal(value) {
	  return (value && value.Object === Object) ? value : null;
	}
	
	module.exports = checkGlobal;


/***/ },
/* 59 */
/***/ function(module, exports) {

	/** Used to resolve the decompiled source of functions. */
	var funcToString = Function.prototype.toString;
	
	/**
	 * Converts `func` to its source code.
	 *
	 * @private
	 * @param {Function} func The function to process.
	 * @returns {string} Returns the source code.
	 */
	function toSource(func) {
	  if (func != null) {
	    try {
	      return funcToString.call(func);
	    } catch (e) {}
	    try {
	      return (func + '');
	    } catch (e) {}
	  }
	  return '';
	}
	
	module.exports = toSource;


/***/ },
/* 60 */
/***/ function(module, exports) {

	/**
	 * Gets the value at `key` of `object`.
	 *
	 * @private
	 * @param {Object} [object] The object to query.
	 * @param {string} key The key of the property to get.
	 * @returns {*} Returns the property value.
	 */
	function getValue(object, key) {
	  return object == null ? undefined : object[key];
	}
	
	module.exports = getValue;


/***/ },
/* 61 */
/***/ function(module, exports) {

	/**
	 * Removes `key` and its value from the hash.
	 *
	 * @private
	 * @name delete
	 * @memberOf Hash
	 * @param {Object} hash The hash to modify.
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function hashDelete(key) {
	  return this.has(key) && delete this.__data__[key];
	}
	
	module.exports = hashDelete;


/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(51);
	
	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Gets the hash value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf Hash
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function hashGet(key) {
	  var data = this.__data__;
	  if (nativeCreate) {
	    var result = data[key];
	    return result === HASH_UNDEFINED ? undefined : result;
	  }
	  return hasOwnProperty.call(data, key) ? data[key] : undefined;
	}
	
	module.exports = hashGet;


/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(51);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Checks if a hash value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf Hash
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function hashHas(key) {
	  var data = this.__data__;
	  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
	}
	
	module.exports = hashHas;


/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(51);
	
	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';
	
	/**
	 * Sets the hash `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf Hash
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the hash instance.
	 */
	function hashSet(key, value) {
	  var data = this.__data__;
	  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
	  return this;
	}
	
	module.exports = hashSet;


/***/ },
/* 65 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(52),
	    root = __webpack_require__(57);
	
	/* Built-in method references that are verified to be native. */
	var Map = getNative(root, 'Map');
	
	module.exports = Map;


/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(67);
	
	/**
	 * Removes `key` and its value from the map.
	 *
	 * @private
	 * @name delete
	 * @memberOf MapCache
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function mapCacheDelete(key) {
	  return getMapData(this, key)['delete'](key);
	}
	
	module.exports = mapCacheDelete;


/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	var isKeyable = __webpack_require__(68);
	
	/**
	 * Gets the data for `map`.
	 *
	 * @private
	 * @param {Object} map The map to query.
	 * @param {string} key The reference key.
	 * @returns {*} Returns the map data.
	 */
	function getMapData(map, key) {
	  var data = map.__data__;
	  return isKeyable(key)
	    ? data[typeof key == 'string' ? 'string' : 'hash']
	    : data.map;
	}
	
	module.exports = getMapData;


/***/ },
/* 68 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is suitable for use as unique object key.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
	 */
	function isKeyable(value) {
	  var type = typeof value;
	  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
	    ? (value !== '__proto__')
	    : (value === null);
	}
	
	module.exports = isKeyable;


/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(67);
	
	/**
	 * Gets the map value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf MapCache
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function mapCacheGet(key) {
	  return getMapData(this, key).get(key);
	}
	
	module.exports = mapCacheGet;


/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(67);
	
	/**
	 * Checks if a map value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf MapCache
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function mapCacheHas(key) {
	  return getMapData(this, key).has(key);
	}
	
	module.exports = mapCacheHas;


/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(67);
	
	/**
	 * Sets the map `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf MapCache
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the map cache instance.
	 */
	function mapCacheSet(key, value) {
	  getMapData(this, key).set(key, value);
	  return this;
	}
	
	module.exports = mapCacheSet;


/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsEqualDeep = __webpack_require__(73),
	    isObject = __webpack_require__(22),
	    isObjectLike = __webpack_require__(24);
	
	/**
	 * The base implementation of `_.isEqual` which supports partial comparisons
	 * and tracks traversed objects.
	 *
	 * @private
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @param {Function} [customizer] The function to customize comparisons.
	 * @param {boolean} [bitmask] The bitmask of comparison flags.
	 *  The bitmask may be composed of the following flags:
	 *     1 - Unordered comparison
	 *     2 - Partial comparison
	 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 */
	function baseIsEqual(value, other, customizer, bitmask, stack) {
	  if (value === other) {
	    return true;
	  }
	  if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {
	    return value !== value && other !== other;
	  }
	  return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);
	}
	
	module.exports = baseIsEqual;


/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	var Stack = __webpack_require__(33),
	    equalArrays = __webpack_require__(74),
	    equalByTag = __webpack_require__(79),
	    equalObjects = __webpack_require__(84),
	    getTag = __webpack_require__(85),
	    isArray = __webpack_require__(25),
	    isHostObject = __webpack_require__(54),
	    isTypedArray = __webpack_require__(90);
	
	/** Used to compose bitmasks for comparison styles. */
	var PARTIAL_COMPARE_FLAG = 2;
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    objectTag = '[object Object]';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * A specialized version of `baseIsEqual` for arrays and objects which performs
	 * deep comparisons and tracks traversed objects enabling objects with circular
	 * references to be compared.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Function} [customizer] The function to customize comparisons.
	 * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`
	 *  for more details.
	 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {
	  var objIsArr = isArray(object),
	      othIsArr = isArray(other),
	      objTag = arrayTag,
	      othTag = arrayTag;
	
	  if (!objIsArr) {
	    objTag = getTag(object);
	    objTag = objTag == argsTag ? objectTag : objTag;
	  }
	  if (!othIsArr) {
	    othTag = getTag(other);
	    othTag = othTag == argsTag ? objectTag : othTag;
	  }
	  var objIsObj = objTag == objectTag && !isHostObject(object),
	      othIsObj = othTag == objectTag && !isHostObject(other),
	      isSameTag = objTag == othTag;
	
	  if (isSameTag && !objIsObj) {
	    stack || (stack = new Stack);
	    return (objIsArr || isTypedArray(object))
	      ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)
	      : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);
	  }
	  if (!(bitmask & PARTIAL_COMPARE_FLAG)) {
	    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
	        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');
	
	    if (objIsWrapped || othIsWrapped) {
	      var objUnwrapped = objIsWrapped ? object.value() : object,
	          othUnwrapped = othIsWrapped ? other.value() : other;
	
	      stack || (stack = new Stack);
	      return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);
	    }
	  }
	  if (!isSameTag) {
	    return false;
	  }
	  stack || (stack = new Stack);
	  return equalObjects(object, other, equalFunc, customizer, bitmask, stack);
	}
	
	module.exports = baseIsEqualDeep;


/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	var SetCache = __webpack_require__(75),
	    arraySome = __webpack_require__(78);
	
	/** Used to compose bitmasks for comparison styles. */
	var UNORDERED_COMPARE_FLAG = 1,
	    PARTIAL_COMPARE_FLAG = 2;
	
	/**
	 * A specialized version of `baseIsEqualDeep` for arrays with support for
	 * partial deep comparisons.
	 *
	 * @private
	 * @param {Array} array The array to compare.
	 * @param {Array} other The other array to compare.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
	 *  for more details.
	 * @param {Object} stack Tracks traversed `array` and `other` objects.
	 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
	 */
	function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {
	  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,
	      arrLength = array.length,
	      othLength = other.length;
	
	  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
	    return false;
	  }
	  // Assume cyclic values are equal.
	  var stacked = stack.get(array);
	  if (stacked) {
	    return stacked == other;
	  }
	  var index = -1,
	      result = true,
	      seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;
	
	  stack.set(array, other);
	
	  // Ignore non-index properties.
	  while (++index < arrLength) {
	    var arrValue = array[index],
	        othValue = other[index];
	
	    if (customizer) {
	      var compared = isPartial
	        ? customizer(othValue, arrValue, index, other, array, stack)
	        : customizer(arrValue, othValue, index, array, other, stack);
	    }
	    if (compared !== undefined) {
	      if (compared) {
	        continue;
	      }
	      result = false;
	      break;
	    }
	    // Recursively compare arrays (susceptible to call stack limits).
	    if (seen) {
	      if (!arraySome(other, function(othValue, othIndex) {
	            if (!seen.has(othIndex) &&
	                (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {
	              return seen.add(othIndex);
	            }
	          })) {
	        result = false;
	        break;
	      }
	    } else if (!(
	          arrValue === othValue ||
	            equalFunc(arrValue, othValue, customizer, bitmask, stack)
	        )) {
	      result = false;
	      break;
	    }
	  }
	  stack['delete'](array);
	  return result;
	}
	
	module.exports = equalArrays;


/***/ },
/* 75 */
/***/ function(module, exports, __webpack_require__) {

	var MapCache = __webpack_require__(47),
	    setCacheAdd = __webpack_require__(76),
	    setCacheHas = __webpack_require__(77);
	
	/**
	 *
	 * Creates an array cache object to store unique values.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [values] The values to cache.
	 */
	function SetCache(values) {
	  var index = -1,
	      length = values ? values.length : 0;
	
	  this.__data__ = new MapCache;
	  while (++index < length) {
	    this.add(values[index]);
	  }
	}
	
	// Add methods to `SetCache`.
	SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
	SetCache.prototype.has = setCacheHas;
	
	module.exports = SetCache;


/***/ },
/* 76 */
/***/ function(module, exports) {

	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';
	
	/**
	 * Adds `value` to the array cache.
	 *
	 * @private
	 * @name add
	 * @memberOf SetCache
	 * @alias push
	 * @param {*} value The value to cache.
	 * @returns {Object} Returns the cache instance.
	 */
	function setCacheAdd(value) {
	  this.__data__.set(value, HASH_UNDEFINED);
	  return this;
	}
	
	module.exports = setCacheAdd;


/***/ },
/* 77 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is in the array cache.
	 *
	 * @private
	 * @name has
	 * @memberOf SetCache
	 * @param {*} value The value to search for.
	 * @returns {number} Returns `true` if `value` is found, else `false`.
	 */
	function setCacheHas(value) {
	  return this.__data__.has(value);
	}
	
	module.exports = setCacheHas;


/***/ },
/* 78 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `_.some` for arrays without support for iteratee
	 * shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {boolean} Returns `true` if any element passes the predicate check,
	 *  else `false`.
	 */
	function arraySome(array, predicate) {
	  var index = -1,
	      length = array ? array.length : 0;
	
	  while (++index < length) {
	    if (predicate(array[index], index, array)) {
	      return true;
	    }
	  }
	  return false;
	}
	
	module.exports = arraySome;


/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(80),
	    Uint8Array = __webpack_require__(81),
	    equalArrays = __webpack_require__(74),
	    mapToArray = __webpack_require__(82),
	    setToArray = __webpack_require__(83);
	
	/** Used to compose bitmasks for comparison styles. */
	var UNORDERED_COMPARE_FLAG = 1,
	    PARTIAL_COMPARE_FLAG = 2;
	
	/** `Object#toString` result references. */
	var boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    symbolTag = '[object Symbol]';
	
	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]';
	
	/** Used to convert symbols to primitives and strings. */
	var symbolProto = Symbol ? Symbol.prototype : undefined,
	    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;
	
	/**
	 * A specialized version of `baseIsEqualDeep` for comparing objects of
	 * the same `toStringTag`.
	 *
	 * **Note:** This function only supports comparing values with tags of
	 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {string} tag The `toStringTag` of the objects to compare.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
	 *  for more details.
	 * @param {Object} stack Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {
	  switch (tag) {
	    case dataViewTag:
	      if ((object.byteLength != other.byteLength) ||
	          (object.byteOffset != other.byteOffset)) {
	        return false;
	      }
	      object = object.buffer;
	      other = other.buffer;
	
	    case arrayBufferTag:
	      if ((object.byteLength != other.byteLength) ||
	          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
	        return false;
	      }
	      return true;
	
	    case boolTag:
	    case dateTag:
	      // Coerce dates and booleans to numbers, dates to milliseconds and
	      // booleans to `1` or `0` treating invalid dates coerced to `NaN` as
	      // not equal.
	      return +object == +other;
	
	    case errorTag:
	      return object.name == other.name && object.message == other.message;
	
	    case numberTag:
	      // Treat `NaN` vs. `NaN` as equal.
	      return (object != +object) ? other != +other : object == +other;
	
	    case regexpTag:
	    case stringTag:
	      // Coerce regexes to strings and treat strings, primitives and objects,
	      // as equal. See http://www.ecma-international.org/ecma-262/6.0/#sec-regexp.prototype.tostring
	      // for more details.
	      return object == (other + '');
	
	    case mapTag:
	      var convert = mapToArray;
	
	    case setTag:
	      var isPartial = bitmask & PARTIAL_COMPARE_FLAG;
	      convert || (convert = setToArray);
	
	      if (object.size != other.size && !isPartial) {
	        return false;
	      }
	      // Assume cyclic values are equal.
	      var stacked = stack.get(object);
	      if (stacked) {
	        return stacked == other;
	      }
	      bitmask |= UNORDERED_COMPARE_FLAG;
	      stack.set(object, other);
	
	      // Recursively compare objects (susceptible to call stack limits).
	      return equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);
	
	    case symbolTag:
	      if (symbolValueOf) {
	        return symbolValueOf.call(object) == symbolValueOf.call(other);
	      }
	  }
	  return false;
	}
	
	module.exports = equalByTag;


/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

	var root = __webpack_require__(57);
	
	/** Built-in value references. */
	var Symbol = root.Symbol;
	
	module.exports = Symbol;


/***/ },
/* 81 */
/***/ function(module, exports, __webpack_require__) {

	var root = __webpack_require__(57);
	
	/** Built-in value references. */
	var Uint8Array = root.Uint8Array;
	
	module.exports = Uint8Array;


/***/ },
/* 82 */
/***/ function(module, exports) {

	/**
	 * Converts `map` to its key-value pairs.
	 *
	 * @private
	 * @param {Object} map The map to convert.
	 * @returns {Array} Returns the key-value pairs.
	 */
	function mapToArray(map) {
	  var index = -1,
	      result = Array(map.size);
	
	  map.forEach(function(value, key) {
	    result[++index] = [key, value];
	  });
	  return result;
	}
	
	module.exports = mapToArray;


/***/ },
/* 83 */
/***/ function(module, exports) {

	/**
	 * Converts `set` to an array of its values.
	 *
	 * @private
	 * @param {Object} set The set to convert.
	 * @returns {Array} Returns the values.
	 */
	function setToArray(set) {
	  var index = -1,
	      result = Array(set.size);
	
	  set.forEach(function(value) {
	    result[++index] = value;
	  });
	  return result;
	}
	
	module.exports = setToArray;


/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

	var baseHas = __webpack_require__(11),
	    keys = __webpack_require__(10);
	
	/** Used to compose bitmasks for comparison styles. */
	var PARTIAL_COMPARE_FLAG = 2;
	
	/**
	 * A specialized version of `baseIsEqualDeep` for objects with support for
	 * partial deep comparisons.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
	 *  for more details.
	 * @param {Object} stack Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {
	  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,
	      objProps = keys(object),
	      objLength = objProps.length,
	      othProps = keys(other),
	      othLength = othProps.length;
	
	  if (objLength != othLength && !isPartial) {
	    return false;
	  }
	  var index = objLength;
	  while (index--) {
	    var key = objProps[index];
	    if (!(isPartial ? key in other : baseHas(other, key))) {
	      return false;
	    }
	  }
	  // Assume cyclic values are equal.
	  var stacked = stack.get(object);
	  if (stacked) {
	    return stacked == other;
	  }
	  var result = true;
	  stack.set(object, other);
	
	  var skipCtor = isPartial;
	  while (++index < objLength) {
	    key = objProps[index];
	    var objValue = object[key],
	        othValue = other[key];
	
	    if (customizer) {
	      var compared = isPartial
	        ? customizer(othValue, objValue, key, other, object, stack)
	        : customizer(objValue, othValue, key, object, other, stack);
	    }
	    // Recursively compare objects (susceptible to call stack limits).
	    if (!(compared === undefined
	          ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))
	          : compared
	        )) {
	      result = false;
	      break;
	    }
	    skipCtor || (skipCtor = key == 'constructor');
	  }
	  if (result && !skipCtor) {
	    var objCtor = object.constructor,
	        othCtor = other.constructor;
	
	    // Non `Object` object instances with different constructors are not equal.
	    if (objCtor != othCtor &&
	        ('constructor' in object && 'constructor' in other) &&
	        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
	          typeof othCtor == 'function' && othCtor instanceof othCtor)) {
	      result = false;
	    }
	  }
	  stack['delete'](object);
	  return result;
	}
	
	module.exports = equalObjects;


/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	var DataView = __webpack_require__(86),
	    Map = __webpack_require__(65),
	    Promise = __webpack_require__(87),
	    Set = __webpack_require__(88),
	    WeakMap = __webpack_require__(89),
	    toSource = __webpack_require__(59);
	
	/** `Object#toString` result references. */
	var mapTag = '[object Map]',
	    objectTag = '[object Object]',
	    promiseTag = '[object Promise]',
	    setTag = '[object Set]',
	    weakMapTag = '[object WeakMap]';
	
	var dataViewTag = '[object DataView]';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;
	
	/** Used to detect maps, sets, and weakmaps. */
	var dataViewCtorString = toSource(DataView),
	    mapCtorString = toSource(Map),
	    promiseCtorString = toSource(Promise),
	    setCtorString = toSource(Set),
	    weakMapCtorString = toSource(WeakMap);
	
	/**
	 * Gets the `toStringTag` of `value`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */
	function getTag(value) {
	  return objectToString.call(value);
	}
	
	// Fallback for data views, maps, sets, and weak maps in IE 11,
	// for data views in Edge, and promises in Node.js.
	if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
	    (Map && getTag(new Map) != mapTag) ||
	    (Promise && getTag(Promise.resolve()) != promiseTag) ||
	    (Set && getTag(new Set) != setTag) ||
	    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
	  getTag = function(value) {
	    var result = objectToString.call(value),
	        Ctor = result == objectTag ? value.constructor : undefined,
	        ctorString = Ctor ? toSource(Ctor) : undefined;
	
	    if (ctorString) {
	      switch (ctorString) {
	        case dataViewCtorString: return dataViewTag;
	        case mapCtorString: return mapTag;
	        case promiseCtorString: return promiseTag;
	        case setCtorString: return setTag;
	        case weakMapCtorString: return weakMapTag;
	      }
	    }
	    return result;
	  };
	}
	
	module.exports = getTag;


/***/ },
/* 86 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(52),
	    root = __webpack_require__(57);
	
	/* Built-in method references that are verified to be native. */
	var DataView = getNative(root, 'DataView');
	
	module.exports = DataView;


/***/ },
/* 87 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(52),
	    root = __webpack_require__(57);
	
	/* Built-in method references that are verified to be native. */
	var Promise = getNative(root, 'Promise');
	
	module.exports = Promise;


/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(52),
	    root = __webpack_require__(57);
	
	/* Built-in method references that are verified to be native. */
	var Set = getNative(root, 'Set');
	
	module.exports = Set;


/***/ },
/* 89 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(52),
	    root = __webpack_require__(57);
	
	/* Built-in method references that are verified to be native. */
	var WeakMap = getNative(root, 'WeakMap');
	
	module.exports = WeakMap;


/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	var isLength = __webpack_require__(23),
	    isObjectLike = __webpack_require__(24);
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    funcTag = '[object Function]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    objectTag = '[object Object]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    weakMapTag = '[object WeakMap]';
	
	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]',
	    float32Tag = '[object Float32Array]',
	    float64Tag = '[object Float64Array]',
	    int8Tag = '[object Int8Array]',
	    int16Tag = '[object Int16Array]',
	    int32Tag = '[object Int32Array]',
	    uint8Tag = '[object Uint8Array]',
	    uint8ClampedTag = '[object Uint8ClampedArray]',
	    uint16Tag = '[object Uint16Array]',
	    uint32Tag = '[object Uint32Array]';
	
	/** Used to identify `toStringTag` values of typed arrays. */
	var typedArrayTags = {};
	typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
	typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
	typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
	typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
	typedArrayTags[uint32Tag] = true;
	typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
	typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
	typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
	typedArrayTags[errorTag] = typedArrayTags[funcTag] =
	typedArrayTags[mapTag] = typedArrayTags[numberTag] =
	typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
	typedArrayTags[setTag] = typedArrayTags[stringTag] =
	typedArrayTags[weakMapTag] = false;
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;
	
	/**
	 * Checks if `value` is classified as a typed array.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is correctly classified,
	 *  else `false`.
	 * @example
	 *
	 * _.isTypedArray(new Uint8Array);
	 * // => true
	 *
	 * _.isTypedArray([]);
	 * // => false
	 */
	function isTypedArray(value) {
	  return isObjectLike(value) &&
	    isLength(value.length) && !!typedArrayTags[objectToString.call(value)];
	}
	
	module.exports = isTypedArray;


/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	var isStrictComparable = __webpack_require__(92),
	    keys = __webpack_require__(10);
	
	/**
	 * Gets the property names, values, and compare flags of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the match data of `object`.
	 */
	function getMatchData(object) {
	  var result = keys(object),
	      length = result.length;
	
	  while (length--) {
	    var key = result[length],
	        value = object[key];
	
	    result[length] = [key, value, isStrictComparable(value)];
	  }
	  return result;
	}
	
	module.exports = getMatchData;


/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(22);
	
	/**
	 * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` if suitable for strict
	 *  equality comparisons, else `false`.
	 */
	function isStrictComparable(value) {
	  return value === value && !isObject(value);
	}
	
	module.exports = isStrictComparable;


/***/ },
/* 93 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `matchesProperty` for source values suitable
	 * for strict equality comparisons, i.e. `===`.
	 *
	 * @private
	 * @param {string} key The key of the property to get.
	 * @param {*} srcValue The value to match.
	 * @returns {Function} Returns the new spec function.
	 */
	function matchesStrictComparable(key, srcValue) {
	  return function(object) {
	    if (object == null) {
	      return false;
	    }
	    return object[key] === srcValue &&
	      (srcValue !== undefined || (key in Object(object)));
	  };
	}
	
	module.exports = matchesStrictComparable;


/***/ },
/* 94 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsEqual = __webpack_require__(72),
	    get = __webpack_require__(95),
	    hasIn = __webpack_require__(105),
	    isKey = __webpack_require__(103),
	    isStrictComparable = __webpack_require__(92),
	    matchesStrictComparable = __webpack_require__(93),
	    toKey = __webpack_require__(104);
	
	/** Used to compose bitmasks for comparison styles. */
	var UNORDERED_COMPARE_FLAG = 1,
	    PARTIAL_COMPARE_FLAG = 2;
	
	/**
	 * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
	 *
	 * @private
	 * @param {string} path The path of the property to get.
	 * @param {*} srcValue The value to match.
	 * @returns {Function} Returns the new spec function.
	 */
	function baseMatchesProperty(path, srcValue) {
	  if (isKey(path) && isStrictComparable(srcValue)) {
	    return matchesStrictComparable(toKey(path), srcValue);
	  }
	  return function(object) {
	    var objValue = get(object, path);
	    return (objValue === undefined && objValue === srcValue)
	      ? hasIn(object, path)
	      : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);
	  };
	}
	
	module.exports = baseMatchesProperty;


/***/ },
/* 95 */
/***/ function(module, exports, __webpack_require__) {

	var baseGet = __webpack_require__(96);
	
	/**
	 * Gets the value at `path` of `object`. If the resolved value is
	 * `undefined`, the `defaultValue` is used in its place.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.7.0
	 * @category Object
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path of the property to get.
	 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
	 * @returns {*} Returns the resolved value.
	 * @example
	 *
	 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	 *
	 * _.get(object, 'a[0].b.c');
	 * // => 3
	 *
	 * _.get(object, ['a', '0', 'b', 'c']);
	 * // => 3
	 *
	 * _.get(object, 'a.b.c', 'default');
	 * // => 'default'
	 */
	function get(object, path, defaultValue) {
	  var result = object == null ? undefined : baseGet(object, path);
	  return result === undefined ? defaultValue : result;
	}
	
	module.exports = get;


/***/ },
/* 96 */
/***/ function(module, exports, __webpack_require__) {

	var castPath = __webpack_require__(97),
	    isKey = __webpack_require__(103),
	    toKey = __webpack_require__(104);
	
	/**
	 * The base implementation of `_.get` without support for default values.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path of the property to get.
	 * @returns {*} Returns the resolved value.
	 */
	function baseGet(object, path) {
	  path = isKey(path, object) ? [path] : castPath(path);
	
	  var index = 0,
	      length = path.length;
	
	  while (object != null && index < length) {
	    object = object[toKey(path[index++])];
	  }
	  return (index && index == length) ? object : undefined;
	}
	
	module.exports = baseGet;


/***/ },
/* 97 */
/***/ function(module, exports, __webpack_require__) {

	var isArray = __webpack_require__(25),
	    stringToPath = __webpack_require__(98);
	
	/**
	 * Casts `value` to a path array if it's not one.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @returns {Array} Returns the cast property path array.
	 */
	function castPath(value) {
	  return isArray(value) ? value : stringToPath(value);
	}
	
	module.exports = castPath;


/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

	var memoize = __webpack_require__(99),
	    toString = __webpack_require__(100);
	
	/** Used to match property names within property paths. */
	var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(\.|\[\])(?:\4|$))/g;
	
	/** Used to match backslashes in property paths. */
	var reEscapeChar = /\\(\\)?/g;
	
	/**
	 * Converts `string` to a property path array.
	 *
	 * @private
	 * @param {string} string The string to convert.
	 * @returns {Array} Returns the property path array.
	 */
	var stringToPath = memoize(function(string) {
	  var result = [];
	  toString(string).replace(rePropName, function(match, number, quote, string) {
	    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
	  });
	  return result;
	});
	
	module.exports = stringToPath;


/***/ },
/* 99 */
/***/ function(module, exports, __webpack_require__) {

	var MapCache = __webpack_require__(47);
	
	/** Used as the `TypeError` message for "Functions" methods. */
	var FUNC_ERROR_TEXT = 'Expected a function';
	
	/**
	 * Creates a function that memoizes the result of `func`. If `resolver` is
	 * provided, it determines the cache key for storing the result based on the
	 * arguments provided to the memoized function. By default, the first argument
	 * provided to the memoized function is used as the map cache key. The `func`
	 * is invoked with the `this` binding of the memoized function.
	 *
	 * **Note:** The cache is exposed as the `cache` property on the memoized
	 * function. Its creation may be customized by replacing the `_.memoize.Cache`
	 * constructor with one whose instances implement the
	 * [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)
	 * method interface of `delete`, `get`, `has`, and `set`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Function
	 * @param {Function} func The function to have its output memoized.
	 * @param {Function} [resolver] The function to resolve the cache key.
	 * @returns {Function} Returns the new memoized function.
	 * @example
	 *
	 * var object = { 'a': 1, 'b': 2 };
	 * var other = { 'c': 3, 'd': 4 };
	 *
	 * var values = _.memoize(_.values);
	 * values(object);
	 * // => [1, 2]
	 *
	 * values(other);
	 * // => [3, 4]
	 *
	 * object.a = 2;
	 * values(object);
	 * // => [1, 2]
	 *
	 * // Modify the result cache.
	 * values.cache.set(object, ['a', 'b']);
	 * values(object);
	 * // => ['a', 'b']
	 *
	 * // Replace `_.memoize.Cache`.
	 * _.memoize.Cache = WeakMap;
	 */
	function memoize(func, resolver) {
	  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  var memoized = function() {
	    var args = arguments,
	        key = resolver ? resolver.apply(this, args) : args[0],
	        cache = memoized.cache;
	
	    if (cache.has(key)) {
	      return cache.get(key);
	    }
	    var result = func.apply(this, args);
	    memoized.cache = cache.set(key, result);
	    return result;
	  };
	  memoized.cache = new (memoize.Cache || MapCache);
	  return memoized;
	}
	
	// Assign cache to `_.memoize`.
	memoize.Cache = MapCache;
	
	module.exports = memoize;


/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	var baseToString = __webpack_require__(101);
	
	/**
	 * Converts `value` to a string. An empty string is returned for `null`
	 * and `undefined` values. The sign of `-0` is preserved.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to process.
	 * @returns {string} Returns the string.
	 * @example
	 *
	 * _.toString(null);
	 * // => ''
	 *
	 * _.toString(-0);
	 * // => '-0'
	 *
	 * _.toString([1, 2, 3]);
	 * // => '1,2,3'
	 */
	function toString(value) {
	  return value == null ? '' : baseToString(value);
	}
	
	module.exports = toString;


/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(80),
	    isSymbol = __webpack_require__(102);
	
	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0;
	
	/** Used to convert symbols to primitives and strings. */
	var symbolProto = Symbol ? Symbol.prototype : undefined,
	    symbolToString = symbolProto ? symbolProto.toString : undefined;
	
	/**
	 * The base implementation of `_.toString` which doesn't convert nullish
	 * values to empty strings.
	 *
	 * @private
	 * @param {*} value The value to process.
	 * @returns {string} Returns the string.
	 */
	function baseToString(value) {
	  // Exit early for strings to avoid a performance hit in some environments.
	  if (typeof value == 'string') {
	    return value;
	  }
	  if (isSymbol(value)) {
	    return symbolToString ? symbolToString.call(value) : '';
	  }
	  var result = (value + '');
	  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	}
	
	module.exports = baseToString;


/***/ },
/* 102 */
/***/ function(module, exports, __webpack_require__) {

	var isObjectLike = __webpack_require__(24);
	
	/** `Object#toString` result references. */
	var symbolTag = '[object Symbol]';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;
	
	/**
	 * Checks if `value` is classified as a `Symbol` primitive or object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is correctly classified,
	 *  else `false`.
	 * @example
	 *
	 * _.isSymbol(Symbol.iterator);
	 * // => true
	 *
	 * _.isSymbol('abc');
	 * // => false
	 */
	function isSymbol(value) {
	  return typeof value == 'symbol' ||
	    (isObjectLike(value) && objectToString.call(value) == symbolTag);
	}
	
	module.exports = isSymbol;


/***/ },
/* 103 */
/***/ function(module, exports, __webpack_require__) {

	var isArray = __webpack_require__(25),
	    isSymbol = __webpack_require__(102);
	
	/** Used to match property names within property paths. */
	var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
	    reIsPlainProp = /^\w*$/;
	
	/**
	 * Checks if `value` is a property name and not a property path.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {Object} [object] The object to query keys on.
	 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
	 */
	function isKey(value, object) {
	  if (isArray(value)) {
	    return false;
	  }
	  var type = typeof value;
	  if (type == 'number' || type == 'symbol' || type == 'boolean' ||
	      value == null || isSymbol(value)) {
	    return true;
	  }
	  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
	    (object != null && value in Object(object));
	}
	
	module.exports = isKey;


/***/ },
/* 104 */
/***/ function(module, exports, __webpack_require__) {

	var isSymbol = __webpack_require__(102);
	
	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0;
	
	/**
	 * Converts `value` to a string key if it's not a string or symbol.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @returns {string|symbol} Returns the key.
	 */
	function toKey(value) {
	  if (typeof value == 'string' || isSymbol(value)) {
	    return value;
	  }
	  var result = (value + '');
	  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	}
	
	module.exports = toKey;


/***/ },
/* 105 */
/***/ function(module, exports, __webpack_require__) {

	var baseHasIn = __webpack_require__(106),
	    hasPath = __webpack_require__(107);
	
	/**
	 * Checks if `path` is a direct or inherited property of `object`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Object
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path to check.
	 * @returns {boolean} Returns `true` if `path` exists, else `false`.
	 * @example
	 *
	 * var object = _.create({ 'a': _.create({ 'b': 2 }) });
	 *
	 * _.hasIn(object, 'a');
	 * // => true
	 *
	 * _.hasIn(object, 'a.b');
	 * // => true
	 *
	 * _.hasIn(object, ['a', 'b']);
	 * // => true
	 *
	 * _.hasIn(object, 'b');
	 * // => false
	 */
	function hasIn(object, path) {
	  return object != null && hasPath(object, path, baseHasIn);
	}
	
	module.exports = hasIn;


/***/ },
/* 106 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.hasIn` without support for deep paths.
	 *
	 * @private
	 * @param {Object} [object] The object to query.
	 * @param {Array|string} key The key to check.
	 * @returns {boolean} Returns `true` if `key` exists, else `false`.
	 */
	function baseHasIn(object, key) {
	  return object != null && key in Object(object);
	}
	
	module.exports = baseHasIn;


/***/ },
/* 107 */
/***/ function(module, exports, __webpack_require__) {

	var castPath = __webpack_require__(97),
	    isArguments = __webpack_require__(16),
	    isArray = __webpack_require__(25),
	    isIndex = __webpack_require__(27),
	    isKey = __webpack_require__(103),
	    isLength = __webpack_require__(23),
	    isString = __webpack_require__(26),
	    toKey = __webpack_require__(104);
	
	/**
	 * Checks if `path` exists on `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path to check.
	 * @param {Function} hasFunc The function to check properties.
	 * @returns {boolean} Returns `true` if `path` exists, else `false`.
	 */
	function hasPath(object, path, hasFunc) {
	  path = isKey(path, object) ? [path] : castPath(path);
	
	  var result,
	      index = -1,
	      length = path.length;
	
	  while (++index < length) {
	    var key = toKey(path[index]);
	    if (!(result = object != null && hasFunc(object, key))) {
	      break;
	    }
	    object = object[key];
	  }
	  if (result) {
	    return result;
	  }
	  var length = object ? object.length : 0;
	  return !!length && isLength(length) && isIndex(key, length) &&
	    (isArray(object) || isString(object) || isArguments(object));
	}
	
	module.exports = hasPath;


/***/ },
/* 108 */
/***/ function(module, exports) {

	/**
	 * This method returns the first argument given to it.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Util
	 * @param {*} value Any value.
	 * @returns {*} Returns `value`.
	 * @example
	 *
	 * var object = { 'user': 'fred' };
	 *
	 * console.log(_.identity(object) === object);
	 * // => true
	 */
	function identity(value) {
	  return value;
	}
	
	module.exports = identity;


/***/ },
/* 109 */
/***/ function(module, exports, __webpack_require__) {

	var baseProperty = __webpack_require__(20),
	    basePropertyDeep = __webpack_require__(110),
	    isKey = __webpack_require__(103),
	    toKey = __webpack_require__(104);
	
	/**
	 * Creates a function that returns the value at `path` of a given object.
	 *
	 * @static
	 * @memberOf _
	 * @since 2.4.0
	 * @category Util
	 * @param {Array|string} path The path of the property to get.
	 * @returns {Function} Returns the new accessor function.
	 * @example
	 *
	 * var objects = [
	 *   { 'a': { 'b': 2 } },
	 *   { 'a': { 'b': 1 } }
	 * ];
	 *
	 * _.map(objects, _.property('a.b'));
	 * // => [2, 1]
	 *
	 * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
	 * // => [1, 2]
	 */
	function property(path) {
	  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
	}
	
	module.exports = property;


/***/ },
/* 110 */
/***/ function(module, exports, __webpack_require__) {

	var baseGet = __webpack_require__(96);
	
	/**
	 * A specialized version of `baseProperty` which supports deep paths.
	 *
	 * @private
	 * @param {Array|string} path The path of the property to get.
	 * @returns {Function} Returns the new accessor function.
	 */
	function basePropertyDeep(path) {
	  return function(object) {
	    return baseGet(object, path);
	  };
	}
	
	module.exports = basePropertyDeep;


/***/ },
/* 111 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_111__;

/***/ },
/* 112 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Avatar Component Style for tingle
	 * @author maming
	 *
	 * Copyright 2014-2016, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	module.exports = __webpack_require__(113);
	


/***/ },
/* 113 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * Avatar Component for tingle
	 * @author
	 *
	 * Copyright 2014-2016, Tingle Team.
	 * All rights reserved.
	 */
	var classnames = __webpack_require__(114);
	
	var _require = __webpack_require__(115);
	
	var unitize = _require.unitize;
	
	var Context = __webpack_require__(116);
	var avatarColors = ["#FF8170", "#F5B153", "#56c8e8", "#79CC70", "#52bafa", "#9e9ee6"];
	var defaultSrc = 'https://img.alicdn.com/tps/TB1.IgIKpXXXXbgXpXXXXXXXXXX-116-116.png';
	var global = Context.getGlobal('avatar') || {};
	
	var Avatar = function (_React$Component) {
	    _inherits(Avatar, _React$Component);
	
	    function Avatar(props) {
	        _classCallCheck(this, Avatar);
	
	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Avatar).call(this, props));
	
	        var size = unitize(props.size);
	        _this.style = {
	            width: size,
	            height: size,
	            lineHeight: size,
	            fontSize: unitize(props.fontSize)
	        };
	        return _this;
	    }
	
	    _createClass(Avatar, [{
	        key: 'shouldComponentUpdate',
	        value: function shouldComponentUpdate(nextProps, nextState) {
	            for (var key in this.props) {
	                if (this.props[key] !== nextProps[key]) {
	                    return true;
	                }
	            }
	            return false;
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	
	            var t = this;
	            if (!t.props.name || t.props.src) {
	                return React.createElement('img', { ref: 'root', className: classnames(Context.prefixClass('avatar'), _defineProperty({}, t.props.className, !!t.props.className)), src: t.props.src || t.props.defaultSrc, style: t.style });
	            }
	            if (t.props.defaultColor) {
	                t.style.backgroundColor = t.props.defaultColor;
	            } else {
	                var hashCode = t.props.hashCode(t.props.name, t.props.isLong);
	                t.style.backgroundColor = t.props.colors[Math.abs(hashCode) % t.props.colors.length];
	            }
	            return React.createElement(
	                'div',
	                { ref: 'root', className: classnames(Context.prefixClass('avatar'), _defineProperty({}, t.props.className, !!t.props.className)), style: this.style },
	                Avatar.formatName(t.props.name)
	            );
	        }
	    }]);
	
	    return Avatar;
	}(React.Component);
	
	Avatar.hashCode = function (strKey, isLong) {
	    var intValue = function intValue(num) {
	        var MAX_VALUE = 0x7fffffff;
	        var MIN_VALUE = -0x80000000;
	        if (num > MAX_VALUE || num < MIN_VALUE) {
	            return num &= 0xFFFFFFFF;
	        }
	        return num;
	    };
	
	    var hash = 0;
	    if (typeof strKey === 'string') {
	        for (var i = 0, l = strKey.length; i < l; i++) {
	            hash = hash * 31 + strKey.charCodeAt(i);
	            if (!isLong) {
	                hash = intValue(hash);
	            }
	        }
	    }
	    return hash;
	};
	
	Avatar.formatName = function (name) {
	    var firstChar = name.slice(0, 1);
	    if (/^[A-Za-z]+$/.test(firstChar)) {
	        return firstChar.toUpperCase();
	    }
	    if (name.length === 3) {
	        return name.slice(1, 3);
	    }
	    if (name.length > 3) {
	        return name.slice(0, 2);
	    }
	    return name;
	};
	
	Avatar.defaultProps = {
	    className: '',
	    name: '',
	    src: '',
	    defaultColor: '',
	    colors: global.colors || avatarColors,
	    defaultSrc: global.defaultSrc || defaultSrc,
	    hashCode: global.hashCode || Avatar.hashCode,
	    isLong: false,
	    size: 40,
	    fontSize: 12
	};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	Avatar.propTypes = {
	    className: React.PropTypes.string,
	    size: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.number]),
	    fontSize: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.number]),
	    name: React.PropTypes.string,
	    defaultColor: React.PropTypes.string,
	    defaultSrc: React.PropTypes.string,
	    src: React.PropTypes.string,
	    colors: React.PropTypes.array,
	    isLong: React.PropTypes.bool,
	    hashCode: React.PropTypes.func
	};
	
	Avatar.displayName = 'Avatar';
	
	module.exports = Avatar;
	


/***/ },
/* 114 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames () {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ },
/* 115 */
/***/ function(module, exports) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	/**
	 * css util for tingle
	 * @author gnosaij
	 *
	 * Copyright 2014-2015, Tingle Team, Alinw.
	 * All rights reserved.
	 *
	 * Usage:
	 *     const {createStyleContext} = require('tingle-style');
	 *     let componentStyle = createStyleContext('tGroupList');
	 *
	 *     // 添加样式
	 *     componentStyle.add(`
	 *         body{
	 *             background-color: red;
	 *         }
	 *     `);
	 *
	 *     // 添加带有标识的样式，这样可以优化去重
	 *     componentStyle.add('redBG', `
	 *         body{
	 *             background-color: red;
	 *         }
	 *     `);
	 */
	var doc = document;
	var headEl = doc.getElementsByTagName('head')[0];
	
	/**
	 * 可使用`JS`动态插入样式的类
	 */
	
	var StyleContext = function () {
	    /**
	     * 构造函数
	     * @param id {String} required 用于创建`style`元素的`id`标识，建议使用`componentName`作为`id`的值，避免全局冲突
	     */
	
	    function StyleContext(id) {
	        _classCallCheck(this, StyleContext);
	
	        var t = this;
	        t.id = id;
	        t.rules = [];
	        t._createStyleEl();
	    }
	
	    _createClass(StyleContext, [{
	        key: '_createStyleEl',
	        value: function _createStyleEl() {
	            var t = this;
	            var el = doc.createElement('style');
	            el.id = t.id + '-style';
	            el.setAttribute('type', 'text/css');
	            headEl.appendChild(el);
	            t.el = el;
	        }
	    }, {
	        key: '_addRule',
	        value: function _addRule(rule) {
	            this.el.appendChild(doc.createTextNode(rule));
	        }
	
	        /**
	         * 外部接口 添加新的样式规则
	         */
	
	    }, {
	        key: 'add',
	        value: function add(ruleId, rule) {
	            var t = this;
	            if (rule === undefined) {
	                rule = ruleId;
	                t._addRule(t._clearRuleIndent(rule));
	            } else if (ruleId && -1 === t.rules.indexOf(ruleId)) {
	                t.rules.push(ruleId);
	                t._addRule('/* ' + ruleId + ' */\n' + t._clearRuleIndent(rule));
	            }
	        }
	
	        /**
	         * 删除多余的缩进 更方便阅读
	         */
	
	    }, {
	        key: '_clearRuleIndent',
	        value: function _clearRuleIndent(rule) {
	            // 为了取出正确的首行缩进数量 需要去掉第一行的换行
	            rule = rule.replace(/^\n/, '');
	            var whiteSpaceLength = rule.match(/^\s*/)[0].length;
	            var firstLineIndentRegExp = new RegExp('^\\s{' + whiteSpaceLength + '}');
	            var otherLinesIndentResExp = new RegExp('\\n\\s{' + whiteSpaceLength + '}', 'mg');
	            //console.log(rule.match(otherLinesIndentResExp));
	            // 删除多余的缩进
	            rule = rule.replace(firstLineIndentRegExp, '').replace(otherLinesIndentResExp, '\n');
	
	            return rule;
	        }
	    }]);
	
	    return StyleContext;
	}();
	
	// 创建一个Component的样式上下文
	
	
	var existedInstances = {};
	var createStyleContext = function createStyleContext(contextId) {
	    if (!contextId) {
	        console.error('The param(`contextId`) is required for `createStyleContext`(tingle-style/util.js) method. ');
	        return;
	    }
	    return existedInstances[contextId] || (existedInstances[contextId] = new StyleContext(contextId));
	};
	
	/**
	 * 添加长度单位，默认单位是`px`
	 * @param any {Number|String|*}
	 * @returns {Number|String} 返回Number时一定是0 否则返回的都是带有单位的长度字符串值
	 * @demo
	 *      unitize(10)     // 10px
	 *      unitize('10px') // 10px
	 *      unitize('1rem') // 1rem
	 *      unitize()       // 0
	 */
	var unitize = function unitize(any) {
	    var ret = void 0;
	    if (typeof any === 'number') {
	        ret = '' + any + 'px';
	    } else if (typeof any === 'string') {
	        if (any.match(/^\d+$/)) {
	            ret = any + 'px';
	        } else {
	            ret = any;
	        }
	    } else {
	        ret = 0;
	    }
	    return ret;
	};
	
	module.exports = {
	    createStyleContext: createStyleContext,
	    unitize: unitize
	};
	

/***/ },
/* 116 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Tingle Context
	 * The environment for tingle's initialization
	 * @author gnosaij
	 *
	 * Copyright 2014-2015, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	module.exports = __webpack_require__(117);
	


/***/ },
/* 117 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	/**
	 * Tingle Context
	 * The environment for tingle's initialization
	 * @author gnosaij
	 *
	 * Copyright 2014-2015, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	var win = window;
	var doc = document;
	// 引入环境检测模块
	var env = __webpack_require__(118);
	var classnames = __webpack_require__(119);
	
	// 全局点击态初始化
	__webpack_require__(120).attach(doc.body);
	
	/**
	 * 变换两个参数的函数到多个参数
	 * @param  {Function} fn 基函数
	 * @return {Function} 变换后的函数
	 * @demo
	 *      let add = (x, y) => { return x+y; }
	 *      add = redo(add);
	 *      add(1,2,3) => 6
	 */
	var redo = function redo(fn) {
	    return function () {
	        var args = arguments;
	        var ret = fn(args[0], args[1]);
	        for (var i = 2, l = args.length; i < l; i++) {
	            ret = fn(ret, args[i]);
	        }
	        return ret;
	    };
	};
	
	/**
	 * 对象扩展
	 * @param  {Object} receiver
	 * @param  {Object} supplier
	 * @return {Object} 扩展后的receiver对象
	 */
	var mixin = redo(function (receiver, supplier) {
	    if (Object.keys) {
	        Object.keys(supplier).forEach(function (property) {
	            Object.defineProperty(receiver, property, Object.getOwnPropertyDescriptor(supplier, property));
	        });
	    } else {
	        for (var property in supplier) {
	            if (supplier.hasOwnProperty(property)) {
	                receiver[property] = supplier[property];
	            }
	        }
	    }
	    return receiver;
	});
	
	/**
	 * 获取自增长id
	 * @return {Number}
	 */
	var tid = 0;
	var getTID = function getTID() {
	    return tid++;
	};
	
	/**
	 * rem system
	 * @TODO 这个闭包 + rem方法 + makePrivateRem方法的整合
	 */
	(function (docEl, fontEl) {
	    var dpr = win.devicePixelRatio || 1;
	
	    // 类似小米2 webView webkit版本是534及以下，避免闪屏
	    var matches = navigator.userAgent.match(/Android[\S\s]+AppleWebkit\/?(\d{3})/i);
	    if (matches && matches[1] <= 534) {
	        dpr = 1;
	    }
	
	    win.dpr = dpr;
	
	    if (!docEl.getAttribute('data-dpr')) {
	        // 在body上添加环境检测的标识类className
	        doc.documentElement.className = classnames(doc.documentElement.className.trim(), _defineProperty({
	            pc: env.isPC,
	            mobile: env.isMobile,
	            hairline: env.supportHairline
	        }, 'dpr' + dpr, dpr > 1));
	
	        docEl.setAttribute('data-dpr', dpr);
	        docEl.firstElementChild.appendChild(fontEl);
	    }
	
	    var setRem = function setRem() {
	        var docWidth = docEl.clientWidth;
	        win.rem = docWidth / 10;
	
	        // ZTE 中兴 ZTE U930_TD/1.0 Linux/2.6.39/Android/4.0Release/3.5.2012 Browser/AppleWebkit534.30
	        // 老机器bug rem计算不是标准=html fontsize
	        if (/ZTE U930_TD/.test(navigator.userAgent)) {
	            win.rem = win.rem * 1.13;
	        }
	
	        fontEl.innerHTML = 'html{font-size:' + win.rem + 'px!important}';
	    };
	
	    win.addEventListener('resize', function () {
	        // resize时立刻change,pad上刷屏明显
	        setRem();
	    }, false);
	    win.addEventListener('pageshow', function (e) {
	        if (e.persisted) {
	            setRem();
	        }
	    }, false);
	
	    setRem();
	})(doc.documentElement, doc.createElement('style'));
	
	var defaultArtBoardWidth = 750;
	
	var rem = function rem(px, artBoardWidth) {
	    return px * 10 / (artBoardWidth || defaultArtBoardWidth) + 'rem';
	};
	
	var makePrivateRem = function makePrivateRem(artBoardWidth) {
	    return function (px) {
	        return rem(px, artBoardWidth);
	    };
	};
	
	// 全局默认配置
	var defaultGlobalConfig = {
	    svgPath: ''
	};
	
	var runtimeGlobalConfig = {};
	
	/**
	 * Top namespace
	 */
	// TODO setGlobal/getGlobal
	var Context = {
	    getTID: getTID,
	    mixin: mixin,
	    noop: function noop(v) {
	        return v;
	    },
	
	    rem: rem,
	    makePrivateRem: makePrivateRem,
	    /**
	     * 执行全局配置
	     * @param options
	     */
	    setGlobal: function setGlobal(options) {
	        runtimeGlobalConfig = mixin({}, defaultGlobalConfig, options);
	    },
	
	    /**
	     * 获取全局配置
	     * @param property {String} optional
	     * @returns {*}
	     */
	    getGlobal: function getGlobal(property) {
	        return property ? runtimeGlobalConfig[property] : runtimeGlobalConfig;
	    },
	
	    /**
	     * 为 class 添加前缀
	     * @param property {String} required
	     * @returns {*}
	     */
	    prefixClass: function prefixClass(classNames) {
	        var prefix = Context.getGlobal('classNamePrefix') || 't';
	        return classNames.split(' ').map(function (className) {
	            return prefix + '-' + className;
	        }).join(' ');
	    }
	};
	
	mixin(Context, env);
	
	// 多次require时保证返回同一个全局对象 保证setGlobal/getGlobal正确执行
	module.exports = win.__TingleContext || (win.__TingleContext = Context);
	


/***/ },
/* 118 */
/***/ function(module, exports) {

	'use strict';
	
	/**
	 * Tingle Context
	 * The environment for tingle's initialization
	 * @author gnosaij
	 *
	 * Copyright 2014-2015, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	var win = window;
	var doc = document;
	
	var ua = navigator.userAgent;
	var isMobile = !!ua.match(/mobile/i) || 'orientation' in win;
	var isPC = !isMobile;
	
	var supportTouch = 'ontouchstart' in window;
	var support3D = 'WebKitCSSMatrix' in window && 'm11' in new WebKitCSSMatrix();
	var supportHairline = function () {
	    var support = false;
	    if (win.devicePixelRatio && devicePixelRatio >= 2) {
	        var testElem = doc.createElement('div');
	        testElem.style.border = '.5px solid transparent';
	        doc.body.appendChild(testElem);
	        if (testElem.offsetHeight == 1) {
	            // 0.5 + 0.5 = 1
	            support = true;
	        }
	        doc.body.removeChild(testElem);
	    }
	    return support;
	}();
	
	// 常量
	var TOUCH_START = supportTouch ? 'touchstart' : 'mousedown';
	var TOUCH_MOVE = supportTouch ? 'touchmove' : 'mousemove';
	var TOUCH_END = supportTouch ? 'touchend' : 'mouseup';
	var TOUCH_CANCEL = supportTouch ? 'touchcancel' : 'mouseup';
	
	var env = {
	    // 是什么环境
	    isPC: isPC,
	    isMobile: isMobile,
	
	    // 是否支持
	    support3D: support3D,
	    supportHairline: supportHairline,
	    supportTouch: supportTouch,
	
	    // 事件去差异
	    TOUCH_START: TOUCH_START,
	    TOUCH_MOVE: TOUCH_MOVE,
	    TOUCH_END: TOUCH_END,
	    TOUCH_CANCEL: TOUCH_CANCEL,
	    RESIZE: 'resize'
	};
	
	module.exports = env;
	


/***/ },
/* 119 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames () {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ },
/* 120 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	/**
	 * Tingle Context
	 * The environment for tingle's initialization
	 * @author yize
	 *
	 * Copyright 2014-2015, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	var env = __webpack_require__(118);
	var TOUCH_START = env.TOUCH_START;
	var TOUCH_END = env.TOUCH_END;
	var TOUCH_CANCEL = env.TOUCH_CANCEL;
	
	var TouchEffect = function () {
	    /**
	     *
	     * @param layer
	     * @param options
	     */
	
	    function TouchEffect(layer, options) {
	        _classCallCheck(this, TouchEffect);
	
	        var t = this;
	        t.layer = layer;
	        t.options = options || {
	            selector: "tTE", // abbr. tTouchEffect
	            activeClass: "hover"
	        };
	        t.selector = t.options.selector;
	        t.activeClass = t.options.activeClass;
	        t.initEvent();
	    }
	
	    _createClass(TouchEffect, [{
	        key: "initEvent",
	        value: function initEvent() {
	            var t = this;
	            var layer = t.layer;
	
	            layer.addEventListener(TOUCH_START, t.onTouchStart.bind(t), false);
	            layer.addEventListener(TOUCH_END, t.onTouchEnd.bind(t), false);
	            layer.addEventListener(TOUCH_CANCEL, t.onTouchEnd.bind(t), false);
	        }
	    }, {
	        key: "onTouchStart",
	        value: function onTouchStart(event) {
	
	            var t = this;
	            var target = event.target;
	
	            while (target && target.classList && !target.classList.contains(t.selector)) {
	                target = target.parentNode;
	            }
	
	            if (target && target.classList && target.classList.contains(t.selector)) {
	                target.classList.add(t.activeClass);
	            }
	        }
	    }, {
	        key: "onTouchEnd",
	        value: function onTouchEnd(event) {
	
	            var t = this;
	            var target = event.target;
	
	            while (target && target.classList && !target.classList.contains(t.selector)) {
	                target = target.parentNode;
	            }
	
	            if (target && target.classList && target.classList.contains(t.selector)) {
	                target.classList.remove(t.activeClass);
	            }
	        }
	    }, {
	        key: "destroy",
	        value: function destroy() {
	            var t = this;
	            var layer = t.layer;
	            layer.removeEventListener(TOUCH_START, t.onTouchStart.bind(t), false);
	            layer.removeEventListener(TOUCH_END, t.onTouchEnd.bind(t), false);
	            layer.removeEventListener(TOUCH_CANCEL, t.onTouchEnd.bind(t), false);
	        }
	    }]);
	
	    return TouchEffect;
	}();
	
	TouchEffect.attach = function (layer, options) {
	    return new TouchEffect(layer, options);
	};
	
	module.exports = TouchEffect;
	


/***/ },
/* 121 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Box Component Style for tingle
	 * @author fushan
	 *
	 * Copyright 2014-2016, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	module.exports = __webpack_require__(122);
	


/***/ },
/* 122 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	/**
	 * Box Component for tingle
	 * @author gnosaij
	 *
	 * Copyright 2014-2015, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	var classnames = __webpack_require__(123);
	
	var _require = __webpack_require__(116);
	
	var prefixClass = _require.prefixClass;
	
	
	var START = 'start';
	var CENTER = 'center';
	var END = 'end';
	var ALIGN_VALUES = [START, CENTER, END];
	
	/**
	 * 水平方向弹性容器
	 * @param props
	 * @returns {XML}
	 * @constructor
	 */
	var HBox = function HBox(props) {
	  var _classnames;
	
	  var className = props.className;
	  var flex = props.flex;
	  var vAlign = props.vAlign;
	  var hAlign = props.hAlign;
	
	  var other = _objectWithoutProperties(props, ['className', 'flex', 'vAlign', 'hAlign']);
	
	  var c = classnames(prefixClass('FBH'), (_classnames = {}, _defineProperty(_classnames, prefixClass('FB' + flex), !!flex), _defineProperty(_classnames, prefixClass('FBAS'), vAlign === START), _defineProperty(_classnames, prefixClass('FBAC'), vAlign === CENTER), _defineProperty(_classnames, prefixClass('FBAE'), vAlign === END), _defineProperty(_classnames, prefixClass('FBJS'), hAlign === START), _defineProperty(_classnames, prefixClass('FBJC'), hAlign === CENTER), _defineProperty(_classnames, prefixClass('FBJE'), hAlign === END), _defineProperty(_classnames, className, !!className), _classnames));
	
	  return React.createElement(
	    'div',
	    _extends({}, other, { className: c }),
	    props.children
	  );
	};
	
	HBox.propTypes = {
	  className: React.PropTypes.string,
	  flex: React.PropTypes.number,
	  hAlign: React.PropTypes.oneOf(ALIGN_VALUES),
	  vAlign: React.PropTypes.oneOf(ALIGN_VALUES)
	};
	
	HBox.displayName = 'HBox';
	
	/**
	 * 垂直方向弹性容器
	 * @param props
	 * @returns {XML}
	 * @constructor
	 */
	var VBox = function VBox(props) {
	  var _classnames2;
	
	  var className = props.className;
	  var flex = props.flex;
	  var vAlign = props.vAlign;
	  var hAlign = props.hAlign;
	
	  var other = _objectWithoutProperties(props, ['className', 'flex', 'vAlign', 'hAlign']);
	
	  var c = classnames(prefixClass('FBV'), (_classnames2 = {}, _defineProperty(_classnames2, prefixClass('FB' + flex), !!flex), _defineProperty(_classnames2, prefixClass('FBJS'), vAlign === START), _defineProperty(_classnames2, prefixClass('FBJC'), vAlign === CENTER), _defineProperty(_classnames2, prefixClass('FBJE'), vAlign === END), _defineProperty(_classnames2, prefixClass('FBAS'), hAlign === START), _defineProperty(_classnames2, prefixClass('FBAC'), hAlign === CENTER), _defineProperty(_classnames2, prefixClass('FBAE'), hAlign === END), _defineProperty(_classnames2, className, !!className), _classnames2));
	
	  return React.createElement(
	    'div',
	    _extends({}, other, { className: c }),
	    props.children
	  );
	};
	
	VBox.propTypes = {
	  className: React.PropTypes.string,
	  flex: React.PropTypes.number,
	  hAlign: React.PropTypes.oneOf(ALIGN_VALUES),
	  vAlign: React.PropTypes.oneOf(ALIGN_VALUES)
	};
	
	VBox.displayName = 'VBox';
	
	/**
	 * 伸缩子元素
	 * @param props
	 * @returns {XML}
	 * @constructor
	 */
	var Box = function Box(props) {
	  var _classnames3;
	
	  var className = props.className;
	  var flex = props.flex;
	
	  var other = _objectWithoutProperties(props, ['className', 'flex']);
	
	  var c = classnames((_classnames3 = {}, _defineProperty(_classnames3, prefixClass('FB' + flex), !!flex), _defineProperty(_classnames3, className, !!className), _classnames3));
	
	  return React.createElement(
	    'div',
	    _extends({}, other, { className: c }),
	    props.children
	  );
	};
	
	Box.propTypes = {
	  className: React.PropTypes.string,
	  flex: React.PropTypes.number,
	  hAlign: React.PropTypes.oneOf(ALIGN_VALUES),
	  vAlign: React.PropTypes.oneOf(ALIGN_VALUES)
	};
	
	Box.displayName = 'Box';
	
	module.exports = { HBox: HBox, VBox: VBox, Box: Box };
	


/***/ },
/* 123 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames () {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ },
/* 124 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Button Component Style for tingle
	 * @author cm
	 *
	 * Copyright 2014-2016, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	module.exports = __webpack_require__(125);
	


/***/ },
/* 125 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	* Button Component for tingle
	* @author cm
	*
	* Copyright 2014-2016, Tingle Team, Alinw.
	* All rights reserved.
	*/
	var React = __webpack_require__(2);
	var classnames = __webpack_require__(126);
	var Context = __webpack_require__(116);
	
	var prefixClass = function prefixClass(name) {
	    return Context.prefixClass ? Context.prefixClass(name) : 't-' + name;
	};
	
	var Button = function (_React$Component) {
	    _inherits(Button, _React$Component);
	
	    function Button(props) {
	        _classCallCheck(this, Button);
	
	        return _possibleConstructorReturn(this, Object.getPrototypeOf(Button).call(this, props));
	    }
	
	    _createClass(Button, [{
	        key: 'handleClick',
	        value: function handleClick() {
	            if (!this.props.disabled) {
	                this.props.onClick();
	            }
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _classSet;
	
	            var size = this.props.size;
	
	            var type = this.props.type;
	            var primary = type === 'primary';
	            var secondary = type === 'secondary';
	            var danger = type === 'danger';
	            var text = type === 'text';
	            var minor = type === 'minor';
	
	            var disabled = !!this.props.disabled;
	            var classSet = (_classSet = {}, _defineProperty(_classSet, '' + prefixClass('FBH FBAC FBJC'), true), _defineProperty(_classSet, this.props.className, !!this.props.className), _defineProperty(_classSet, '' + prefixClass('button'), true), _defineProperty(_classSet, 'disabled', disabled), _defineProperty(_classSet, '' + prefixClass('button-small'), size === 'small'), _defineProperty(_classSet, '' + prefixClass('button-large'), size === 'large'), _defineProperty(_classSet, '' + prefixClass('button-primary'), primary && !disabled), _defineProperty(_classSet, '' + prefixClass('button-secondary'), secondary && !disabled), _defineProperty(_classSet, '' + prefixClass('button-minor'), minor && !disabled), _defineProperty(_classSet, '' + prefixClass('button-danger'), danger && !disabled), _defineProperty(_classSet, '' + prefixClass('button-text'), text), _classSet);
	
	            var style = this.props.style;
	
	            return React.createElement(
	                'div',
	                { className: classnames(classSet),
	                    disabled: disabled,
	                    style: style,
	                    onClick: this.handleClick.bind(this) },
	                this.props.children
	            );
	        }
	    }]);
	
	    return Button;
	}(React.Component);
	
	Button.defaultProps = {
	    size: 'medium',
	    type: 'primary',
	    disabled: false,
	    style: {},
	    onClick: function onClick() {}
	};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	Button.propTypes = {
	    size: React.PropTypes.oneOf(['medium', 'large', 'small']),
	    type: React.PropTypes.oneOf(['primary', 'secondary', 'minor', 'danger', 'text']),
	    disabled: React.PropTypes.bool,
	    style: React.PropTypes.object,
	    onClick: React.PropTypes.func
	};
	
	Button.displayName = 'Button';
	
	module.exports = Button;
	


/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames () {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ },
/* 127 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Calendar Component Style for tingle
	 * @author wenzhao.fw
	 *
	 * Copyright 2014-2016, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	module.exports = __webpack_require__(128);
	


/***/ },
/* 128 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * Calendar Component for tingle
	 * @author wenzhao.fw
	 *
	 * Copyright 2014-2016, Tingle Team.
	 * All rights reserved.
	 */
	
	var classnames = __webpack_require__(129);
	var Formatter = __webpack_require__(130);
	var Layer = __webpack_require__(132);
	var i18n = __webpack_require__(138);
	var MonthCalendar = __webpack_require__(139);
	var YearCalendar = __webpack_require__(153);
	var Day = __webpack_require__(154);
	var Month = __webpack_require__(151);
	var Year = __webpack_require__(152);
	var deepcopy = __webpack_require__(140);
	var deepEqual = __webpack_require__(148);
	var Context = __webpack_require__(116);
	var prefixClass = Context.prefixClass;
	
	// value 的格式：{startDate: '2016-01-02', startDateType: 'AM', endDate: '2016-01-03', endDateType: 'AM' }
	
	var Calendar = function (_React$Component) {
	    _inherits(Calendar, _React$Component);
	
	    function Calendar(props) {
	        _classCallCheck(this, Calendar);
	
	        // value 可能是对象，为防止外部直接修改 props.value，造成 componentWillReceiveProps 出现问题
	        // 故在此备份一份
	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Calendar).call(this, props));
	
	        _this.value = deepcopy(props.value);
	        _this.state = {
	            value: deepcopy(props.value),
	            panel: 'day'
	        };
	        return _this;
	    }
	
	    _createClass(Calendar, [{
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	            var t = this;
	            t.locale = i18n[t.props.locale];
	        }
	    }, {
	        key: 'componentWillReceiveProps',
	        value: function componentWillReceiveProps(nextProps) {
	            var t = this;
	            if (!deepEqual(nextProps.value, t.value)) {
	                t.value = deepcopy(nextProps.value);
	                t.setState({
	                    value: deepcopy(nextProps.value)
	                });
	            }
	        }
	    }, {
	        key: 'handleChange',
	        value: function handleChange(value) {
	            var t = this;
	            var panelMap = {
	                month: 'day',
	                year: 'month'
	            };
	            var newState = {
	                value: value
	            };
	            if (t.state.panel == 'month' || t.state.panel == 'year') {
	                newState['panel'] = panelMap[t.state.panel];
	            }
	            t.setState(newState);
	        }
	    }, {
	        key: 'handlePanelChange',
	        value: function handlePanelChange() {
	            var t = this;
	            var panel = t.state.panel;
	
	            if (panel == 'day') {
	                panel = 'month';
	            } else if (panel == 'month') {
	                panel = 'year';
	            }
	            t.setState({
	                panel: panel
	            });
	        }
	    }, {
	        key: 'handleCanel',
	        value: function handleCanel() {
	            var t = this;
	            t.setState({
	                panel: 'day'
	            });
	            t.props.onCancel();
	        }
	    }, {
	        key: 'handleClear',
	        value: function handleClear() {
	            var t = this;
	            t.setState({
	                value: deepcopy(t.props.value)
	            });
	        }
	    }, {
	        key: 'handleOk',
	        value: function handleOk() {
	            var t = this;
	            t.props.onOk(deepcopy(t.state.value));
	        }
	    }, {
	        key: 'renderPanel',
	        value: function renderPanel() {
	            var t = this;
	            var _t$state = t.state;
	            var value = _t$state.value;
	            var panel = _t$state.panel;
	            var _t$props = t.props;
	            var singleMode = _t$props.singleMode;
	            var locale = _t$props.locale;
	            var showHalfDay = _t$props.showHalfDay;
	
	            var panelProps = {
	                value: value,
	                onChange: t.handleChange.bind(t),
	                singleMode: singleMode,
	                locale: locale,
	                showHalfDay: showHalfDay,
	                onTitleClick: t.handlePanelChange.bind(t),
	                onSelecting: t.props.onSelecting,
	                extraClass: t.props.extraClass
	            };
	            if (panel == 'day') {
	                return React.createElement(Day, panelProps);
	            } else {
	                panelProps['singleMode'] = true;
	                if (panel == 'month') {
	                    return React.createElement(Month, panelProps);
	                } else {
	                    return React.createElement(Year, panelProps);
	                }
	            }
	        }
	    }, {
	        key: 'renderTopPanel',
	        value: function renderTopPanel() {
	            return React.createElement(
	                'div',
	                { className: classnames(_defineProperty({}, prefixClass("top-panel"), true)) },
	                React.createElement(
	                    'span',
	                    { className: prefixClass("top-panel-cancel"), onClick: this.handleCanel.bind(this) },
	                    this.locale['button']['cancel']
	                ),
	                React.createElement(
	                    'span',
	                    { className: prefixClass("top-panel-title") },
	                    this.props.topPanelTitle || '选择时间'
	                ),
	                React.createElement(
	                    'span',
	                    { className: prefixClass("top-panel-confirm"), onClick: this.handleOk.bind(this) },
	                    this.locale['button']['confirm']
	                )
	            );
	        }
	    }, {
	        key: 'renderBottomPanel',
	        value: function renderBottomPanel() {
	            var _classnames3;
	
	            var t = this;
	            return React.createElement(
	                'div',
	                { className: classnames(_defineProperty({}, prefixClass("operate"), true)) },
	                React.createElement(
	                    'span',
	                    { className: prefixClass("cancel tap op"), onClick: this.handleCanel.bind(this) },
	                    t.locale['button']['cancel']
	                ),
	                ' ',
	                React.createElement(
	                    'span',
	                    { className: prefixClass("reset"),
	                        onClick: this.handleClear.bind(this) },
	                    ' ',
	                    t.locale['button']['clear'],
	                    ' '
	                ),
	                ' ',
	                React.createElement(
	                    'span',
	                    { className: classnames((_classnames3 = {}, _defineProperty(_classnames3, prefixClass("confirm tap op"), true), _defineProperty(_classnames3, prefixClass('gray'), !t.state.value.startDate), _classnames3)),
	                        onClick: this.handleOk.bind(this) },
	                    ' ',
	                    t.locale['button']['confirm'],
	                    ' '
	                ),
	                ' '
	            );
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _classnames4;
	
	            var t = this;
	            var clearButton = '';
	            var value = t.state.value;
	            var _t$props2 = t.props;
	            var visible = _t$props2.visible;
	            var className = _t$props2.className;
	            var singleMode = _t$props2.singleMode;
	            var autoFinish = _t$props2.autoFinish;
	            var locale = _t$props2.locale;
	            var showHalfDay = _t$props2.showHalfDay;
	
	            // Calculate the height of the current container
	
	            var clientHeight = document.documentElement.clientHeight;
	            var height = 352;
	            !!t.props.showTopPanel && (height += 44);
	            !!t.props.showHalfDay && (height += 120);
	
	            return React.createElement(
	                Layer,
	                { visible: visible },
	                React.createElement(
	                    'div',
	                    { className: prefixClass("calendar-container"), style: {
	                            height: clientHeight,
	                            // Scale the view to ensure user can see the whole widget 
	                            // on the small screen device
	                            transform: height >= clientHeight ? 'scale(' + ((clientHeight / height).toFixed(3) - 0.15) + ')' : ''
	                        } },
	                    React.createElement(
	                        'div',
	                        { className: classnames((_classnames4 = {}, _defineProperty(_classnames4, prefixClass("calendar"), true), _defineProperty(_classnames4, className, !!className), _classnames4)), style: {
	                                display: visible ? 'block' : 'block',
	                                height: height
	                            } },
	                        t.props.showTopPanel && t.renderTopPanel(),
	                        t.renderPanel()
	                    )
	                )
	            );
	        }
	    }]);
	
	    return Calendar;
	}(React.Component);
	
	Calendar.propTypes = {
	    className: React.PropTypes.string,
	    visible: React.PropTypes.bool, // 是否显示
	    calendarCode: React.PropTypes.object, // 后端传来的 code
	    value: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.object]), // 默认值
	    locale: React.PropTypes.string, // 国际化语言
	    singleMode: React.PropTypes.bool, // 是否是单选模式
	    onCancel: React.PropTypes.func, // 取消选择时触发的回调
	    onOk: React.PropTypes.func, // 返回值时触发的回调
	    onSelecting: React.PropTypes.func // 开始选择时的回调
	};
	
	Calendar.defaultProps = {
	    visible: true,
	    locale: 'zh-cn',
	    calendarCode: {},
	    singleMode: true,
	    showHalfDay: false,
	    showTopPanel: true,
	    value: {
	        startDate: new Date().getTime(),
	        startDateType: 'FULL',
	        endDate: new Date().getTime(),
	        endDateType: 'FULL'
	    },
	    onCancel: function onCancel() {},
	    onOk: function onOk() {},
	    onSelecting: function onSelecting() {}
	};
	
	Calendar.MonthCalendar = MonthCalendar;
	Calendar.YearCalendar = YearCalendar;
	
	Calendar.displayName = "Calendar";
	module.exports = Calendar;
	


/***/ },
/* 129 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames () {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ },
/* 130 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Formatter Component for uxcore
	 * @author guanghong.wsj
	 *
	 * Copyright 2014-2015, Uxcore Team, Alinw.
	 * All rights reserved.
	 */
	
	module.exports = __webpack_require__(131);

/***/ },
/* 131 */
/***/ function(module, exports) {

	"use strict";
	
	/**
	 * Formatter Component for uxcore
	 * @author eternalsky
	 *
	 * Copyright 2014-2015, Uxcore Team, Alinw.
	 * All rights reserved.
	 */
	
	var Formatter = {};
	
	Formatter.date = function (str, pattern) {
	    var date = new Date(str);
	    if (Object.prototype.toString.call(date) === "[object Date]") {
	        // it is date
	
	        if (isNaN(date.getTime())) {
	            // invalid
	            console.warn('Formatter: invalid date');
	            return "";
	        }
	        pattern = pattern || 'YYYY-MM-DD';
	        var o = {
	            "M+": date.getMonth() + 1, //月份
	            "D+": date.getDate(), //日
	            "d+": date.getDate(), //日
	            "H+": date.getHours(), //小时
	            "h+": date.getHours(), //小时
	            "m+": date.getMinutes(), //分
	            "s+": date.getSeconds(), //秒
	            "Q+": Math.floor((date.getMonth() + 3) / 3), //季度
	            "q+": Math.floor((date.getMonth() + 3) / 3), //季度
	            "S": date.getMilliseconds() //毫秒
	        };
	        if (/(y+)/i.test(pattern)) {
	            pattern = pattern.replace(RegExp.$1, (date.getFullYear() + "").substr(4 - RegExp.$1.length));
	        }
	        for (var k in o) {
	            if (new RegExp("(" + k + ")").test(pattern)) pattern = pattern.replace(RegExp.$1, RegExp.$1.length == 1 ? o[k] : ("00" + o[k]).substr(("" + o[k]).length));
	        }
	        return pattern;
	    }
	    console.warn('Formatter: invalid date');
	    return "";
	};
	
	Formatter.money = function (str, delimiter, fixedNum) {
	    delimiter = delimiter || " ";
	    if (fixedNum) {
	        str = parseFloat(str).toFixed(fixedNum).toString();
	    }
	    if (str.indexOf(".") !== -1) {
	        return str.replace(/(\d)(?=(?:\d{3})+(\.))/g, function (match, $1) {
	            return $1 + delimiter;
	        }).replace(/(\d{3})(?![$|\.|\(|\s])/g, function (match, $1) {
	            return $1;
	        });
	    } else {
	        return str.replace(/(\d)(?=(?:\d{3})+$)/g, function (match, $1) {
	            return $1 + delimiter;
	        });
	    }
	};
	
	Formatter.cnmobile = function (str, delimiter) {
	    delimiter = delimiter || " ";
	    return str.replace(/^(\+?0?86)(?!$)/, "$1" + delimiter).replace(/(\d{4})(?!$)/g, "$1" + delimiter);
	};
	
	Formatter.card = function (str, delimiter) {
	    delimiter = delimiter || " ";
	    return str.replace(/(\d{4})(?!$)/g, "$1" + delimiter);
	};
	
	module.exports = Formatter;

/***/ },
/* 132 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Layer Component Style for tingle
	 * @author gnosaij,zhouquan.yezq
	 *
	 * Copyright 2014-2016, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	module.exports = __webpack_require__(133);
	


/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * Layer Component, all model tips's base backbone
	 * (Dialog, loading...) for tinglejs
	 * @author gnosaij
	 *
	 * Copyright 2014-2016, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	/* eslint-disable */
	var React = __webpack_require__(2);
	var classnames = __webpack_require__(134);
	
	var _require = __webpack_require__(116);
	
	var prefixClass = _require.prefixClass;
	var noop = _require.noop;
	
	var Mask = __webpack_require__(135);
	
	var Layer = function (_React$Component) {
	    _inherits(Layer, _React$Component);
	
	    function Layer(props) {
	        _classCallCheck(this, Layer);
	
	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Layer).call(this, props));
	
	        _this.state = {
	            visible: props.visible
	        };
	        return _this;
	    }
	
	    _createClass(Layer, [{
	        key: 'componentWillReceiveProps',
	        value: function componentWillReceiveProps(nextProps) {
	            var t = this;
	            var visible = nextProps.visible;
	            if (visible === false && t.props.onWillHide() === false) {
	                return;
	            }
	            this.setState({
	                visible: nextProps.visible
	            }, visible ? t.props.onDidShow : t.props.onDidHide);
	        }
	    }, {
	        key: 'getStyle',
	        value: function getStyle() {
	            var t = this;
	            var visible = t.state.visible;
	            var fullScreen = t.props.fullScreen;
	
	
	            var hasWidth = 'width' in t.props;
	            var hasHeight = 'height' in t.props;
	            var hasTop = 'top' in t.props;
	            var hasBottom = 'bottom' in t.props;
	            var hasLeft = 'left' in t.props;
	            var hasRight = 'right' in t.props;
	
	            var style = {
	                width: fullScreen || !hasWidth ? '100%' : t.props.width,
	                height: fullScreen ? '100%' : hasHeight ? t.props.height : 'auto'
	            };
	
	            if (fullScreen) {
	                style.top = 0;
	                style.left = 0;
	            } else {
	                if (hasTop) {
	                    style.top = t.props.top;
	                } else if (hasBottom) {
	                    style.bottom = t.props.bottom;
	                } else {
	                    style.top = '50%';
	                    style['WebkitTransform'] = (style['WebkitTransform'] || '') + ' translateY(-50%)';
	                    style['transform'] = (style['transform'] || '') + ' translateY(-50%)';
	                }
	
	                if (hasLeft) {
	                    style.left = t.props.left;
	                } else if (hasRight) {
	                    style.right = t.props.right;
	                } else {
	                    style.left = '50%';
	                    style['WebkitTransform'] = (style['WebkitTransform'] || '') + ' translateX(-50%)';
	                    style['transform'] = (style['transform'] || '') + ' translateX(-50%)';
	                }
	            }
	
	            style.zIndex = t.props.zIndex;
	            style.display = visible ? 'block' : 'none';
	
	            return style;
	        }
	    }, {
	        key: 'handleMaskClick',
	        value: function handleMaskClick() {
	            var t = this;
	
	            // 如果禁止了点击Mask关闭Layer, 则Mask的onWillHide必须返回false
	            if (t.props.maskCloseable === false || t.props.onWillHide() === false) {
	                return false;
	            }
	            t.setState({
	                visible: false
	            }, function () {
	                t.props.onDidHide();
	            });
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var t = this;
	            var _t$props = t.props;
	            var className = _t$props.className;
	            var style = _t$props.style;
	
	            var other = _objectWithoutProperties(_t$props, ['className', 'style']);
	
	            return React.createElement(
	                'div',
	                null,
	                React.createElement(
	                    'div',
	                    _extends({}, other, { className: classnames(prefixClass('layer'), _defineProperty({}, className, !!className)), style: t.getStyle() }),
	                    t.props.children
	                ),
	                this.props.hasMask && React.createElement(Mask, { zIndex: this.props.zIndex - 1,
	                    onWillHide: (t.props.onMaskClick || t.handleMaskClick).bind(t),
	                    closeable: true, visible: t.state.visible, opacity: 0.6 })
	            );
	        }
	    }]);
	
	    return Layer;
	}(React.Component);
	
	//zIndex no defalut value, we use auto generate way to handle it
	
	
	Layer.defaultProps = {
	    onDidShow: noop,
	    onWillHide: noop,
	    onDidHide: noop,
	    maskOpacity: 0.6,
	    maskCloseable: false,
	    hasMask: true,
	    visible: false,
	    zIndex: 1000,
	    fullScreen: false
	};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	Layer.propTypes = {
	    onDidShow: React.PropTypes.func,
	    onWillHide: React.PropTypes.func,
	    onMaskClick: React.PropTypes.func,
	    onDidHide: React.PropTypes.func,
	    maskOpacity: React.PropTypes.number,
	    maskCloseable: React.PropTypes.bool,
	    hasMask: React.PropTypes.bool,
	    visible: React.PropTypes.bool,
	    zIndex: React.PropTypes.number,
	    fullScreen: React.PropTypes.bool
	    // more: top, left, bottom, right, width, height
	};
	
	Layer.displayName = "Layer";
	
	module.exports = Layer;
	


/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames () {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Mask Component Style for tingle
	 * @author quanyun.mqy
	 *
	 * Copyright 2014-2016, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	module.exports = __webpack_require__(136);
	


/***/ },
/* 136 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * Mask Component for tingle
	 * @author quanyun.mqy
	 *
	 * Copyright 2014-2016, Tingle Team.
	 * All rights reserved.
	 */
	var classnames = __webpack_require__(137);
	
	var _require = __webpack_require__(116);
	
	var prefixClass = _require.prefixClass;
	var noop = _require.noop;
	
	var Mask = function (_React$Component) {
	    _inherits(Mask, _React$Component);
	
	    function Mask(props) {
	        _classCallCheck(this, Mask);
	
	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Mask).call(this, props));
	
	        _this.state = {
	            visible: props.visible
	        };
	        return _this;
	    }
	
	    _createClass(Mask, [{
	        key: 'handleClick',
	        value: function handleClick() {
	            var t = this;
	            if (t.props.closeable === false || t.props.onWillHide() === false) {
	                return;
	            }
	            t.setState({
	                visible: false
	            }, function () {
	                t.props.onDidHide();
	            });
	        }
	    }, {
	        key: 'componentWillReceiveProps',
	        value: function componentWillReceiveProps(nextProps) {
	            this.setState({
	                visible: nextProps.visible
	            });
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var t = this;
	            var _t$props = t.props;
	            var className = _t$props.className;
	            var opacity = _t$props.opacity;
	            var zIndex = _t$props.zIndex;
	            var style = _t$props.style;
	
	            var other = _objectWithoutProperties(_t$props, ['className', 'opacity', 'zIndex', 'style']);
	
	            var visible = t.state.visible;
	
	
	            return React.createElement('div', _extends({ ref: 'root', className: classnames(prefixClass('mask'), _defineProperty({
	                    visible: visible
	                }, className, !!className)), style: {
	                    backgroundColor: 'rgba(19, 21, 26, ' + opacity + ')',
	                    opacity: visible ? 1 : 0,
	                    zIndex: zIndex
	                }, onClick: t.handleClick.bind(t) }, other));
	        }
	    }]);
	
	    return Mask;
	}(React.Component);
	
	Mask.defaultProps = {
	    closeable: true,
	    opacity: 0.6,
	    onDidHide: noop,
	    onWillHide: noop,
	    visible: false,
	    zIndex: 900
	};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	Mask.propTypes = {
	    className: React.PropTypes.string,
	    closeable: React.PropTypes.bool,
	    opacity: React.PropTypes.number,
	    onDidHide: React.PropTypes.func,
	    onWillHide: React.PropTypes.func,
	    visible: React.PropTypes.bool,
	    zIndex: React.PropTypes.number
	};
	
	Mask.displayName = 'Mask';
	
	module.exports = Mask;
	


/***/ },
/* 137 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames () {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ },
/* 138 */
/***/ function(module, exports) {

	'use strict';
	
	module.exports = {
	  "zh-cn": {
	    weekTitle: ['日', '一', '二', '三', '四', '五', '六'],
	    monthTitle: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'],
	    dayTipMap: {
	      'FULL': '全天',
	      'AM': '上午',
	      'PM': '下午'
	    },
	    button: {
	      'confirm': '确定',
	      'cancel': '取消',
	      'clear': '重置'
	    }
	  },
	  "en": {
	    weekTitle: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
	    monthTitle: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
	    dayTipMap: {
	      'FULL': 'FULL',
	      'AM': 'AM',
	      'PM': 'PM'
	    },
	    button: {
	      'confirm': 'OK',
	      'cancel': 'Cancel',
	      'clear': 'reset'
	    }
	  }
	};
	


/***/ },
/* 139 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var classnames = __webpack_require__(129);
	var deepcopy = __webpack_require__(140);
	var deepEqual = __webpack_require__(148);
	var i18n = __webpack_require__(138);
	
	var Layer = __webpack_require__(132);
	var Formatter = __webpack_require__(130);
	var Month = __webpack_require__(151);
	var Year = __webpack_require__(152);
	
	var Context = __webpack_require__(116);
	var prefixClass = Context.prefixClass;
	
	var MonthCalendar = function (_React$Component) {
	  _inherits(MonthCalendar, _React$Component);
	
	  function MonthCalendar(props) {
	    _classCallCheck(this, MonthCalendar);
	
	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(MonthCalendar).call(this, props));
	
	    _this.value = deepcopy(props.value);
	    _this.state = {
	      value: deepcopy(props.value),
	      panel: 'month'
	    };
	    return _this;
	  }
	
	  _createClass(MonthCalendar, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      var t = this;
	      t.locale = i18n[t.props.locale];
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      var t = this;
	      if (!deepEqual(nextProps.value, t.value)) {
	        t.value = deepcopy(nextProps.value);
	        t.setState({
	          value: deepcopy(nextProps.value)
	        });
	      }
	    }
	  }, {
	    key: 'handleChange',
	    value: function handleChange(value) {
	      var t = this;
	      var newState = {
	        value: value
	      };
	      if (t.state.panel == 'year') {
	        newState['panel'] = 'month';
	      }
	      t.setState(newState);
	    }
	  }, {
	    key: 'handleCanel',
	    value: function handleCanel() {
	      var t = this;
	      t.props.onCancel();
	    }
	  }, {
	    key: 'handleClear',
	    value: function handleClear() {
	      var t = this;
	      t.setState({
	        value: deepcopy(t.props.value)
	      });
	    }
	  }, {
	    key: 'handleOk',
	    value: function handleOk() {
	      var t = this;
	      var _t$state = t.state;
	      var startDate = _t$state.startDate;
	      var endDate = _t$state.endDate;
	
	      if (!!t.state.value.startDate) {
	        t.props.onOk(t.state.value);
	      }
	    }
	  }, {
	    key: 'handlePanelChange',
	    value: function handlePanelChange() {
	      var t = this;
	      var panel = t.state.panel;
	
	      if (panel == 'month') {
	        panel = 'year';
	      }
	      t.setState({
	        panel: panel
	      });
	    }
	  }, {
	    key: 'renderTopPanel',
	    value: function renderTopPanel() {
	      return React.createElement(
	        'div',
	        { className: classnames(_defineProperty({}, prefixClass("top-panel"), true)) },
	        React.createElement(
	          'span',
	          { className: prefixClass("top-panel-cancel"), onClick: this.handleCanel.bind(this) },
	          this.locale['button']['cancel']
	        ),
	        React.createElement(
	          'span',
	          { className: prefixClass("top-panel-title") },
	          this.props.topPanelTitle || '选择时间'
	        ),
	        React.createElement(
	          'span',
	          { className: prefixClass("top-panel-confirm"), onClick: this.handleOk.bind(this) },
	          this.locale['button']['confirm']
	        )
	      );
	    }
	  }, {
	    key: 'renderPanel',
	    value: function renderPanel() {
	      var t = this;
	      var _t$state2 = t.state;
	      var value = _t$state2.value;
	      var panel = _t$state2.panel;
	      var _t$props = t.props;
	      var singleMode = _t$props.singleMode;
	      var locale = _t$props.locale;
	      var showHalfDay = _t$props.showHalfDay;
	
	      var panelProps = {
	        value: value,
	        onChange: t.handleChange.bind(t),
	        singleMode: singleMode,
	        locale: locale,
	        showHalfDay: showHalfDay,
	        onTitleClick: t.handlePanelChange.bind(t)
	      };
	      if (panel == 'month') {
	        return React.createElement(Month, panelProps);
	      } else {
	        panelProps['singleMode'] = true;
	        return React.createElement(Year, panelProps);
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _classnames2;
	
	      var t = this;
	      var _t$props2 = t.props;
	      var visible = _t$props2.visible;
	      var className = _t$props2.className;
	      var singleMode = _t$props2.singleMode;
	
	      var button = t.locale['button'];
	
	      // Calculate the height of the current container
	      var clientHeight = document.documentElement.clientHeight;
	      var height = 230;
	      !!t.props.showTopPanel && (height += 44);
	      !!t.props.showHalfDay && (height += 120);
	
	      return React.createElement(
	        Layer,
	        { visible: visible },
	        React.createElement(
	          'div',
	          { className: prefixClass("calendar-container"), style: {
	              height: clientHeight,
	              // Scale the view to ensure user can see the whole widgit 
	              // on the small screen device
	              transform: height >= clientHeight ? 'scale(' + ((clientHeight / height).toFixed(3) - 0.15) + ')' : ''
	            } },
	          React.createElement(
	            'div',
	            { className: classnames((_classnames2 = {}, _defineProperty(_classnames2, prefixClass("calendar"), true), _defineProperty(_classnames2, className, !!className), _classnames2)), style: {
	                display: visible ? 'block' : 'none',
	                height: height
	              } },
	            t.props.showTopPanel && t.renderTopPanel(),
	            t.renderPanel()
	          )
	        )
	      );
	    }
	  }]);
	
	  return MonthCalendar;
	}(React.Component);
	
	MonthCalendar.displayName = "MonthCalendar";
	MonthCalendar.defaultProps = {
	  locale: 'zh-cn',
	  onCancel: function onCancel() {},
	  onOk: function onOk() {},
	  value: {
	    startDate: new Date().getTime(),
	    startDateType: 'FULL',
	    endDate: new Date().getTime(),
	    endDateType: 'FULL'
	  },
	  showTopPanel: true,
	  singleMode: false
	};
	MonthCalendar.propTypes = {
	  value: React.PropTypes.object,
	  locale: React.PropTypes.string,
	  onCancel: React.PropTypes.func,
	  onOk: React.PropTypes.func,
	  visible: React.PropTypes.bool,
	  singleMode: React.PropTypes.bool
	};
	
	module.exports = MonthCalendar;
	


/***/ },
/* 140 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(141);


/***/ },
/* 141 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _copy = __webpack_require__(142);
	
	var _polyfill = __webpack_require__(147);
	
	function defaultCustomizer(target) {
	  return void 0;
	}
	
	function deepcopy(target) {
	  var customizer = arguments.length <= 1 || arguments[1] === void 0 ? defaultCustomizer : arguments[1];
	
	  if (target === null) {
	    // copy null
	    return null;
	  }
	
	  var resultValue = (0, _copy.copyValue)(target);
	
	  if (resultValue !== null) {
	    // copy some primitive types
	    return resultValue;
	  }
	
	  var resultCollection = (0, _copy.copyCollection)(target, customizer),
	      clone = resultCollection !== null ? resultCollection : target;
	
	  var visited = [target],
	      reference = [clone];
	
	  // recursively copy from collection
	  return recursiveCopy(target, customizer, clone, visited, reference);
	}
	
	function recursiveCopy(target, customizer, clone, visited, reference) {
	  if (target === null) {
	    // copy null
	    return null;
	  }
	
	  var resultValue = (0, _copy.copyValue)(target);
	
	  if (resultValue !== null) {
	    // copy some primitive types
	    return resultValue;
	  }
	
	  var keys = (0, _polyfill.getKeys)(target).concat((0, _polyfill.getSymbols)(target));
	
	  var i = void 0,
	      len = void 0;
	
	  var key = void 0,
	      value = void 0,
	      index = void 0,
	      resultCopy = void 0,
	      result = void 0,
	      ref = void 0;
	
	  for (i = 0, len = keys.length; i < len; ++i) {
	    key = keys[i];
	    value = target[key];
	    index = (0, _polyfill.indexOf)(visited, value);
	
	    resultCopy = void 0;
	    result = void 0;
	    ref = void 0;
	
	    if (index === -1) {
	      resultCopy = (0, _copy.copy)(value, customizer);
	      result = resultCopy !== null ? resultCopy : value;
	
	      if (value !== null && /^(?:function|object)$/.test(typeof value)) {
	        visited.push(value);
	        reference.push(result);
	      }
	    } else {
	      // circular reference
	      ref = reference[index];
	    }
	
	    clone[key] = ref || recursiveCopy(value, customizer, result, visited, reference);
	  }
	
	  return clone;
	}
	
	exports['default'] = deepcopy;
	module.exports = exports['default'];

/***/ },
/* 142 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {'use strict';
	
	exports.__esModule = true;
	exports.copyValue = exports.copyCollection = exports.copy = void 0;
	
	var _polyfill = __webpack_require__(147);
	
	var toString = Object.prototype.toString;
	
	function copy(target, customizer) {
	  var resultValue = copyValue(target);
	
	  if (resultValue !== null) {
	    return resultValue;
	  }
	
	  return copyCollection(target, customizer);
	}
	
	function copyCollection(target, customizer) {
	  if (typeof customizer !== 'function') {
	    throw new TypeError('customizer is must be a Function');
	  }
	
	  if (typeof target === 'function') {
	    var source = String(target);
	
	    // NOTE:
	    //
	    //   https://gist.github.com/jdalton/5e34d890105aca44399f
	    //
	    //   - https://gist.github.com/jdalton/5e34d890105aca44399f#gistcomment-1283831
	    //   - http://es5.github.io/#x15
	    //
	    //   native functions does not have prototype:
	    //
	    //       Object.toString.prototype  // => undefined
	    //       (function() {}).prototype  // => {}
	    //
	    //   but cannot detect native constructor:
	    //
	    //       typeof Object     // => 'function'
	    //       Object.prototype  // => {}
	    //
	    //   and cannot detect null binded function:
	    //
	    //       String(Math.abs)
	    //         // => 'function abs() { [native code] }'
	    //
	    //     Firefox, Safari:
	    //       String((function abs() {}).bind(null))
	    //         // => 'function abs() { [native code] }'
	    //
	    //     Chrome:
	    //       String((function abs() {}).bind(null))
	    //         // => 'function () { [native code] }'
	    if (/^\s*function\s*\S*\([^\)]*\)\s*{\s*\[native code\]\s*}/.test(source)) {
	      // native function
	      return target;
	    } else {
	      // user defined function
	      return new Function('return ' + String(source))();
	    }
	  }
	
	  var targetClass = toString.call(target);
	
	  if (targetClass === '[object Array]') {
	    return [];
	  }
	
	  if (targetClass === '[object Object]' && target.constructor === Object) {
	    return {};
	  }
	
	  if (targetClass === '[object Date]') {
	    // NOTE:
	    //
	    //   Firefox need to convert
	    //
	    //   Firefox:
	    //     var date = new Date;
	    //     +date;            // 1420909365967
	    //     +new Date(date);  // 1420909365000
	    //     +new Date(+date); // 1420909365967
	    //
	    //   Chrome:
	    //     var date = new Date;
	    //     +date;            // 1420909757913
	    //     +new Date(date);  // 1420909757913
	    //     +new Date(+date); // 1420909757913
	    return new Date(target.getTime());
	  }
	
	  if (targetClass === '[object RegExp]') {
	    // NOTE:
	    //
	    //   Chrome, Safari:
	    //     (new RegExp).source => "(?:)"
	    //
	    //   Firefox:
	    //     (new RegExp).source => ""
	    //
	    //   Chrome, Safari, Firefox:
	    //     String(new RegExp) => "/(?:)/"
	    var regexpText = String(target),
	        slashIndex = regexpText.lastIndexOf('/');
	
	    return new RegExp(regexpText.slice(1, slashIndex), regexpText.slice(slashIndex + 1));
	  }
	
	  if ((0, _polyfill.isBuffer)(target)) {
	    var buffer = new Buffer(target.length);
	
	    target.copy(buffer);
	
	    return buffer;
	  }
	
	  var customizerResult = customizer(target);
	
	  if (customizerResult !== void 0) {
	    return customizerResult;
	  }
	
	  return null;
	}
	
	function copyValue(target) {
	  var targetType = typeof target;
	
	  // copy String, Number, Boolean, undefined and Symbol
	  // without null and Function
	  if (target !== null && targetType !== 'object' && targetType !== 'function') {
	    return target;
	  }
	
	  return null;
	}
	
	exports.copy = copy;
	exports.copyCollection = copyCollection;
	exports.copyValue = copyValue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(143).Buffer))

/***/ },
/* 143 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer, global) {/*!
	 * The buffer module from node.js, for the browser.
	 *
	 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
	 * @license  MIT
	 */
	/* eslint-disable no-proto */
	
	'use strict'
	
	var base64 = __webpack_require__(144)
	var ieee754 = __webpack_require__(145)
	var isArray = __webpack_require__(146)
	
	exports.Buffer = Buffer
	exports.SlowBuffer = SlowBuffer
	exports.INSPECT_MAX_BYTES = 50
	Buffer.poolSize = 8192 // not used by this implementation
	
	var rootParent = {}
	
	/**
	 * If `Buffer.TYPED_ARRAY_SUPPORT`:
	 *   === true    Use Uint8Array implementation (fastest)
	 *   === false   Use Object implementation (most compatible, even IE6)
	 *
	 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
	 * Opera 11.6+, iOS 4.2+.
	 *
	 * Due to various browser bugs, sometimes the Object implementation will be used even
	 * when the browser supports typed arrays.
	 *
	 * Note:
	 *
	 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
	 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
	 *
	 *   - Safari 5-7 lacks support for changing the `Object.prototype.constructor` property
	 *     on objects.
	 *
	 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
	 *
	 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
	 *     incorrect length in some situations.
	
	 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
	 * get the Object implementation, which is slower but behaves correctly.
	 */
	Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
	  ? global.TYPED_ARRAY_SUPPORT
	  : typedArraySupport()
	
	function typedArraySupport () {
	  function Bar () {}
	  try {
	    var arr = new Uint8Array(1)
	    arr.foo = function () { return 42 }
	    arr.constructor = Bar
	    return arr.foo() === 42 && // typed array instances can be augmented
	        arr.constructor === Bar && // constructor can be set
	        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
	        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
	  } catch (e) {
	    return false
	  }
	}
	
	function kMaxLength () {
	  return Buffer.TYPED_ARRAY_SUPPORT
	    ? 0x7fffffff
	    : 0x3fffffff
	}
	
	/**
	 * Class: Buffer
	 * =============
	 *
	 * The Buffer constructor returns instances of `Uint8Array` that are augmented
	 * with function properties for all the node `Buffer` API functions. We use
	 * `Uint8Array` so that square bracket notation works as expected -- it returns
	 * a single octet.
	 *
	 * By augmenting the instances, we can avoid modifying the `Uint8Array`
	 * prototype.
	 */
	function Buffer (arg) {
	  if (!(this instanceof Buffer)) {
	    // Avoid going through an ArgumentsAdaptorTrampoline in the common case.
	    if (arguments.length > 1) return new Buffer(arg, arguments[1])
	    return new Buffer(arg)
	  }
	
	  if (!Buffer.TYPED_ARRAY_SUPPORT) {
	    this.length = 0
	    this.parent = undefined
	  }
	
	  // Common case.
	  if (typeof arg === 'number') {
	    return fromNumber(this, arg)
	  }
	
	  // Slightly less common case.
	  if (typeof arg === 'string') {
	    return fromString(this, arg, arguments.length > 1 ? arguments[1] : 'utf8')
	  }
	
	  // Unusual.
	  return fromObject(this, arg)
	}
	
	function fromNumber (that, length) {
	  that = allocate(that, length < 0 ? 0 : checked(length) | 0)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) {
	    for (var i = 0; i < length; i++) {
	      that[i] = 0
	    }
	  }
	  return that
	}
	
	function fromString (that, string, encoding) {
	  if (typeof encoding !== 'string' || encoding === '') encoding = 'utf8'
	
	  // Assumption: byteLength() return value is always < kMaxLength.
	  var length = byteLength(string, encoding) | 0
	  that = allocate(that, length)
	
	  that.write(string, encoding)
	  return that
	}
	
	function fromObject (that, object) {
	  if (Buffer.isBuffer(object)) return fromBuffer(that, object)
	
	  if (isArray(object)) return fromArray(that, object)
	
	  if (object == null) {
	    throw new TypeError('must start with number, buffer, array or string')
	  }
	
	  if (typeof ArrayBuffer !== 'undefined') {
	    if (object.buffer instanceof ArrayBuffer) {
	      return fromTypedArray(that, object)
	    }
	    if (object instanceof ArrayBuffer) {
	      return fromArrayBuffer(that, object)
	    }
	  }
	
	  if (object.length) return fromArrayLike(that, object)
	
	  return fromJsonObject(that, object)
	}
	
	function fromBuffer (that, buffer) {
	  var length = checked(buffer.length) | 0
	  that = allocate(that, length)
	  buffer.copy(that, 0, 0, length)
	  return that
	}
	
	function fromArray (that, array) {
	  var length = checked(array.length) | 0
	  that = allocate(that, length)
	  for (var i = 0; i < length; i += 1) {
	    that[i] = array[i] & 255
	  }
	  return that
	}
	
	// Duplicate of fromArray() to keep fromArray() monomorphic.
	function fromTypedArray (that, array) {
	  var length = checked(array.length) | 0
	  that = allocate(that, length)
	  // Truncating the elements is probably not what people expect from typed
	  // arrays with BYTES_PER_ELEMENT > 1 but it's compatible with the behavior
	  // of the old Buffer constructor.
	  for (var i = 0; i < length; i += 1) {
	    that[i] = array[i] & 255
	  }
	  return that
	}
	
	function fromArrayBuffer (that, array) {
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    // Return an augmented `Uint8Array` instance, for best performance
	    array.byteLength
	    that = Buffer._augment(new Uint8Array(array))
	  } else {
	    // Fallback: Return an object instance of the Buffer class
	    that = fromTypedArray(that, new Uint8Array(array))
	  }
	  return that
	}
	
	function fromArrayLike (that, array) {
	  var length = checked(array.length) | 0
	  that = allocate(that, length)
	  for (var i = 0; i < length; i += 1) {
	    that[i] = array[i] & 255
	  }
	  return that
	}
	
	// Deserialize { type: 'Buffer', data: [1,2,3,...] } into a Buffer object.
	// Returns a zero-length buffer for inputs that don't conform to the spec.
	function fromJsonObject (that, object) {
	  var array
	  var length = 0
	
	  if (object.type === 'Buffer' && isArray(object.data)) {
	    array = object.data
	    length = checked(array.length) | 0
	  }
	  that = allocate(that, length)
	
	  for (var i = 0; i < length; i += 1) {
	    that[i] = array[i] & 255
	  }
	  return that
	}
	
	if (Buffer.TYPED_ARRAY_SUPPORT) {
	  Buffer.prototype.__proto__ = Uint8Array.prototype
	  Buffer.__proto__ = Uint8Array
	} else {
	  // pre-set for values that may exist in the future
	  Buffer.prototype.length = undefined
	  Buffer.prototype.parent = undefined
	}
	
	function allocate (that, length) {
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    // Return an augmented `Uint8Array` instance, for best performance
	    that = Buffer._augment(new Uint8Array(length))
	    that.__proto__ = Buffer.prototype
	  } else {
	    // Fallback: Return an object instance of the Buffer class
	    that.length = length
	    that._isBuffer = true
	  }
	
	  var fromPool = length !== 0 && length <= Buffer.poolSize >>> 1
	  if (fromPool) that.parent = rootParent
	
	  return that
	}
	
	function checked (length) {
	  // Note: cannot use `length < kMaxLength` here because that fails when
	  // length is NaN (which is otherwise coerced to zero.)
	  if (length >= kMaxLength()) {
	    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
	                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
	  }
	  return length | 0
	}
	
	function SlowBuffer (subject, encoding) {
	  if (!(this instanceof SlowBuffer)) return new SlowBuffer(subject, encoding)
	
	  var buf = new Buffer(subject, encoding)
	  delete buf.parent
	  return buf
	}
	
	Buffer.isBuffer = function isBuffer (b) {
	  return !!(b != null && b._isBuffer)
	}
	
	Buffer.compare = function compare (a, b) {
	  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
	    throw new TypeError('Arguments must be Buffers')
	  }
	
	  if (a === b) return 0
	
	  var x = a.length
	  var y = b.length
	
	  var i = 0
	  var len = Math.min(x, y)
	  while (i < len) {
	    if (a[i] !== b[i]) break
	
	    ++i
	  }
	
	  if (i !== len) {
	    x = a[i]
	    y = b[i]
	  }
	
	  if (x < y) return -1
	  if (y < x) return 1
	  return 0
	}
	
	Buffer.isEncoding = function isEncoding (encoding) {
	  switch (String(encoding).toLowerCase()) {
	    case 'hex':
	    case 'utf8':
	    case 'utf-8':
	    case 'ascii':
	    case 'binary':
	    case 'base64':
	    case 'raw':
	    case 'ucs2':
	    case 'ucs-2':
	    case 'utf16le':
	    case 'utf-16le':
	      return true
	    default:
	      return false
	  }
	}
	
	Buffer.concat = function concat (list, length) {
	  if (!isArray(list)) throw new TypeError('list argument must be an Array of Buffers.')
	
	  if (list.length === 0) {
	    return new Buffer(0)
	  }
	
	  var i
	  if (length === undefined) {
	    length = 0
	    for (i = 0; i < list.length; i++) {
	      length += list[i].length
	    }
	  }
	
	  var buf = new Buffer(length)
	  var pos = 0
	  for (i = 0; i < list.length; i++) {
	    var item = list[i]
	    item.copy(buf, pos)
	    pos += item.length
	  }
	  return buf
	}
	
	function byteLength (string, encoding) {
	  if (typeof string !== 'string') string = '' + string
	
	  var len = string.length
	  if (len === 0) return 0
	
	  // Use a for loop to avoid recursion
	  var loweredCase = false
	  for (;;) {
	    switch (encoding) {
	      case 'ascii':
	      case 'binary':
	      // Deprecated
	      case 'raw':
	      case 'raws':
	        return len
	      case 'utf8':
	      case 'utf-8':
	        return utf8ToBytes(string).length
	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return len * 2
	      case 'hex':
	        return len >>> 1
	      case 'base64':
	        return base64ToBytes(string).length
	      default:
	        if (loweredCase) return utf8ToBytes(string).length // assume utf8
	        encoding = ('' + encoding).toLowerCase()
	        loweredCase = true
	    }
	  }
	}
	Buffer.byteLength = byteLength
	
	function slowToString (encoding, start, end) {
	  var loweredCase = false
	
	  start = start | 0
	  end = end === undefined || end === Infinity ? this.length : end | 0
	
	  if (!encoding) encoding = 'utf8'
	  if (start < 0) start = 0
	  if (end > this.length) end = this.length
	  if (end <= start) return ''
	
	  while (true) {
	    switch (encoding) {
	      case 'hex':
	        return hexSlice(this, start, end)
	
	      case 'utf8':
	      case 'utf-8':
	        return utf8Slice(this, start, end)
	
	      case 'ascii':
	        return asciiSlice(this, start, end)
	
	      case 'binary':
	        return binarySlice(this, start, end)
	
	      case 'base64':
	        return base64Slice(this, start, end)
	
	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return utf16leSlice(this, start, end)
	
	      default:
	        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
	        encoding = (encoding + '').toLowerCase()
	        loweredCase = true
	    }
	  }
	}
	
	Buffer.prototype.toString = function toString () {
	  var length = this.length | 0
	  if (length === 0) return ''
	  if (arguments.length === 0) return utf8Slice(this, 0, length)
	  return slowToString.apply(this, arguments)
	}
	
	Buffer.prototype.equals = function equals (b) {
	  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
	  if (this === b) return true
	  return Buffer.compare(this, b) === 0
	}
	
	Buffer.prototype.inspect = function inspect () {
	  var str = ''
	  var max = exports.INSPECT_MAX_BYTES
	  if (this.length > 0) {
	    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
	    if (this.length > max) str += ' ... '
	  }
	  return '<Buffer ' + str + '>'
	}
	
	Buffer.prototype.compare = function compare (b) {
	  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
	  if (this === b) return 0
	  return Buffer.compare(this, b)
	}
	
	Buffer.prototype.indexOf = function indexOf (val, byteOffset) {
	  if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff
	  else if (byteOffset < -0x80000000) byteOffset = -0x80000000
	  byteOffset >>= 0
	
	  if (this.length === 0) return -1
	  if (byteOffset >= this.length) return -1
	
	  // Negative offsets start from the end of the buffer
	  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)
	
	  if (typeof val === 'string') {
	    if (val.length === 0) return -1 // special case: looking for empty string always fails
	    return String.prototype.indexOf.call(this, val, byteOffset)
	  }
	  if (Buffer.isBuffer(val)) {
	    return arrayIndexOf(this, val, byteOffset)
	  }
	  if (typeof val === 'number') {
	    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {
	      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)
	    }
	    return arrayIndexOf(this, [ val ], byteOffset)
	  }
	
	  function arrayIndexOf (arr, val, byteOffset) {
	    var foundIndex = -1
	    for (var i = 0; byteOffset + i < arr.length; i++) {
	      if (arr[byteOffset + i] === val[foundIndex === -1 ? 0 : i - foundIndex]) {
	        if (foundIndex === -1) foundIndex = i
	        if (i - foundIndex + 1 === val.length) return byteOffset + foundIndex
	      } else {
	        foundIndex = -1
	      }
	    }
	    return -1
	  }
	
	  throw new TypeError('val must be string, number or Buffer')
	}
	
	// `get` is deprecated
	Buffer.prototype.get = function get (offset) {
	  console.log('.get() is deprecated. Access using array indexes instead.')
	  return this.readUInt8(offset)
	}
	
	// `set` is deprecated
	Buffer.prototype.set = function set (v, offset) {
	  console.log('.set() is deprecated. Access using array indexes instead.')
	  return this.writeUInt8(v, offset)
	}
	
	function hexWrite (buf, string, offset, length) {
	  offset = Number(offset) || 0
	  var remaining = buf.length - offset
	  if (!length) {
	    length = remaining
	  } else {
	    length = Number(length)
	    if (length > remaining) {
	      length = remaining
	    }
	  }
	
	  // must be an even number of digits
	  var strLen = string.length
	  if (strLen % 2 !== 0) throw new Error('Invalid hex string')
	
	  if (length > strLen / 2) {
	    length = strLen / 2
	  }
	  for (var i = 0; i < length; i++) {
	    var parsed = parseInt(string.substr(i * 2, 2), 16)
	    if (isNaN(parsed)) throw new Error('Invalid hex string')
	    buf[offset + i] = parsed
	  }
	  return i
	}
	
	function utf8Write (buf, string, offset, length) {
	  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
	}
	
	function asciiWrite (buf, string, offset, length) {
	  return blitBuffer(asciiToBytes(string), buf, offset, length)
	}
	
	function binaryWrite (buf, string, offset, length) {
	  return asciiWrite(buf, string, offset, length)
	}
	
	function base64Write (buf, string, offset, length) {
	  return blitBuffer(base64ToBytes(string), buf, offset, length)
	}
	
	function ucs2Write (buf, string, offset, length) {
	  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
	}
	
	Buffer.prototype.write = function write (string, offset, length, encoding) {
	  // Buffer#write(string)
	  if (offset === undefined) {
	    encoding = 'utf8'
	    length = this.length
	    offset = 0
	  // Buffer#write(string, encoding)
	  } else if (length === undefined && typeof offset === 'string') {
	    encoding = offset
	    length = this.length
	    offset = 0
	  // Buffer#write(string, offset[, length][, encoding])
	  } else if (isFinite(offset)) {
	    offset = offset | 0
	    if (isFinite(length)) {
	      length = length | 0
	      if (encoding === undefined) encoding = 'utf8'
	    } else {
	      encoding = length
	      length = undefined
	    }
	  // legacy write(string, encoding, offset, length) - remove in v0.13
	  } else {
	    var swap = encoding
	    encoding = offset
	    offset = length | 0
	    length = swap
	  }
	
	  var remaining = this.length - offset
	  if (length === undefined || length > remaining) length = remaining
	
	  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
	    throw new RangeError('attempt to write outside buffer bounds')
	  }
	
	  if (!encoding) encoding = 'utf8'
	
	  var loweredCase = false
	  for (;;) {
	    switch (encoding) {
	      case 'hex':
	        return hexWrite(this, string, offset, length)
	
	      case 'utf8':
	      case 'utf-8':
	        return utf8Write(this, string, offset, length)
	
	      case 'ascii':
	        return asciiWrite(this, string, offset, length)
	
	      case 'binary':
	        return binaryWrite(this, string, offset, length)
	
	      case 'base64':
	        // Warning: maxLength not taken into account in base64Write
	        return base64Write(this, string, offset, length)
	
	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return ucs2Write(this, string, offset, length)
	
	      default:
	        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
	        encoding = ('' + encoding).toLowerCase()
	        loweredCase = true
	    }
	  }
	}
	
	Buffer.prototype.toJSON = function toJSON () {
	  return {
	    type: 'Buffer',
	    data: Array.prototype.slice.call(this._arr || this, 0)
	  }
	}
	
	function base64Slice (buf, start, end) {
	  if (start === 0 && end === buf.length) {
	    return base64.fromByteArray(buf)
	  } else {
	    return base64.fromByteArray(buf.slice(start, end))
	  }
	}
	
	function utf8Slice (buf, start, end) {
	  end = Math.min(buf.length, end)
	  var res = []
	
	  var i = start
	  while (i < end) {
	    var firstByte = buf[i]
	    var codePoint = null
	    var bytesPerSequence = (firstByte > 0xEF) ? 4
	      : (firstByte > 0xDF) ? 3
	      : (firstByte > 0xBF) ? 2
	      : 1
	
	    if (i + bytesPerSequence <= end) {
	      var secondByte, thirdByte, fourthByte, tempCodePoint
	
	      switch (bytesPerSequence) {
	        case 1:
	          if (firstByte < 0x80) {
	            codePoint = firstByte
	          }
	          break
	        case 2:
	          secondByte = buf[i + 1]
	          if ((secondByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
	            if (tempCodePoint > 0x7F) {
	              codePoint = tempCodePoint
	            }
	          }
	          break
	        case 3:
	          secondByte = buf[i + 1]
	          thirdByte = buf[i + 2]
	          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
	            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
	              codePoint = tempCodePoint
	            }
	          }
	          break
	        case 4:
	          secondByte = buf[i + 1]
	          thirdByte = buf[i + 2]
	          fourthByte = buf[i + 3]
	          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
	            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
	              codePoint = tempCodePoint
	            }
	          }
	      }
	    }
	
	    if (codePoint === null) {
	      // we did not generate a valid codePoint so insert a
	      // replacement char (U+FFFD) and advance only 1 byte
	      codePoint = 0xFFFD
	      bytesPerSequence = 1
	    } else if (codePoint > 0xFFFF) {
	      // encode to utf16 (surrogate pair dance)
	      codePoint -= 0x10000
	      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
	      codePoint = 0xDC00 | codePoint & 0x3FF
	    }
	
	    res.push(codePoint)
	    i += bytesPerSequence
	  }
	
	  return decodeCodePointsArray(res)
	}
	
	// Based on http://stackoverflow.com/a/22747272/680742, the browser with
	// the lowest limit is Chrome, with 0x10000 args.
	// We go 1 magnitude less, for safety
	var MAX_ARGUMENTS_LENGTH = 0x1000
	
	function decodeCodePointsArray (codePoints) {
	  var len = codePoints.length
	  if (len <= MAX_ARGUMENTS_LENGTH) {
	    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
	  }
	
	  // Decode in chunks to avoid "call stack size exceeded".
	  var res = ''
	  var i = 0
	  while (i < len) {
	    res += String.fromCharCode.apply(
	      String,
	      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
	    )
	  }
	  return res
	}
	
	function asciiSlice (buf, start, end) {
	  var ret = ''
	  end = Math.min(buf.length, end)
	
	  for (var i = start; i < end; i++) {
	    ret += String.fromCharCode(buf[i] & 0x7F)
	  }
	  return ret
	}
	
	function binarySlice (buf, start, end) {
	  var ret = ''
	  end = Math.min(buf.length, end)
	
	  for (var i = start; i < end; i++) {
	    ret += String.fromCharCode(buf[i])
	  }
	  return ret
	}
	
	function hexSlice (buf, start, end) {
	  var len = buf.length
	
	  if (!start || start < 0) start = 0
	  if (!end || end < 0 || end > len) end = len
	
	  var out = ''
	  for (var i = start; i < end; i++) {
	    out += toHex(buf[i])
	  }
	  return out
	}
	
	function utf16leSlice (buf, start, end) {
	  var bytes = buf.slice(start, end)
	  var res = ''
	  for (var i = 0; i < bytes.length; i += 2) {
	    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
	  }
	  return res
	}
	
	Buffer.prototype.slice = function slice (start, end) {
	  var len = this.length
	  start = ~~start
	  end = end === undefined ? len : ~~end
	
	  if (start < 0) {
	    start += len
	    if (start < 0) start = 0
	  } else if (start > len) {
	    start = len
	  }
	
	  if (end < 0) {
	    end += len
	    if (end < 0) end = 0
	  } else if (end > len) {
	    end = len
	  }
	
	  if (end < start) end = start
	
	  var newBuf
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    newBuf = Buffer._augment(this.subarray(start, end))
	  } else {
	    var sliceLen = end - start
	    newBuf = new Buffer(sliceLen, undefined)
	    for (var i = 0; i < sliceLen; i++) {
	      newBuf[i] = this[i + start]
	    }
	  }
	
	  if (newBuf.length) newBuf.parent = this.parent || this
	
	  return newBuf
	}
	
	/*
	 * Need to make sure that buffer isn't trying to write out of bounds.
	 */
	function checkOffset (offset, ext, length) {
	  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
	  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
	}
	
	Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)
	
	  var val = this[offset]
	  var mul = 1
	  var i = 0
	  while (++i < byteLength && (mul *= 0x100)) {
	    val += this[offset + i] * mul
	  }
	
	  return val
	}
	
	Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) {
	    checkOffset(offset, byteLength, this.length)
	  }
	
	  var val = this[offset + --byteLength]
	  var mul = 1
	  while (byteLength > 0 && (mul *= 0x100)) {
	    val += this[offset + --byteLength] * mul
	  }
	
	  return val
	}
	
	Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 1, this.length)
	  return this[offset]
	}
	
	Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  return this[offset] | (this[offset + 1] << 8)
	}
	
	Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  return (this[offset] << 8) | this[offset + 1]
	}
	
	Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	
	  return ((this[offset]) |
	      (this[offset + 1] << 8) |
	      (this[offset + 2] << 16)) +
	      (this[offset + 3] * 0x1000000)
	}
	
	Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	
	  return (this[offset] * 0x1000000) +
	    ((this[offset + 1] << 16) |
	    (this[offset + 2] << 8) |
	    this[offset + 3])
	}
	
	Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)
	
	  var val = this[offset]
	  var mul = 1
	  var i = 0
	  while (++i < byteLength && (mul *= 0x100)) {
	    val += this[offset + i] * mul
	  }
	  mul *= 0x80
	
	  if (val >= mul) val -= Math.pow(2, 8 * byteLength)
	
	  return val
	}
	
	Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)
	
	  var i = byteLength
	  var mul = 1
	  var val = this[offset + --i]
	  while (i > 0 && (mul *= 0x100)) {
	    val += this[offset + --i] * mul
	  }
	  mul *= 0x80
	
	  if (val >= mul) val -= Math.pow(2, 8 * byteLength)
	
	  return val
	}
	
	Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 1, this.length)
	  if (!(this[offset] & 0x80)) return (this[offset])
	  return ((0xff - this[offset] + 1) * -1)
	}
	
	Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  var val = this[offset] | (this[offset + 1] << 8)
	  return (val & 0x8000) ? val | 0xFFFF0000 : val
	}
	
	Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  var val = this[offset + 1] | (this[offset] << 8)
	  return (val & 0x8000) ? val | 0xFFFF0000 : val
	}
	
	Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	
	  return (this[offset]) |
	    (this[offset + 1] << 8) |
	    (this[offset + 2] << 16) |
	    (this[offset + 3] << 24)
	}
	
	Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	
	  return (this[offset] << 24) |
	    (this[offset + 1] << 16) |
	    (this[offset + 2] << 8) |
	    (this[offset + 3])
	}
	
	Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	  return ieee754.read(this, offset, true, 23, 4)
	}
	
	Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	  return ieee754.read(this, offset, false, 23, 4)
	}
	
	Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 8, this.length)
	  return ieee754.read(this, offset, true, 52, 8)
	}
	
	Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 8, this.length)
	  return ieee754.read(this, offset, false, 52, 8)
	}
	
	function checkInt (buf, value, offset, ext, max, min) {
	  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')
	  if (value > max || value < min) throw new RangeError('value is out of bounds')
	  if (offset + ext > buf.length) throw new RangeError('index out of range')
	}
	
	Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)
	
	  var mul = 1
	  var i = 0
	  this[offset] = value & 0xFF
	  while (++i < byteLength && (mul *= 0x100)) {
	    this[offset + i] = (value / mul) & 0xFF
	  }
	
	  return offset + byteLength
	}
	
	Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)
	
	  var i = byteLength - 1
	  var mul = 1
	  this[offset + i] = value & 0xFF
	  while (--i >= 0 && (mul *= 0x100)) {
	    this[offset + i] = (value / mul) & 0xFF
	  }
	
	  return offset + byteLength
	}
	
	Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
	  this[offset] = (value & 0xff)
	  return offset + 1
	}
	
	function objectWriteUInt16 (buf, value, offset, littleEndian) {
	  if (value < 0) value = 0xffff + value + 1
	  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {
	    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
	      (littleEndian ? i : 1 - i) * 8
	  }
	}
	
	Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	  } else {
	    objectWriteUInt16(this, value, offset, true)
	  }
	  return offset + 2
	}
	
	Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 8)
	    this[offset + 1] = (value & 0xff)
	  } else {
	    objectWriteUInt16(this, value, offset, false)
	  }
	  return offset + 2
	}
	
	function objectWriteUInt32 (buf, value, offset, littleEndian) {
	  if (value < 0) value = 0xffffffff + value + 1
	  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {
	    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
	  }
	}
	
	Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset + 3] = (value >>> 24)
	    this[offset + 2] = (value >>> 16)
	    this[offset + 1] = (value >>> 8)
	    this[offset] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, true)
	  }
	  return offset + 4
	}
	
	Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 24)
	    this[offset + 1] = (value >>> 16)
	    this[offset + 2] = (value >>> 8)
	    this[offset + 3] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, false)
	  }
	  return offset + 4
	}
	
	Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) {
	    var limit = Math.pow(2, 8 * byteLength - 1)
	
	    checkInt(this, value, offset, byteLength, limit - 1, -limit)
	  }
	
	  var i = 0
	  var mul = 1
	  var sub = value < 0 ? 1 : 0
	  this[offset] = value & 0xFF
	  while (++i < byteLength && (mul *= 0x100)) {
	    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
	  }
	
	  return offset + byteLength
	}
	
	Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) {
	    var limit = Math.pow(2, 8 * byteLength - 1)
	
	    checkInt(this, value, offset, byteLength, limit - 1, -limit)
	  }
	
	  var i = byteLength - 1
	  var mul = 1
	  var sub = value < 0 ? 1 : 0
	  this[offset + i] = value & 0xFF
	  while (--i >= 0 && (mul *= 0x100)) {
	    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
	  }
	
	  return offset + byteLength
	}
	
	Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
	  if (value < 0) value = 0xff + value + 1
	  this[offset] = (value & 0xff)
	  return offset + 1
	}
	
	Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	  } else {
	    objectWriteUInt16(this, value, offset, true)
	  }
	  return offset + 2
	}
	
	Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 8)
	    this[offset + 1] = (value & 0xff)
	  } else {
	    objectWriteUInt16(this, value, offset, false)
	  }
	  return offset + 2
	}
	
	Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	    this[offset + 2] = (value >>> 16)
	    this[offset + 3] = (value >>> 24)
	  } else {
	    objectWriteUInt32(this, value, offset, true)
	  }
	  return offset + 4
	}
	
	Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
	  if (value < 0) value = 0xffffffff + value + 1
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 24)
	    this[offset + 1] = (value >>> 16)
	    this[offset + 2] = (value >>> 8)
	    this[offset + 3] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, false)
	  }
	  return offset + 4
	}
	
	function checkIEEE754 (buf, value, offset, ext, max, min) {
	  if (value > max || value < min) throw new RangeError('value is out of bounds')
	  if (offset + ext > buf.length) throw new RangeError('index out of range')
	  if (offset < 0) throw new RangeError('index out of range')
	}
	
	function writeFloat (buf, value, offset, littleEndian, noAssert) {
	  if (!noAssert) {
	    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
	  }
	  ieee754.write(buf, value, offset, littleEndian, 23, 4)
	  return offset + 4
	}
	
	Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
	  return writeFloat(this, value, offset, true, noAssert)
	}
	
	Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
	  return writeFloat(this, value, offset, false, noAssert)
	}
	
	function writeDouble (buf, value, offset, littleEndian, noAssert) {
	  if (!noAssert) {
	    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
	  }
	  ieee754.write(buf, value, offset, littleEndian, 52, 8)
	  return offset + 8
	}
	
	Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
	  return writeDouble(this, value, offset, true, noAssert)
	}
	
	Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
	  return writeDouble(this, value, offset, false, noAssert)
	}
	
	// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
	Buffer.prototype.copy = function copy (target, targetStart, start, end) {
	  if (!start) start = 0
	  if (!end && end !== 0) end = this.length
	  if (targetStart >= target.length) targetStart = target.length
	  if (!targetStart) targetStart = 0
	  if (end > 0 && end < start) end = start
	
	  // Copy 0 bytes; we're done
	  if (end === start) return 0
	  if (target.length === 0 || this.length === 0) return 0
	
	  // Fatal error conditions
	  if (targetStart < 0) {
	    throw new RangeError('targetStart out of bounds')
	  }
	  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
	  if (end < 0) throw new RangeError('sourceEnd out of bounds')
	
	  // Are we oob?
	  if (end > this.length) end = this.length
	  if (target.length - targetStart < end - start) {
	    end = target.length - targetStart + start
	  }
	
	  var len = end - start
	  var i
	
	  if (this === target && start < targetStart && targetStart < end) {
	    // descending copy from end
	    for (i = len - 1; i >= 0; i--) {
	      target[i + targetStart] = this[i + start]
	    }
	  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
	    // ascending copy from start
	    for (i = 0; i < len; i++) {
	      target[i + targetStart] = this[i + start]
	    }
	  } else {
	    target._set(this.subarray(start, start + len), targetStart)
	  }
	
	  return len
	}
	
	// fill(value, start=0, end=buffer.length)
	Buffer.prototype.fill = function fill (value, start, end) {
	  if (!value) value = 0
	  if (!start) start = 0
	  if (!end) end = this.length
	
	  if (end < start) throw new RangeError('end < start')
	
	  // Fill 0 bytes; we're done
	  if (end === start) return
	  if (this.length === 0) return
	
	  if (start < 0 || start >= this.length) throw new RangeError('start out of bounds')
	  if (end < 0 || end > this.length) throw new RangeError('end out of bounds')
	
	  var i
	  if (typeof value === 'number') {
	    for (i = start; i < end; i++) {
	      this[i] = value
	    }
	  } else {
	    var bytes = utf8ToBytes(value.toString())
	    var len = bytes.length
	    for (i = start; i < end; i++) {
	      this[i] = bytes[i % len]
	    }
	  }
	
	  return this
	}
	
	/**
	 * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.
	 * Added in Node 0.12. Only available in browsers that support ArrayBuffer.
	 */
	Buffer.prototype.toArrayBuffer = function toArrayBuffer () {
	  if (typeof Uint8Array !== 'undefined') {
	    if (Buffer.TYPED_ARRAY_SUPPORT) {
	      return (new Buffer(this)).buffer
	    } else {
	      var buf = new Uint8Array(this.length)
	      for (var i = 0, len = buf.length; i < len; i += 1) {
	        buf[i] = this[i]
	      }
	      return buf.buffer
	    }
	  } else {
	    throw new TypeError('Buffer.toArrayBuffer not supported in this browser')
	  }
	}
	
	// HELPER FUNCTIONS
	// ================
	
	var BP = Buffer.prototype
	
	/**
	 * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods
	 */
	Buffer._augment = function _augment (arr) {
	  arr.constructor = Buffer
	  arr._isBuffer = true
	
	  // save reference to original Uint8Array set method before overwriting
	  arr._set = arr.set
	
	  // deprecated
	  arr.get = BP.get
	  arr.set = BP.set
	
	  arr.write = BP.write
	  arr.toString = BP.toString
	  arr.toLocaleString = BP.toString
	  arr.toJSON = BP.toJSON
	  arr.equals = BP.equals
	  arr.compare = BP.compare
	  arr.indexOf = BP.indexOf
	  arr.copy = BP.copy
	  arr.slice = BP.slice
	  arr.readUIntLE = BP.readUIntLE
	  arr.readUIntBE = BP.readUIntBE
	  arr.readUInt8 = BP.readUInt8
	  arr.readUInt16LE = BP.readUInt16LE
	  arr.readUInt16BE = BP.readUInt16BE
	  arr.readUInt32LE = BP.readUInt32LE
	  arr.readUInt32BE = BP.readUInt32BE
	  arr.readIntLE = BP.readIntLE
	  arr.readIntBE = BP.readIntBE
	  arr.readInt8 = BP.readInt8
	  arr.readInt16LE = BP.readInt16LE
	  arr.readInt16BE = BP.readInt16BE
	  arr.readInt32LE = BP.readInt32LE
	  arr.readInt32BE = BP.readInt32BE
	  arr.readFloatLE = BP.readFloatLE
	  arr.readFloatBE = BP.readFloatBE
	  arr.readDoubleLE = BP.readDoubleLE
	  arr.readDoubleBE = BP.readDoubleBE
	  arr.writeUInt8 = BP.writeUInt8
	  arr.writeUIntLE = BP.writeUIntLE
	  arr.writeUIntBE = BP.writeUIntBE
	  arr.writeUInt16LE = BP.writeUInt16LE
	  arr.writeUInt16BE = BP.writeUInt16BE
	  arr.writeUInt32LE = BP.writeUInt32LE
	  arr.writeUInt32BE = BP.writeUInt32BE
	  arr.writeIntLE = BP.writeIntLE
	  arr.writeIntBE = BP.writeIntBE
	  arr.writeInt8 = BP.writeInt8
	  arr.writeInt16LE = BP.writeInt16LE
	  arr.writeInt16BE = BP.writeInt16BE
	  arr.writeInt32LE = BP.writeInt32LE
	  arr.writeInt32BE = BP.writeInt32BE
	  arr.writeFloatLE = BP.writeFloatLE
	  arr.writeFloatBE = BP.writeFloatBE
	  arr.writeDoubleLE = BP.writeDoubleLE
	  arr.writeDoubleBE = BP.writeDoubleBE
	  arr.fill = BP.fill
	  arr.inspect = BP.inspect
	  arr.toArrayBuffer = BP.toArrayBuffer
	
	  return arr
	}
	
	var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g
	
	function base64clean (str) {
	  // Node strips out invalid characters like \n and \t from the string, base64-js does not
	  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
	  // Node converts strings with length < 2 to ''
	  if (str.length < 2) return ''
	  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
	  while (str.length % 4 !== 0) {
	    str = str + '='
	  }
	  return str
	}
	
	function stringtrim (str) {
	  if (str.trim) return str.trim()
	  return str.replace(/^\s+|\s+$/g, '')
	}
	
	function toHex (n) {
	  if (n < 16) return '0' + n.toString(16)
	  return n.toString(16)
	}
	
	function utf8ToBytes (string, units) {
	  units = units || Infinity
	  var codePoint
	  var length = string.length
	  var leadSurrogate = null
	  var bytes = []
	
	  for (var i = 0; i < length; i++) {
	    codePoint = string.charCodeAt(i)
	
	    // is surrogate component
	    if (codePoint > 0xD7FF && codePoint < 0xE000) {
	      // last char was a lead
	      if (!leadSurrogate) {
	        // no lead yet
	        if (codePoint > 0xDBFF) {
	          // unexpected trail
	          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	          continue
	        } else if (i + 1 === length) {
	          // unpaired lead
	          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	          continue
	        }
	
	        // valid lead
	        leadSurrogate = codePoint
	
	        continue
	      }
	
	      // 2 leads in a row
	      if (codePoint < 0xDC00) {
	        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	        leadSurrogate = codePoint
	        continue
	      }
	
	      // valid surrogate pair
	      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
	    } else if (leadSurrogate) {
	      // valid bmp char, but last char was a lead
	      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	    }
	
	    leadSurrogate = null
	
	    // encode utf8
	    if (codePoint < 0x80) {
	      if ((units -= 1) < 0) break
	      bytes.push(codePoint)
	    } else if (codePoint < 0x800) {
	      if ((units -= 2) < 0) break
	      bytes.push(
	        codePoint >> 0x6 | 0xC0,
	        codePoint & 0x3F | 0x80
	      )
	    } else if (codePoint < 0x10000) {
	      if ((units -= 3) < 0) break
	      bytes.push(
	        codePoint >> 0xC | 0xE0,
	        codePoint >> 0x6 & 0x3F | 0x80,
	        codePoint & 0x3F | 0x80
	      )
	    } else if (codePoint < 0x110000) {
	      if ((units -= 4) < 0) break
	      bytes.push(
	        codePoint >> 0x12 | 0xF0,
	        codePoint >> 0xC & 0x3F | 0x80,
	        codePoint >> 0x6 & 0x3F | 0x80,
	        codePoint & 0x3F | 0x80
	      )
	    } else {
	      throw new Error('Invalid code point')
	    }
	  }
	
	  return bytes
	}
	
	function asciiToBytes (str) {
	  var byteArray = []
	  for (var i = 0; i < str.length; i++) {
	    // Node's code seems to be doing this and not & 0x7F..
	    byteArray.push(str.charCodeAt(i) & 0xFF)
	  }
	  return byteArray
	}
	
	function utf16leToBytes (str, units) {
	  var c, hi, lo
	  var byteArray = []
	  for (var i = 0; i < str.length; i++) {
	    if ((units -= 2) < 0) break
	
	    c = str.charCodeAt(i)
	    hi = c >> 8
	    lo = c % 256
	    byteArray.push(lo)
	    byteArray.push(hi)
	  }
	
	  return byteArray
	}
	
	function base64ToBytes (str) {
	  return base64.toByteArray(base64clean(str))
	}
	
	function blitBuffer (src, dst, offset, length) {
	  for (var i = 0; i < length; i++) {
	    if ((i + offset >= dst.length) || (i >= src.length)) break
	    dst[i + offset] = src[i]
	  }
	  return i
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(143).Buffer, (function() { return this; }())))

/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

	var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
	
	;(function (exports) {
		'use strict';
	
	  var Arr = (typeof Uint8Array !== 'undefined')
	    ? Uint8Array
	    : Array
	
		var PLUS   = '+'.charCodeAt(0)
		var SLASH  = '/'.charCodeAt(0)
		var NUMBER = '0'.charCodeAt(0)
		var LOWER  = 'a'.charCodeAt(0)
		var UPPER  = 'A'.charCodeAt(0)
		var PLUS_URL_SAFE = '-'.charCodeAt(0)
		var SLASH_URL_SAFE = '_'.charCodeAt(0)
	
		function decode (elt) {
			var code = elt.charCodeAt(0)
			if (code === PLUS ||
			    code === PLUS_URL_SAFE)
				return 62 // '+'
			if (code === SLASH ||
			    code === SLASH_URL_SAFE)
				return 63 // '/'
			if (code < NUMBER)
				return -1 //no match
			if (code < NUMBER + 10)
				return code - NUMBER + 26 + 26
			if (code < UPPER + 26)
				return code - UPPER
			if (code < LOWER + 26)
				return code - LOWER + 26
		}
	
		function b64ToByteArray (b64) {
			var i, j, l, tmp, placeHolders, arr
	
			if (b64.length % 4 > 0) {
				throw new Error('Invalid string. Length must be a multiple of 4')
			}
	
			// the number of equal signs (place holders)
			// if there are two placeholders, than the two characters before it
			// represent one byte
			// if there is only one, then the three characters before it represent 2 bytes
			// this is just a cheap hack to not do indexOf twice
			var len = b64.length
			placeHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0
	
			// base64 is 4/3 + up to two characters of the original data
			arr = new Arr(b64.length * 3 / 4 - placeHolders)
	
			// if there are placeholders, only get up to the last complete 4 chars
			l = placeHolders > 0 ? b64.length - 4 : b64.length
	
			var L = 0
	
			function push (v) {
				arr[L++] = v
			}
	
			for (i = 0, j = 0; i < l; i += 4, j += 3) {
				tmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))
				push((tmp & 0xFF0000) >> 16)
				push((tmp & 0xFF00) >> 8)
				push(tmp & 0xFF)
			}
	
			if (placeHolders === 2) {
				tmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)
				push(tmp & 0xFF)
			} else if (placeHolders === 1) {
				tmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)
				push((tmp >> 8) & 0xFF)
				push(tmp & 0xFF)
			}
	
			return arr
		}
	
		function uint8ToBase64 (uint8) {
			var i,
				extraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes
				output = "",
				temp, length
	
			function encode (num) {
				return lookup.charAt(num)
			}
	
			function tripletToBase64 (num) {
				return encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)
			}
	
			// go through the array every three bytes, we'll deal with trailing stuff later
			for (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {
				temp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
				output += tripletToBase64(temp)
			}
	
			// pad the end with zeros, but make sure to not forget the extra bytes
			switch (extraBytes) {
				case 1:
					temp = uint8[uint8.length - 1]
					output += encode(temp >> 2)
					output += encode((temp << 4) & 0x3F)
					output += '=='
					break
				case 2:
					temp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])
					output += encode(temp >> 10)
					output += encode((temp >> 4) & 0x3F)
					output += encode((temp << 2) & 0x3F)
					output += '='
					break
			}
	
			return output
		}
	
		exports.toByteArray = b64ToByteArray
		exports.fromByteArray = uint8ToBase64
	}( false ? (this.base64js = {}) : exports))


/***/ },
/* 145 */
/***/ function(module, exports) {

	exports.read = function (buffer, offset, isLE, mLen, nBytes) {
	  var e, m
	  var eLen = nBytes * 8 - mLen - 1
	  var eMax = (1 << eLen) - 1
	  var eBias = eMax >> 1
	  var nBits = -7
	  var i = isLE ? (nBytes - 1) : 0
	  var d = isLE ? -1 : 1
	  var s = buffer[offset + i]
	
	  i += d
	
	  e = s & ((1 << (-nBits)) - 1)
	  s >>= (-nBits)
	  nBits += eLen
	  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}
	
	  m = e & ((1 << (-nBits)) - 1)
	  e >>= (-nBits)
	  nBits += mLen
	  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}
	
	  if (e === 0) {
	    e = 1 - eBias
	  } else if (e === eMax) {
	    return m ? NaN : ((s ? -1 : 1) * Infinity)
	  } else {
	    m = m + Math.pow(2, mLen)
	    e = e - eBias
	  }
	  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
	}
	
	exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
	  var e, m, c
	  var eLen = nBytes * 8 - mLen - 1
	  var eMax = (1 << eLen) - 1
	  var eBias = eMax >> 1
	  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
	  var i = isLE ? 0 : (nBytes - 1)
	  var d = isLE ? 1 : -1
	  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0
	
	  value = Math.abs(value)
	
	  if (isNaN(value) || value === Infinity) {
	    m = isNaN(value) ? 1 : 0
	    e = eMax
	  } else {
	    e = Math.floor(Math.log(value) / Math.LN2)
	    if (value * (c = Math.pow(2, -e)) < 1) {
	      e--
	      c *= 2
	    }
	    if (e + eBias >= 1) {
	      value += rt / c
	    } else {
	      value += rt * Math.pow(2, 1 - eBias)
	    }
	    if (value * c >= 2) {
	      e++
	      c /= 2
	    }
	
	    if (e + eBias >= eMax) {
	      m = 0
	      e = eMax
	    } else if (e + eBias >= 1) {
	      m = (value * c - 1) * Math.pow(2, mLen)
	      e = e + eBias
	    } else {
	      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
	      e = 0
	    }
	  }
	
	  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}
	
	  e = (e << mLen) | m
	  eLen += mLen
	  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}
	
	  buffer[offset + i - d] |= s * 128
	}


/***/ },
/* 146 */
/***/ function(module, exports) {

	var toString = {}.toString;
	
	module.exports = Array.isArray || function (arr) {
	  return toString.call(arr) == '[object Array]';
	};


/***/ },
/* 147 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {'use strict';
	
	exports.__esModule = true;
	var toString = Object.prototype.toString;
	
	var isBuffer = typeof Buffer !== 'undefined' ? function isBuffer(obj) {
	  return Buffer.isBuffer(obj);
	} : function isBuffer() {
	  // always return false in browsers
	  return false;
	};
	
	var getKeys = typeof Object.keys === 'function' ? function getKeys(obj) {
	  return Object.keys(obj);
	} : function getKeys(obj) {
	  var objType = typeof obj;
	
	  if (obj === null || objType !== 'function' && objType !== 'object') {
	    throw new TypeError('obj must be an Object');
	  }
	
	  var resultKeys = [],
	      key = void 0;
	
	  for (key in obj) {
	    Object.prototype.hasOwnProperty.call(obj, key) && resultKeys.push(key);
	  }
	
	  return resultKeys;
	};
	
	var getSymbols = typeof Symbol === 'function' ? function getSymbols(obj) {
	  return Object.getOwnPropertySymbols(obj);
	} : function getSymbols() {
	  // always return empty Array when Symbol is not supported
	  return [];
	};
	
	// NOTE:
	//
	//   Array.prototype.indexOf is cannot find NaN (in Chrome)
	//   Array.prototype.includes is can find NaN (in Chrome)
	//
	//   this function can find NaN, because use SameValue algorithm
	function indexOf(array, s) {
	  if (toString.call(array) !== '[object Array]') {
	    throw new TypeError('array must be an Array');
	  }
	
	  var i = void 0,
	      len = void 0,
	      value = void 0;
	
	  for (i = 0, len = array.length; i < len; ++i) {
	    value = array[i];
	
	    // NOTE:
	    //
	    //   it is SameValue algorithm
	    //   http://stackoverflow.com/questions/27144277/comparing-a-variable-with-itself
	    //
	    // eslint-disable-next-line no-self-compare
	    if (value === s || value !== value && s !== s) {
	      return i;
	    }
	  }
	
	  return -1;
	}
	
	exports.getKeys = getKeys;
	exports.getSymbols = getSymbols;
	exports.indexOf = indexOf;
	exports.isBuffer = isBuffer;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(143).Buffer))

/***/ },
/* 148 */
/***/ function(module, exports, __webpack_require__) {

	var pSlice = Array.prototype.slice;
	var objectKeys = __webpack_require__(149);
	var isArguments = __webpack_require__(150);
	
	var deepEqual = module.exports = function (actual, expected, opts) {
	  if (!opts) opts = {};
	  // 7.1. All identical values are equivalent, as determined by ===.
	  if (actual === expected) {
	    return true;
	
	  } else if (actual instanceof Date && expected instanceof Date) {
	    return actual.getTime() === expected.getTime();
	
	  // 7.3. Other pairs that do not both pass typeof value == 'object',
	  // equivalence is determined by ==.
	  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {
	    return opts.strict ? actual === expected : actual == expected;
	
	  // 7.4. For all other Object pairs, including Array objects, equivalence is
	  // determined by having the same number of owned properties (as verified
	  // with Object.prototype.hasOwnProperty.call), the same set of keys
	  // (although not necessarily the same order), equivalent values for every
	  // corresponding key, and an identical 'prototype' property. Note: this
	  // accounts for both named and indexed properties on Arrays.
	  } else {
	    return objEquiv(actual, expected, opts);
	  }
	}
	
	function isUndefinedOrNull(value) {
	  return value === null || value === undefined;
	}
	
	function isBuffer (x) {
	  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;
	  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {
	    return false;
	  }
	  if (x.length > 0 && typeof x[0] !== 'number') return false;
	  return true;
	}
	
	function objEquiv(a, b, opts) {
	  var i, key;
	  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))
	    return false;
	  // an identical 'prototype' property.
	  if (a.prototype !== b.prototype) return false;
	  //~~~I've managed to break Object.keys through screwy arguments passing.
	  //   Converting to array solves the problem.
	  if (isArguments(a)) {
	    if (!isArguments(b)) {
	      return false;
	    }
	    a = pSlice.call(a);
	    b = pSlice.call(b);
	    return deepEqual(a, b, opts);
	  }
	  if (isBuffer(a)) {
	    if (!isBuffer(b)) {
	      return false;
	    }
	    if (a.length !== b.length) return false;
	    for (i = 0; i < a.length; i++) {
	      if (a[i] !== b[i]) return false;
	    }
	    return true;
	  }
	  try {
	    var ka = objectKeys(a),
	        kb = objectKeys(b);
	  } catch (e) {//happens when one is a string literal and the other isn't
	    return false;
	  }
	  // having the same number of owned properties (keys incorporates
	  // hasOwnProperty)
	  if (ka.length != kb.length)
	    return false;
	  //the same set of keys (although not necessarily the same order),
	  ka.sort();
	  kb.sort();
	  //~~~cheap key test
	  for (i = ka.length - 1; i >= 0; i--) {
	    if (ka[i] != kb[i])
	      return false;
	  }
	  //equivalent values for every corresponding key, and
	  //~~~possibly expensive deep test
	  for (i = ka.length - 1; i >= 0; i--) {
	    key = ka[i];
	    if (!deepEqual(a[key], b[key], opts)) return false;
	  }
	  return typeof a === typeof b;
	}


/***/ },
/* 149 */
/***/ function(module, exports) {

	exports = module.exports = typeof Object.keys === 'function'
	  ? Object.keys : shim;
	
	exports.shim = shim;
	function shim (obj) {
	  var keys = [];
	  for (var key in obj) keys.push(key);
	  return keys;
	}


/***/ },
/* 150 */
/***/ function(module, exports) {

	var supportsArgumentsClass = (function(){
	  return Object.prototype.toString.call(arguments)
	})() == '[object Arguments]';
	
	exports = module.exports = supportsArgumentsClass ? supported : unsupported;
	
	exports.supported = supported;
	function supported(object) {
	  return Object.prototype.toString.call(object) == '[object Arguments]';
	};
	
	exports.unsupported = unsupported;
	function unsupported(object){
	  return object &&
	    typeof object == 'object' &&
	    typeof object.length == 'number' &&
	    Object.prototype.hasOwnProperty.call(object, 'callee') &&
	    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||
	    false;
	};


/***/ },
/* 151 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var classnames = __webpack_require__(129);
	var i18n = __webpack_require__(138);
	var Context = __webpack_require__(116);
	var prefixClass = Context.prefixClass;
	
	// value 的格式：{startDate: '2016-01-02', endDate: '2016-01-03'}
	
	var Month = function (_React$Component) {
	  _inherits(Month, _React$Component);
	
	  function Month(props) {
	    _classCallCheck(this, Month);
	
	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Month).call(this, props));
	
	    var date = _this.processValue();
	    _this.state = {
	      year: new Date(date.startDate).getFullYear()
	    };
	    return _this;
	  }
	
	  _createClass(Month, [{
	    key: 'processValue',
	    value: function processValue(props) {
	      var t = this;
	      props = props || t.props;
	      if (_typeof(props.value) == 'object') {
	        var _props$value = props.value;
	        var startDate = _props$value.startDate;
	        var endDate = _props$value.endDate;
	      } else {
	        var startDate = props.value;
	      }
	      return {
	        startDate: new Date(startDate || 0),
	        endDate: new Date(endDate || startDate || 0)
	      };
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      var t = this;
	      var newState = {};
	      if (t.processValue().startDate.getTime() !== t.processValue(nextProps).startDate.getTime()) {
	        newState['year'] = t.processValue(nextProps).startDate.getFullYear();
	      }
	      t.setState(newState);
	    }
	  }, {
	    key: 'getTitle',
	    value: function getTitle() {
	      var t = this;
	      return t.state.year;
	    }
	  }, {
	    key: 'handleListItemClick',
	    value: function handleListItemClick(date) {
	      var t = this;
	      var value = t.processValue();
	      date.setDate(value.startDate.getDate());
	      var startDate = value.startDate;
	      var endDate = value.endDate;
	
	      var newValue = {};
	
	      if (!t.props.singleMode) {
	        if (startDate.getTime() !== endDate.getTime()) {
	          newValue = {
	            startDate: new Date(date).getTime(),
	            endDate: ""
	          };
	        } else {
	          // 需先判断选中日期和 startDate 的大小
	          // 如果选中日期大于 startDate，则选中日期作为 endDate。
	          if (new Date(date).getTime() > new Date(startDate).getTime()) {
	            newValue = {
	              startDate: new Date(startDate).getTime(),
	              endDate: new Date(date).getTime()
	            };
	          }
	          // 反之，则 startDate 作为新的 endDate，选中日期作为新的 startDate
	          else {
	              newValue = {
	                startDate: new Date(date).getTime(),
	                endDate: new Date(startDate).getTime()
	              };
	            }
	        }
	      } else {
	        newValue = {
	          startDate: new Date(date).getTime(),
	          endDate: ""
	        };
	      }
	
	      t.props.onChange(newValue);
	    }
	  }, {
	    key: 'handlePrev',
	    value: function handlePrev() {
	      var t = this;
	      t.setState({
	        year: t.state.year - 1
	      });
	    }
	  }, {
	    key: 'handleNext',
	    value: function handleNext() {
	      var t = this;
	      t.setState({
	        year: t.state.year + 1
	      });
	    }
	  }, {
	    key: 'handleTitleClick',
	    value: function handleTitleClick() {
	      if (this.props.singleMode) {
	        this.props.onTitleClick();
	      }
	    }
	  }, {
	    key: 'isItemActive',
	    value: function isItemActive(index) {
	      var t = this;
	      var year = t.state.year;
	
	      var _t$processValue = t.processValue();
	
	      var startDate = _t$processValue.startDate;
	      var endDate = _t$processValue.endDate;
	
	      if (!startDate) {
	        return false;
	      }
	      var startYear = new Date(startDate).getFullYear();
	      var startMonth = new Date(startDate).getMonth();
	      var active = false;
	      if (!!endDate) {
	        var endYear = new Date(endDate).getFullYear();
	        var endMonth = new Date(endDate).getMonth();
	        if (startYear != endYear) {
	          active = year == startYear && index >= startMonth || year > startYear && year < endYear || year == endYear && index <= endMonth;
	        } else {
	          active = year == startYear && index <= endMonth && index >= startMonth;
	        }
	      } else {
	        active = year == startYear && index == startMonth;
	      }
	
	      return active;
	    }
	  }, {
	    key: 'renderMonthList',
	    value: function renderMonthList() {
	      var t = this;
	      var months = i18n[t.props.locale]['monthTitle'];
	      var year = t.state.year;
	
	
	      return months.map(function (month, index) {
	        var _classnames;
	
	        return React.createElement(
	          'div',
	          { className: classnames((_classnames = {}, _defineProperty(_classnames, prefixClass('month-list-item'), true), _defineProperty(_classnames, "active", t.isItemActive(index)), _classnames)), key: index, onClick: t.handleListItemClick.bind(t, new Date(year, index)) },
	          month
	        );
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var t = this;
	      return React.createElement(
	        'div',
	        { className: prefixClass('month-panel') },
	        React.createElement(
	          'div',
	          { className: prefixClass('tool FBH FBAC') },
	          React.createElement('div', { className: prefixClass('FB1') }),
	          React.createElement(
	            'div',
	            { className: prefixClass('btn prev-month tap op'), onClick: this.handlePrev.bind(this) },
	            '<'
	          ),
	          React.createElement(
	            'span',
	            { className: prefixClass('text'), onClick: t.handleTitleClick.bind(t) },
	            t.getTitle()
	          ),
	          React.createElement(
	            'div',
	            { className: prefixClass('btn next-month tap op'), onClick: this.handleNext.bind(this) },
	            '>'
	          ),
	          React.createElement('div', { className: prefixClass('FB1') })
	        ),
	        React.createElement(
	          'div',
	          { className: prefixClass('month-list') },
	          t.renderMonthList()
	        )
	      );
	    }
	  }]);
	
	  return Month;
	}(React.Component);
	
	Month.displayName = "Month";
	Month.defaultProps = {
	  locale: 'zh-cn',
	  onChange: function onChange() {},
	  onTitleClick: function onTitleClick() {},
	  singleMode: false
	};
	Month.propTypes = {
	  value: React.PropTypes.object,
	  locale: React.PropTypes.string,
	  onChange: React.PropTypes.func,
	  onTitleClick: React.PropTypes.func,
	  singleMode: React.PropTypes.bool
	};
	
	module.exports = Month;
	


/***/ },
/* 152 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var classnames = __webpack_require__(129);
	var i18n = __webpack_require__(138);
	var Context = __webpack_require__(116);
	var prefixClass = Context.prefixClass;
	
	var Year = function (_React$Component) {
	  _inherits(Year, _React$Component);
	
	  function Year(props) {
	    _classCallCheck(this, Year);
	
	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Year).call(this, props));
	
	    _this.state = {
	      year: _this.getYear()
	    };
	    return _this;
	  }
	
	  _createClass(Year, [{
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      var t = this;
	      var newState = {};
	      if (t.processValue().startDate.getTime() !== t.processValue(nextProps).startDate.getTime()) {
	        newState['year'] = t.getYear(nextProps);
	      }
	      t.setState(newState);
	    }
	  }, {
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      var t = this;
	    }
	  }, {
	    key: 'getYear',
	    value: function getYear(props) {
	      var t = this;
	
	      var _t$processValue = t.processValue(props);
	
	      var startDate = _t$processValue.startDate;
	
	      var year = new Date(startDate).getFullYear();
	      year = year.toString().substring(0, 3) + '0';
	      return parseInt(year);
	    }
	  }, {
	    key: 'processValue',
	    value: function processValue(props) {
	      var t = this;
	      props = props || t.props;
	      if (_typeof(props.value) == 'object') {
	        var _props$value = props.value;
	        var startDate = _props$value.startDate;
	        var endDate = _props$value.endDate;
	      } else {
	        var startDate = props.value;
	      }
	      return {
	        startDate: new Date(startDate || 0),
	        endDate: new Date(endDate || startDate || 0)
	      };
	    }
	  }, {
	    key: 'getTitle',
	    value: function getTitle() {
	      var t = this;
	      return t.state.year + '-' + (t.state.year + 9);
	    }
	  }, {
	    key: 'handleListItemClick',
	    value: function handleListItemClick(date) {
	      var t = this;
	      var value = t.processValue();
	      date = new Date(date.setDate(value.startDate.getDate())).setMonth(value.startDate.getMonth());
	      var newValue = {};
	      if (!t.props.singleMode) {
	        if (!!t.props.value.endDate) {
	          newValue = {
	            startDate: new Date(date).getTime(),
	            endDate: ""
	          };
	        } else {
	          // 需先判断选中日期和 startDate 的大小
	          // 如果选中日期大于 startDate，则选中日期作为 endDate。
	          if (new Date(date).getTime() > new Date(value.startDate).getTime()) {
	            newValue = {
	              startDate: new Date(value.startDate).getTime(),
	              endDate: new Date(date).getTime()
	            };
	          }
	          // 反之，则 startDate 作为新的 endDate，选中日期作为新的 startDate
	          else {
	              newValue = {
	                startDate: new Date(date).getTime(),
	                endDate: new Date(value.startDate).getTime()
	              };
	            }
	        }
	      } else {
	        newValue = {
	          startDate: new Date(date).getTime(),
	          endDate: ""
	        };
	      }
	      t.props.onChange(newValue);
	    }
	  }, {
	    key: 'handlePrev',
	    value: function handlePrev() {
	      var t = this;
	      t.setState({
	        year: t.state.year - 10
	      });
	    }
	  }, {
	    key: 'handleNext',
	    value: function handleNext() {
	      var t = this;
	      t.setState({
	        year: t.state.year + 10
	      });
	    }
	  }, {
	    key: 'isItemActive',
	    value: function isItemActive(index) {
	      var t = this;
	      var year = t.state.year;
	
	      var _t$processValue2 = t.processValue();
	
	      var startDate = _t$processValue2.startDate;
	      var endDate = _t$processValue2.endDate;
	
	      if (!startDate) {
	        return false;
	      }
	      var startYear = new Date(startDate).getFullYear();
	      var startMonth = new Date(startDate).getMonth();
	      var now = year + index;
	      var active = false;
	      if (!!endDate) {
	        var endYear = new Date(endDate).getFullYear();
	        active = now >= startYear && now <= endYear;
	      } else {
	        active = now == startYear;
	      }
	
	      return active;
	    }
	  }, {
	    key: 'renderYearList',
	    value: function renderYearList() {
	      var t = this;
	      var months = i18n[t.props.locale]['monthTitle'];
	      var year = t.state.year;
	
	      var yearList = [];
	
	      yearList.push(React.createElement(
	        'div',
	        { className: classnames(_defineProperty({}, prefixClass('year-list-item'), true)), key: 'prev', onClick: t.handlePrev.bind(t) },
	        "..."
	      ));
	
	      for (var i = 0; i < 10; i++) {
	        var _classnames2;
	
	        yearList.push(React.createElement(
	          'div',
	          { className: classnames((_classnames2 = {}, _defineProperty(_classnames2, prefixClass('year-list-item'), true), _defineProperty(_classnames2, "active", t.isItemActive(i)), _classnames2)), key: i, onClick: t.handleListItemClick.bind(t, new Date(year + i + "")) },
	          year + i
	        ));
	      }
	
	      yearList.push(React.createElement(
	        'div',
	        { className: classnames(_defineProperty({}, prefixClass('year-list-item'), true)), key: 'next', onClick: t.handleNext.bind(t) },
	        "..."
	      ));
	
	      return yearList;
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var t = this;
	      return React.createElement(
	        'div',
	        { className: prefixClass("month-panel") },
	        React.createElement(
	          'div',
	          { className: prefixClass("tool FBH FBAC") },
	          React.createElement('div', { className: prefixClass("FB1") }),
	          React.createElement(
	            'div',
	            { className: prefixClass("btn prev-month tap op"), onClick: this.handlePrev.bind(this) },
	            '<'
	          ),
	          React.createElement(
	            'span',
	            { className: prefixClass("text") },
	            t.getTitle()
	          ),
	          React.createElement(
	            'div',
	            { className: prefixClass("btn next-month tap op"), onClick: this.handleNext.bind(this) },
	            '>'
	          ),
	          React.createElement('div', { className: prefixClass("FB1") })
	        ),
	        React.createElement(
	          'div',
	          { className: prefixClass("year-list") },
	          t.renderYearList()
	        )
	      );
	    }
	  }]);
	
	  return Year;
	}(React.Component);
	
	Year.displayName = "Year";
	Year.defaultProps = {
	  locale: 'zh-cn',
	  onChange: function onChange() {},
	  singleMode: false
	};
	Year.propTypes = {
	  value: React.PropTypes.object,
	  locale: React.PropTypes.string,
	  onChange: React.PropTypes.func,
	  singleMode: React.PropTypes.bool
	};
	
	module.exports = Year;
	


/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var classnames = __webpack_require__(129);
	var deepcopy = __webpack_require__(140);
	var deepEqual = __webpack_require__(148);
	var i18n = __webpack_require__(138);
	
	var Layer = __webpack_require__(132);
	var Formatter = __webpack_require__(130);
	var Year = __webpack_require__(152);
	var Context = __webpack_require__(116);
	
	var prefixClass = Context.prefixClass;
	
	var YearCalendar = function (_React$Component) {
	  _inherits(YearCalendar, _React$Component);
	
	  function YearCalendar(props) {
	    _classCallCheck(this, YearCalendar);
	
	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(YearCalendar).call(this, props));
	
	    _this.value = deepcopy(props.value);
	    _this.state = {
	      value: deepcopy(props.value),
	      panel: 'year'
	    };
	    return _this;
	  }
	
	  _createClass(YearCalendar, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      var t = this;
	      t.locale = i18n[t.props.locale];
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      var t = this;
	      if (!deepEqual(nextProps.value, t.value)) {
	        t.value = deepcopy(nextProps.value);
	        t.setState({
	          value: deepcopy(nextProps.value)
	        });
	      }
	    }
	  }, {
	    key: 'handleChange',
	    value: function handleChange(value) {
	      var t = this;
	      t.setState({
	        value: value
	      });
	    }
	  }, {
	    key: 'handleCanel',
	    value: function handleCanel() {
	      var t = this;
	      t.props.onCancel();
	    }
	  }, {
	    key: 'handleClear',
	    value: function handleClear() {
	      var t = this;
	      t.setState({
	        value: deepcopy(t.props.value)
	      });
	    }
	  }, {
	    key: 'handleOk',
	    value: function handleOk() {
	      var t = this;
	      var _t$state = t.state;
	      var startDate = _t$state.startDate;
	      var endDate = _t$state.endDate;
	
	      if (!!t.state.value.startDate) {
	        t.props.onOk(t.state.value);
	      }
	    }
	  }, {
	    key: 'renderTopPanel',
	    value: function renderTopPanel() {
	      return React.createElement(
	        'div',
	        { className: classnames(_defineProperty({}, prefixClass("top-panel"), true)) },
	        React.createElement(
	          'span',
	          { className: prefixClass("top-panel-cancel"), onClick: this.handleCanel.bind(this) },
	          this.locale['button']['cancel']
	        ),
	        React.createElement(
	          'span',
	          { className: prefixClass("top-panel-title") },
	          this.props.topPanelTitle || '选择时间'
	        ),
	        React.createElement(
	          'span',
	          { className: prefixClass("top-panel-confirm"), onClick: this.handleOk.bind(this) },
	          this.locale['button']['confirm']
	        )
	      );
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _classnames2;
	
	      var t = this;
	      var _t$props = t.props;
	      var visible = _t$props.visible;
	      var className = _t$props.className;
	      var singleMode = _t$props.singleMode;
	
	      var button = t.locale['button'];
	
	      // Calculate the height of the current container
	      var clientHeight = document.documentElement.clientHeight;
	      var height = 230;
	      !!t.props.showTopPanel && (height += 44);
	      !!t.props.showHalfDay && (height += 120);
	
	      return React.createElement(
	        Layer,
	        { visible: visible },
	        React.createElement(
	          'div',
	          { className: prefixClass("calendar-container"), style: {
	              height: clientHeight,
	              // Scale the view to ensure user can see the whole widgit 
	              // on the small screen device
	              transform: height >= clientHeight ? 'scale(' + ((clientHeight / height).toFixed(3) - 0.15) + ')' : ''
	            } },
	          React.createElement(
	            'div',
	            { className: classnames((_classnames2 = {}, _defineProperty(_classnames2, prefixClass("calendar"), true), _defineProperty(_classnames2, className, !!className), _classnames2)), style: {
	                display: visible ? 'block' : 'none',
	                height: height
	              } },
	            t.renderTopPanel(),
	            React.createElement(Year, { value: t.state.value, onChange: t.handleChange.bind(t), singleMode: singleMode })
	          )
	        )
	      );
	    }
	  }]);
	
	  return YearCalendar;
	}(React.Component);
	
	YearCalendar.displayName = "YearCalendar";
	YearCalendar.defaultProps = {
	  locale: 'zh-cn',
	  onCancel: function onCancel() {},
	  onOk: function onOk() {},
	  value: {
	    startDate: new Date().getTime(),
	    startDateType: 'FULL',
	    endDateType: 'FULL'
	  },
	  showTopPanel: true,
	  singleMode: false
	};
	YearCalendar.propTypes = {
	  value: React.PropTypes.object,
	  locale: React.PropTypes.string,
	  onCancel: React.PropTypes.func,
	  onOk: React.PropTypes.func,
	  visible: React.PropTypes.bool,
	  singleMode: React.PropTypes.bool
	};
	
	module.exports = YearCalendar;
	


/***/ },
/* 154 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var classnames = __webpack_require__(129);
	var i18n = __webpack_require__(138);
	var Context = __webpack_require__(116);
	var prefixClass = Context.prefixClass;
	
	// value 的格式：{startDate: '2016-01-02', startDateType: 'AM', endDate: '2016-01-03', endDateType: 'AM' }
	
	var Day = function (_React$Component) {
	  _inherits(Day, _React$Component);
	
	  function Day(props) {
	    _classCallCheck(this, Day);
	
	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Day).call(this, props));
	
	    _this.state = {
	      currentDate: _this.processValue(props).startDate, // 当前正在展示的面板上对应的时间，用以获取年和月的信息
	      active: 'endDate'
	    };
	    return _this;
	  }
	
	  _createClass(Day, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      var t = this;
	      t.locale = i18n[t.props.locale];
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      var t = this;
	      var value = t.props.value;
	
	      var nextValue = nextProps.value;
	      var active = t.state.active;
	
	      var newState = {};
	      if (new Date(value.startDate).getTime() !== new Date(nextValue.startDate).getTime()) {
	        newState['active'] = 'startDate';
	      } else {
	        newState['active'] = 'endDate';
	      }
	      if (t.processValue().startDate.getTime() !== t.processValue(nextProps).startDate.getTime()) {
	        newState['currentDate'] = t.processValue(nextProps).startDate;
	      }
	
	      t.setState(newState);
	    }
	  }, {
	    key: 'processValue',
	    value: function processValue(props) {
	      var t = this;
	      props = props || t.props;
	      if (_typeof(props.value) == 'object') {
	        var _props$value = props.value;
	        var startDate = _props$value.startDate;
	        var startDateType = _props$value.startDateType;
	        var endDate = _props$value.endDate;
	        var endDateType = _props$value.endDateType;
	      } else {
	        var startDate = props.value;
	      }
	
	      // 处理异常情况，当 endDate 存在且不等于 startDate 的情况下， startDateType 不可能为 'AM'
	      if (endDate && new Date(startDate).getTime() !== new Date(endDate).getTime() && startDateType == 'AM') {
	        startDateType = 'FULL';
	      }
	      return {
	        startDate: new Date(startDate || 0),
	        startDateType: startDateType || 'FULL',
	        endDate: new Date(endDate || startDate || 0),
	        endDateType: endDateType || 'FULL'
	      };
	    }
	  }, {
	    key: 'handlePrev',
	    value: function handlePrev() {
	      var t = this;
	      var currentDate = t.state.currentDate;
	
	      t.setState({
	        currentDate: new Date(currentDate.setMonth(currentDate.getMonth() - 1))
	      });
	    }
	  }, {
	    key: 'handleNext',
	    value: function handleNext() {
	      var t = this;
	      var currentDate = t.state.currentDate;
	
	      t.setState({
	        currentDate: new Date(currentDate.setMonth(currentDate.getMonth() + 1))
	      });
	    }
	  }, {
	    key: 'handleClick',
	    value: function handleClick(date, e) {
	      var t = this;
	
	      //如果有onSelecting的方法，且其执行函数后值为false，则直接返回
	      if (typeof t.props.onSelecting == 'function' && t.props.onSelecting(date, e) === false) {
	        return;
	      }
	
	      var singleMode = t.props.singleMode;
	      var _t$props$value = t.props.value;
	      var startDate = _t$props$value.startDate;
	      var startDateType = _t$props$value.startDateType;
	      var endDate = _t$props$value.endDate;
	      var endDateType = _t$props$value.endDateType;
	
	      var status = 0;
	      // 先判断目前是一点状态还是两点状态，如果 startDate != endDate 则为两点状态，
	      // 否则相等则为一点、startDate 为 0 则为0点状态
	      if (!!startDate) {
	        // 如果是单选模式，则 status 总为 2
	        if (!!endDate && new Date(endDate).getTime() !== new Date(startDate).getTime() || singleMode) {
	          status = 2;
	        } else {
	          status = 1;
	        }
	      }
	
	      var newStartDate = '';
	      var newEndDate = '';
	      var newStartDateType = 'FULL';
	      var newEndDateType = 'FULL';
	      if (status == 0) {
	        newStartDate = date.getTime();
	      } else if (status == 1) {
	        // 判断点击的时间和开始时间的大小，以决定谁是新的开始时间。
	        if (date.getTime() >= new Date(startDate).getTime()) {
	          newStartDate = startDate;
	          newEndDate = date.getTime();
	          newStartDateType = startDateType;
	        } else {
	          newStartDate = date.getTime();
	          newEndDate = startDate;
	          newEndDateType = startDateType;
	        }
	      } else {
	        newStartDate = date.getTime();
	      }
	
	      t.props.onChange({
	        startDate: newStartDate,
	        startDateType: newStartDateType,
	        endDate: newEndDate,
	        endDateType: newEndDateType
	      });
	    }
	  }, {
	    key: 'handleTypeClick',
	    value: function handleTypeClick(type, e) {
	      var t = this;
	      var value = typeof t.props.value == "string" ? { startDate: t.props.value } : t.props.value;
	      var startDate = value.startDate;
	      var startDateType = value.startDateType;
	      var endDate = value.endDate;
	      var endDateType = value.endDateType;
	
	      var status = 0;
	      var active = t.state.active;
	      // 先判断目前是一点状态还是两点状态，如果 startDate != endDate 则为两点状态，
	      // 否则相等则为一点、startDate 不存在则为 0 点状态
	
	      if (!!startDate) {
	        if (!!endDate && new Date(endDate).getTime() !== new Date(startDate).getTime()) {
	          status = 2;
	        } else {
	          status = 1;
	        }
	      }
	
	      var newStartDateType = "FULL";
	      var newEndDateType = "FULL";
	
	      if (status == 2) {
	        if (active == 'startDate') {
	          newStartDateType = type;
	          newEndDateType = endDateType;
	        } else {
	          newStartDateType = startDateType;
	          newEndDateType = type;
	        }
	      } else {
	        newStartDateType = type;
	        newEndDateType = type;
	      }
	
	      t.props.onChange({
	        startDate: startDate,
	        startDateType: newStartDateType,
	        endDate: endDate,
	        endDateType: newEndDateType
	      });
	    }
	  }, {
	    key: 'handleTitleClick',
	    value: function handleTitleClick(e) {
	      if (this.props.singleMode) {
	        this.props.onTitleClick(e);
	      }
	    }
	
	    /**
	     * 当前时间是否在被选中的范围
	     * @param {Date} date 当前时间
	     * @param {Object} 由 processValue 导出的时间范围
	     */
	
	  }, {
	    key: 'isInRange',
	    value: function isInRange(date, value) {
	
	      return date.getTime() >= value.startDate.getTime() && date.getTime() <= value.endDate.getTime();
	    }
	  }, {
	    key: 'getType',
	    value: function getType(date, value) {
	      var type = '';
	      ['FULL', 'AM', 'PM'].forEach(function (item, index) {
	        if (date.getTime() == value.startDate.getTime() && new RegExp(item, 'i').test(value.startDateType) || date.getTime() == value.endDate.getTime() && new RegExp(item, 'i').test(value.endDateType)) {
	          type = item;
	        }
	      });
	      return type;
	    }
	  }, {
	    key: 'renderDate',
	    value: function renderDate(date, value) {
	      var _classnames;
	
	      var t = this;
	      // TODO: tStatus 假休班
	      // 只有开始和结束的日子可能出现上午和下午
	      var type = t.getType(date, value);
	      var now = new Date();
	      var currentDate = t.state.currentDate;
	      var cls = classnames((_classnames = {}, _defineProperty(_classnames, prefixClass('FB1 tap op'), true), _defineProperty(_classnames, prefixClass('now'), now.getTime() == date.getTime()), _defineProperty(_classnames, prefixClass('selected'), t.isInRange(date, value)), _defineProperty(_classnames, prefixClass('AM'), type == 'AM'), _defineProperty(_classnames, prefixClass('PM'), type == 'PM'), _defineProperty(_classnames, prefixClass('prev-month'), date.getMonth() < currentDate.getMonth() && date.getYear() === currentDate.getYear() || date.getYear() < currentDate.getYear()), _defineProperty(_classnames, prefixClass('next-month'), date.getMonth() > currentDate.getMonth() && date.getYear() === currentDate.getYear() || date.getYear() > currentDate.getYear()), _defineProperty(_classnames, prefixClass('weekend'), date.getDay() === 6 || date.getDay() === 0), _defineProperty(_classnames, t.handleExtraClass(date, value), true), _classnames));
	      //在这里添加新功能，确定不可用日期
	      var dateContent = React.createElement(
	        'div',
	        { key: date.getTime(), className: cls, onClick: t.handleClick.bind(t, new Date(date)) },
	        React.createElement(
	          'div',
	          { className: prefixClass('date-point') },
	          date.getDate()
	        ),
	        t.props.showHalfDay ? React.createElement(
	          'div',
	          { className: classnames(_defineProperty({}, prefixClass('date-tip'), true)) },
	          t.props.showHalfDay ? t.locale['dayTipMap'][type] : ""
	        ) : ''
	      );
	      return dateContent;
	    }
	
	    //给“天”的展示项目添加新的样式
	
	  }, {
	    key: 'handleExtraClass',
	    value: function handleExtraClass(date, value) {
	      //如果添加的是一个字符串
	      if (typeof this.props.extraClass == 'string') {
	        return this.props.extraClass;
	      } else if (typeof this.props.extraClass == 'function') {
	        return this.props.extraClass(date, value) || '';
	      }
	      return '';
	    }
	  }, {
	    key: 'renderDatePanel',
	    value: function renderDatePanel(value) {
	      var t = this;
	      var dateArrInAWeek = [];
	      var weekArr = [];
	      var flexBoxKey = 0;
	      var currentDate = t.state.currentDate;
	
	      var currentYear = currentDate.getFullYear();
	      var currentMonth = currentDate.getMonth();
	      var calendarCode = t.props.calendarCode;
	
	      var now = new Date();
	      var firstDateInStartMonth = new Date(new Date(currentDate).setDate(1));
	      var changedDate = new Date(new Date(currentDate).setDate(1)); // 用于当月的循环复制
	      var firstDayInStartMonth = firstDateInStartMonth.getDay();
	      var firstDateShownInPanel = new Date(firstDateInStartMonth.setDate(firstDateInStartMonth.getDate() - firstDayInStartMonth));
	
	      //计算上个月剩余补充天数
	      for (var i = 0; i < firstDayInStartMonth; i++) {
	        var _changedDate = new Date(firstDateShownInPanel);
	        var date = new Date(_changedDate.setDate(_changedDate.getDate() + i));
	        dateArrInAWeek.push(t.renderDate(date, value));
	      }
	
	      // 计算当前月天数
	
	      while (changedDate.getMonth() == currentMonth) {
	        flexBoxKey++;
	        // 判断 dateArrInAWeek 数组是否已满 7 个，若满则推入 weekArr 数组
	        if (dateArrInAWeek.length == 7) {
	          weekArr.push(React.createElement(
	            'div',
	            { key: currentMonth + flexBoxKey, className: prefixClass('FBH') },
	            dateArrInAWeek
	          ));
	          dateArrInAWeek = [];
	        }
	        dateArrInAWeek.push(t.renderDate(new Date(changedDate), value));
	        changedDate.setDate(changedDate.getDate() + 1);
	      }
	
	      // 计算下个月剩余补充天数，如果下个月第一天恰好是周日，那么就没有必要渲染下个月了
	      // 把最后一个 dateArrInAWeek 数组推进 weekArr 数组
	      if (changedDate.getDay() == 0) {
	        weekArr.push(React.createElement(
	          'div',
	          { key: "last", className: prefixClass('FBH') },
	          dateArrInAWeek
	        ));
	      } else {
	        var delta = 7 - changedDate.getDay();
	        for (var _i = 0; _i < delta; _i++) {
	          dateArrInAWeek.push(t.renderDate(new Date(changedDate), value));
	          changedDate.setDate(changedDate.getDate() + 1);
	        }
	        weekArr.push(React.createElement(
	          'div',
	          { key: "last", className: prefixClass('FBH') },
	          dateArrInAWeek
	        ));
	      }
	
	      return weekArr;
	    }
	  }, {
	    key: 'renderHalfDayButton',
	    value: function renderHalfDayButton(date, value) {
	      if (!this.props.showHalfDay) return;
	
	      var t = this;
	      var active = t.state.active;
	
	      var type = t.getType(date, value);
	      var am = React.createElement(
	        'div',
	        { key: 'tMorning', className: prefixClass("day morning tap op ") + (type == 'AM' ? 'now' : ''),
	          onClick: t.handleTypeClick.bind(t, 'AM') },
	        React.createElement(
	          'span',
	          null,
	          t.locale['dayTipMap']['AM']
	        )
	      );
	      var pm = React.createElement(
	        'div',
	        { key: 'tAfternoon', className: prefixClass("day afternoon tap op ") + (type == 'PM' ? 'now' : ''),
	          onClick: t.handleTypeClick.bind(t, 'PM') },
	        React.createElement(
	          'span',
	          null,
	          t.locale['dayTipMap']['PM']
	        )
	      );
	      var full = React.createElement(
	        'div',
	        { key: 'tFullDay', className: prefixClass("day fullday tap op ") + (type == 'FULL' ? 'now' : ''),
	          onClick: t.handleTypeClick.bind(t, 'FULL') },
	        React.createElement(
	          'span',
	          null,
	          t.locale['dayTipMap']['FULL']
	        )
	      );
	
	      // 处理被选中的日期，需判断当前是起点还是终点，若 开始时间 == 结束时间 则是起点
	
	      //是否显示上午、下午
	      if (value.startDate.getTime() === value.endDate.getTime()) {
	        return [full, am, pm];
	      } else {
	        if (active == 'endDate') {
	          return [full, am];
	        } else {
	          return [full, pm];
	        }
	      }
	    }
	  }, {
	    key: 'renderTitle',
	    value: function renderTitle(value) {
	      var t = this;
	      var currentDate = t.state.currentDate;
	
	      var str = '';
	      switch (t.props.locale) {
	        case 'zh-cn':
	          str = currentDate.getFullYear() + '年' + (currentDate.getMonth() + 1) + '月';
	          break;
	        case 'en':
	          str = t.locale['monthTitle'][currentDate.getMonth()] + ' ' + currentDate.getFullYear();
	          break;
	      }
	      return str;
	    }
	  }, {
	    key: 'renderHalfDay',
	    value: function renderHalfDay() {
	      var _classnames4;
	
	      var t = this;
	      var value = t.processValue();
	      var active = t.state.active;
	
	      var left = t.renderHalfDayButton(value[active], value);
	      var selected = value[active].getDate();
	      return React.createElement(
	        'div',
	        { className: classnames(_defineProperty({}, prefixClass("half-wrap FBH FBAC"), true)) },
	        React.createElement(
	          'div',
	          { className: classnames((_classnames4 = {}, _defineProperty(_classnames4, prefixClass("selected-day"), true), _defineProperty(_classnames4, prefixClass("DN"), !t.props.showHalfDay), _classnames4)) },
	          selected
	        ),
	        left,
	        React.createElement('div', { className: prefixClass("FB1") })
	      );
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var t = this;
	      var value = t.processValue();
	      var clearButton = '';
	      var ret = '';
	      var _t$props = t.props;
	      var show = _t$props.show;
	      var className = _t$props.className;
	      var singleMode = _t$props.singleMode;
	      var showHalfDay = _t$props.showHalfDay;
	
	
	      if (show) {
	        ret = this.renderDatePanel(value);
	      }
	
	      return React.createElement(
	        'div',
	        { className: prefixClass('month-panel') },
	        React.createElement(
	          'div',
	          { className: prefixClass('tool FBH FBAC') },
	          React.createElement('div', { className: prefixClass('FB1') }),
	          React.createElement(
	            'div',
	            { className: prefixClass('btn prev-month tap op'), onClick: t.handlePrev.bind(t) },
	            '<'
	          ),
	          React.createElement(
	            'span',
	            { className: prefixClass('text'), onClick: t.handleTitleClick.bind(t) },
	            this.renderTitle(value)
	          ),
	          React.createElement(
	            'div',
	            { className: prefixClass('btn next-month tap op'), onClick: t.handleNext.bind(t) },
	            '>'
	          ),
	          React.createElement('div', { className: prefixClass('FB1') })
	        ),
	        React.createElement(
	          'div',
	          { className: prefixClass('week FBH') },
	          t.locale['weekTitle'].map(function (item, index) {
	            return React.createElement(
	              'div',
	              { className: prefixClass('FB1 FBAC'), key: index },
	              item
	            );
	          })
	        ),
	        React.createElement(
	          'div',
	          { className: prefixClass('month') },
	          ret
	        ),
	        t.props.showHalfDay && t.renderHalfDay()
	      );
	    }
	  }]);
	
	  return Day;
	}(React.Component);
	
	Day.propTypes = {
	  show: React.PropTypes.bool, // 是否显示
	  singleMode: React.PropTypes.bool, // 是否是单选模式
	  showHalfDay: React.PropTypes.bool, // 是否显示半天
	  calendarCode: React.PropTypes.object, // 后端传来的 code
	  value: React.PropTypes.oneOfType([// 默认值
	  React.PropTypes.string, React.PropTypes.object]),
	  extraClass: React.PropTypes.oneOfType([// 默认值
	  React.PropTypes.string, React.PropTypes.func]),
	  onSelecting: React.PropTypes.func, //当某一天被点击是触发事件，如果其值为false则不执行
	  locale: React.PropTypes.string, // 国际化语言
	  onChange: React.PropTypes.func, // value 变化时触发的回调
	  onTitleClick: React.PropTypes.func // 点击标题时触发的回调，用于切换面板
	};
	
	Day.defaultProps = {
	  show: true,
	  singleMode: true,
	  showHalfDay: true,
	  locale: 'zh-cn',
	  calendarCode: {},
	  onChange: function onChange() {},
	  onSelecting: function onSelecting() {},
	  onTitleClick: function onTitleClick() {},
	  extraClass: ''
	};
	
	Day.displayName = "Day";
	
	module.exports = Day;
	


/***/ },
/* 155 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * CheckboxField Component Style for tingle
	 * @author shanchao
	 *
	 * Copyright 2014-2016, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	module.exports = __webpack_require__(156);
	


/***/ },
/* 156 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * CheckboxField Component for tingle
	 * @author shanchao
	 *
	 * Copyright 2014-2016, Tingle Team.
	 * All rights reserved.
	 */
	var React = __webpack_require__(2);
	var classnames = __webpack_require__(157);
	var Icon = __webpack_require__(158);
	var Context = __webpack_require__(116);
	var Group = __webpack_require__(162);
	
	var prefixClass = Context.prefixClass;
	
	var CheckboxField = function (_React$Component) {
	    _inherits(CheckboxField, _React$Component);
	
	    function CheckboxField(props) {
	        _classCallCheck(this, CheckboxField);
	
	        return _possibleConstructorReturn(this, Object.getPrototypeOf(CheckboxField).call(this, props));
	    }
	
	    _createClass(CheckboxField, [{
	        key: 'clickAction',
	        value: function clickAction(value, item, index, data) {
	            var t = this;
	            var onChange = t.props.onChange;
	
	            var disable = item.disable;
	            if (disable) {
	                return;
	            }
	            item.checked = !item.checked;
	            onChange && onChange(value, index, data);
	            t.forceUpdate();
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var t = this;
	            var props = t.props;
	            var className = props.className;
	            var checkboxArray = props.data;
	            var groupListArgument = props.groupListArgument;
	            var groupListFlag = props.groupListFlag;
	            var label = props.label;
	
	
	            var checkboxArrayComponent = checkboxArray.map(function (item, index, data) {
	                var checked = item.checked;
	                var disable = item.disable;
	                var value = item.value;
	
	
	                var iconName = checked ? "check-round" : "";
	                var iconClassName = classnames(prefixClass("checkbox-field-icon"), { "checked": checked }, { "noChecked": !checked }, { "disable": disable });
	
	                var textClassName = classnames(prefixClass("checkbox-field-text FBH FBAC"), { "disable": disable });
	
	                var iconTag = checked ? React.createElement(Icon, { key: 'check-round', width: 22, height: 22, name: 'check-round', className: iconClassName }) : React.createElement('div', { className: iconClassName });
	
	                var finalItemJSX = React.createElement(
	                    'div',
	                    { onClick: t.clickAction.bind(t, value, item, index, checkboxArray), key: index,
	                        className: prefixClass("checkbox-field-row FBAC FBH") },
	                    React.createElement(
	                        'div',
	                        { className: prefixClass("checkbox-field-icon-div FBH FBAC") },
	                        iconTag
	                    ),
	                    React.createElement(
	                        'div',
	                        { ref: "text" + index, className: textClassName },
	                        item.text
	                    )
	                );
	                return finalItemJSX;
	            });
	
	            var finalJSX = React.createElement(
	                Group,
	                { className: classnames(prefixClass('checkbox-field'), _defineProperty({}, className, !!className)) },
	                label == '' ? null : React.createElement(
	                    Group.Head,
	                    { className: classnames(prefixClass('checkbox-label')) },
	                    label
	                ),
	                React.createElement(
	                    Group.List,
	                    groupListArgument,
	                    checkboxArrayComponent
	                )
	            );
	
	            if (!groupListFlag) {
	                finalJSX = React.createElement(
	                    'div',
	                    { ref: 'root', className: classnames(prefixClass('checkbox-field'), _defineProperty({}, className, !!className)) },
	                    checkboxArrayComponent
	                );
	            }
	            return finalJSX;
	        }
	    }, {
	        key: 'getData',
	        value: function getData() {
	            var t = this;
	            return t.props.data;
	        }
	    }]);
	
	    return CheckboxField;
	}(React.Component);
	
	CheckboxField.defaultProps = {
	    data: [],
	    onChange: function onChange() {},
	    groupListFlag: true,
	    groupListArgument: {
	        lineIndent: 0,
	        itemIndent: 15
	    },
	    label: ''
	};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	CheckboxField.propTypes = {
	    className: React.PropTypes.string,
	    data: React.PropTypes.array,
	    onChange: React.PropTypes.func,
	    groupListFlag: React.PropTypes.bool,
	    groupListArgument: React.PropTypes.object
	};
	
	CheckboxField.displayName = 'CheckboxField';
	
	module.exports = CheckboxField;
	


/***/ },
/* 157 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames () {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ },
/* 158 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Icon Component Style for tingle
	 * @author fushan
	 *
	 * Copyright 2014-2016, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	module.exports = __webpack_require__(159);
	


/***/ },
/* 159 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * Icon Component for tinglejs
	 * @auther hanyu
	 *
	 * Copyright 2014-2016, Tingle Team.
	 * All rights reserved.
	 */
	var React = __webpack_require__(2);
	var classnames = __webpack_require__(160);
	var svg4everybody = __webpack_require__(161);
	var webkitUA = /\bAppleWebKit\/(\d+)\b/;
	
	var _require = __webpack_require__(116);
	
	var prefixClass = _require.prefixClass;
	
	var Icon = function (_React$Component) {
	    _inherits(Icon, _React$Component);
	
	    function Icon(props) {
	        _classCallCheck(this, Icon);
	
	        return _possibleConstructorReturn(this, Object.getPrototypeOf(Icon).call(this, props));
	    }
	
	    _createClass(Icon, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            var webkitUAVersion = (navigator.userAgent.match(webkitUA) || [])[1];
	            svg4everybody({
	                polyfill: webkitUAVersion === '600' || webkitUAVersion < 537
	            });
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var t = this;
	
	            var _t$props = t.props;
	            var className = _t$props.className;
	            var width = _t$props.width;
	            var height = _t$props.height;
	            var fill = _t$props.fill;
	
	            var other = _objectWithoutProperties(_t$props, ['className', 'width', 'height', 'fill']);
	
	            return React.createElement(
	                'div',
	                { onClick: t.props.onClick.bind(t), className: classnames(prefixClass('icon'), _defineProperty({}, className, !!className)) },
	                React.createElement(
	                    'svg',
	                    _extends({ className: prefixClass('icon-svg'), fill: fill, width: width, height: height }, other),
	                    React.createElement('use', { xlinkHref: '#' + t.props.name })
	                ),
	                React.createElement('div', { className: prefixClass('icon-mask') })
	            );
	        }
	    }]);
	
	    return Icon;
	}(React.Component);
	
	Icon.defaultProps = {
	    className: '',
	    name: '',
	    width: 32,
	    height: 32,
	    fill: '#000',
	    onClick: function onClick() {}
	};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	Icon.propTypes = {
	    className: React.PropTypes.string,
	    name: React.PropTypes.string.isRequired,
	    width: React.PropTypes.number,
	    height: React.PropTypes.number,
	    fill: React.PropTypes.string,
	    onClick: React.PropTypes.func
	};
	
	Icon.displayName = 'Icon';
	
	module.exports = Icon;
	


/***/ },
/* 160 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames () {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ },
/* 161 */
/***/ function(module, exports) {

	'use strict';
	
	/*! svg4everybody v2.0.3 | github.com/jonathantneal/svg4everybody */
	// https://github.com/jonathantneal/svg4everybody.git
	function embed(svg, target) {
		// if the target exists
		if (target) {
			// create a document fragment to hold the contents of the target
			var fragment = document.createDocumentFragment();
	
			// cache the closest matching viewBox
			var viewBox = !svg.getAttribute('viewBox') && target.getAttribute('viewBox');
	
			// conditionally set the viewBox on the svg
			if (viewBox) {
				svg.setAttribute('viewBox', viewBox);
			}
	
			// clone the target
			var clone = target.cloneNode(true);
	
			// copy the contents of the clone into the fragment
			while (clone.childNodes.length) {
				fragment.appendChild(clone.firstChild);
			}
	
			// append the fragment into the svg
			svg.appendChild(fragment);
		}
	}
	
	function loadreadystatechange(xhr) {
		// listen to changes in the request
		xhr.onreadystatechange = function () {
			// if the request is ready
			if (xhr.readyState === 4) {
				// get the cached html document
				var cachedDocument = xhr._cachedDocument;
	
				// ensure the cached html document based on the xhr response
				if (!cachedDocument) {
					cachedDocument = xhr._cachedDocument = document.implementation.createHTMLDocument('');
	
					cachedDocument.body.innerHTML = xhr.responseText;
	
					xhr._cachedTarget = {};
				}
	
				// clear the xhr embeds list and embed each item
				xhr._embeds.splice(0).map(function (item) {
					// get the cached target
					var target = xhr._cachedTarget[item.id];
	
					// ensure the cached target
					if (!target) {
						target = xhr._cachedTarget[item.id] = cachedDocument.getElementById(item.id);
					}
	
					// embed the target into the svg
					embed(item.svg, target);
				});
			}
		};
	
		// test the ready state change immediately
		xhr.onreadystatechange();
	}
	
	function svg4everybody(rawopts) {
		var opts = Object(rawopts);
	
		// create legacy support variables
		var nosvg;
		var fallback;
	
		// set whether the polyfill will be activated or not
		var polyfill;
		var olderIEUA = /\bMSIE [1-8]\.0\b/;
		var newerIEUA = /\bTrident\/[567]\b|\bMSIE (?:9|10)\.0\b/;
		var webkitUA = /\bAppleWebKit\/(\d+)\b/;
		var olderEdgeUA = /\bEdge\/12\.(\d+)\b/;
	
		if ('polyfill' in opts) {
			polyfill = opts.polyfill;
		} else {
			polyfill = newerIEUA.test(navigator.userAgent) || (navigator.userAgent.match(olderEdgeUA) || [])[1] < 10547 || (navigator.userAgent.match(webkitUA) || [])[1] < 537;
		}
	
		// create xhr requests object
		var requests = {};
	
		// use request animation frame or a timeout to search the dom for svgs
		var requestAnimationFrame = window.requestAnimationFrame || setTimeout;
	
		// get a live collection of use elements on the page
		var uses = document.getElementsByTagName('use');
	
		function oninterval() {
			// get the cached <use> index
			var index = 0;
	
			// while the index exists in the live <use> collection
			while (index < uses.length) {
				// get the current <use>
				var use = uses[index];
	
				// get the current <svg>
				var svg = use.parentNode;
	
				if (svg && /svg/i.test(svg.nodeName)) {
					var src = use.getAttribute('xlink:href');
	
					if (polyfill) {
						if (!opts.validate || opts.validate(src, svg, use)) {
							// remove the <use> element
							svg.removeChild(use);
	
							// parse the src and get the url and id
							var srcSplit = src.split('#');
							var url = srcSplit.shift();
							var id = srcSplit.join('#');
	
							// if the link is external
							if (url.length) {
								// get the cached xhr request
								var xhr = requests[url];
	
								// ensure the xhr request exists
								if (!xhr) {
									xhr = requests[url] = new XMLHttpRequest();
	
									xhr.open('GET', url);
	
									xhr.send();
	
									xhr._embeds = [];
								}
	
								// add the svg and id as an item to the xhr embeds list
								xhr._embeds.push({
									svg: svg,
									id: id
								});
	
								// prepare the xhr ready state change event
								loadreadystatechange(xhr);
							} else {
								// embed the local id into the svg
								embed(svg, document.getElementById(id));
							}
						}
					}
				} else {
					// increase the index when the previous value was not "valid"
					++index;
				}
			}
	
			// continue the interval
			requestAnimationFrame(oninterval, 67);
		}
	
		// conditionally start the interval if the polyfill is active
		if (polyfill) {
			oninterval();
		}
	}
	
	module.exports = svg4everybody;
	


/***/ },
/* 162 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Group Component Style for tingle
	 * @author jiasong.js
	 *
	 * Copyright 2014-2016, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	module.exports = __webpack_require__(163);
	


/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	/**
	 * Group Component for tingle
	 * @author gnosaij
	 *
	 * Copyright 2014-2016, Tingle Team.
	 * All rights reserved.
	 */
	var React = __webpack_require__(2);
	var classnames = __webpack_require__(164);
	var Context = __webpack_require__(116);
	var Head = __webpack_require__(165);
	var List = __webpack_require__(166);
	
	var Group = function Group(props) {
	    return React.createElement(
	        'div',
	        { className: classnames(Context.prefixClass('group'), _defineProperty({}, props.className, !!props.className)) },
	        props.children
	    );
	};
	
	Group.displayName = 'Group';
	
	Group.propTypes = {
	    className: React.PropTypes.string
	};
	
	Group.defaultProps = {};
	
	Group.Head = Head;
	Group.List = List;
	
	module.exports = Group;
	


/***/ },
/* 164 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames () {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ },
/* 165 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	/**
	 * Group.Head Component for tingle
	 * @author gnosaij
	 *
	 * Copyright 2014-2016, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	var classnames = __webpack_require__(164);
	var Context = __webpack_require__(116);
	
	var Head = function Head(props) {
	    return React.createElement(
	        'div',
	        { className: classnames(Context.prefixClass('group-head'), _defineProperty({}, props.className, !!props.className)) },
	        props.children
	    );
	};
	
	Head.displayName = 'Group.Head';
	
	Head.propTypes = {
	    className: React.PropTypes.string
	};
	
	Head.defaultProps = {};
	
	module.exports = Head;
	


/***/ },
/* 166 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * Group.List Component for tingle
	 * @author gnosaij
	 *
	 * Copyright 2014-2016, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	var classnames = __webpack_require__(164);
	var Context = __webpack_require__(116);
	
	var _require = __webpack_require__(115);
	
	var createStyleContext = _require.createStyleContext;
	var unitize = _require.unitize;
	
	
	var isEmptyValue = function isEmptyValue(v) {
	    return v === null || v === undefined || v === '';
	};
	
	var prefixClass = Context.prefixClass;
	var style = createStyleContext(prefixClass('group-list'));
	
	var List = function (_React$Component) {
	    _inherits(List, _React$Component);
	
	    function List(props) {
	        _classCallCheck(this, List);
	
	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(List).call(this, props));
	
	        var t = _this;
	        t._lineIndentClassName = [];
	        t._itemIndentClassName = [];
	
	        props.lineIndent && t.addIndent('Line');
	        props.itemIndent && t.addIndent('Item');
	        return _this;
	    }
	
	    // 由props属性转换成css样式规则 并插入到页面
	
	
	    _createClass(List, [{
	        key: 'addIndent',
	        value: function addIndent(type) {
	            var t = this;
	            var indentArray = [].concat(t.props[type.toLowerCase() + 'Indent']);
	
	            var className = [];
	            className.push(t['make' + type + 'IndentClassName']('left', unitize(indentArray[0])));
	            className.push(t['make' + type + 'IndentClassName']('right', unitize(indentArray[1])));
	
	            t['_' + type + 'IndentClassName'] = className.join(' ');
	        }
	
	        /**
	         * 生成间隔线缩进对应的`classClass`值和`CSS`样式
	         * @param side {String} Left|Right
	         * @param value {String} `CSS`样式的长度值
	         * @returns {String} 生成的`className`字符串
	         */
	
	    }, {
	        key: 'makeLineIndentClassName',
	        value: function makeLineIndentClassName(side, value) {
	            if (!value) {
	                return;
	            }
	            var t = this;
	            var lowerSide = side.toLowerCase();
	            var indent = side + '-' + value;
	            style.add('line-indent-' + indent, '\n            .' + prefixClass('group-list') + '.line-indent-' + indent + ' .' + prefixClass('group-list-item') + ':after{\n                ' + lowerSide + ': ' + value + '\n            }\n        ');
	            return 'line-indent-' + indent;
	        }
	
	        /**
	         * 生成Item缩进对应的`classClass`值和`CSS`样式
	         * @param side {String} Left|Right
	         * @param value {String} `CSS`样式的长度值
	         * @returns {String} 生成的`className`字符串
	         */
	
	    }, {
	        key: 'makeItemIndentClassName',
	        value: function makeItemIndentClassName(side, value) {
	            if (!value) {
	                return;
	            }
	            var t = this;
	            var lowerSide = side.toLowerCase();
	            var indent = side + '-' + value;
	            style.add('item-indent-' + indent, '\n            .' + prefixClass('group-list') + '.item-indent-' + indent + ' .' + prefixClass('group-list-item') + '{\n                padding-' + lowerSide + ': ' + value + '\n            }\n        ');
	            return 'item-indent-' + indent;
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _classnames;
	
	            var t = this;
	            return React.createElement(
	                'div',
	                { className: classnames(prefixClass('group-list'), (_classnames = {}, _defineProperty(_classnames, t.props.className, !!t.props.className), _defineProperty(_classnames, t._LineIndentClassName, !!t._LineIndentClassName), _defineProperty(_classnames, t._ItemIndentClassName, !!t._ItemIndentClassName), _defineProperty(_classnames, prefixClass('BT1'), !t.props.borderTopNone), _classnames)) },
	                React.Children.map(t.props.children, function (Item) {
	                    // 需要过滤掉空值的item
	                    return !isEmptyValue(Item) ? React.createElement(
	                        'div',
	                        { className: prefixClass('group-list-item') },
	                        Item
	                    ) : null;
	                })
	            );
	        }
	    }]);
	
	    return List;
	}(React.Component);
	
	List.displayName = 'Group.List';
	
	var indentType = React.PropTypes.oneOfType([React.PropTypes.number, React.PropTypes.string, React.PropTypes.array]);
	
	List.propTypes = {
	    className: React.PropTypes.string,
	    lineIndent: indentType,
	    itemIndent: indentType,
	    borderTopNone: React.PropTypes.bool
	};
	
	List.defaultProps = {
	    borderTopNone: false
	};
	
	module.exports = List;
	


/***/ },
/* 167 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * DatetimeField Component Style for tingle
	 * @author caoke.ck
	 *
	 * Copyright 2014-2016, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	module.exports = __webpack_require__(168);
	


/***/ },
/* 168 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * DatetimeField Component for tingle
	 * @author caoke.ck
	 *
	 * Copyright 2014-2016, Tingle Team.
	 * All rights reserved.
	 */
	var React = __webpack_require__(2);
	var classnames = __webpack_require__(169);
	
	var Context = __webpack_require__(116);
	var Slot = __webpack_require__(170);
	var Icon = __webpack_require__(158);
	var Field = __webpack_require__(177);
	
	if (!React.addons || !React.addons.update) {
	    console.warning('Please use react with addons!');
	}
	
	var DatetimeField = function (_React$Component) {
	    _inherits(DatetimeField, _React$Component);
	
	    function DatetimeField(props) {
	        _classCallCheck(this, DatetimeField);
	
	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(DatetimeField).call(this, props));
	
	        var t = _this;
	
	        // 使用当前时间或传入时间作为默认值
	        var currentValue = parseValue(props.value);
	
	        // 形成候选项
	        var options = [makeArray(currentValue[0] - 80, currentValue[0] + 20), makeArray(1, 12).map(function (v) {
	            return { text: '' + v, value: v - 1 };
	        }), getDates(currentValue[0], currentValue[1]), makeArray(0, 23), makeArray(0, 59), makeArray(0, 59)];
	        currentValue = slice(currentValue, props);
	        options = slice(options, props);
	
	        // 数据格式化
	        var ret = Slot.formatDataValue(options, currentValue);
	        t.state = {
	            data: ret.data,
	            value: currentValue,
	            confirmedValue: props.value ? ret.value : []
	        };
	        return _this;
	    }
	
	    // 外部变更选中值
	
	
	    _createClass(DatetimeField, [{
	        key: 'componentWillReceiveProps',
	        value: function componentWillReceiveProps(nextProps) {
	            var t = this;
	            var value = nextProps.value;
	            if (value) {
	                t.setValue(slice(parseValue(nextProps.value), nextProps), true);
	            } else {
	                t.setState({
	                    confirmedValue: []
	                });
	            }
	        }
	    }, {
	        key: 'handleClick',
	        value: function handleClick() {
	            var t = this;
	            !t.props.readOnly && t.refs.slot.show();
	        }
	    }, {
	        key: 'handleChange',
	        value: function handleChange(value, column, index) {
	            var t = this;
	            var dates = void 0;
	            if (value.length > 2) {
	                if (column === 1) {
	
	                    // 改变了月份，会导致月内天数的改变
	                    dates = getDates(value[0].value, value[1].value);
	                } else if (column === 0 && value[1].value === 1) {
	
	                    // 改变了年份，会导致 2 月天数的改变
	                    dates = getDates(value[0].value, 1);
	                }
	            }
	            if (dates) {
	
	                // 同时变更日期和选中项
	                var ret = Slot.formatColumnValue(dates, value[2]);
	                value[2] = ret.columnValue;
	                t.setState(React.addons.update(t.state, {
	                    data: _defineProperty({}, 2, {
	                        $set: ret.columnData
	                    }),
	                    value: {
	                        $set: value
	                    }
	                }));
	            } else {
	
	                // 仅改变了选中项
	                t.setState({
	                    value: value
	                });
	            }
	        }
	    }, {
	        key: 'handleConfirm',
	        value: function handleConfirm(value) {
	            var t = this;
	            var argv = value.map(function (v) {
	                return v.value;
	            });
	            for (var i = 0; i < 6; i++) {
	                argv[i] = argv[i] || (i === 2 ? 1 : 0);
	            }
	            var date = new (Function.prototype.bind.apply(Date, [null].concat(argv)))();
	
	            // 确认选中项目
	            t.props.onSelect(date.getTime());
	        }
	    }, {
	        key: 'handleCancel',
	        value: function handleCancel() {
	            var t = this;
	            if (t.state.confirmedValue && t.state.confirmedValue.length) {
	                t.setValue(t.state.confirmedValue);
	            }
	        }
	    }, {
	        key: 'setValue',
	        value: function setValue(val, confirm) {
	            var t = this;
	
	            var _Slot$formatDataValue = Slot.formatDataValue(t.state.data, val);
	
	            var value = _Slot$formatDataValue.value;
	
	            var changes = void 0;
	
	            if (value.length > 2) {
	                // 为确保有对应的日期，需要重新设置日期
	                var dates = getDates(value[0].value, value[1].value);
	                var ret = Slot.formatColumnValue(dates);
	                changes = {
	                    data: _defineProperty({}, 2, {
	                        $set: ret.columnData
	                    }),
	                    value: {
	                        $set: value
	                    }
	                };
	            } else {
	                changes = {
	                    value: {
	                        $set: value
	                    }
	                };
	            }
	            if (confirm) {
	                changes.confirmedValue = {
	                    $set: value
	                };
	            }
	            t.setState(React.addons.update(t.state, changes));
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var t = this;
	            var options = [];
	            return React.createElement(
	                Field,
	                _extends({}, t.props, { icon: t.props.readOnly ? null : {
	                        className: Context.prefixClass('datetime-field-icon'),
	                        name: 'angle-right',
	                        width: 26,
	                        height: 26,
	                        onClick: t.handleClick.bind(t)
	                    },
	                    className: classnames(Context.prefixClass('datetime-field'), _defineProperty({}, t.props.className, !!t.props.className)) }),
	                React.createElement(
	                    'div',
	                    { onClick: t.handleClick.bind(t) },
	                    !t.state.confirmedValue[0] ? React.createElement(
	                        'div',
	                        { className: Context.prefixClass('omit datetime-field-placeholder') },
	                        t.props.placeholder
	                    ) : '',
	                    React.createElement(
	                        'div',
	                        { className: Context.prefixClass('datetime-field-value FBH FBAC') },
	                        React.createElement(
	                            'span',
	                            { className: classnames(Context.prefixClass('FB1 omit'), _defineProperty({}, Context.prefixClass('datetime-field-readonly'), !!t.props.readOnly)) },
	                            t.props.formatter(t.state.confirmedValue)
	                        )
	                    )
	                ),
	                React.createElement(Slot, { ref: 'slot', title: t.props.label, confirmText: t.props.confirmText, cancelText: t.props.cancelText, data: t.state.data, value: t.state.value, onChange: t.handleChange.bind(t), onCancel: t.handleCancel.bind(t), onConfirm: t.handleConfirm.bind(t), columns: t.props.columns })
	            );
	        }
	    }]);
	
	    return DatetimeField;
	}(React.Component);
	
	DatetimeField.defaultProps = {
	    formatter: function formatter(value) {
	        var arr = value.map(function (v) {
	            return v.text < 10 ? '0' + v.text : v.text;
	        });
	        if (arr.length < 4) {
	            return arr.join('-');
	        } else {
	            return arr.slice(0, 3).join('-') + ' ' + arr.slice(3).join(':');
	        }
	    },
	    onSelect: function onSelect() {},
	    readOnly: false,
	    placeholder: '',
	    columns: ['年', '月', '日', '时', '分', '秒']
	};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	DatetimeField.propTypes = {
	    className: React.PropTypes.string,
	    label: React.PropTypes.string.isRequired,
	    value: React.PropTypes.number,
	    formatter: React.PropTypes.func,
	    onSelect: React.PropTypes.func,
	    readOnly: React.PropTypes.bool,
	    placeholder: React.PropTypes.string,
	    confirmText: React.PropTypes.string,
	    cancelText: React.PropTypes.string,
	    columns: React.PropTypes.array
	};
	
	DatetimeField.displayName = 'DatetimeField';
	
	module.exports = DatetimeField;
	
	// 是否是闰年的判断
	function isLeapYear(year) {
	    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;
	}
	
	function makeArray(start, end) {
	    for (var arr = [], i = start; i <= end; i++) {
	        arr.push(i);
	    }
	    return arr;
	}
	
	// 获取某个月份的日期选项
	function getDates(year, month) {
	    var dates = [];
	    switch ('1 1010110101'.split('')[month]) {
	        case '1':
	            // 大月
	            return makeArray(1, 31);
	        case '0':
	            // 小月
	            return makeArray(1, 30);
	        case ' ':
	            // 闰年 2 月 和 平年 2 月
	            return isLeapYear(year) ? makeArray(1, 29) : makeArray(1, 28);
	    }
	}
	
	function parseValue(value) {
	    var date = value ? new Date(parseInt(value)) : new Date();
	    return [date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds()];
	}
	
	function slice(array, props) {
	    return array.slice(0, props.columns.length);
	}
	


/***/ },
/* 169 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames () {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ },
/* 170 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Slot Component Style for tingle
	 * @author caoke.ck
	 *
	 * Copyright 2014-2016, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	module.exports = __webpack_require__(171);
	


/***/ },
/* 171 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * Slot Component for tingle
	 * @author caoke.ck
	 *
	 * Copyright 2014-2016, Tingle Team.
	 * All rights reserved.
	 */
	
	var React = __webpack_require__(2);
	var classnames = __webpack_require__(172);
	var Context = __webpack_require__(116);
	var Layer = __webpack_require__(132);
	var Scroller = __webpack_require__(173);
	
	// 滑动效果的动画函数
	var LINEAR_EASE = {
	    style: 'linear',
	    fn: function fn(k) {
	        return k;
	    }
	};
	
	var isArray = function isArray(arr) {
	    return Object.prototype.toString.call(arr) === '[object Array]';
	};
	var equals = function equals(obj1, obj2) {
	    return JSON.stringify(obj1) === JSON.stringify(obj2);
	};
	
	var Slot = function (_React$Component) {
	    _inherits(Slot, _React$Component);
	
	    function Slot(props) {
	        _classCallCheck(this, Slot);
	
	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Slot).call(this, props));
	
	        var t = _this;
	
	        // 初始状态
	        t.state = {
	            visible: false,
	            title: props.title || '',
	            data: props.data || [],
	            selectedIndex: t.findSelectedIndex(props)
	        };
	        return _this;
	    }
	
	    _createClass(Slot, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            var t = this;
	
	            // 获取所有 scroller 的容器
	            var slotBody = t.refs.root.querySelector('.' + Context.prefixClass('slot-body'));
	
	            // 获取选项高度
	            t.findItemHeight(slotBody);
	
	            // tap 事件触发选中状态变更
	            slotBody.addEventListener('iscroll:tap', function (e) {
	                var className = e.target.className;
	                var reg = new RegExp(Context.prefixClass('slot-item(\\d+)_(\\d+)'));
	                var match = reg.exec(className);
	                if (match && className.indexOf(Context.prefixClass('slot-item-active')) === -1) {
	                    var column = parseInt(match[1]);
	                    var index = parseInt(match[2]);
	                    t.props.onChange(t.getData(column, index), column, index);
	                }
	            }, false);
	
	            // 初始化滚动的标记
	            t._willRefresh = true;
	        }
	    }, {
	        key: 'componentDidUpdate',
	        value: function componentDidUpdate() {
	            var t = this;
	
	            // 获取选项高度
	            t.findItemHeight();
	
	            // 可见的时候滚动到选中的选项
	            if (t.state.visible && t._willRefresh) {
	
	                t._willRefresh = false;
	                t.scrollAll(200);
	            }
	        }
	
	        // 减少渲染次数
	
	    }, {
	        key: 'componentWillReceiveProps',
	        value: function componentWillReceiveProps(nextProps) {
	            var t = this;
	
	            var data = nextProps.data;
	            var selectedIndex = t.findSelectedIndex(nextProps);
	
	            // 数据变化需要重新初始化 scroller
	            var state = {};
	            var willRefresh = false;
	            if (!equals(t.state.data, data)) {
	                state.data = data;
	                if (t.props.scrollMod == 'keep') {
	                    // 替换列后仍保留指定值的位置
	                    // 记录旧值在新数据中的索引
	                    t._selectedIndex = t.findSelectedIndex({
	                        data: data,
	                        value: t.state.selectedIndex.map(function (n, i) {
	                            return t.state.data[i][n];
	                        })
	                    });
	                    // 标记变更的列
	                    t._columnChanged = t.state.data.map(function (n, i) {
	                        return !equals(data[i], n);
	                    });
	                }
	                willRefresh = true;
	            }
	            if (!equals(t.state.selectedIndex, selectedIndex)) {
	                state.selectedIndex = selectedIndex;
	                willRefresh = true;
	            }
	            if (willRefresh) {
	                t._willRefresh = true;
	                t.setState(state);
	            }
	        }
	    }, {
	        key: 'findItemHeight',
	        value: function findItemHeight(slotBody) {
	            var t = this;
	            if (!t._itemHeight) {
	                slotBody = slotBody || t.refs.root.querySelector('.' + Context.prefixClass('slot-body'));
	                var li = slotBody.querySelector('li');
	                t._itemHeight = li ? parseFloat(getComputedStyle(li, null).height) : 0;
	            }
	        }
	    }, {
	        key: 'scrollAll',
	        value: function scrollAll(time) {
	            var t = this;
	            if (t.props.scrollMod == 'keep' && t._selectedIndex) {
	                t._selectedIndex.forEach(function (index, column) {
	                    var scroller = t.refs['scroller' + column].scroller;
	                    if (t._columnChanged[column]) {
	                        scroller.scrollTo(0, -index * t._itemHeight, 0, LINEAR_EASE);
	                    }
	                });
	                delete t._selectedIndex;
	                setTimeout(function () {
	                    t.state.selectedIndex.forEach(function (index, column) {
	                        var scroller = t.refs['scroller' + column].scroller;
	                        scroller.scrollTo(0, -index * t._itemHeight, time, LINEAR_EASE);
	                    });
	                }, 5);
	            } else {
	                t.state.selectedIndex.forEach(function (index, column) {
	                    var scroller = t.refs['scroller' + column].scroller;
	                    scroller.scrollTo(0, -index * t._itemHeight, time, LINEAR_EASE);
	                });
	            }
	        }
	    }, {
	        key: 'findSelectedIndex',
	        value: function findSelectedIndex(props) {
	            var data = props.data || [];
	            var value = props.value || [];
	            var selectedIndex = [];
	
	            // 遍历数据模型
	            data.forEach(function (columnData, column) {
	
	                selectedIndex[column] = 0;
	
	                // 遍历每一列
	                for (var i = 0; i < columnData.length; i++) {
	
	                    // 定位选中值
	                    if (value[column] && columnData[i].value === value[column].value) {
	                        selectedIndex[column] = i;
	                        break;
	                    }
	                }
	            });
	
	            return selectedIndex;
	        }
	    }, {
	        key: 'handleScrollStart',
	        value: function handleScrollStart() {
	            var t = this;
	            t.setState({
	                scrolling: true
	            });
	        }
	    }, {
	        key: 'handleScrollEnd',
	        value: function handleScrollEnd(column) {
	            var t = this;
	            t.setState({
	                scrolling: false
	            });
	            var scroller = t.refs['scroller' + column].scroller;
	            var height = t._itemHeight;
	            var remainder = Math.abs(scroller.y % height);
	            var index = scroller.y / height;
	
	            // 没有滚动到选项，需要继续滚动一段距离
	            if (remainder) {
	
	                var func = void 0;
	                if (scroller.distY > 0) {
	                    // 向下滚动
	                    if (remainder < height * 0.7) {
	                        func = 'ceil';
	                    } else {
	                        func = 'floor';
	                    }
	                } else {
	                    // 向上滚动
	                    if (remainder > height * 0.3) {
	                        func = 'floor';
	                    } else {
	                        func = 'ceil';
	                    }
	                }
	
	                index = Math[func](scroller.y / height);
	            }
	
	            // 在 onChange 中设置状态
	            index = Math.abs(index);
	            t.props.onChange(t.getData(column, index), column, index);
	        }
	    }, {
	        key: 'show',
	        value: function show() {
	            this.setState({
	                visible: true
	            });
	        }
	    }, {
	        key: 'hide',
	        value: function hide() {
	            this.setState({
	                visible: false
	            });
	        }
	    }, {
	        key: 'handleCancel',
	        value: function handleCancel() {
	            var t = this;
	            if (t.state.scrolling) {
	                return false;
	            }
	
	            try {
	                t.props.onCancel();
	            } finally {
	                t.hide();
	            }
	        }
	    }, {
	        key: 'handleConfirm',
	        value: function handleConfirm() {
	            var t = this;
	            if (t.state.scrolling) {
	                return false;
	            }
	
	            try {
	                t.props.onConfirm(t.getData());
	            } finally {
	                t.hide();
	            }
	        }
	
	        // 获取值的时候指定变更的列，为什么要这么做，是因为有变更后我不直接改 state！
	
	    }, {
	        key: 'getData',
	        value: function getData(sColumn, sIndex) {
	            var t = this;
	            var ret = [];
	            var _t$state = t.state;
	            var data = _t$state.data;
	            var selectedIndex = _t$state.selectedIndex;
	
	
	            selectedIndex.forEach(function (index, column) {
	                ret[column] = data[column][column === sColumn ? sIndex : index];
	            });
	
	            return ret;
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var t = this;
	            var _t$props = t.props;
	            var className = _t$props.className;
	            var maskCloseable = _t$props.maskCloseable;
	            var cancelText = _t$props.cancelText;
	            var confirmText = _t$props.confirmText;
	
	            return React.createElement(
	                Layer,
	                { visible: t.state.visible, bottom: 0, onMaskClick: maskCloseable ? t.handleCancel.bind(t) : function () {
	                        return maskCloseable;
	                    } },
	                React.createElement(
	                    'div',
	                    { ref: 'root', className: classnames(Context.prefixClass('slot'), _defineProperty({}, className, !!className)) },
	                    React.createElement(
	                        'div',
	                        { className: Context.prefixClass('slot-header FBH FBAC') },
	                        React.createElement(
	                            'div',
	                            { className: Context.prefixClass('slot-cancel'), onClick: t.handleCancel.bind(t) },
	                            cancelText
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: Context.prefixClass('FB1 FAC slot-title') },
	                            t.state.title
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: classnames(Context.prefixClass('slot-confirm'), {
	                                    enable: !t.state.scrolling
	                                }), onClick: t.handleConfirm.bind(t) },
	                            confirmText
	                        )
	                    ),
	                    t.props.columns && t.props.columns.length ? React.createElement(
	                        'ul',
	                        { className: Context.prefixClass('slot-columns FBH') },
	                        t.props.columns.map(function (c, i) {
	                            return React.createElement(
	                                'li',
	                                { key: 'column' + i, className: Context.prefixClass('FB1 FAC') },
	                                c
	                            );
	                        })
	                    ) : '',
	                    React.createElement(
	                        'div',
	                        { className: Context.prefixClass('slot-body FBH FC9 PR') },
	                        t.state.data.map(function (m, i) {
	                            return React.createElement(
	                                Scroller,
	                                { ref: 'scroller' + i, key: 'scroller' + i, className: Context.prefixClass('FB1'), autoRefresh: t.state.visible, tap: 'iscroll:tap', onScrollStart: t.handleScrollStart.bind(t, i), onScrollEnd: t.handleScrollEnd.bind(t, i) },
	                                React.createElement(
	                                    'ul',
	                                    null,
	                                    React.createElement('li', null),
	                                    React.createElement('li', null),
	                                    m.map(function (n, j) {
	                                        return React.createElement(
	                                            'li',
	                                            { key: 'item' + i + '_' + j, className: classnames(Context.prefixClass('slot-item' + i + '_' + j), _defineProperty({}, Context.prefixClass('slot-item-active'), j === t.state.selectedIndex[i])) },
	                                            n.text
	                                        );
	                                    }),
	                                    React.createElement('li', null),
	                                    React.createElement('li', null)
	                                )
	                            );
	                        })
	                    )
	                )
	            );
	        }
	    }]);
	
	    return Slot;
	}(React.Component);
	
	Slot.defaultProps = {
	    title: '',
	    value: [],
	    maskCloseable: true,
	    data: [],
	    className: '',
	    confirmText: '完成',
	    cancelText: '取消',
	    onConfirm: function onConfirm() {},
	    onCancel: function onCancel() {},
	    onChange: function onChange() {},
	
	    scrollMod: 'reset',
	    columns: []
	};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	Slot.propTypes = {
	    className: React.PropTypes.string,
	    title: React.PropTypes.string,
	    data: React.PropTypes.array.isRequired,
	    value: React.PropTypes.array,
	    maskCloseable: React.PropTypes.bool,
	    confirmText: React.PropTypes.string,
	    cancelText: React.PropTypes.string,
	    onConfirm: React.PropTypes.func,
	    onCancel: React.PropTypes.func,
	    onChange: React.PropTypes.func,
	    scrollMod: React.PropTypes.string,
	    columns: React.PropTypes.array
	};
	
	// 格式化单列数据
	Slot.formatColumnValue = function (columnData, value) {
	
	    // 兼容简单选中值
	    var columnValue = void 0;
	    if (typeof value !== 'undefined') {
	        if (value.hasOwnProperty('value')) {
	            columnValue = value.value;
	        } else {
	            columnValue = value;
	        }
	    }
	    value = undefined;
	
	    // 遍历每一项
	    for (var i = 0; i < columnData.length; i++) {
	        var cell = columnData[i];
	
	        // 兼容非对象的数据
	        if ((typeof cell === 'undefined' ? 'undefined' : _typeof(cell)) !== 'object') {
	            cell = columnData[i] = {
	                text: cell,
	                value: cell
	            };
	        }
	
	        // 补全缺失数据
	        if (!cell.hasOwnProperty('text')) {
	            cell.text = cell.value;
	        }
	        if (!cell.hasOwnProperty('value')) {
	            cell.value = cell.text;
	        }
	
	        // 定位选中值
	        if (cell.value === columnValue) {
	            value = cell;
	        }
	    }
	
	    // 默认选中第一项
	    if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object') {
	        value = columnData[0];
	    }
	
	    return {
	        columnData: columnData,
	        columnValue: value
	    };
	};
	
	// 格式化多列数据
	Slot.formatDataValue = function () {
	    var data = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];
	    var value = arguments.length <= 1 || arguments[1] === undefined ? [] : arguments[1];
	
	
	    // 兼容单列数据的缩略写法
	    if (!isArray(data[0])) {
	        data = [data];
	    }
	    if (!isArray(value)) {
	        value = [value];
	    }
	
	    // 遍历数据模型
	    data.forEach(function (columnData, column) {
	
	        // 格式化列数据
	        var ret = Slot.formatColumnValue(columnData, value[column]);
	        value[column] = ret.columnValue;
	    });
	
	    return {
	        data: data,
	        value: value
	    };
	};
	
	Slot.displayName = 'Slot';
	
	module.exports = Slot;
	


/***/ },
/* 172 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames () {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ },
/* 173 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Scroller Component Style for tingle
	 * @author gbk
	 *
	 * Copyright 2014-2016, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	module.exports = __webpack_require__(174);
	


/***/ },
/* 174 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * Scroller Component for tingle
	 * @author gbk
	 *
	 * Copyright 2014-2016, Tingle Team.
	 * All rights reserved.
	 */
	var classnames = __webpack_require__(175);
	var IScroll = __webpack_require__(176);
	var Context = __webpack_require__(116);
	
	var Scroller = function (_React$Component) {
	    _inherits(Scroller, _React$Component);
	
	    function Scroller(props) {
	        _classCallCheck(this, Scroller);
	
	        return _possibleConstructorReturn(this, Object.getPrototypeOf(Scroller).call(this, props));
	    }
	
	    _createClass(Scroller, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            var t = this;
	
	            // 根节点的dom引用
	            t.el = ReactDOM.findDOMNode(t.refs.root);
	
	            // 初始化 iscroll
	            t.initScroll();
	        }
	    }, {
	        key: 'componentDidUnMount',
	        value: function componentDidUnMount() {
	
	            // 销毁 iscroll
	            this.scroller.destroy();
	        }
	    }, {
	        key: 'componentDidUpdate',
	        value: function componentDidUpdate() {
	
	            var t = this;
	
	            // 避免很频繁的调用
	            clearTimeout(t._timeout);
	            t._timeout = setTimeout(function () {
	
	                // 有些场景下不需要刷新
	                if (t.props.autoRefresh) {
	
	                    // 更新 iscroll
	                    t.scroller && t.scroller.refresh();
	                }
	            }, 10);
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var t = this;
	
	            // iscroll 需要一个 wrapper，所以里面多加了一层 div
	            return React.createElement(
	                'div',
	                { className: classnames(Context.prefixClass('scroller'), _defineProperty({}, t.props.className, !!t.props.className)), ref: 'root' },
	                React.createElement(
	                    'div',
	                    { className: Context.prefixClass('DIB'), style: { minWidth: t.props.minWidth } },
	                    this.props.children
	                )
	            );
	        }
	    }, {
	        key: 'initScroll',
	        value: function initScroll() {
	            var t = this;
	
	            // 参数过滤，onXxx 是事件，否则是配置参数
	            var options = {};
	            var events = {};
	            for (var key in t.props) {
	                var matches = /^on([A-Z]\w*)$/.exec(key);
	                if (matches) {
	                    // 事件
	                    var evtName = matches[1].replace(/./, function (p) {
	                        return p.toLowerCase();
	                    });
	                    events[evtName] = t.props[key];
	                } else if (key !== 'className' && key !== 'autoRefresh' && key !== 'minWidth') {
	                    // 配置
	                    options[key] = t.props[key];
	                }
	            }
	
	            // iscroll 实例化
	            t.scroller = new IScroll(t.el, options);
	
	            // 事件挂载
	            for (var _key in events) {
	                t.scroller.on(_key, events[_key].bind(null, t.scroller));
	            }
	        }
	    }]);
	
	    return Scroller;
	}(React.Component);
	
	// 更多配置参数，详见 http://iscrolljs.com/ ，事件用 onXxx 的格式，例如 scrollEnd 事件对应的参数是 onScrollEnd
	
	
	Scroller.defaultProps = {
	    click: /chrome/i.test(navigator.userAgent), //iscroll 默认屏蔽内部的 click 事件，考虑到在 chrome 中调试没开模拟器的场景，允许响应 click 点击。 http://iscrolljs.com/#basic-features
	    autoRefresh: true,
	    minWidth: '100%'
	};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	Scroller.propTypes = {
	    autoRefresh: React.PropTypes.bool,
	    className: React.PropTypes.string
	};
	
	module.exports = Scroller;
	


/***/ },
/* 175 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames () {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ },
/* 176 */
/***/ function(module, exports) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	/*! iScroll v5.1.3 ~ (c) 2008-2014 Matteo Spinelli ~ http://cubiq.org/license */
	(function (window, document, Math) {
		var rAF = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {
			window.setTimeout(callback, 1000 / 60);
		};
	
		var utils = function () {
			var me = {};
	
			var _elementStyle = document.createElement('div').style;
			var _vendor = function () {
				var vendors = ['t', 'webkitT', 'MozT', 'msT', 'OT'],
				    transform,
				    i = 0,
				    l = vendors.length;
	
				for (; i < l; i++) {
					transform = vendors[i] + 'ransform';
					if (transform in _elementStyle) return vendors[i].substr(0, vendors[i].length - 1);
				}
	
				return false;
			}();
	
			function _prefixStyle(style) {
				if (_vendor === false) return false;
				if (_vendor === '') return style;
				return _vendor + style.charAt(0).toUpperCase() + style.substr(1);
			}
	
			me.getTime = Date.now || function getTime() {
				return new Date().getTime();
			};
	
			me.extend = function (target, obj) {
				for (var i in obj) {
					target[i] = obj[i];
				}
			};
	
			me.addEvent = function (el, type, fn, capture) {
				el.addEventListener(type, fn, !!capture);
			};
	
			me.removeEvent = function (el, type, fn, capture) {
				el.removeEventListener(type, fn, !!capture);
			};
	
			me.prefixPointerEvent = function (pointerEvent) {
				return window.MSPointerEvent ? 'MSPointer' + pointerEvent.charAt(9).toUpperCase() + pointerEvent.substr(10) : pointerEvent;
			};
	
			me.momentum = function (current, start, time, lowerMargin, wrapperSize, deceleration) {
				var distance = current - start,
				    speed = Math.abs(distance) / time,
				    destination,
				    duration;
	
				deceleration = deceleration === undefined ? 0.0006 : deceleration;
	
				destination = current + speed * speed / (2 * deceleration) * (distance < 0 ? -1 : 1);
				duration = speed / deceleration;
	
				if (destination < lowerMargin) {
					destination = wrapperSize ? lowerMargin - wrapperSize / 2.5 * (speed / 8) : lowerMargin;
					distance = Math.abs(destination - current);
					duration = distance / speed;
				} else if (destination > 0) {
					destination = wrapperSize ? wrapperSize / 2.5 * (speed / 8) : 0;
					distance = Math.abs(current) + destination;
					duration = distance / speed;
				}
	
				return {
					destination: Math.round(destination),
					duration: duration
				};
			};
	
			var _transform = _prefixStyle('transform');
	
			me.extend(me, {
				hasTransform: _transform !== false,
				hasPerspective: _prefixStyle('perspective') in _elementStyle,
				hasTouch: 'ontouchstart' in window,
				hasPointer: window.PointerEvent || window.MSPointerEvent, // IE10 is prefixed
				hasTransition: _prefixStyle('transition') in _elementStyle
			});
	
			// This should find all Android browsers lower than build 535.19 (both stock browser and webview)
			me.isBadAndroid = /Android /.test(window.navigator.appVersion) && !/Chrome\/\d/.test(window.navigator.appVersion);
	
			me.extend(me.style = {}, {
				transform: _transform,
				transitionTimingFunction: _prefixStyle('transitionTimingFunction'),
				transitionDuration: _prefixStyle('transitionDuration'),
				transitionDelay: _prefixStyle('transitionDelay'),
				transformOrigin: _prefixStyle('transformOrigin')
			});
	
			me.hasClass = function (e, c) {
				var re = new RegExp("(^|\\s)" + c + "(\\s|$)");
				return re.test(e.className);
			};
	
			me.addClass = function (e, c) {
				if (me.hasClass(e, c)) {
					return;
				}
	
				var newclass = e.className.split(' ');
				newclass.push(c);
				e.className = newclass.join(' ');
			};
	
			me.removeClass = function (e, c) {
				if (!me.hasClass(e, c)) {
					return;
				}
	
				var re = new RegExp("(^|\\s)" + c + "(\\s|$)", 'g');
				e.className = e.className.replace(re, ' ');
			};
	
			me.offset = function (el) {
				var left = -el.offsetLeft,
				    top = -el.offsetTop;
	
				// jshint -W084
				while (el = el.offsetParent) {
					left -= el.offsetLeft;
					top -= el.offsetTop;
				}
				// jshint +W084
	
				return {
					left: left,
					top: top
				};
			};
	
			me.preventDefaultException = function (el, exceptions) {
				for (var i in exceptions) {
					if (exceptions[i].test(el[i])) {
						return true;
					}
				}
	
				return false;
			};
	
			me.extend(me.eventType = {}, {
				touchstart: 1,
				touchmove: 1,
				touchend: 1,
	
				mousedown: 2,
				mousemove: 2,
				mouseup: 2,
	
				pointerdown: 3,
				pointermove: 3,
				pointerup: 3,
	
				MSPointerDown: 3,
				MSPointerMove: 3,
				MSPointerUp: 3
			});
	
			me.extend(me.ease = {}, {
				quadratic: {
					style: 'cubic-bezier(0.25, 0.46, 0.45, 0.94)',
					fn: function fn(k) {
						return k * (2 - k);
					}
				},
				circular: {
					style: 'cubic-bezier(0.1, 0.57, 0.1, 1)', // Not properly "circular" but this looks better, it should be (0.075, 0.82, 0.165, 1)
					fn: function fn(k) {
						return Math.sqrt(1 - --k * k);
					}
				},
				back: {
					style: 'cubic-bezier(0.175, 0.885, 0.32, 1.275)',
					fn: function fn(k) {
						var b = 4;
						return (k = k - 1) * k * ((b + 1) * k + b) + 1;
					}
				},
				bounce: {
					style: '',
					fn: function fn(k) {
						if ((k /= 1) < 1 / 2.75) {
							return 7.5625 * k * k;
						} else if (k < 2 / 2.75) {
							return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;
						} else if (k < 2.5 / 2.75) {
							return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;
						} else {
							return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;
						}
					}
				},
				elastic: {
					style: '',
					fn: function fn(k) {
						var f = 0.22,
						    e = 0.4;
	
						if (k === 0) {
							return 0;
						}
						if (k == 1) {
							return 1;
						}
	
						return e * Math.pow(2, -10 * k) * Math.sin((k - f / 4) * (2 * Math.PI) / f) + 1;
					}
				}
			});
	
			me.tap = function (e, eventName) {
				var ev = document.createEvent('Event');
				ev.initEvent(eventName, true, true);
				ev.pageX = e.pageX;
				ev.pageY = e.pageY;
				e.target.dispatchEvent(ev);
			};
	
			me.click = function (e) {
				var target = e.target,
				    ev;
	
				if (!/(SELECT|INPUT|TEXTAREA)/i.test(target.tagName)) {
					ev = document.createEvent('MouseEvents');
					ev.initMouseEvent('click', true, true, e.view, 1, target.screenX, target.screenY, target.clientX, target.clientY, e.ctrlKey, e.altKey, e.shiftKey, e.metaKey, 0, null);
	
					ev._constructed = true;
					target.dispatchEvent(ev);
				}
			};
	
			return me;
		}();
	
		function IScroll(el, options) {
			this.wrapper = typeof el == 'string' ? document.querySelector(el) : el;
			this.scroller = this.wrapper.children[0];
			this.scrollerStyle = this.scroller.style; // cache style for better performance
	
			this.options = {
	
				zoomMin: 1,
				zoomMax: 4, startZoom: 1,
	
				resizeScrollbars: true,
	
				mouseWheelSpeed: 20,
	
				snapThreshold: 0.334,
	
				// INSERT POINT: OPTIONS
	
				startX: 0,
				startY: 0,
				scrollY: true,
				directionLockThreshold: 5,
				momentum: true,
	
				bounce: true,
				bounceTime: 600,
				bounceEasing: '',
	
				preventDefault: true,
				preventDefaultException: { tagName: /^(INPUT|TEXTAREA|BUTTON|SELECT)$/ },
	
				HWCompositing: true,
				useTransition: true,
				useTransform: true
			};
	
			for (var i in options) {
				this.options[i] = options[i];
			}
	
			// Normalize options
			this.translateZ = this.options.HWCompositing && utils.hasPerspective ? ' translateZ(0)' : '';
	
			this.options.useTransition = utils.hasTransition && this.options.useTransition;
			this.options.useTransform = utils.hasTransform && this.options.useTransform;
	
			this.options.eventPassthrough = this.options.eventPassthrough === true ? 'vertical' : this.options.eventPassthrough;
			this.options.preventDefault = !this.options.eventPassthrough && this.options.preventDefault;
	
			// If you want eventPassthrough I have to lock one of the axes
			this.options.scrollY = this.options.eventPassthrough == 'vertical' ? false : this.options.scrollY;
			this.options.scrollX = this.options.eventPassthrough == 'horizontal' ? false : this.options.scrollX;
	
			// With eventPassthrough we also need lockDirection mechanism
			this.options.freeScroll = this.options.freeScroll && !this.options.eventPassthrough;
			this.options.directionLockThreshold = this.options.eventPassthrough ? 0 : this.options.directionLockThreshold;
	
			this.options.bounceEasing = typeof this.options.bounceEasing == 'string' ? utils.ease[this.options.bounceEasing] || utils.ease.circular : this.options.bounceEasing;
	
			this.options.resizePolling = this.options.resizePolling === undefined ? 60 : this.options.resizePolling;
	
			if (this.options.tap === true) {
				this.options.tap = 'tap';
			}
	
			if (this.options.shrinkScrollbars == 'scale') {
				this.options.useTransition = false;
			}
	
			this.options.invertWheelDirection = this.options.invertWheelDirection ? -1 : 1;
	
			if (this.options.probeType == 3) {
				this.options.useTransition = false;
			}
	
			// INSERT POINT: NORMALIZATION
	
			// Some defaults	
			this.x = 0;
			this.y = 0;
			this.directionX = 0;
			this.directionY = 0;
			this._events = {};
	
			this.scale = Math.min(Math.max(this.options.startZoom, this.options.zoomMin), this.options.zoomMax);
	
			// INSERT POINT: DEFAULTS
	
			this._init();
			this.refresh();
	
			this.scrollTo(this.options.startX, this.options.startY);
			this.enable();
		}
	
		IScroll.prototype = {
			version: '5.1.3',
	
			_init: function _init() {
				this._initEvents();
	
				if (this.options.zoom) {
					this._initZoom();
				}
	
				if (this.options.scrollbars || this.options.indicators) {
					this._initIndicators();
				}
	
				if (this.options.mouseWheel) {
					this._initWheel();
				}
	
				if (this.options.snap) {
					this._initSnap();
				}
	
				if (this.options.keyBindings) {
					this._initKeys();
				}
	
				// INSERT POINT: _init
			},
	
			destroy: function destroy() {
				this._initEvents(true);
	
				this._execEvent('destroy');
			},
	
			_transitionEnd: function _transitionEnd(e) {
				if (e.target != this.scroller || !this.isInTransition) {
					return;
				}
	
				this._transitionTime();
				if (!this.resetPosition(this.options.bounceTime)) {
					this.isInTransition = false;
					this._execEvent('scrollEnd');
				}
			},
	
			_start: function _start(e) {
				// React to left mouse button only
				if (utils.eventType[e.type] != 1) {
					if (e.button !== 0) {
						return;
					}
				}
	
				if (!this.enabled || this.initiated && utils.eventType[e.type] !== this.initiated) {
					return;
				}
	
				if (this.options.preventDefault && !utils.isBadAndroid && !utils.preventDefaultException(e.target, this.options.preventDefaultException)) {
					e.preventDefault();
				}
	
				var point = e.touches ? e.touches[0] : e,
				    pos;
	
				this.initiated = utils.eventType[e.type];
				this.moved = false;
				this.distX = 0;
				this.distY = 0;
				this.directionX = 0;
				this.directionY = 0;
				this.directionLocked = 0;
	
				this._transitionTime();
	
				this.startTime = utils.getTime();
	
				if (this.options.useTransition && this.isInTransition) {
					this.isInTransition = false;
					pos = this.getComputedPosition();
					this._translate(Math.round(pos.x), Math.round(pos.y));
					this._execEvent('scrollEnd');
				} else if (!this.options.useTransition && this.isAnimating) {
					this.isAnimating = false;
					this._execEvent('scrollEnd');
				}
	
				this.startX = this.x;
				this.startY = this.y;
				this.absStartX = this.x;
				this.absStartY = this.y;
				this.pointX = point.pageX;
				this.pointY = point.pageY;
	
				this._execEvent('beforeScrollStart');
			},
	
			_move: function _move(e) {
				if (!this.enabled || utils.eventType[e.type] !== this.initiated) {
					return;
				}
	
				if (this.options.preventDefault) {
					// increases performance on Android? TODO: check!
					e.preventDefault();
				}
	
				var point = e.touches ? e.touches[0] : e,
				    deltaX = point.pageX - this.pointX,
				    deltaY = point.pageY - this.pointY,
				    timestamp = utils.getTime(),
				    newX,
				    newY,
				    absDistX,
				    absDistY;
	
				this.pointX = point.pageX;
				this.pointY = point.pageY;
	
				this.distX += deltaX;
				this.distY += deltaY;
				absDistX = Math.abs(this.distX);
				absDistY = Math.abs(this.distY);
	
				// We need to move at least 10 pixels for the scrolling to initiate
				if (timestamp - this.endTime > 300 && absDistX < 10 && absDistY < 10) {
					return;
				}
	
				// If you are scrolling in one direction lock the other
				if (!this.directionLocked && !this.options.freeScroll) {
					if (absDistX > absDistY + this.options.directionLockThreshold) {
						this.directionLocked = 'h'; // lock horizontally
					} else if (absDistY >= absDistX + this.options.directionLockThreshold) {
							this.directionLocked = 'v'; // lock vertically
						} else {
								this.directionLocked = 'n'; // no lock
							}
				}
	
				if (this.directionLocked == 'h') {
					if (this.options.eventPassthrough == 'vertical') {
						e.preventDefault();
					} else if (this.options.eventPassthrough == 'horizontal') {
						this.initiated = false;
						return;
					}
	
					deltaY = 0;
				} else if (this.directionLocked == 'v') {
					if (this.options.eventPassthrough == 'horizontal') {
						e.preventDefault();
					} else if (this.options.eventPassthrough == 'vertical') {
						this.initiated = false;
						return;
					}
	
					deltaX = 0;
				}
	
				deltaX = this.hasHorizontalScroll ? deltaX : 0;
				deltaY = this.hasVerticalScroll ? deltaY : 0;
	
				newX = this.x + deltaX;
				newY = this.y + deltaY;
	
				// Slow down if outside of the boundaries
				if (newX > 0 || newX < this.maxScrollX) {
					newX = this.options.bounce ? this.x + deltaX / 3 : newX > 0 ? 0 : this.maxScrollX;
				}
				if (newY > 0 || newY < this.maxScrollY) {
					newY = this.options.bounce ? this.y + deltaY / 3 : newY > 0 ? 0 : this.maxScrollY;
				}
	
				this.directionX = deltaX > 0 ? -1 : deltaX < 0 ? 1 : 0;
				this.directionY = deltaY > 0 ? -1 : deltaY < 0 ? 1 : 0;
	
				if (!this.moved) {
					this._execEvent('scrollStart');
				}
	
				this.moved = true;
	
				this._translate(newX, newY);
	
				/* REPLACE START: _move */
	
				if (timestamp - this.startTime > 300) {
					this.startTime = timestamp;
					this.startX = this.x;
					this.startY = this.y;
	
					if (this.options.probeType == 1) {
						this._execEvent('scroll');
					}
				}
	
				if (this.options.probeType > 1) {
					this._execEvent('scroll');
				}
				/* REPLACE END: _move */
			},
	
			_end: function _end(e) {
				if (!this.enabled || utils.eventType[e.type] !== this.initiated) {
					return;
				}
	
				if (this.options.preventDefault && !utils.preventDefaultException(e.target, this.options.preventDefaultException)) {
					e.preventDefault();
				}
	
				var point = e.changedTouches ? e.changedTouches[0] : e,
				    momentumX,
				    momentumY,
				    duration = utils.getTime() - this.startTime,
				    newX = Math.round(this.x),
				    newY = Math.round(this.y),
				    distanceX = Math.abs(newX - this.startX),
				    distanceY = Math.abs(newY - this.startY),
				    time = 0,
				    easing = '';
	
				this.isInTransition = 0;
				this.initiated = 0;
				this.endTime = utils.getTime();
	
				// reset if we are outside of the boundaries
				if (this.resetPosition(this.options.bounceTime)) {
					return;
				}
	
				this.scrollTo(newX, newY); // ensures that the last position is rounded
	
				// we scrolled less than 10 pixels
				if (!this.moved) {
					if (this.options.tap) {
						utils.tap(e, this.options.tap);
					}
	
					if (this.options.click) {
						utils.click(e);
					}
	
					this._execEvent('scrollCancel');
					return;
				}
	
				if (this._events.flick && duration < 200 && distanceX < 100 && distanceY < 100) {
					this._execEvent('flick');
					return;
				}
	
				// start momentum animation if needed
				if (this.options.momentum && duration < 300) {
					momentumX = this.hasHorizontalScroll ? utils.momentum(this.x, this.startX, duration, this.maxScrollX, this.options.bounce ? this.wrapperWidth : 0, this.options.deceleration) : { destination: newX, duration: 0 };
					momentumY = this.hasVerticalScroll ? utils.momentum(this.y, this.startY, duration, this.maxScrollY, this.options.bounce ? this.wrapperHeight : 0, this.options.deceleration) : { destination: newY, duration: 0 };
					newX = momentumX.destination;
					newY = momentumY.destination;
					time = Math.max(momentumX.duration, momentumY.duration);
					this.isInTransition = 1;
				}
	
				if (this.options.snap) {
					var snap = this._nearestSnap(newX, newY);
					this.currentPage = snap;
					time = this.options.snapSpeed || Math.max(Math.max(Math.min(Math.abs(newX - snap.x), 1000), Math.min(Math.abs(newY - snap.y), 1000)), 300);
					newX = snap.x;
					newY = snap.y;
	
					this.directionX = 0;
					this.directionY = 0;
					easing = this.options.bounceEasing;
				}
	
				// INSERT POINT: _end
	
				if (newX != this.x || newY != this.y) {
					// change easing function when scroller goes out of the boundaries
					if (newX > 0 || newX < this.maxScrollX || newY > 0 || newY < this.maxScrollY) {
						easing = utils.ease.quadratic;
					}
	
					this.scrollTo(newX, newY, time, easing);
					return;
				}
	
				this._execEvent('scrollEnd');
			},
	
			_resize: function _resize() {
				var that = this;
	
				clearTimeout(this.resizeTimeout);
	
				this.resizeTimeout = setTimeout(function () {
					that.refresh();
				}, this.options.resizePolling);
			},
	
			resetPosition: function resetPosition(time) {
				var x = this.x,
				    y = this.y;
	
				time = time || 0;
	
				if (!this.hasHorizontalScroll || this.x > 0) {
					x = 0;
				} else if (this.x < this.maxScrollX) {
					x = this.maxScrollX;
				}
	
				if (!this.hasVerticalScroll || this.y > 0) {
					y = 0;
				} else if (this.y < this.maxScrollY) {
					y = this.maxScrollY;
				}
	
				if (x == this.x && y == this.y) {
					return false;
				}
	
				this.scrollTo(x, y, time, this.options.bounceEasing);
	
				return true;
			},
	
			disable: function disable() {
				this.enabled = false;
			},
	
			enable: function enable() {
				this.enabled = true;
			},
	
			refresh: function refresh() {
				var rf = this.wrapper.offsetHeight; // Force reflow
	
				this.wrapperWidth = this.wrapper.clientWidth;
				this.wrapperHeight = this.wrapper.clientHeight;
	
				/* REPLACE START: refresh */
				this.scrollerWidth = Math.round(this.scroller.offsetWidth * this.scale);
				this.scrollerHeight = Math.round(this.scroller.offsetHeight * this.scale);
	
				this.maxScrollX = this.wrapperWidth - this.scrollerWidth;
				this.maxScrollY = this.wrapperHeight - this.scrollerHeight;
				/* REPLACE END: refresh */
	
				this.hasHorizontalScroll = this.options.scrollX && this.maxScrollX < 0;
				this.hasVerticalScroll = this.options.scrollY && this.maxScrollY < 0;
	
				if (!this.hasHorizontalScroll) {
					this.maxScrollX = 0;
					this.scrollerWidth = this.wrapperWidth;
				}
	
				if (!this.hasVerticalScroll) {
					this.maxScrollY = 0;
					this.scrollerHeight = this.wrapperHeight;
				}
	
				this.endTime = 0;
				this.directionX = 0;
				this.directionY = 0;
	
				this.wrapperOffset = utils.offset(this.wrapper);
	
				this._execEvent('refresh');
	
				this.resetPosition();
	
				// INSERT POINT: _refresh
			},
	
			on: function on(type, fn) {
				if (!this._events[type]) {
					this._events[type] = [];
				}
	
				this._events[type].push(fn);
			},
	
			off: function off(type, fn) {
				if (!this._events[type]) {
					return;
				}
	
				var index = this._events[type].indexOf(fn);
	
				if (index > -1) {
					this._events[type].splice(index, 1);
				}
			},
	
			_execEvent: function _execEvent(type) {
				if (!this._events[type]) {
					return;
				}
	
				var i = 0,
				    l = this._events[type].length;
	
				if (!l) {
					return;
				}
	
				for (; i < l; i++) {
					this._events[type][i].apply(this, [].slice.call(arguments, 1));
				}
			},
	
			scrollBy: function scrollBy(x, y, time, easing) {
				x = this.x + x;
				y = this.y + y;
				time = time || 0;
	
				this.scrollTo(x, y, time, easing);
			},
	
			scrollTo: function scrollTo(x, y, time, easing) {
				easing = easing || utils.ease.circular;
	
				this.isInTransition = this.options.useTransition && time > 0;
	
				if (!time || this.options.useTransition && easing.style) {
					this._transitionTimingFunction(easing.style);
					this._transitionTime(time);
					this._translate(x, y);
				} else {
					this._animate(x, y, time, easing.fn);
				}
			},
	
			scrollToElement: function scrollToElement(el, time, offsetX, offsetY, easing) {
				el = el.nodeType ? el : this.scroller.querySelector(el);
	
				if (!el) {
					return;
				}
	
				var pos = utils.offset(el);
	
				pos.left -= this.wrapperOffset.left;
				pos.top -= this.wrapperOffset.top;
	
				// if offsetX/Y are true we center the element to the screen
				if (offsetX === true) {
					offsetX = Math.round(el.offsetWidth / 2 - this.wrapper.offsetWidth / 2);
				}
				if (offsetY === true) {
					offsetY = Math.round(el.offsetHeight / 2 - this.wrapper.offsetHeight / 2);
				}
	
				pos.left -= offsetX || 0;
				pos.top -= offsetY || 0;
	
				pos.left = pos.left > 0 ? 0 : pos.left < this.maxScrollX ? this.maxScrollX : pos.left;
				pos.top = pos.top > 0 ? 0 : pos.top < this.maxScrollY ? this.maxScrollY : pos.top;
	
				time = time === undefined || time === null || time === 'auto' ? Math.max(Math.abs(this.x - pos.left), Math.abs(this.y - pos.top)) : time;
	
				this.scrollTo(pos.left, pos.top, time, easing);
			},
	
			_transitionTime: function _transitionTime(time) {
				time = time || 0;
	
				this.scrollerStyle[utils.style.transitionDuration] = time + 'ms';
	
				if (!time && utils.isBadAndroid) {
					this.scrollerStyle[utils.style.transitionDuration] = '0.001s';
				}
	
				if (this.indicators) {
					for (var i = this.indicators.length; i--;) {
						this.indicators[i].transitionTime(time);
					}
				}
	
				// INSERT POINT: _transitionTime
			},
	
			_transitionTimingFunction: function _transitionTimingFunction(easing) {
				this.scrollerStyle[utils.style.transitionTimingFunction] = easing;
	
				if (this.indicators) {
					for (var i = this.indicators.length; i--;) {
						this.indicators[i].transitionTimingFunction(easing);
					}
				}
	
				// INSERT POINT: _transitionTimingFunction
			},
	
			_translate: function _translate(x, y) {
				if (this.options.useTransform) {
	
					/* REPLACE START: _translate */this.scrollerStyle[utils.style.transform] = 'translate(' + x + 'px,' + y + 'px) scale(' + this.scale + ') ' + this.translateZ; /* REPLACE END: _translate */
				} else {
						x = Math.round(x);
						y = Math.round(y);
						this.scrollerStyle.left = x + 'px';
						this.scrollerStyle.top = y + 'px';
					}
	
				this.x = x;
				this.y = y;
	
				if (this.indicators) {
					for (var i = this.indicators.length; i--;) {
						this.indicators[i].updatePosition();
					}
				}
	
				// INSERT POINT: _translate
			},
	
			_initEvents: function _initEvents(remove) {
				var eventType = remove ? utils.removeEvent : utils.addEvent,
				    target = this.options.bindToWrapper ? this.wrapper : window;
	
				eventType(window, 'orientationchange', this);
				eventType(window, 'resize', this);
	
				if (this.options.click) {
					eventType(this.wrapper, 'click', this, true);
				}
	
				if (!this.options.disableMouse) {
					eventType(this.wrapper, 'mousedown', this);
					eventType(target, 'mousemove', this);
					eventType(target, 'mousecancel', this);
					eventType(target, 'mouseup', this);
				}
	
				if (utils.hasPointer && !this.options.disablePointer) {
					eventType(this.wrapper, utils.prefixPointerEvent('pointerdown'), this);
					eventType(target, utils.prefixPointerEvent('pointermove'), this);
					eventType(target, utils.prefixPointerEvent('pointercancel'), this);
					eventType(target, utils.prefixPointerEvent('pointerup'), this);
				}
	
				if (utils.hasTouch && !this.options.disableTouch) {
					eventType(this.wrapper, 'touchstart', this);
					eventType(target, 'touchmove', this);
					eventType(target, 'touchcancel', this);
					eventType(target, 'touchend', this);
				}
	
				eventType(this.scroller, 'transitionend', this);
				eventType(this.scroller, 'webkitTransitionEnd', this);
				eventType(this.scroller, 'oTransitionEnd', this);
				eventType(this.scroller, 'MSTransitionEnd', this);
			},
	
			getComputedPosition: function getComputedPosition() {
				var matrix = window.getComputedStyle(this.scroller, null),
				    x,
				    y;
	
				if (this.options.useTransform) {
					matrix = matrix[utils.style.transform].split(')')[0].split(', ');
					x = +(matrix[12] || matrix[4]);
					y = +(matrix[13] || matrix[5]);
				} else {
					x = +matrix.left.replace(/[^-\d.]/g, '');
					y = +matrix.top.replace(/[^-\d.]/g, '');
				}
	
				return { x: x, y: y };
			},
	
			_initIndicators: function _initIndicators() {
				var interactive = this.options.interactiveScrollbars,
				    customStyle = typeof this.options.scrollbars != 'string',
				    indicators = [],
				    indicator;
	
				var that = this;
	
				this.indicators = [];
	
				if (this.options.scrollbars) {
					// Vertical scrollbar
					if (this.options.scrollY) {
						indicator = {
							el: createDefaultScrollbar('v', interactive, this.options.scrollbars),
							interactive: interactive,
							defaultScrollbars: true,
							customStyle: customStyle,
							resize: this.options.resizeScrollbars,
							shrink: this.options.shrinkScrollbars,
							fade: this.options.fadeScrollbars,
							listenX: false
						};
	
						this.wrapper.appendChild(indicator.el);
						indicators.push(indicator);
					}
	
					// Horizontal scrollbar
					if (this.options.scrollX) {
						indicator = {
							el: createDefaultScrollbar('h', interactive, this.options.scrollbars),
							interactive: interactive,
							defaultScrollbars: true,
							customStyle: customStyle,
							resize: this.options.resizeScrollbars,
							shrink: this.options.shrinkScrollbars,
							fade: this.options.fadeScrollbars,
							listenY: false
						};
	
						this.wrapper.appendChild(indicator.el);
						indicators.push(indicator);
					}
				}
	
				if (this.options.indicators) {
					// TODO: check concat compatibility
					indicators = indicators.concat(this.options.indicators);
				}
	
				for (var i = indicators.length; i--;) {
					this.indicators.push(new Indicator(this, indicators[i]));
				}
	
				// TODO: check if we can use array.map (wide compatibility and performance issues)
				function _indicatorsMap(fn) {
					for (var i = that.indicators.length; i--;) {
						fn.call(that.indicators[i]);
					}
				}
	
				if (this.options.fadeScrollbars) {
					this.on('scrollEnd', function () {
						_indicatorsMap(function () {
							this.fade();
						});
					});
	
					this.on('scrollCancel', function () {
						_indicatorsMap(function () {
							this.fade();
						});
					});
	
					this.on('scrollStart', function () {
						_indicatorsMap(function () {
							this.fade(1);
						});
					});
	
					this.on('beforeScrollStart', function () {
						_indicatorsMap(function () {
							this.fade(1, true);
						});
					});
				}
	
				this.on('refresh', function () {
					_indicatorsMap(function () {
						this.refresh();
					});
				});
	
				this.on('destroy', function () {
					_indicatorsMap(function () {
						this.destroy();
					});
	
					delete this.indicators;
				});
			},
	
			_initZoom: function _initZoom() {
				this.scrollerStyle[utils.style.transformOrigin] = '0 0';
			},
	
			_zoomStart: function _zoomStart(e) {
				var c1 = Math.abs(e.touches[0].pageX - e.touches[1].pageX),
				    c2 = Math.abs(e.touches[0].pageY - e.touches[1].pageY);
	
				this.touchesDistanceStart = Math.sqrt(c1 * c1 + c2 * c2);
				this.startScale = this.scale;
	
				this.originX = Math.abs(e.touches[0].pageX + e.touches[1].pageX) / 2 + this.wrapperOffset.left - this.x;
				this.originY = Math.abs(e.touches[0].pageY + e.touches[1].pageY) / 2 + this.wrapperOffset.top - this.y;
	
				this._execEvent('zoomStart');
			},
	
			_zoom: function _zoom(e) {
				if (!this.enabled || utils.eventType[e.type] !== this.initiated) {
					return;
				}
	
				if (this.options.preventDefault) {
					e.preventDefault();
				}
	
				var c1 = Math.abs(e.touches[0].pageX - e.touches[1].pageX),
				    c2 = Math.abs(e.touches[0].pageY - e.touches[1].pageY),
				    distance = Math.sqrt(c1 * c1 + c2 * c2),
				    scale = 1 / this.touchesDistanceStart * distance * this.startScale,
				    lastScale,
				    x,
				    y;
	
				this.scaled = true;
	
				if (scale < this.options.zoomMin) {
					scale = 0.5 * this.options.zoomMin * Math.pow(2.0, scale / this.options.zoomMin);
				} else if (scale > this.options.zoomMax) {
					scale = 2.0 * this.options.zoomMax * Math.pow(0.5, this.options.zoomMax / scale);
				}
	
				lastScale = scale / this.startScale;
				x = this.originX - this.originX * lastScale + this.startX;
				y = this.originY - this.originY * lastScale + this.startY;
	
				this.scale = scale;
	
				this._execEvent('zoom', scale);
				this.scrollTo(x, y, 0);
			},
	
			_zoomEnd: function _zoomEnd(e) {
				if (!this.enabled || utils.eventType[e.type] !== this.initiated) {
					return;
				}
	
				if (this.options.preventDefault) {
					e.preventDefault();
				}
	
				var newX, newY, lastScale;
	
				this.isInTransition = 0;
				this.initiated = 0;
	
				if (this.scale > this.options.zoomMax) {
					this.scale = this.options.zoomMax;
				} else if (this.scale < this.options.zoomMin) {
					this.scale = this.options.zoomMin;
				}
	
				// Update boundaries
				this.refresh();
	
				lastScale = this.scale / this.startScale;
	
				newX = this.originX - this.originX * lastScale + this.startX;
				newY = this.originY - this.originY * lastScale + this.startY;
	
				if (newX > 0) {
					newX = 0;
				} else if (newX < this.maxScrollX) {
					newX = this.maxScrollX;
				}
	
				if (newY > 0) {
					newY = 0;
				} else if (newY < this.maxScrollY) {
					newY = this.maxScrollY;
				}
	
				if (this.x != newX || this.y != newY) {
					this.scrollTo(newX, newY, this.options.bounceTime);
				}
	
				this.scaled = false;
	
				this._execEvent('zoomEnd');
			},
	
			zoom: function zoom(scale, x, y, time) {
				if (scale < this.options.zoomMin) {
					scale = this.options.zoomMin;
				} else if (scale > this.options.zoomMax) {
					scale = this.options.zoomMax;
				}
	
				if (scale == this.scale) {
					return;
				}
	
				var relScale = scale / this.scale;
	
				x = x === undefined ? this.wrapperWidth / 2 : x;
				y = y === undefined ? this.wrapperHeight / 2 : y;
				time = time === undefined ? 300 : time;
	
				x = x + this.wrapperOffset.left - this.x;
				y = y + this.wrapperOffset.top - this.y;
	
				x = x - x * relScale + this.x;
				y = y - y * relScale + this.y;
	
				this.scale = scale;
	
				this.refresh(); // update boundaries
	
				if (x > 0) {
					x = 0;
				} else if (x < this.maxScrollX) {
					x = this.maxScrollX;
				}
	
				if (y > 0) {
					y = 0;
				} else if (y < this.maxScrollY) {
					y = this.maxScrollY;
				}
	
				this.scrollTo(x, y, time);
			},
	
			_wheelZoom: function _wheelZoom(e) {
				var wheelDeltaY,
				    deltaScale,
				    that = this;
	
				// Execute the zoomEnd event after 400ms the wheel stopped scrolling
				clearTimeout(this.wheelTimeout);
				this.wheelTimeout = setTimeout(function () {
					that._execEvent('zoomEnd');
				}, 400);
	
				if ('deltaX' in e) {
					wheelDeltaY = -e.deltaY / Math.abs(e.deltaY);
				} else if ('wheelDeltaX' in e) {
					wheelDeltaY = e.wheelDeltaY / Math.abs(e.wheelDeltaY);
				} else if ('wheelDelta' in e) {
					wheelDeltaY = e.wheelDelta / Math.abs(e.wheelDelta);
				} else if ('detail' in e) {
					wheelDeltaY = -e.detail / Math.abs(e.wheelDelta);
				} else {
					return;
				}
	
				deltaScale = this.scale + wheelDeltaY / 5;
	
				this.zoom(deltaScale, e.pageX, e.pageY, 0);
			},
	
			_initWheel: function _initWheel() {
				utils.addEvent(this.wrapper, 'wheel', this);
				utils.addEvent(this.wrapper, 'mousewheel', this);
				utils.addEvent(this.wrapper, 'DOMMouseScroll', this);
	
				this.on('destroy', function () {
					utils.removeEvent(this.wrapper, 'wheel', this);
					utils.removeEvent(this.wrapper, 'mousewheel', this);
					utils.removeEvent(this.wrapper, 'DOMMouseScroll', this);
				});
			},
	
			_wheel: function _wheel(e) {
				if (!this.enabled) {
					return;
				}
	
				e.preventDefault();
				e.stopPropagation();
	
				var wheelDeltaX,
				    wheelDeltaY,
				    newX,
				    newY,
				    that = this;
	
				if (this.wheelTimeout === undefined) {
					that._execEvent('scrollStart');
				}
	
				// Execute the scrollEnd event after 400ms the wheel stopped scrolling
				clearTimeout(this.wheelTimeout);
				this.wheelTimeout = setTimeout(function () {
					that._execEvent('scrollEnd');
					that.wheelTimeout = undefined;
				}, 400);
	
				if ('deltaX' in e) {
					if (e.deltaMode === 1) {
						wheelDeltaX = -e.deltaX * this.options.mouseWheelSpeed;
						wheelDeltaY = -e.deltaY * this.options.mouseWheelSpeed;
					} else {
						wheelDeltaX = -e.deltaX;
						wheelDeltaY = -e.deltaY;
					}
				} else if ('wheelDeltaX' in e) {
					wheelDeltaX = e.wheelDeltaX / 120 * this.options.mouseWheelSpeed;
					wheelDeltaY = e.wheelDeltaY / 120 * this.options.mouseWheelSpeed;
				} else if ('wheelDelta' in e) {
					wheelDeltaX = wheelDeltaY = e.wheelDelta / 120 * this.options.mouseWheelSpeed;
				} else if ('detail' in e) {
					wheelDeltaX = wheelDeltaY = -e.detail / 3 * this.options.mouseWheelSpeed;
				} else {
					return;
				}
	
				wheelDeltaX *= this.options.invertWheelDirection;
				wheelDeltaY *= this.options.invertWheelDirection;
	
				if (!this.hasVerticalScroll) {
					wheelDeltaX = wheelDeltaY;
					wheelDeltaY = 0;
				}
	
				if (this.options.snap) {
					newX = this.currentPage.pageX;
					newY = this.currentPage.pageY;
	
					if (wheelDeltaX > 0) {
						newX--;
					} else if (wheelDeltaX < 0) {
						newX++;
					}
	
					if (wheelDeltaY > 0) {
						newY--;
					} else if (wheelDeltaY < 0) {
						newY++;
					}
	
					this.goToPage(newX, newY);
	
					return;
				}
	
				newX = this.x + Math.round(this.hasHorizontalScroll ? wheelDeltaX : 0);
				newY = this.y + Math.round(this.hasVerticalScroll ? wheelDeltaY : 0);
	
				if (newX > 0) {
					newX = 0;
				} else if (newX < this.maxScrollX) {
					newX = this.maxScrollX;
				}
	
				if (newY > 0) {
					newY = 0;
				} else if (newY < this.maxScrollY) {
					newY = this.maxScrollY;
				}
	
				this.scrollTo(newX, newY, 0);
	
				if (this.options.probeType > 1) {
					this._execEvent('scroll');
				}
	
				// INSERT POINT: _wheel
			},
	
			_initSnap: function _initSnap() {
				this.currentPage = {};
	
				if (typeof this.options.snap == 'string') {
					this.options.snap = this.scroller.querySelectorAll(this.options.snap);
				}
	
				this.on('refresh', function () {
					var i = 0,
					    l,
					    m = 0,
					    n,
					    cx,
					    cy,
					    x = 0,
					    y,
					    stepX = this.options.snapStepX || this.wrapperWidth,
					    stepY = this.options.snapStepY || this.wrapperHeight,
					    el;
	
					this.pages = [];
	
					if (!this.wrapperWidth || !this.wrapperHeight || !this.scrollerWidth || !this.scrollerHeight) {
						return;
					}
	
					if (this.options.snap === true) {
						cx = Math.round(stepX / 2);
						cy = Math.round(stepY / 2);
	
						while (x > -this.scrollerWidth) {
							this.pages[i] = [];
							l = 0;
							y = 0;
	
							while (y > -this.scrollerHeight) {
								this.pages[i][l] = {
									x: Math.max(x, this.maxScrollX),
									y: Math.max(y, this.maxScrollY),
									width: stepX,
									height: stepY,
									cx: x - cx,
									cy: y - cy
								};
	
								y -= stepY;
								l++;
							}
	
							x -= stepX;
							i++;
						}
					} else {
						el = this.options.snap;
						l = el.length;
						n = -1;
	
						for (; i < l; i++) {
							if (i === 0 || el[i].offsetLeft <= el[i - 1].offsetLeft) {
								m = 0;
								n++;
							}
	
							if (!this.pages[m]) {
								this.pages[m] = [];
							}
	
							x = Math.max(-el[i].offsetLeft, this.maxScrollX);
							y = Math.max(-el[i].offsetTop, this.maxScrollY);
							cx = x - Math.round(el[i].offsetWidth / 2);
							cy = y - Math.round(el[i].offsetHeight / 2);
	
							this.pages[m][n] = {
								x: x,
								y: y,
								width: el[i].offsetWidth,
								height: el[i].offsetHeight,
								cx: cx,
								cy: cy
							};
	
							if (x > this.maxScrollX) {
								m++;
							}
						}
					}
	
					this.goToPage(this.currentPage.pageX || 0, this.currentPage.pageY || 0, 0);
	
					// Update snap threshold if needed
					if (this.options.snapThreshold % 1 === 0) {
						this.snapThresholdX = this.options.snapThreshold;
						this.snapThresholdY = this.options.snapThreshold;
					} else {
						this.snapThresholdX = Math.round(this.pages[this.currentPage.pageX][this.currentPage.pageY].width * this.options.snapThreshold);
						this.snapThresholdY = Math.round(this.pages[this.currentPage.pageX][this.currentPage.pageY].height * this.options.snapThreshold);
					}
				});
	
				this.on('flick', function () {
					var time = this.options.snapSpeed || Math.max(Math.max(Math.min(Math.abs(this.x - this.startX), 1000), Math.min(Math.abs(this.y - this.startY), 1000)), 300);
	
					this.goToPage(this.currentPage.pageX + this.directionX, this.currentPage.pageY + this.directionY, time);
				});
			},
	
			_nearestSnap: function _nearestSnap(x, y) {
				if (!this.pages.length) {
					return { x: 0, y: 0, pageX: 0, pageY: 0 };
				}
	
				var i = 0,
				    l = this.pages.length,
				    m = 0;
	
				// Check if we exceeded the snap threshold
				if (Math.abs(x - this.absStartX) < this.snapThresholdX && Math.abs(y - this.absStartY) < this.snapThresholdY) {
					return this.currentPage;
				}
	
				if (x > 0) {
					x = 0;
				} else if (x < this.maxScrollX) {
					x = this.maxScrollX;
				}
	
				if (y > 0) {
					y = 0;
				} else if (y < this.maxScrollY) {
					y = this.maxScrollY;
				}
	
				for (; i < l; i++) {
					if (x >= this.pages[i][0].cx) {
						x = this.pages[i][0].x;
						break;
					}
				}
	
				l = this.pages[i].length;
	
				for (; m < l; m++) {
					if (y >= this.pages[0][m].cy) {
						y = this.pages[0][m].y;
						break;
					}
				}
	
				if (i == this.currentPage.pageX) {
					i += this.directionX;
	
					if (i < 0) {
						i = 0;
					} else if (i >= this.pages.length) {
						i = this.pages.length - 1;
					}
	
					x = this.pages[i][0].x;
				}
	
				if (m == this.currentPage.pageY) {
					m += this.directionY;
	
					if (m < 0) {
						m = 0;
					} else if (m >= this.pages[0].length) {
						m = this.pages[0].length - 1;
					}
	
					y = this.pages[0][m].y;
				}
	
				return {
					x: x,
					y: y,
					pageX: i,
					pageY: m
				};
			},
	
			goToPage: function goToPage(x, y, time, easing) {
				easing = easing || this.options.bounceEasing;
	
				if (x >= this.pages.length) {
					x = this.pages.length - 1;
				} else if (x < 0) {
					x = 0;
				}
	
				if (y >= this.pages[x].length) {
					y = this.pages[x].length - 1;
				} else if (y < 0) {
					y = 0;
				}
	
				var posX = this.pages[x][y].x,
				    posY = this.pages[x][y].y;
	
				time = time === undefined ? this.options.snapSpeed || Math.max(Math.max(Math.min(Math.abs(posX - this.x), 1000), Math.min(Math.abs(posY - this.y), 1000)), 300) : time;
	
				this.currentPage = {
					x: posX,
					y: posY,
					pageX: x,
					pageY: y
				};
	
				this.scrollTo(posX, posY, time, easing);
			},
	
			next: function next(time, easing) {
				var x = this.currentPage.pageX,
				    y = this.currentPage.pageY;
	
				x++;
	
				if (x >= this.pages.length && this.hasVerticalScroll) {
					x = 0;
					y++;
				}
	
				this.goToPage(x, y, time, easing);
			},
	
			prev: function prev(time, easing) {
				var x = this.currentPage.pageX,
				    y = this.currentPage.pageY;
	
				x--;
	
				if (x < 0 && this.hasVerticalScroll) {
					x = 0;
					y--;
				}
	
				this.goToPage(x, y, time, easing);
			},
	
			_initKeys: function _initKeys(e) {
				// default key bindings
				var keys = {
					pageUp: 33,
					pageDown: 34,
					end: 35,
					home: 36,
					left: 37,
					up: 38,
					right: 39,
					down: 40
				};
				var i;
	
				// if you give me characters I give you keycode
				if (_typeof(this.options.keyBindings) == 'object') {
					for (i in this.options.keyBindings) {
						if (typeof this.options.keyBindings[i] == 'string') {
							this.options.keyBindings[i] = this.options.keyBindings[i].toUpperCase().charCodeAt(0);
						}
					}
				} else {
					this.options.keyBindings = {};
				}
	
				for (i in keys) {
					this.options.keyBindings[i] = this.options.keyBindings[i] || keys[i];
				}
	
				utils.addEvent(window, 'keydown', this);
	
				this.on('destroy', function () {
					utils.removeEvent(window, 'keydown', this);
				});
			},
	
			_key: function _key(e) {
				if (!this.enabled) {
					return;
				}
	
				var snap = this.options.snap,
				    // we are using this alot, better to cache it
				newX = snap ? this.currentPage.pageX : this.x,
				    newY = snap ? this.currentPage.pageY : this.y,
				    now = utils.getTime(),
				    prevTime = this.keyTime || 0,
				    acceleration = 0.250,
				    pos;
	
				if (this.options.useTransition && this.isInTransition) {
					pos = this.getComputedPosition();
	
					this._translate(Math.round(pos.x), Math.round(pos.y));
					this.isInTransition = false;
				}
	
				this.keyAcceleration = now - prevTime < 200 ? Math.min(this.keyAcceleration + acceleration, 50) : 0;
	
				switch (e.keyCode) {
					case this.options.keyBindings.pageUp:
						if (this.hasHorizontalScroll && !this.hasVerticalScroll) {
							newX += snap ? 1 : this.wrapperWidth;
						} else {
							newY += snap ? 1 : this.wrapperHeight;
						}
						break;
					case this.options.keyBindings.pageDown:
						if (this.hasHorizontalScroll && !this.hasVerticalScroll) {
							newX -= snap ? 1 : this.wrapperWidth;
						} else {
							newY -= snap ? 1 : this.wrapperHeight;
						}
						break;
					case this.options.keyBindings.end:
						newX = snap ? this.pages.length - 1 : this.maxScrollX;
						newY = snap ? this.pages[0].length - 1 : this.maxScrollY;
						break;
					case this.options.keyBindings.home:
						newX = 0;
						newY = 0;
						break;
					case this.options.keyBindings.left:
						newX += snap ? -1 : 5 + this.keyAcceleration >> 0;
						break;
					case this.options.keyBindings.up:
						newY += snap ? 1 : 5 + this.keyAcceleration >> 0;
						break;
					case this.options.keyBindings.right:
						newX -= snap ? -1 : 5 + this.keyAcceleration >> 0;
						break;
					case this.options.keyBindings.down:
						newY -= snap ? 1 : 5 + this.keyAcceleration >> 0;
						break;
					default:
						return;
				}
	
				if (snap) {
					this.goToPage(newX, newY);
					return;
				}
	
				if (newX > 0) {
					newX = 0;
					this.keyAcceleration = 0;
				} else if (newX < this.maxScrollX) {
					newX = this.maxScrollX;
					this.keyAcceleration = 0;
				}
	
				if (newY > 0) {
					newY = 0;
					this.keyAcceleration = 0;
				} else if (newY < this.maxScrollY) {
					newY = this.maxScrollY;
					this.keyAcceleration = 0;
				}
	
				this.scrollTo(newX, newY, 0);
	
				this.keyTime = now;
			},
	
			_animate: function _animate(destX, destY, duration, easingFn) {
				var that = this,
				    startX = this.x,
				    startY = this.y,
				    startTime = utils.getTime(),
				    destTime = startTime + duration;
	
				function step() {
					var now = utils.getTime(),
					    newX,
					    newY,
					    easing;
	
					if (now >= destTime) {
						that.isAnimating = false;
						that._translate(destX, destY);
	
						if (!that.resetPosition(that.options.bounceTime)) {
							that._execEvent('scrollEnd');
						}
	
						return;
					}
	
					now = (now - startTime) / duration;
					easing = easingFn(now);
					newX = (destX - startX) * easing + startX;
					newY = (destY - startY) * easing + startY;
					that._translate(newX, newY);
	
					if (that.isAnimating) {
						rAF(step);
					}
	
					if (that.options.probeType == 3) {
						that._execEvent('scroll');
					}
				}
	
				this.isAnimating = true;
				step();
			},
			handleEvent: function handleEvent(e) {
				switch (e.type) {
					case 'touchstart':
					case 'pointerdown':
					case 'MSPointerDown':
					case 'mousedown':
						this._start(e);
	
						if (this.options.zoom && e.touches && e.touches.length > 1) {
							this._zoomStart(e);
						}
						break;
					case 'touchmove':
					case 'pointermove':
					case 'MSPointerMove':
					case 'mousemove':
						if (this.options.zoom && e.touches && e.touches[1]) {
							this._zoom(e);
							return;
						}
						this._move(e);
						break;
					case 'touchend':
					case 'pointerup':
					case 'MSPointerUp':
					case 'mouseup':
					case 'touchcancel':
					case 'pointercancel':
					case 'MSPointerCancel':
					case 'mousecancel':
						if (this.scaled) {
							this._zoomEnd(e);
							return;
						}
						this._end(e);
						break;
					case 'orientationchange':
					case 'resize':
						this._resize();
						break;
					case 'transitionend':
					case 'webkitTransitionEnd':
					case 'oTransitionEnd':
					case 'MSTransitionEnd':
						this._transitionEnd(e);
						break;
					case 'wheel':
					case 'DOMMouseScroll':
					case 'mousewheel':
						if (this.options.wheelAction == 'zoom') {
							this._wheelZoom(e);
							return;
						}
						this._wheel(e);
						break;
					case 'keydown':
						this._key(e);
						break;
				}
			}
	
		};
		function createDefaultScrollbar(direction, interactive, type) {
			var scrollbar = document.createElement('div'),
			    indicator = document.createElement('div');
	
			if (type === true) {
				scrollbar.style.cssText = 'position:absolute;z-index:9999';
				indicator.style.cssText = '-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;position:absolute;background:rgba(0,0,0,0.5);border:1px solid rgba(255,255,255,0.9);border-radius:3px';
			}
	
			indicator.className = 'iScrollIndicator';
	
			if (direction == 'h') {
				if (type === true) {
					scrollbar.style.cssText += ';height:7px;left:2px;right:2px;bottom:0';
					indicator.style.height = '100%';
				}
				scrollbar.className = 'iScrollHorizontalScrollbar';
			} else {
				if (type === true) {
					scrollbar.style.cssText += ';width:7px;bottom:2px;top:2px;right:1px';
					indicator.style.width = '100%';
				}
				scrollbar.className = 'iScrollVerticalScrollbar';
			}
	
			scrollbar.style.cssText += ';overflow:hidden';
	
			if (!interactive) {
				scrollbar.style.pointerEvents = 'none';
			}
	
			scrollbar.appendChild(indicator);
	
			return scrollbar;
		}
	
		function Indicator(scroller, options) {
			this.wrapper = typeof options.el == 'string' ? document.querySelector(options.el) : options.el;
			this.wrapperStyle = this.wrapper.style;
			this.indicator = this.wrapper.children[0];
			this.indicatorStyle = this.indicator.style;
			this.scroller = scroller;
	
			this.options = {
				listenX: true,
				listenY: true,
				interactive: false,
				resize: true,
				defaultScrollbars: false,
				shrink: false,
				fade: false,
				speedRatioX: 0,
				speedRatioY: 0
			};
	
			for (var i in options) {
				this.options[i] = options[i];
			}
	
			this.sizeRatioX = 1;
			this.sizeRatioY = 1;
			this.maxPosX = 0;
			this.maxPosY = 0;
	
			if (this.options.interactive) {
				if (!this.options.disableTouch) {
					utils.addEvent(this.indicator, 'touchstart', this);
					utils.addEvent(window, 'touchend', this);
				}
				if (!this.options.disablePointer) {
					utils.addEvent(this.indicator, utils.prefixPointerEvent('pointerdown'), this);
					utils.addEvent(window, utils.prefixPointerEvent('pointerup'), this);
				}
				if (!this.options.disableMouse) {
					utils.addEvent(this.indicator, 'mousedown', this);
					utils.addEvent(window, 'mouseup', this);
				}
			}
	
			if (this.options.fade) {
				this.wrapperStyle[utils.style.transform] = this.scroller.translateZ;
				this.wrapperStyle[utils.style.transitionDuration] = utils.isBadAndroid ? '0.001s' : '0ms';
				this.wrapperStyle.opacity = '0';
			}
		}
	
		Indicator.prototype = {
			handleEvent: function handleEvent(e) {
				switch (e.type) {
					case 'touchstart':
					case 'pointerdown':
					case 'MSPointerDown':
					case 'mousedown':
						this._start(e);
						break;
					case 'touchmove':
					case 'pointermove':
					case 'MSPointerMove':
					case 'mousemove':
						this._move(e);
						break;
					case 'touchend':
					case 'pointerup':
					case 'MSPointerUp':
					case 'mouseup':
					case 'touchcancel':
					case 'pointercancel':
					case 'MSPointerCancel':
					case 'mousecancel':
						this._end(e);
						break;
				}
			},
	
			destroy: function destroy() {
				if (this.options.interactive) {
					utils.removeEvent(this.indicator, 'touchstart', this);
					utils.removeEvent(this.indicator, utils.prefixPointerEvent('pointerdown'), this);
					utils.removeEvent(this.indicator, 'mousedown', this);
	
					utils.removeEvent(window, 'touchmove', this);
					utils.removeEvent(window, utils.prefixPointerEvent('pointermove'), this);
					utils.removeEvent(window, 'mousemove', this);
	
					utils.removeEvent(window, 'touchend', this);
					utils.removeEvent(window, utils.prefixPointerEvent('pointerup'), this);
					utils.removeEvent(window, 'mouseup', this);
				}
	
				if (this.options.defaultScrollbars) {
					this.wrapper.parentNode.removeChild(this.wrapper);
				}
			},
	
			_start: function _start(e) {
				var point = e.touches ? e.touches[0] : e;
	
				e.preventDefault();
				e.stopPropagation();
	
				this.transitionTime();
	
				this.initiated = true;
				this.moved = false;
				this.lastPointX = point.pageX;
				this.lastPointY = point.pageY;
	
				this.startTime = utils.getTime();
	
				if (!this.options.disableTouch) {
					utils.addEvent(window, 'touchmove', this);
				}
				if (!this.options.disablePointer) {
					utils.addEvent(window, utils.prefixPointerEvent('pointermove'), this);
				}
				if (!this.options.disableMouse) {
					utils.addEvent(window, 'mousemove', this);
				}
	
				this.scroller._execEvent('beforeScrollStart');
			},
	
			_move: function _move(e) {
				var point = e.touches ? e.touches[0] : e,
				    deltaX,
				    deltaY,
				    newX,
				    newY,
				    timestamp = utils.getTime();
	
				if (!this.moved) {
					this.scroller._execEvent('scrollStart');
				}
	
				this.moved = true;
	
				deltaX = point.pageX - this.lastPointX;
				this.lastPointX = point.pageX;
	
				deltaY = point.pageY - this.lastPointY;
				this.lastPointY = point.pageY;
	
				newX = this.x + deltaX;
				newY = this.y + deltaY;
	
				this._pos(newX, newY);
	
				if (this.scroller.options.probeType == 1 && timestamp - this.startTime > 300) {
					this.startTime = timestamp;
					this.scroller._execEvent('scroll');
				} else if (this.scroller.options.probeType > 1) {
					this.scroller._execEvent('scroll');
				}
	
				// INSERT POINT: indicator._move
	
				e.preventDefault();
				e.stopPropagation();
			},
	
			_end: function _end(e) {
				if (!this.initiated) {
					return;
				}
	
				this.initiated = false;
	
				e.preventDefault();
				e.stopPropagation();
	
				utils.removeEvent(window, 'touchmove', this);
				utils.removeEvent(window, utils.prefixPointerEvent('pointermove'), this);
				utils.removeEvent(window, 'mousemove', this);
	
				if (this.scroller.options.snap) {
					var snap = this.scroller._nearestSnap(this.scroller.x, this.scroller.y);
	
					var time = this.options.snapSpeed || Math.max(Math.max(Math.min(Math.abs(this.scroller.x - snap.x), 1000), Math.min(Math.abs(this.scroller.y - snap.y), 1000)), 300);
	
					if (this.scroller.x != snap.x || this.scroller.y != snap.y) {
						this.scroller.directionX = 0;
						this.scroller.directionY = 0;
						this.scroller.currentPage = snap;
						this.scroller.scrollTo(snap.x, snap.y, time, this.scroller.options.bounceEasing);
					}
				}
	
				if (this.moved) {
					this.scroller._execEvent('scrollEnd');
				}
			},
	
			transitionTime: function transitionTime(time) {
				time = time || 0;
				this.indicatorStyle[utils.style.transitionDuration] = time + 'ms';
	
				if (!time && utils.isBadAndroid) {
					this.indicatorStyle[utils.style.transitionDuration] = '0.001s';
				}
			},
	
			transitionTimingFunction: function transitionTimingFunction(easing) {
				this.indicatorStyle[utils.style.transitionTimingFunction] = easing;
			},
	
			refresh: function refresh() {
				this.transitionTime();
	
				if (this.options.listenX && !this.options.listenY) {
					this.indicatorStyle.display = this.scroller.hasHorizontalScroll ? 'block' : 'none';
				} else if (this.options.listenY && !this.options.listenX) {
					this.indicatorStyle.display = this.scroller.hasVerticalScroll ? 'block' : 'none';
				} else {
					this.indicatorStyle.display = this.scroller.hasHorizontalScroll || this.scroller.hasVerticalScroll ? 'block' : 'none';
				}
	
				if (this.scroller.hasHorizontalScroll && this.scroller.hasVerticalScroll) {
					utils.addClass(this.wrapper, 'iScrollBothScrollbars');
					utils.removeClass(this.wrapper, 'iScrollLoneScrollbar');
	
					if (this.options.defaultScrollbars && this.options.customStyle) {
						if (this.options.listenX) {
							this.wrapper.style.right = '8px';
						} else {
							this.wrapper.style.bottom = '8px';
						}
					}
				} else {
					utils.removeClass(this.wrapper, 'iScrollBothScrollbars');
					utils.addClass(this.wrapper, 'iScrollLoneScrollbar');
	
					if (this.options.defaultScrollbars && this.options.customStyle) {
						if (this.options.listenX) {
							this.wrapper.style.right = '2px';
						} else {
							this.wrapper.style.bottom = '2px';
						}
					}
				}
	
				var r = this.wrapper.offsetHeight; // force refresh
	
				if (this.options.listenX) {
					this.wrapperWidth = this.wrapper.clientWidth;
					if (this.options.resize) {
						this.indicatorWidth = Math.max(Math.round(this.wrapperWidth * this.wrapperWidth / (this.scroller.scrollerWidth || this.wrapperWidth || 1)), 8);
						this.indicatorStyle.width = this.indicatorWidth + 'px';
					} else {
						this.indicatorWidth = this.indicator.clientWidth;
					}
	
					this.maxPosX = this.wrapperWidth - this.indicatorWidth;
	
					if (this.options.shrink == 'clip') {
						this.minBoundaryX = -this.indicatorWidth + 8;
						this.maxBoundaryX = this.wrapperWidth - 8;
					} else {
						this.minBoundaryX = 0;
						this.maxBoundaryX = this.maxPosX;
					}
	
					this.sizeRatioX = this.options.speedRatioX || this.scroller.maxScrollX && this.maxPosX / this.scroller.maxScrollX;
				}
	
				if (this.options.listenY) {
					this.wrapperHeight = this.wrapper.clientHeight;
					if (this.options.resize) {
						this.indicatorHeight = Math.max(Math.round(this.wrapperHeight * this.wrapperHeight / (this.scroller.scrollerHeight || this.wrapperHeight || 1)), 8);
						this.indicatorStyle.height = this.indicatorHeight + 'px';
					} else {
						this.indicatorHeight = this.indicator.clientHeight;
					}
	
					this.maxPosY = this.wrapperHeight - this.indicatorHeight;
	
					if (this.options.shrink == 'clip') {
						this.minBoundaryY = -this.indicatorHeight + 8;
						this.maxBoundaryY = this.wrapperHeight - 8;
					} else {
						this.minBoundaryY = 0;
						this.maxBoundaryY = this.maxPosY;
					}
	
					this.maxPosY = this.wrapperHeight - this.indicatorHeight;
					this.sizeRatioY = this.options.speedRatioY || this.scroller.maxScrollY && this.maxPosY / this.scroller.maxScrollY;
				}
	
				this.updatePosition();
			},
	
			updatePosition: function updatePosition() {
				var x = this.options.listenX && Math.round(this.sizeRatioX * this.scroller.x) || 0,
				    y = this.options.listenY && Math.round(this.sizeRatioY * this.scroller.y) || 0;
	
				if (!this.options.ignoreBoundaries) {
					if (x < this.minBoundaryX) {
						if (this.options.shrink == 'scale') {
							this.width = Math.max(this.indicatorWidth + x, 8);
							this.indicatorStyle.width = this.width + 'px';
						}
						x = this.minBoundaryX;
					} else if (x > this.maxBoundaryX) {
						if (this.options.shrink == 'scale') {
							this.width = Math.max(this.indicatorWidth - (x - this.maxPosX), 8);
							this.indicatorStyle.width = this.width + 'px';
							x = this.maxPosX + this.indicatorWidth - this.width;
						} else {
							x = this.maxBoundaryX;
						}
					} else if (this.options.shrink == 'scale' && this.width != this.indicatorWidth) {
						this.width = this.indicatorWidth;
						this.indicatorStyle.width = this.width + 'px';
					}
	
					if (y < this.minBoundaryY) {
						if (this.options.shrink == 'scale') {
							this.height = Math.max(this.indicatorHeight + y * 3, 8);
							this.indicatorStyle.height = this.height + 'px';
						}
						y = this.minBoundaryY;
					} else if (y > this.maxBoundaryY) {
						if (this.options.shrink == 'scale') {
							this.height = Math.max(this.indicatorHeight - (y - this.maxPosY) * 3, 8);
							this.indicatorStyle.height = this.height + 'px';
							y = this.maxPosY + this.indicatorHeight - this.height;
						} else {
							y = this.maxBoundaryY;
						}
					} else if (this.options.shrink == 'scale' && this.height != this.indicatorHeight) {
						this.height = this.indicatorHeight;
						this.indicatorStyle.height = this.height + 'px';
					}
				}
	
				this.x = x;
				this.y = y;
	
				if (this.scroller.options.useTransform) {
					this.indicatorStyle[utils.style.transform] = 'translate(' + x + 'px,' + y + 'px)' + this.scroller.translateZ;
				} else {
					this.indicatorStyle.left = x + 'px';
					this.indicatorStyle.top = y + 'px';
				}
			},
	
			_pos: function _pos(x, y) {
				if (x < 0) {
					x = 0;
				} else if (x > this.maxPosX) {
					x = this.maxPosX;
				}
	
				if (y < 0) {
					y = 0;
				} else if (y > this.maxPosY) {
					y = this.maxPosY;
				}
	
				x = this.options.listenX ? Math.round(x / this.sizeRatioX) : this.scroller.x;
				y = this.options.listenY ? Math.round(y / this.sizeRatioY) : this.scroller.y;
	
				this.scroller.scrollTo(x, y);
			},
	
			fade: function fade(val, hold) {
				if (hold && !this.visible) {
					return;
				}
	
				clearTimeout(this.fadeTimeout);
				this.fadeTimeout = null;
	
				var time = val ? 250 : 500,
				    delay = val ? 0 : 300;
	
				val = val ? '1' : '0';
	
				this.wrapperStyle[utils.style.transitionDuration] = time + 'ms';
	
				this.fadeTimeout = setTimeout(function (val) {
					this.wrapperStyle.opacity = val;
					this.visible = +val;
				}.bind(this, val), delay);
			}
		};
	
		IScroll.utils = utils;
	
		if (typeof module != 'undefined' && module.exports) {
			module.exports = IScroll;
		} else {
			window.IScroll = IScroll;
		}
	})(window, document, Math);
	


/***/ },
/* 177 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Field Component Style for tingle
	 * @author jiasong.js
	 *
	 * Copyright 2014-2016, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	module.exports = __webpack_require__(178);
	


/***/ },
/* 178 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * Field Component for tingle
	 * @author gnosaij
	 *
	 * Copyright 2014-2016, Tingle Team.
	 * All rights reserved.
	 */
	var React = __webpack_require__(2);
	var classnames = __webpack_require__(179);
	var Icon = __webpack_require__(158);
	var Context = __webpack_require__(116);
	
	var prefixClass = Context.prefixClass;
	
	var Field = function (_React$Component) {
	    _inherits(Field, _React$Component);
	
	    function Field(props) {
	        _classCallCheck(this, Field);
	
	        return _possibleConstructorReturn(this, Object.getPrototypeOf(Field).call(this, props));
	    }
	
	    _createClass(Field, [{
	        key: 'render',
	        value: function render() {
	            var _classnames2;
	
	            var t = this;
	            var requiredTag = React.createElement(Icon, { name: 'field-required', className: prefixClass('field-layout-label-required'), width: 6, height: 6, fill: 'red' });
	            return React.createElement(
	                'div',
	                { className: classnames(prefixClass('field'), _defineProperty({}, t.props.className, !!t.props.className)) },
	                t.props.label && t.props.layout === 'v' && React.createElement(
	                    'div',
	                    { className: prefixClass('field-layout-v-label') },
	                    t.props.label,
	                    this.props.required && requiredTag
	                ),
	                React.createElement(
	                    'div',
	                    { className: classnames(prefixClass('field-box FBH'), (_classnames2 = {}, _defineProperty(_classnames2, prefixClass('TE'), t.props.tappable), _defineProperty(_classnames2, prefixClass('FBAC'), !t.props.multiLine), _classnames2)) },
	                    t.props.label && t.props.layout === 'h' && React.createElement(
	                        'div',
	                        { className: prefixClass('field-layout-h-label') },
	                        t.props.label,
	                        this.props.required && requiredTag
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: classnames(prefixClass('FB1 PR'), _defineProperty({}, prefixClass('field-multi'), t.props.multiLine)) },
	                        t.props.children
	                    ),
	                    t.props.icon && t.props.icon.name && React.createElement(
	                        'div',
	                        { className: prefixClass('FBH FBAC field-icon') },
	                        React.createElement(Icon, t.props.icon)
	                    )
	                )
	            );
	        }
	    }]);
	
	    return Field;
	}(React.Component);
	
	Field.defaultProps = {
	    label: '',
	    tappable: false,
	    required: false,
	    multiLine: false,
	    icon: {},
	    layout: 'h'
	};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	Field.propTypes = {
	    label: React.PropTypes.string,
	    icon: React.PropTypes.object,
	    required: React.PropTypes.bool,
	    tappable: React.PropTypes.bool,
	    multiLine: React.PropTypes.bool,
	    layout: React.PropTypes.oneOf(['h', 'v'])
	};
	
	Field.displayName = 'Field';
	
	module.exports = Field;
	


/***/ },
/* 179 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames () {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ },
/* 180 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Dialog Component Style for tingle
	 * @author cm
	 *
	 * Copyright 2014-2016, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	module.exports = __webpack_require__(181);
	


/***/ },
/* 181 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	* Dialog Component for tingle
	* @author minjie,cm
	*
	* Copyright 2014-2016, Tingle Team, Alinw.
	* All rights reserved.
	*/
	var React = __webpack_require__(2);
	var classnames = __webpack_require__(182);
	var Context = __webpack_require__(116);
	
	var ReactCSSTransitionGroup = React.addons.CSSTransitionGroup;
	var prefixClass = function prefixClass(name) {
	    return Context.prefixClass ? Context.prefixClass(name) : 't-' + name;
	};
	
	// TODO:i18n
	var LANG = {
	    ok: '确定',
	    cancel: '取消'
	};
	
	var TYPES = ['alert', 'confirm'];
	
	var EMPTY_FUNC = function EMPTY_FUNC() {};
	
	var Dialog = function (_React$Component) {
	    _inherits(Dialog, _React$Component);
	
	    function Dialog(props) {
	        _classCallCheck(this, Dialog);
	
	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Dialog).call(this, props));
	
	        var buttons = [{
	            content: _this.props.confirmText || LANG.ok,
	            callback: _this.props.onConfirm || EMPTY_FUNC,
	            primary: true
	        }];
	
	        if (_this.props.type === TYPES[1]) {
	            buttons = [{
	                content: _this.props.cancelText || LANG.cancel,
	                callback: _this.props.onCancel || EMPTY_FUNC
	            }, {
	                content: _this.props.confirmText || LANG.ok,
	                callback: _this.props.onConfirm || EMPTY_FUNC,
	                primary: true
	            }];
	        }
	
	        _this.state = {
	            title: _this.props.title,
	            content: _this.props.content, // 为快捷 API 提供的，Dialog React 方式使用，直接渲染 children
	            buttons: buttons,
	            show: _this.props.show
	        };
	        return _this;
	    }
	
	    _createClass(Dialog, [{
	        key: 'componentWillReceiveProps',
	        value: function componentWillReceiveProps(nextProps) {
	            this.setState({
	                show: nextProps.show,
	                title: nextProps.title
	            });
	        }
	    }, {
	        key: '_show',
	        value: function _show(options) {
	            var state = this.state;
	            var prop = options ? options : this.props;
	
	            state.show = true;
	            state.title = prop.title;
	            state.content = prop.content;
	            state.buttons = prop.buttons;
	
	            this.setState(state);
	        }
	
	        // deprecated
	
	    }, {
	        key: 'hide',
	        value: function hide() {
	            this.setState({ show: false });
	        }
	
	        // deprecated
	
	    }, {
	        key: 'show',
	        value: function show() {
	            this.setState({ show: true });
	        }
	    }, {
	        key: 'handleClick',
	        value: function handleClick(callback) {
	            if (callback() !== false) {
	                this.hide();
	            }
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _classSet;
	
	            var t = this;
	            var btn = '';
	            var _t$props = t.props;
	            var className = _t$props.className;
	            var children = _t$props.children;
	
	            var other = _objectWithoutProperties(_t$props, ['className', 'children']);
	
	            var _t$state = t.state;
	            var title = _t$state.title;
	            var buttons = _t$state.buttons;
	            var content = _t$state.content;
	
	            var classSet = (_classSet = {}, _defineProperty(_classSet, prefixClass('dialog'), true), _defineProperty(_classSet, t.props.className, !!t.props.className), _classSet);
	            var btnsCount = buttons.length;
	
	            btn = buttons && buttons.map(function (item, i) {
	                var _classnames;
	
	                var callback = item.callback || function () {
	                    return true;
	                };
	                return React.createElement(
	                    'div',
	                    { key: 'tDialogButtonKey' + i,
	                        className: classnames(prefixClass('FB1 dialog-button TE'), (_classnames = {}, _defineProperty(_classnames, prefixClass('dialog-primary'), item.primary), _defineProperty(_classnames, prefixClass('dialog-secondary'), !item.primary), _defineProperty(_classnames, prefixClass('dialog-brbl5'), i === 0 || btnsCount === 1), _defineProperty(_classnames, prefixClass('dialog-brbr5'), i === 1 || i === btnsCount - 1), _classnames)),
	                        onClick: t.handleClick.bind(t, callback) },
	                    item.content
	                );
	            });
	
	            var displayContent = children;
	            if (content) {
	                displayContent = content;
	            }
	
	            return React.createElement(
	                ReactCSSTransitionGroup,
	                {
	                    transitionName: prefixClass('dialog-fade'),
	                    transitionEnterTimeout: 300, transitionLeaveTimeout: 300,
	                    transitionAppear: true, transitionAppearTimeout: 300 },
	                this.state.show ? React.createElement(
	                    'div',
	                    { className: prefixClass('dialog-overlay') },
	                    React.createElement(
	                        'div',
	                        { className: prefixClass('dialog-overlay-inner') },
	                        React.createElement(
	                            'div',
	                            { className: classnames(classSet) },
	                            title ? React.createElement(
	                                'h1',
	                                { className: prefixClass('dialog-title') },
	                                title
	                            ) : '',
	                            React.createElement(
	                                'div',
	                                { className: prefixClass('dialog-content') },
	                                displayContent
	                            ),
	                            React.createElement(
	                                'div',
	                                { className: prefixClass('dialog-operation TE FBH') },
	                                btn
	                            )
	                        )
	                    )
	                ) : null
	            );
	        }
	    }]);
	
	    return Dialog;
	}(React.Component);
	
	Dialog.defaultProps = {
	    title: '',
	    content: '',
	    onConfirm: null,
	    onCancel: null,
	    type: 'alert',
	    show: true,
	    buttons: [{
	        children: LANG.ok,
	        callback: function callback() {},
	
	        primary: true
	    }]
	};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	Dialog.propTypes = {
	    title: React.PropTypes.string,
	    content: React.PropTypes.string,
	    onConfirm: React.PropTypes.func,
	    onCancel: React.PropTypes.func,
	    type: React.PropTypes.string,
	    buttons: React.PropTypes.array,
	    show: React.PropTypes.bool
	};
	
	var WRAPPER_ID = '__TingleGlobalDialog__';
	var doc = document;
	
	Dialog.global = null;
	
	var show = function show(options) {
	    if (!Dialog.global) {
	        var wrapper = doc.getElementById(WRAPPER_ID);
	
	        var other = _objectWithoutProperties(options, []);
	
	        if (!wrapper) {
	            wrapper = doc.createElement('div');
	            wrapper.id = WRAPPER_ID;
	            doc.body.appendChild(wrapper);
	        }
	
	        Dialog.global = ReactDOM.render(React.createElement(Dialog, other), wrapper);
	    };
	    Dialog.global._show(options);
	};
	
	Dialog.hide = function () {
	    Dialog.global && Dialog.global.hide();
	};
	
	Dialog.alert = function (options) {
	    options.buttons = [{
	        content: options.confirmText || LANG.ok,
	        callback: options.onConfirm,
	        primary: true
	    }];
	    show(options);
	};
	
	Dialog.confirm = function (options) {
	    options.buttons = [{
	        content: options.cancelText || LANG.cancel,
	        callback: options.onCancel
	    }, {
	        content: options.confirmText || LANG.ok,
	        callback: options.onConfirm,
	        primary: true
	    }];
	    show(options);
	};
	
	Dialog.displayName = 'Dialog';
	
	module.exports = Dialog;
	


/***/ },
/* 182 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames () {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ },
/* 183 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Gallery Component Style for tingle
	 * @author cm
	 *
	 * Copyright 2014-2016, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	module.exports = __webpack_require__(184);
	


/***/ },
/* 184 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * Gallery Component for tingle
	 * @author cm
	 *
	 * Copyright 2014-2016, Tingle Team.
	 * All rights reserved.
	 */
	var classnames = __webpack_require__(185);
	var Slide = __webpack_require__(186);
	var Context = __webpack_require__(116);
	
	var prefixClass = function prefixClass(name) {
	    return Context.prefixClass ? Context.prefixClass(name) : 't-' + name;
	};
	
	var Gallery = function (_React$Component) {
	    _inherits(Gallery, _React$Component);
	
	    function Gallery(props) {
	        _classCallCheck(this, Gallery);
	
	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Gallery).call(this, props));
	
	        _this.state = {
	            images: _this.props.images,
	            displayImages: [] // 懒加载图片缓存区
	        };
	        _this.currentIndex = _this.props.active || 0;
	        return _this;
	    }
	
	    _createClass(Gallery, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            this._detectLazyImages();
	        }
	    }, {
	        key: 'componentWillReceiveProps',
	        value: function componentWillReceiveProps(nextProps) {
	            this.setState({
	                images: nextProps.images
	            });
	        }
	    }, {
	        key: '_onSlideEnd',
	        value: function _onSlideEnd(o) {
	            this.currentIndex = o.index;
	            this._detectLazyImages();
	            this.props.onSlideEnd && this.props.onSlideEnd.call(this, o);
	        }
	    }, {
	        key: '_detectLazyImages',
	        value: function _detectLazyImages() {
	            var currentIndex = this.currentIndex;
	            var prevIndex = currentIndex > 0 ? currentIndex - 1 : this.state.images.length - 1;
	            var nextIndex = currentIndex >= this.state.images.length - 1 ? 0 : currentIndex + 1;
	            var displayImages = this.state.displayImages;
	
	            var changed = false;
	            if (displayImages.indexOf(currentIndex) === -1) {
	                displayImages.push(currentIndex);
	                changed = true;
	            }
	            if (displayImages.indexOf(prevIndex) === -1) {
	                displayImages.push(prevIndex);
	                changed = true;
	            }
	            if (displayImages.indexOf(nextIndex) === -1) {
	                displayImages.push(nextIndex);
	                changed = true;
	            }
	            if (changed) {
	                this.setState(displayImages);
	            }
	        }
	    }, {
	        key: '_onItemClick',
	        value: function _onItemClick(o) {
	            var href = this.state.images[o.index].href;
	            var onGalleryClick = this.props.onGalleryClick;
	
	            if (onGalleryClick) {
	                onGalleryClick(o.index, this.state.images[o.index]);
	            } else if (href) {
	                window.location.href = href;
	            }
	        }
	
	        /*
	         lazy load 策略
	         加载当前显示图片的前一个跟后一个
	         // 获取前一个 index
	         // 获取后一个 index
	         // 如果存在不曾加载的图片，就 changeState
	         */
	
	    }, {
	        key: 'render',
	        value: function render() {
	            var _classnames,
	                _this2 = this;
	
	            if (!this.state.images.length) {
	                return React.createElement('div', null);
	            }
	
	            var t = this;
	            var _props = this.props;
	            var images = _props.images;
	            var onSlideEnd = _props.onSlideEnd;
	            var className = _props.className;
	
	            var otherProps = _objectWithoutProperties(_props, ['images', 'onSlideEnd', 'className']);
	
	            var displayImages = this.state.displayImages;
	
	            className = classnames((_classnames = {}, _defineProperty(_classnames, this.props.className, !!this.props.className), _defineProperty(_classnames, prefixClass('gallery'), true), _classnames));
	
	            return React.createElement(
	                Slide,
	                _extends({ ref: 'root', className: className,
	                    onSlideClick: this._onItemClick.bind(this),
	                    onSlideEnd: this._onSlideEnd.bind(this) }, otherProps),
	                this.state.images.map(function (item, i) {
	                    var url = _this2.props.lazyLoad ? '' : item.src;
	                    var style = {};
	                    if (displayImages.indexOf(i) > -1) {
	                        url = item.src;
	                    }
	                    if (url) {
	                        style = { backgroundImage: 'url(' + url + ')' };
	                    }
	
	                    return React.createElement(
	                        'div',
	                        { className: prefixClass('gallery-item'),
	                            key: i,
	                            style: style },
	                        item.name ? React.createElement(
	                            'span',
	                            { className: prefixClass('gallery-item-name') },
	                            item.name
	                        ) : null
	                    );
	                })
	            );
	        }
	    }]);
	
	    return Gallery;
	}(React.Component);
	
	Gallery.defaultProps = {
	    className: '',
	    images: [],
	    lazyLoad: true,
	    onGalleryClick: null
	};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	Gallery.propTypes = {
	    className: React.PropTypes.string,
	    images: React.PropTypes.array,
	    lazyLoad: React.PropTypes.bool,
	    onGalleryClick: React.PropTypes.func
	};
	
	Gallery.displayName = 'Gallery';
	
	module.exports = Gallery;
	


/***/ },
/* 185 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames () {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ },
/* 186 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Slide Component Style for tingle
	 * @author cm
	 *
	 * Copyright 2014-2016, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	module.exports = __webpack_require__(187);
	


/***/ },
/* 187 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	* Slide Component for tingle
	* @author gnosaij,cm
	*
	* Copyright 2014-2016, Tingle Team, Alinw.
	* All rights reserved.
	*/
	var classnames = __webpack_require__(188);
	var Context = __webpack_require__(116);
	var SlideNav = __webpack_require__(189);
	
	var prefixClass = function prefixClass(name) {
	    return Context.prefixClass ? Context.prefixClass(name) : 't-' + name;
	};
	
	var TOUCH_START = Context.TOUCH_START;
	var TOUCH_MOVE = Context.TOUCH_MOVE;
	var TOUCH_END = Context.TOUCH_END;
	var TOUCH_CANCEL = Context.TOUCH_CANCEL;
	var support3D = Context.support3D;
	var supportTouch = Context.supportTouch;
	var isPC = Context.isPC;
	var noop = Context.noop;
	var RESIZE = Context.RESIZE;
	
	
	var win = window;
	var doc = document;
	var OFFSET = 'offset';
	var POS_MAP = {
	    '-1': '_prevEl',
	    '0': '_currentEl',
	    '1': '_nextEl'
	};
	
	// 创建translate字符串
	// TODO: translate(0,0) translateZ(0);
	var makeTranslate = function () {
	    var prefix = support3D ? 'translate3d(' : 'translate(';
	    var suffix = support3D ? ', 0)' : ')';
	    var join = ',';
	
	    function v(n) {
	        n = '' + (n || 0);
	        n = n.indexOf('%') > -1 ? n : n + 'px';
	        return n;
	    }
	
	    return function (x, y) {
	        return prefix + v(x) + join + v(y) + suffix;
	    };
	}();
	
	// 获取兼容PC和Device的event对象的page属性
	var getCursorPage = supportTouch ? function (event, page) {
	    return event.changedTouches[0][page];
	} : function (event, page) {
	    return event[page];
	};
	
	var Slide = function (_React$Component) {
	    _inherits(Slide, _React$Component);
	
	    function Slide(props) {
	        _classCallCheck(this, Slide);
	
	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Slide).call(this, props));
	
	        var t = _this;
	
	        // 切换动画的时长
	        _this.duration = 200;
	
	        // 能够触发切换的偏移量
	        _this.effectiveDelta = Math.floor(window.innerWidth / 1.8);
	
	        // 当偏移量不足时，使用速度来决定是否移动 单位：px/s
	        _this.speed = 300;
	
	        _this.state = {
	            auto: props.auto,
	            // 当前item的索引值 以0开始
	            index: props.active,
	            disabled: false
	        };
	
	        // 当屏幕旋转的时候，修正布局
	        win.addEventListener(RESIZE, t, false);
	        return _this;
	    }
	
	    _createClass(Slide, [{
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	            var t = this;
	            t._getLength();
	        }
	    }, {
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            var t = this;
	
	            t.el = t.refs.root;
	
	            // 确定容器宽度
	            t.width = isPC ? t.el.clientWidth : win.innerWidth;
	
	            t._setContext();
	        }
	    }, {
	        key: 'componentDidUpdate',
	        value: function componentDidUpdate(prevProps) {
	            var t = this;
	            var oldChildrenLength = prevProps.children.length;
	            var newChildrenLength = this.props.children.length;
	            if (newChildrenLength != oldChildrenLength) {
	                t._getLength();
	                t._setContext(prevProps);
	            }
	        }
	    }, {
	        key: 'componentWillUnmount',
	        value: function componentWillUnmount() {
	            var t = this;
	            if (t.length > 1) {
	                t.el.removeEventListener(TOUCH_START, t, false);
	            }
	            win.removeEventListener(RESIZE, t, false);
	            clearTimeout(t._autoSlideTimer);
	        }
	
	        /**
	        * 获取 slide 列表的真正长度，主要是考虑 children
	        * 长度是 1 和 2 的情况下
	        */
	
	    }, {
	        key: '_getLength',
	        value: function _getLength() {
	            var t = this;
	            var originLength = React.Children.count(t.props.children);
	
	            // TODO: check
	            if (originLength === 1) {
	                t.setState({
	                    disabled: true
	                });
	            }
	
	            // item的长度经处理后不存在为2的情况
	            else if (originLength === 2) {
	                    t._dummy = true;
	                    t._realIndex = {
	                        '0': 0,
	                        '1': 1,
	                        '2': 0,
	                        '3': 1
	                    };
	                }
	
	            // 处理以后的长度，即item的个数
	            t.length = t._dummy ? 4 : originLength;
	        }
	
	        /**
	        * 根据 slide 列表长度设置正确的内部变量
	        *
	        */
	
	    }, {
	        key: '_setContext',
	        value: function _setContext(prevProps) {
	            var t = this;
	
	            // 由于子元素数量有变化，先解绑与数量相关的监听，再根据数量重新绑定。
	            t.el.removeEventListener(TOUCH_START, t, false);
	            clearTimeout(t._autoSlideTimer);
	
	            // 至少有2张slide时，才初始化事件
	            if (t.length > 1) {
	                t.el.addEventListener(TOUCH_START, t, false);
	            } else {
	                t.el.addEventListener('click', function () {
	                    t.props.onSlideClick({
	                        index: 0,
	                        item: t._currentEl,
	                        data: t.props.children[0]
	                    });
	                });
	            }
	
	            // 前一个，当前的，后一个item的element引用
	            t._prevEl = null;
	            t._currentEl = null;
	            t._nextEl = null;
	
	            t._deltaX = 0;
	            t._minIndex = 0;
	            t._maxIndex = t.length - 1;
	            if (!prevProps) {
	                t.props.onMount(t);
	            } else {
	                t.setState({
	                    index: t.props.index
	                });
	            }
	            if (t.length != 0) {
	                t._goto(t.state.index, true);
	                t._autoSlide();
	            }
	        }
	    }, {
	        key: '_autoSlide',
	        value: function _autoSlide() {
	            var t = this;
	            if (!t.state.auto) return;
	            t._autoSlideTimer = setTimeout(function () {
	                t.goNext();
	                t._autoSlide();
	            }, 4000);
	        }
	
	        /**
	        * @param {number} index 目标位置的索引值
	        * @param {boolean} callFromDidMount 是否是在 componentDidMount 中被调用的
	        */
	
	    }, {
	        key: '_goto',
	        value: function _goto(posIndex, callFromDidMount) {
	            var t = this;
	            callFromDidMount = !!callFromDidMount;
	
	            if (t.length === 1 || callFromDidMount) {
	                // `_getItemReady` 方法被调用之前，需要先更新 `currentPosIndex` 的值
	                t.currentPosIndex = posIndex;
	                t._getItemReady(0);
	
	                if (t.length > 2) {
	                    t._getItemReady(1);
	                    t._getItemReady(-1);
	                }
	
	                t._slideEnd();
	            } else if (!callFromDidMount) {
	
	                // 通过goNext/goPrev调用的_goto，一直有方向(_dir)值 向左:-1 / 向右:1
	                if (t._dir) {
	                    t._getItemUnready(t._dir === 1 ? t._nextEl : t._prevEl);
	                    t._moveItem(t._currentEl, t._dir);
	                    t._moveItem(t._dir === 1 ? t._prevEl : t._nextEl, t._dir);
	
	                    // `_getItemReady`方法被调用之前，需要先更新`currentPosIndex`的值
	                    t.currentPosIndex = posIndex;
	                    t._getItemReady(t._dir * -1);
	
	                    setTimeout(function () {
	                        t._slideEnd();
	                    }, t.duration);
	                }
	
	                // 归位的情况：移动距离小于有效距离时
	                else if (posIndex === t.currentPosIndex) {
	                        // 归位当前item
	                        t._moveItem(t._currentEl, 0);
	                        // 归位进入屏幕的另一个item
	                        // 说明:任意一个时间点,出现在屏幕内的item数量最多为2个,要么左边,要么右边,取决于移动方向
	                        if (t._moveBack) {
	                            t._moveItem(t._moveBack, 0);
	                        }
	                        // 当resize时
	                        else {
	                                t._moveItem(t._prevEl, 0);
	                                t._moveItem(t._nextEl, 0);
	                            }
	                    }
	            }
	
	            t._moveBack = null;
	            t._dir = null;
	        }
	    }, {
	        key: 'goNext',
	        value: function goNext() {
	            var t = this;
	            // 方向是向左(-1)，要展现的是后一张(1)
	            t._dir = -1;
	            t._goto(t._getPosIndex(1));
	        }
	    }, {
	        key: 'goPrev',
	        value: function goPrev() {
	            var t = this;
	            // 方向是向右(1)，要展现的是前一张(-1)
	            t._dir = 1;
	            t._goto(t._getPosIndex(-1));
	        }
	
	        /**
	        * 移动item到新的位置
	        * @param {element} item
	        * @param {number} dir 移动的方向 -1:向左移动 / 1:向右移动 / 0:移动到原位
	        */
	
	    }, {
	        key: '_moveItem',
	        value: function _moveItem(item, dir) {
	            var t = this;
	            item.style.webkitTransitionDuration = t.duration + 'ms';
	
	            var newOffset = +item.getAttribute(OFFSET) + dir;
	
	            t._setItemX(item, t._getPosX(newOffset));
	
	            // 如果进行了切换行为，即dir为-1或1
	            if (dir) {
	                item.setAttribute(OFFSET, newOffset);
	                t[POS_MAP[newOffset]] = item;
	            }
	        }
	
	        /**
	        * 根据指定的偏移量，找到对应的item，将其切换到可移动状态
	        * @param {number} offset -1:前一个位置 / 0:当前位置 / 1: 后一个位置
	        * @note 任何时刻，可移动状态的item数量只有三个
	        * @note 该方法依赖`currentPosIndex`和`offset`查找目标`item`，
	        *       而`_getItemUnready`方法直接给定了`item`，不需要依赖`currentPosIndex`和`offset`
	        */
	
	    }, {
	        key: '_getItemReady',
	        value: function _getItemReady(offset) {
	            var t = this;
	            var targetPosIndex = t._getPosIndex(offset);
	            var item = t.refs['item' + targetPosIndex];
	            item.classList.add('ready');
	            item.setAttribute(OFFSET, offset);
	            item.style.webkitTransform = makeTranslate(t._getPosX(offset));
	            t[POS_MAP[offset]] = item;
	        }
	
	        /**
	        * 将指定的item切换到不可移动状态，即不参与切换行为。
	        * @param {element} item 要改变状态的item
	        * @note 这个函数虽然含义上和_setItemReady对应，但参数直接只用item，
	        *  是出于性能考虑，因为调用该函数的时候，都是明确知道目标item的。
	        */
	
	    }, {
	        key: '_getItemUnready',
	        value: function _getItemUnready(item) {
	            var t = this;
	            item.classList.remove('ready');
	            item.removeAttribute(OFFSET);
	            item.style.webkitTransitionDuration = '0';
	            item.style.webkitTransform = 'none';
	        }
	
	        /**
	        * 获取指定的offset所对应的X坐标值(0点在当前item的左边缘)
	        * @param {number} offset -1:前一个位置 / 0:当前位置 / 1: 后一个位置
	        */
	
	    }, {
	        key: '_getPosX',
	        value: function _getPosX(offset) {
	            var t = this;
	            return offset === -1 ? -t.width : offset === 1 ? t.width : 0;
	        }
	
	        /**
	        *
	        */
	
	    }, {
	        key: '_setItemX',
	        value: function _setItemX(item, x) {
	            this[POS_MAP[item.getAttribute(OFFSET)] + 'X'] = x;
	            item.style.webkitTransform = makeTranslate(x);
	        }
	
	        /**
	        * 获取前一个或后一个位置的索引值，相对值是currentPosIndex
	        * @param {number} offset -1:取前一个位置 / 0:取当前位置 / 1: 取后一个位置
	        */
	
	    }, {
	        key: '_getPosIndex',
	        value: function _getPosIndex(offset) {
	            var t = this,
	                index = void 0;
	            if (offset === -1) {
	                index = t.currentPosIndex === t._minIndex ? t._maxIndex : t.currentPosIndex - 1;
	            } else if (offset === 1) {
	                index = t.currentPosIndex === t._maxIndex ? t._minIndex : t.currentPosIndex + 1;
	            } else if (offset === 0) {
	                index = t.currentPosIndex;
	            } else {
	                throw new Error('error offset');
	            }
	            return index;
	        }
	    }, {
	        key: 'handleEvent',
	        value: function handleEvent(e) {
	            var t = this;
	            switch (e.type) {
	                case TOUCH_START:
	                    t._touchStart(e);
	                    break;
	                case TOUCH_MOVE:
	                    t._touchMove(e);
	                    break;
	                case TOUCH_END:
	                    t._touchEnd(e);
	                    break;
	                case TOUCH_CANCEL:
	                    t._touchEnd(e);
	                case RESIZE:
	                    t._resize(e);
	                    break;
	            }
	        }
	    }, {
	        key: '_touchStart',
	        value: function _touchStart(e) {
	            // 只响应单指操作
	            if (supportTouch && e.touches.length > 1) {
	                return;
	            }
	
	            var t = this;
	
	            clearTimeout(t._autoSlideTimer);
	
	            // 恢复到0 拖拽过程中快速响应移动距离
	            t._prevEl.style.webkitTransitionDuration = '0ms';
	            t._currentEl.style.webkitTransitionDuration = '0ms';
	            t._nextEl.style.webkitTransitionDuration = '0ms';
	
	            // 移动初始值
	            t._prevElX = t._getPosX(-1);
	            t._currentElX = t._getPosX(0);
	            t._nextElX = t._getPosX(1);
	
	            // 浏览器默认滚动
	            t.browserScrolling = false;
	
	            // 是否是切换状态 此时忽略浏览器默认的滚动行为
	            t.sliding = false;
	
	            t.startPageX = getCursorPage(e, 'pageX');
	            t.startPageY = getCursorPage(e, 'pageY');
	            t.basePageX = t.startPageX;
	            t.startTime = e.timeStamp;
	
	            doc.addEventListener(TOUCH_MOVE, t, false);
	            doc.addEventListener(TOUCH_END, t, false);
	        }
	    }, {
	        key: '_touchMove',
	        value: function _touchMove(e) {
	            // 只响应单指操作
	            if (supportTouch && e.touches.length > 1) {
	                return;
	            }
	
	            var t = this;
	
	            // 如果浏览器默认滚动行为已被触发，则不执行Slider的滚动
	            if (t.browserScrolling) {
	                return;
	            }
	
	            var pageX = getCursorPage(e, 'pageX'),
	                pageY = getCursorPage(e, 'pageY'),
	                distX = void 0,
	                newPrevX = void 0,
	                newCurrentX = void 0,
	                newNextX = void 0,
	                deltaY = void 0;
	
	            t.deltaX = pageX - t.startPageX;
	
	            // 如果slide开始滚动
	            if (t.sliding) {
	                e.preventDefault();
	                e.stopPropagation();
	
	                // 任意时刻的位移值
	                distX = pageX - t.basePageX;
	
	                // 当不是循环模式的时候，第一张和最后一张添加粘性
	                if (t.props.loop === false && (distX >= 0 && t.currentPosIndex === t._minIndex || distX < 0 && t.currentPosIndex === t._maxIndex || distX < 0 && t._dummy && t.currentPosIndex === 1)) {
	                    distX = distX - distX / 1.3;
	                }
	
	                // 位移后的X坐标
	                newPrevX = t._prevElX + distX;
	                newCurrentX = t._currentElX + distX;
	                newNextX = t._nextElX + distX;
	
	                // 更新DOM位置
	                t._setItemX(t._prevEl, newPrevX);
	                t._setItemX(t._currentEl, newCurrentX);
	                t._setItemX(t._nextEl, newNextX);
	
	                if (t.deltaX >= 0) {
	                    t._moveBack = t._prevEl;
	                } else {
	                    t._moveBack = t._nextEl;
	                }
	            } else {
	                deltaY = pageY - t.startPageY;
	
	                // 如果X轴的移动距离先达到5px，则执行Slider的滚动
	                // 如果Y轴的移动距离先达到5px，则执行浏览器默认的页面滚动
	                if (Math.abs(t.deltaX) > 5) {
	                    e.preventDefault();
	                    e.stopPropagation();
	                    t.sliding = true;
	                } else if (Math.abs(deltaY) > 5) {
	                    t.browserScrolling = true;
	                }
	            }
	
	            t.basePageX = pageX;
	        }
	    }, {
	        key: '_touchEnd',
	        value: function _touchEnd(e) {
	            // 只响应单指操作
	            if (supportTouch && e.touches.length > 1) {
	                return;
	            }
	
	            var t = this;
	
	            // 如果浏览器默认滚动行为已被触发，则不执行Slider的滚动
	            if (t.browserScrolling) {
	                return;
	            }
	
	            t.browserScrolling = false;
	
	            var endTime = e.timeStamp;
	            var speed = Math.floor(t.deltaX / (t.startTime - endTime) * 1000);
	
	            // 向右滑动
	            if (t.deltaX > t.effectiveDelta || speed < -t.speed) {
	                if (t.props.loop === false && t.currentPosIndex === t._minIndex) {
	                    t._goto(t.currentPosIndex);
	                } else {
	                    t.goPrev();
	                }
	            }
	
	            // 向左滑动
	            else if (t.deltaX < -t.effectiveDelta || speed > t.speed) {
	                    if (t.props.loop === false && (t.currentPosIndex === t._maxIndex || t._dummy && t.currentPosIndex === 1)) {
	                        t._goto(t.currentPosIndex);
	                    } else {
	                        t.goNext();
	                    }
	                }
	
	                // 点击
	                else if (endTime - t.startTime < 90 && Math.abs(t.deltaX >> 0) < 5) {
	                        t._slideClick();
	                    }
	
	                    // 保持原有位置
	                    else {
	                            t._goto(t.currentPosIndex);
	                        }
	
	            t.deltaX = 0;
	
	            doc.removeEventListener(TOUCH_MOVE, t, false);
	            doc.removeEventListener(TOUCH_END, t, false);
	
	            t._autoSlide();
	        }
	    }, {
	        key: '_slideClick',
	        value: function _slideClick() {
	            var t = this;
	            var realIndex = t._getRealIndex(t.currentPosIndex);
	            t.props.onSlideClick({
	                index: realIndex,
	                item: t._currentEl,
	                data: t.props.children[realIndex]
	            });
	        }
	    }, {
	        key: '_slideEnd',
	        value: function _slideEnd() {
	            var t = this;
	            var realIndex = t._getRealIndex(t.currentPosIndex);
	            t.props.onSlideEnd({
	                index: realIndex,
	                item: t._currentEl,
	                data: t.props.children[realIndex]
	            });
	            // https://facebook.github.io/react/docs/component-api.html#forceupdate
	            // 通常情况下我们不使用 forcecUpdate，但我们需要 slide 过程中的中间变量
	            // 而非最终 state 去触发插件的更新，因此这里我们用到了 forceUpdate。
	            t.forceUpdate();
	        }
	    }, {
	        key: '_getRealIndex',
	        value: function _getRealIndex(posIndex) {
	            var t = this;
	            return t._dummy ? t._realIndex[posIndex] : posIndex;
	        }
	
	        /**
	        * 当屏幕旋转时，更新基本数据 && 再次定位
	        */
	
	    }, {
	        key: '_resize',
	        value: function _resize() {
	            var t = this;
	            t.width = isPC ? t.el.clientWidth : win.innerWidth;
	            t._goto(t.currentPosIndex);
	        }
	
	        /**
	        * 渲染items 当item数量为2时，该方法会被调用两次，第二次函数为true，以实现循环轮播
	        * @param {boolean} dummyMode 是否是在渲染补位的item，
	        * @note 只有当`props.children`的长度为2时，才需要进行补位
	        */
	
	    }, {
	        key: '_renderItems',
	        value: function _renderItems(dummyMode) {
	            var t = this;
	            return t.props.children.map(function (Child, index) {
	                return React.createElement(
	                    'div',
	                    { ref: "item" + (index + (dummyMode ? 2 : 0)), key: index + (dummyMode ? 2 : 0),
	                        className: prefixClass('slide-item') + ' ' + prefixClass('slide-item') + t._getRealIndex(index) },
	                    Child
	                );
	            });
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _classnames;
	
	            var t = this;
	            return React.createElement(
	                'div',
	                { ref: 'root', className: classnames((_classnames = {}, _defineProperty(_classnames, '' + prefixClass('slide'), true), _defineProperty(_classnames, '' + prefixClass('slide-off'), t.state.disabled), _defineProperty(_classnames, t.props.className, !!t.props.className), _classnames)) },
	                React.createElement(
	                    'div',
	                    { className: prefixClass('3D') + ' ' + prefixClass('slide-view'), style: { height: t.props.height } },
	                    t._renderItems(),
	                    t._dummy && t._renderItems(true)
	                ),
	                t.props.showNav && t.length > 1 && React.createElement(SlideNav, { active: t._getRealIndex(t.currentPosIndex), num: t.props.children.length })
	            );
	        }
	    }]);
	
	    return Slide;
	}(React.Component);
	
	Slide.propTypes = {
	    className: React.PropTypes.string,
	    height: React.PropTypes.oneOfType([React.PropTypes.number, React.PropTypes.string]),
	    active: React.PropTypes.number,
	    auto: React.PropTypes.bool,
	    loop: React.PropTypes.bool,
	    showNav: React.PropTypes.bool,
	    onMount: React.PropTypes.func,
	    onSlideEnd: React.PropTypes.func,
	    onSlideClick: React.PropTypes.func
	};
	
	Slide.defaultProps = {
	    height: '5rem',
	    active: 0,
	    auto: false,
	    loop: true,
	    showNav: false,
	    onMount: noop,
	    onSlideEnd: noop,
	    onSlideClick: noop
	};
	
	Slide.displayName = 'Slide';
	
	module.exports = Slide;
	


/***/ },
/* 188 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames () {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ },
/* 189 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	* Slide Component for tingle
	* @author gnosaij
	*
	* Copyright 2014-2015, Tingle Team, Alinw.
	* All rights reserved.
	*/
	var classnames = __webpack_require__(188);
	var Context = __webpack_require__(116);
	
	var prefixClass = function prefixClass(name) {
	    return Context.prefixClass ? Context.prefixClass(name) : 't-' + name;
	};
	
	var SlideNav = function (_React$Component) {
	    _inherits(SlideNav, _React$Component);
	
	    function SlideNav(props) {
	        _classCallCheck(this, SlideNav);
	
	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(SlideNav).call(this, props));
	
	        _this.state = {};
	        return _this;
	    }
	
	    _createClass(SlideNav, [{
	        key: 'render',
	        value: function render() {
	            var t = this;
	            var arr = [];
	            for (var i = 0; i < t.props.num; i++) {
	                var _classnames;
	
	                arr.push(React.createElement('div', { key: i, className: classnames((_classnames = {}, _defineProperty(_classnames, '' + prefixClass('M2 slide-nav-item'), true), _defineProperty(_classnames, "active", i == t.props.active), _classnames)) }));
	            }
	            return React.createElement(
	                'div',
	                { className: '' + prefixClass('slide-nav FBH FBAC FBJC') },
	                arr
	            );
	        }
	    }]);
	
	    return SlideNav;
	}(React.Component);
	
	SlideNav.defaultProps = {
	    num: 0,
	    active: 0
	};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	SlideNav.propTypes = {
	    num: React.PropTypes.number,
	    active: React.PropTypes.number
	};
	
	SlideNav.displayName = 'SlideNav';
	
	module.exports = SlideNav;
	


/***/ },
/* 190 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Grid Component Style for tingle
	 * @author cm
	 *
	 * Copyright 2014-2016, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	module.exports = __webpack_require__(191);
	


/***/ },
/* 191 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	* Collection Component for tingle
	* @author gnosaij
	*
	* Copyright 2014-2016, Tingle Team, Alinw.
	* All rights reserved.
	*/
	var classnames = __webpack_require__(192);
	var Context = __webpack_require__(116);
	
	var _require = __webpack_require__(121);
	
	var VBox = _require.VBox;
	
	
	var prefixClass = function prefixClass(name) {
	    return Context.prefixClass ? Context.prefixClass(name) : 't-' + name;
	};
	
	var Row = function (_React$Component) {
	    _inherits(Row, _React$Component);
	
	    function Row(props) {
	        _classCallCheck(this, Row);
	
	        return _possibleConstructorReturn(this, Object.getPrototypeOf(Row).call(this, props));
	    }
	
	    // 根据`col`的设置，补充空的`item`
	
	
	    _createClass(Row, [{
	        key: 'fillEmptyItem',
	        value: function fillEmptyItem(n) {
	            if (n === 0) {
	                return null;
	            }
	
	            var t = this;
	            var ret = [];
	
	            while (n-- > 0) {
	                ret.push(React.createElement(VBox, { flex: 1, hAlign: t.props.itemHAlign, vAlign: t.props.itemVAlign, className: prefixClass('grid-item'),
	                    style: t.props.square ? { height: '' + 10 / t.props.col + 'rem' } : {} }));
	            }
	            return React.Children.toArray(ret);
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var t = this;
	            var toFilledItemNumber = t.props.col - React.Children.count(t.props.children);
	
	            return React.createElement(
	                'div',
	                { className: prefixClass('grid-row') + ' ' + prefixClass('FBH') },
	                React.Children.toArray(t.props.children.map(function (child) {
	                    return React.createElement(
	                        VBox,
	                        { flex: 1, hAlign: t.props.itemHAlign, vAlign: t.props.itemVAlign, className: prefixClass('grid-item'),
	                            style: t.props.square ? { height: '' + 10 / t.props.col + 'rem' } : {} },
	                        child
	                    );
	                })),
	                t.fillEmptyItem(toFilledItemNumber)
	            );
	        }
	    }]);
	
	    return Row;
	}(React.Component);
	
	Row.defaultProps = {
	    col: 4,
	    square: false
	};
	
	Row.propTypes = {
	    col: React.PropTypes.number,
	    square: React.PropTypes.bool,
	    // 单个格子的水平对其方式
	    itemHAlign: VBox.propTypes.hAlign,
	    // 单个格子的垂直对其方式
	    itemVAlign: VBox.propTypes.vAlign
	};
	
	var Grid = function (_React$Component2) {
	    _inherits(Grid, _React$Component2);
	
	    function Grid(props) {
	        _classCallCheck(this, Grid);
	
	        return _possibleConstructorReturn(this, Object.getPrototypeOf(Grid).call(this, props));
	    }
	
	    /**
	    * 将子元素的索引值根据列数划分成组
	    * @returns {Array}
	    */
	
	
	    _createClass(Grid, [{
	        key: 'cutIndexesIntoRows',
	        value: function cutIndexesIntoRows() {
	            var t = this;
	            var rowIndexes = [];
	            var childrenCount = React.Children.count(t.props.children);
	            var dummyIndexArray = [];
	            var dummyIndex = 0;
	            while (childrenCount-- > 0) {
	                dummyIndexArray.push(dummyIndex++);
	            }
	
	            while (dummyIndexArray.length) {
	                rowIndexes.push(dummyIndexArray.splice(0, t.props.col));
	            }
	
	            return rowIndexes;
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _classnames;
	
	            var t = this;
	            // react0.14
	            var children = React.Children.toArray(t.props.children);
	
	            var rows = t.cutIndexesIntoRows();
	            var _t$props = t.props;
	            var className = _t$props.className;
	            var noLine = _t$props.noLine;
	
	            var rowProps = _objectWithoutProperties(_t$props, ['className', 'noLine']);
	
	            return React.createElement(
	                'div',
	                { className: classnames(prefixClass('grid'), (_classnames = {}, _defineProperty(_classnames, className, !!className), _defineProperty(_classnames, prefixClass('no-line'), noLine), _defineProperty(_classnames, prefixClass('grid-touchable'), this.props.touchable), _classnames)) },
	                React.Children.toArray(rows.map(function (indexes) {
	                    return React.createElement(
	                        Row,
	                        rowProps,
	                        indexes.map(function (index) {
	                            return children[index];
	                        })
	                    );
	                }))
	            );
	        }
	    }]);
	
	    return Grid;
	}(React.Component);
	
	Grid.defaultProps = {
	    className: '',
	    col: 4,
	    square: false,
	    noLine: false,
	    itemHAlign: 'center',
	    itemVAlign: 'center',
	    touchable: false
	};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	Grid.propTypes = {
	    className: React.PropTypes.string,
	    // 列数
	    col: React.PropTypes.number,
	    // 是否自适应单元格的高度 使单元格成为正方形
	    square: React.PropTypes.bool,
	    // 是否隐藏分割线
	    noLine: React.PropTypes.bool,
	    // 单个格子的水平对其方式
	    itemHAlign: VBox.propTypes.hAlign,
	    // 单个格子的垂直对其方式
	    itemVAlign: VBox.propTypes.vAlign,
	    // 单元格是否可点击
	    touchable: React.PropTypes.bool
	};
	
	Grid.displayName = 'Grid';
	
	module.exports = Grid;
	


/***/ },
/* 192 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames () {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ },
/* 193 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * List Component Style for tingle
	 * @author muxin
	 *
	 * Copyright 2014-2016, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	module.exports = __webpack_require__(194);
	


/***/ },
/* 194 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * List Component for tingle
	 * @author muxin
	 *
	 * Copyright 2014-2016, Tingle Team.
	 * All rights reserved.
	 */
	var React = __webpack_require__(2);
	var classnames = __webpack_require__(195);
	var Context = __webpack_require__(116);
	var Icon = __webpack_require__(158);
	var Group = __webpack_require__(162);
	var Boxs = __webpack_require__(121);
	var HBox = Boxs.HBox;
	var VBox = Boxs.VBox;
	var Box = Boxs.Box;
	
	var TOUCH_START = Context.TOUCH_START;
	var TOUCH_MOVE = Context.TOUCH_MOVE;
	var TOUCH_END = Context.TOUCH_END;
	var TOUCH_CANCEL = Context.TOUCH_CANCEL;
	var support3D = Context.support3D;
	var supportTouch = Context.supportTouch;
	var isPC = Context.isPC;
	var noop = Context.noop;
	var RESIZE = Context.RESIZE;
	
	
	var doc = document;
	
	// 获取兼容PC和Device的event对象的page属性
	var getCursorPage = supportTouch ? function (event, page) {
	
	    return event.targetTouches[0][page] || event.changedTouches[0][page];
	} : function (event, page) {
	
	    return event[page];
	};
	
	var List = function (_React$Component) {
	    _inherits(List, _React$Component);
	
	    function List(props) {
	        _classCallCheck(this, List);
	
	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(List).call(this, props));
	
	        var t = _this;
	        var datas = t.props.data || [];
	
	        if (datas.length) {
	
	            datas.map(function (d, i) {
	
	                d.keyIndex = "index" + i;
	                d.listLeft = 0;
	            });
	        }
	
	        _this.state = {
	            data: datas,
	            isCanMove: true, //当前能不能进行滑动
	            startX: 0, //鼠标开始的X轴位置
	            startY: 0, //鼠标开始的Y轴位置
	            endX: 0, //鼠标释放的位置
	            delateX: 0, //鼠标滑动的水平距离
	            listLeft: 0,
	            isMove: false
	        };
	        return _this;
	    }
	
	    _createClass(List, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {}
	    }, {
	        key: 'componentWillReceiveProps',
	        value: function componentWillReceiveProps(nextProp) {
	
	            this.setState({
	                data: nextProp.data
	            });
	        }
	    }, {
	        key: 'touchstartHandle',
	        value: function touchstartHandle(e) {
	
	            var t = this;
	            var data = t.state.data;
	            var id = e.currentTarget.id;
	            var isCanMove = t.state.isCanMove;
	
	            data.map(function (d, i) {
	
	                if (d.keyIndex !== id && Math.abs(d.listLeft) > 0) {
	
	                    isCanMove = false;
	                }
	
	                d.listLeft = 0;
	            });
	
	            // 只响应单指操作
	            if (supportTouch && e.touches.length > 1) {
	
	                return;
	            }
	
	            e.currentTarget.style.transitionDuration = '.05s';
	
	            // 获取当前触点的X轴的偏移量
	            var touchPageX = getCursorPage(e, 'pageX');
	            var touchPageY = getCursorPage(e, 'pageY');
	
	            t.setState({
	                data: data,
	                startX: touchPageX,
	                startY: touchPageY,
	                isCanMove: isCanMove
	            });
	        }
	    }, {
	        key: 'touchmoveHandle',
	        value: function touchmoveHandle(e) {
	
	            var t = this;
	            var translateX = void 0;
	            var data = t.state.data;
	            var id = e.currentTarget.id;
	            var isCanMove = t.state.isCanMove;
	            var deltaX = void 0;
	            var deltaY = void 0;
	
	            // 只响应单指操作
	            if (supportTouch && e.touches.length > 1) {
	
	                return;
	            }
	
	            e.currentTarget.style.transitionDuration = '.1s';
	
	            var touchPageX = getCursorPage(e, 'pageX');
	            var touchPageY = getCursorPage(e, 'pageY');
	
	            deltaX = touchPageX - t.state.startX;
	            deltaY = touchPageY - t.state.startY;
	
	            var change = Math.min(Math.max(-82, deltaX), 0);
	
	            // 如果X轴的移动距离先达到5px并且Y轴的移动距离小于5px，则执行list的滑动
	            // 如果Y轴的移动距离先达到5px，则执行浏览器默认的页面滚动
	            if (Math.abs(deltaX) > 5 && Math.abs(deltaY) < 5) {
	
	                data.map(function (d, i) {
	
	                    if (d.keyIndex === id) {
	
	                        if (isCanMove) {
	
	                            d.listLeft = change;
	                        } else {
	
	                            d.listLeft = 0;
	                            e.currentTarget.addEventListener('touchmove', function (event) {
	
	                                event.preventDefault();
	                            }, false);
	                        }
	                    }
	                });
	
	                e.preventDefault();
	                e.stopPropagation();
	
	                t.setState({
	                    endX: touchPageX,
	                    delateX: change,
	                    listLeft: change,
	                    data: data,
	                    isCanMove: isCanMove
	                });
	            }
	        }
	    }, {
	        key: 'touchendHandle',
	        value: function touchendHandle(e) {
	
	            var t = this;
	            var left = void 0;
	            var data = t.state.data;
	            var isCanMove = t.state.isCanMove;
	            var id = e.currentTarget.id;
	            var new_left = 0;
	
	            // 只响应单指操作
	            if (supportTouch && e.touches.length > 1) {
	
	                return;
	            }
	
	            e.currentTarget.style.transitionDuration = '.2s';
	
	            data.map(function (d, i) {
	
	                if (d.keyIndex === id) {
	
	                    left = parseInt(d.listLeft);
	                }
	            });
	
	            if (left < -5) {
	
	                new_left = -82;
	            } else if (left = 0) {
	
	                new_left = 0;
	            } else if (left > 5) {
	
	                new_left = 82;
	            }
	
	            var arr = [];
	
	            data.map(function (d, i) {
	
	                if (d.keyIndex !== id) {
	
	                    d.listLeft = 0;
	                    isCanMove = true;
	                } else {
	
	                    d.listLeft = new_left;
	                }
	            });
	
	            t.setState({
	                listLeft: new_left,
	                data: data,
	                isCanMove: isCanMove
	            });
	
	            if (new_left < 0) {
	
	                t.setState({
	                    isMove: true
	                });
	            }
	        }
	    }, {
	        key: 'delete',
	        value: function _delete(dataItem, e) {
	
	            var t = this;
	
	            e.preventDefault();
	            t.props.onDelete(e, dataItem);
	
	            // let data = t.state.data;
	            // let id = event.currentTarget.id;
	
	            // data.map((d,i) => {
	
	            //     if(d.keyIndex === id) {
	
	            //         data.splice(i,1);
	            //     }
	            // })
	
	            // t.setState({
	            //     data : data
	            // })
	        }
	    }, {
	        key: 'prevent_default',
	        value: function prevent_default(e) {
	
	            e.preventDefault();
	        }
	    }, {
	        key: 'clickHandle',
	        value: function clickHandle(dataItem, e) {
	
	            var t = this;
	
	            if (t.state.isMove) {
	
	                t.setState({
	                    isMove: false
	                });
	            } else {
	
	                t.props.onClick(e, dataItem);
	            }
	        }
	    }, {
	        key: 'clickPhotoHandle',
	        value: function clickPhotoHandle(imgUrl, e) {
	
	            var t = this;
	
	            e.stopPropagation();
	            t.props.clickPhoto(e, imgUrl);
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	
	            var t = this;
	            var _t$props = t.props;
	            var className = _t$props.className;
	            var layout = _t$props.layout;
	            var isDelete = _t$props.isDelete;
	            var hasRightIcon = _t$props.hasRightIcon;
	            var iconName = _t$props.iconName;
	            var iconWidth = _t$props.iconWidth;
	            var demoTitle = _t$props.demoTitle;
	
	            var data = t.state.data;
	            var isCanMove = t.state.isCanMove;
	            var list = null;
	            var Events = {};
	
	            if (isDelete) {
	
	                Events = {
	                    onTouchStart: t.touchstartHandle.bind(t),
	                    onTouchMove: t.touchmoveHandle.bind(t),
	                    onTouchEnd: t.touchendHandle.bind(t)
	                };
	            }
	
	            if (data.length) {
	
	                list = data.map(function (dataItem, index) {
	                    return React.createElement(
	                        'div',
	                        { key: index },
	                        React.createElement(
	                            'div',
	                            _extends({ className: Context.prefixClass('list-wrap')
	                            }, Events, {
	                                style: { left: dataItem.listLeft + 'px' },
	                                id: dataItem.keyIndex,
	                                onClick: t.clickHandle.bind(t, dataItem),
	                                ref: 'listItemBox' }),
	                            React.createElement(
	                                HBox,
	                                { vAlign: 'center' },
	                                React.createElement(
	                                    HBox,
	                                    { flex: 1, className: classnames(_defineProperty({}, Context.prefixClass('list-img-right'), layout === 'right')) },
	                                    dataItem.imgUrl && React.createElement(
	                                        VBox,
	                                        { vAlign: 'center', onClick: t.clickPhotoHandle.bind(t, dataItem.imgUrl) },
	                                        React.createElement('img', { src: dataItem.imgUrl, className: Context.prefixClass('list-img') })
	                                    ),
	                                    React.createElement(
	                                        Box,
	                                        { className: Context.prefixClass('list-text-content'), flex: 1 },
	                                        React.createElement(
	                                            'p',
	                                            { className: Context.prefixClass('list-title omit') },
	                                            dataItem.title,
	                                            dataItem.date && React.createElement(
	                                                'span',
	                                                { className: Context.prefixClass('list-title-date') },
	                                                dataItem.date
	                                            )
	                                        ),
	                                        dataItem.text && React.createElement(
	                                            'p',
	                                            { className: Context.prefixClass('list-text omit') },
	                                            dataItem.text
	                                        )
	                                    )
	                                ),
	                                hasRightIcon && React.createElement(
	                                    Box,
	                                    null,
	                                    React.createElement(Icon, { name: iconName, width: iconWidth, fill: '#ccc', className: Context.prefixClass('list-arrow') })
	                                )
	                            )
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: Context.prefixClass('list-behind') },
	                            React.createElement(
	                                'a',
	                                { href: '#', className: Context.prefixClass('list-delete-btn'), id: dataItem.keyIndex, onClick: t.delete.bind(t, dataItem) },
	                                React.createElement(
	                                    'span',
	                                    { className: Context.prefixClass('list-delete-btn-text') },
	                                    '删除'
	                                )
	                            )
	                        )
	                    );
	                });
	
	                return React.createElement(
	                    Group,
	                    { className: classnames(Context.prefixClass('list'), _defineProperty({}, className, !!className)) },
	                    React.createElement(
	                        Group.Head,
	                        { className: 't-demo-title' },
	                        demoTitle
	                    ),
	                    React.createElement(
	                        Group.List,
	                        { lineIndent: 10 },
	                        list
	                    )
	                );
	            } else {
	                return null;
	            }
	        }
	    }]);
	
	    return List;
	}(React.Component);
	
	List.defaultProps = {
	    className: '',
	    layout: 'left',
	    hasRightIcon: true,
	    iconName: 'angle-right',
	    iconWidth: 20,
	    data: [],
	    isDelete: false,
	    demoTitle: '',
	    onClick: function onClick() {},
	    clickPhoto: function clickPhoto() {},
	    onDelete: function onDelete() {}
	};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	List.propTypes = {
	    className: React.PropTypes.string,
	    layout: React.PropTypes.string,
	    iconName: React.PropTypes.string,
	    iconWidth: React.PropTypes.number,
	    data: React.PropTypes.array,
	    hasRightIcon: React.PropTypes.bool,
	    onClick: React.PropTypes.func,
	    clickPhoto: React.PropTypes.func,
	    onDelete: React.PropTypes.func
	};
	
	List.displayName = 'List';
	
	module.exports = List;
	


/***/ },
/* 195 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames () {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ },
/* 196 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * NavBar Component Style for tingle
	 * @author ruiyang.dry
	 *
	 * Copyright 2014-2016, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	module.exports = __webpack_require__(197);
	


/***/ },
/* 197 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * NavBar Component for tingle
	 * @author ruiyang.dry
	 *
	 * Copyright 2014-2016, Tingle Team.
	 * All rights reserved.
	 */
	var classnames = __webpack_require__(198);
	
	var Context = __webpack_require__(116);
	
	var Icon = __webpack_require__(158);
	
	var prefixClass = Context.prefixClass;
	
	var NavBar = function (_React$Component) {
	    _inherits(NavBar, _React$Component);
	
	    function NavBar(props) {
	        _classCallCheck(this, NavBar);
	
	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(NavBar).call(this, props));
	
	        _this.state = {
	            isShow: _this.props.isShow
	        };
	        return _this;
	    }
	
	    _createClass(NavBar, [{
	        key: 'handleBackClick',
	        value: function handleBackClick() {
	            this.props.onLeftClick();
	        }
	    }, {
	        key: 'handleOptionClick',
	        value: function handleOptionClick() {
	            this.props.onRightClick();
	        }
	    }, {
	        key: 'handleCloseView',
	        value: function handleCloseView() {
	            this.props.closeViewClick();
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var t = this;
	            return React.createElement(
	                'div',
	                { ref: 'root', className: classnames(prefixClass('nav-bar'), _defineProperty({}, t.props.className, !!t.props.className)) },
	                React.createElement(
	                    'div',
	                    { className: prefixClass('nav-bar-left FAL') },
	                    React.createElement(
	                        'div',
	                        { className: prefixClass("nav-bar-left-option"), onClick: this.handleBackClick.bind(this) },
	                        React.createElement(Icon, { className: prefixClass("nav-bar-arrow-left"), name: 'angle-left' }),
	                        React.createElement(
	                            'span',
	                            null,
	                            '返回'
	                        )
	                    ),
	                    this.state.isShow ? React.createElement(
	                        'span',
	                        { className: prefixClass("nav-bar-close"),
	                            onClick: this.handleCloseView.bind(this) },
	                        '关闭'
	                    ) : null
	                ),
	                React.createElement(
	                    'div',
	                    { className: prefixClass('nav-bar-center nav-bar-center-text omit3 FAC') },
	                    this.props.title
	                ),
	                React.createElement(
	                    'div',
	                    { className: prefixClass('nav-bar-right FAR'), onClick: this.handleOptionClick.bind(this) },
	                    React.createElement(
	                        'span',
	                        { className: prefixClass("nav-bar-right-text") },
	                        this.props.rightText
	                    )
	                )
	            );
	        }
	    }]);
	
	    return NavBar;
	}(React.Component);
	
	NavBar.defaultProps = {
	    className: '',
	    title: '',
	    rightText: '更多',
	    isShow: true,
	    onLeftClick: function onLeftClick() {},
	    onRightClick: function onRightClick() {},
	    closeViewClick: function closeViewClick() {}
	};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	NavBar.propTypes = {
	    className: React.PropTypes.string,
	    title: React.PropTypes.string,
	    rightText: React.PropTypes.string,
	    onLeftClick: React.PropTypes.func,
	    onRightClick: React.PropTypes.func,
	    closeViewClick: React.PropTypes.func,
	    isShow: React.PropTypes.bool
	};
	
	NavBar.displayName = 'NavBar';
	
	module.exports = NavBar;
	


/***/ },
/* 198 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames () {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ },
/* 199 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Note Component Style for tingle
	 * @author Kuncheng Zhao
	 *
	 * Copyright 2014-2016, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	module.exports = __webpack_require__(200);
	


/***/ },
/* 200 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * Note Component for tingle
	 * @author Kuncheng Zhao, zhouqan.yezq
	 *
	 * Copyright 2014-2016, Tingle Team.
	 * All rights reserved.
	 */
	var classnames = __webpack_require__(201);
	var Icon = __webpack_require__(158);
	var Context = __webpack_require__(116);
	
	var prefixClass = Context.prefixClass;
	
	var Note = function (_React$Component) {
	    _inherits(Note, _React$Component);
	
	    function Note(props) {
	        _classCallCheck(this, Note);
	
	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Note).call(this, props));
	
	        _this.state = {
	            closed: false
	        };
	        return _this;
	    }
	
	    _createClass(Note, [{
	        key: 'handleClose',
	        value: function handleClose(e) {
	            this.props.closable && this.doClose();
	            this.props.onClose.call(this, e);
	        }
	    }, {
	        key: 'doClose',
	        value: function doClose() {
	            this.setState({
	                closed: true
	            });
	        }
	
	        /**
	         * 当closable为true的时候，展现关闭模式
	         * 当closable为false的时候，展现查看详情模式
	         */
	
	    }, {
	        key: 'render',
	        value: function render() {
	            var t = this;
	            var type = 'note-' + t.props.type;
	            var html = React.createElement(
	                'div',
	                { ref: 'root', className: classnames(prefixClass('FBH FBAC'), _defineProperty({}, t.props.className, !!t.props.className), prefixClass('note')) },
	                React.createElement(Icon, { name: type, width: 22, height: 22 }),
	                React.createElement(
	                    'div',
	                    { className: prefixClass('note-message FB1 omit') },
	                    this.props.message
	                ),
	                React.createElement(
	                    'div',
	                    { className: prefixClass('FBH note-close'), onClick: t.handleClose.bind(t) },
	                    t.props.closeText,
	                    React.createElement(Icon, { name: t.props.closable ? 'cross' : 'angle-right',
	                        width: 20, height: 20 })
	                )
	            );
	
	            return this.state.closed ? null : html;
	        }
	    }]);
	
	    return Note;
	}(React.Component);
	
	Note.defaultProps = {
	    type: 'message',
	    closable: false,
	    closeText: '',
	    message: '',
	    onClose: function onClose() {}
	};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	
	Note.propTypes = {
	    className: React.PropTypes.string,
	    type: React.PropTypes.oneOf(['message', 'warning']),
	    message: React.PropTypes.string,
	    onClose: React.PropTypes.func,
	    closeText: React.PropTypes.string
	};
	
	Note.displayName = 'Note';
	
	module.exports = Note;
	


/***/ },
/* 201 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames () {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ },
/* 202 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * RadioField Component Style for tingle
	 * @author shanchao
	 *
	 * Copyright 2014-2016, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	module.exports = __webpack_require__(203);
	


/***/ },
/* 203 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * RadioField Component for tingle
	 * @author shanchao
	 *
	 * Copyright 2014-2016, Tingle Team.
	 * All rights reserved.
	 */
	var React = __webpack_require__(2);
	var classnames = __webpack_require__(204);
	var Icon = __webpack_require__(158);
	var Field = __webpack_require__(177);
	var Context = __webpack_require__(116);
	var Group = __webpack_require__(162);
	
	var prefixClass = Context.prefixClass;
	
	var RadioField = function (_React$Component) {
	    _inherits(RadioField, _React$Component);
	
	    function RadioField(props) {
	        _classCallCheck(this, RadioField);
	
	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(RadioField).call(this, props));
	
	        _this.state = {};
	        return _this;
	    }
	
	    _createClass(RadioField, [{
	        key: 'clickAction',
	        value: function clickAction(value, item, index, data) {
	            var t = this;
	            var _t$props = t.props;
	            var radioArray = _t$props.data;
	            var onChange = _t$props.onChange;
	
	
	            var disable = item.disable;
	            if (disable) {
	                return;
	            }
	            radioArray.map(function (item) {
	                item.checked = false;
	            });
	            item.checked = !item.checked;
	            onChange && onChange(value, index, data);
	            t.forceUpdate();
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var t = this;
	            var _t$props2 = t.props;
	            var rootClassName = _t$props2.rootClassName;
	            var radioArray = _t$props2.data;
	            var groupListArgument = _t$props2.groupListArgument;
	            var groupListFlag = _t$props2.groupListFlag;
	            var label = _t$props2.label;
	
	
	            var radioArrayComponent = radioArray.map(function (item, index, data) {
	                var checked = item.checked;
	                var disable = item.disable;
	                var value = item.value;
	
	                var textClassName = classnames(prefixClass("radio-field-text FBAC FBH FB1"), { "disable": disable });
	                var iconClassName = classnames(prefixClass("radio-field-icon"), { "noChecked": !checked }, { "checked": checked }, { "disable": disable });
	                return React.createElement(
	                    'div',
	                    { onClick: t.clickAction.bind(t, value, item, index, data), key: index, className: prefixClass("radio-field-row FBAC FBH") },
	                    React.createElement(
	                        'div',
	                        { ref: "text" + index, className: textClassName },
	                        item.text
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: prefixClass("radio-field-icon-div FBAC FBH") },
	                        React.createElement(Icon, { width: 20, height: 20, name: "check", className: iconClassName })
	                    )
	                );
	            });
	
	            var finalJSX = React.createElement(
	                Group,
	                { className: classnames(prefixClass('checkbox-field'), _defineProperty({}, rootClassName, !!rootClassName)) },
	                label == '' ? null : React.createElement(
	                    Group.Head,
	                    { className: classnames(prefixClass('checkbox-label')) },
	                    label
	                ),
	                React.createElement(
	                    Group.List,
	                    groupListArgument,
	                    radioArrayComponent
	                )
	            );
	
	            if (!groupListFlag) {
	                finalJSX = React.createElement(
	                    'div',
	                    { ref: 'root', className: classnames(prefixClass('checkbox-field'), _defineProperty({}, rootClassName, !!rootClassName)) },
	                    radioArrayComponent
	                );
	            }
	
	            return finalJSX;
	        }
	    }]);
	
	    return RadioField;
	}(React.Component);
	
	;
	
	RadioField.defaultProps = {
	    data: [],
	    onChange: function onChange() {},
	    groupListFlag: true,
	    groupListArgument: {
	        lineIndent: 0,
	        itemIndent: 15
	    },
	    label: ''
	};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	RadioField.propTypes = {
	    className: React.PropTypes.string,
	    data: React.PropTypes.array,
	    onChange: React.PropTypes.func,
	    groupListFlag: React.PropTypes.bool,
	    groupListArgument: React.PropTypes.object
	};
	
	RadioField.displayName = 'RadioField';
	
	module.exports = RadioField;
	


/***/ },
/* 204 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames () {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ },
/* 205 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * SearchBar Component Style for tingle
	 * @author zhouquan.yezq
	 *
	 * Copyright 2014-2016, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	module.exports = __webpack_require__(206);
	


/***/ },
/* 206 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * SearchBar Component for tingle
	 * @author zhouquan.yezq
	 *
	 * Copyright 2014-2016, Tingle Team.
	 * All rights reserved.
	 */
	var classnames = __webpack_require__(207);
	var debounce = __webpack_require__(208);
	
	var Context = __webpack_require__(116);
	var Icon = __webpack_require__(158);
	var locale = __webpack_require__(216);
	var SearchHistory = __webpack_require__(217);
	
	var addUrlParam = function addUrlParam(name, value) {
	    var currentUrl = location.href;
	    var reg;
	    if (/\?/g.test(currentUrl)) {
	        reg = new RegExp(name + '=[-\\w]{4,25}', 'g');
	        if (reg.test(currentUrl)) {
	            currentUrl = currentUrl.replace(reg, name + "=" + value);
	        } else {
	            currentUrl += "&" + name + "=" + value;
	        }
	    } else {
	        currentUrl += "?" + name + "=" + value;
	    }
	    return currentUrl;
	};
	
	var SearchBar = function (_React$Component) {
	    _inherits(SearchBar, _React$Component);
	
	    function SearchBar(props) {
	        _classCallCheck(this, SearchBar);
	
	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(SearchBar).call(this, props));
	
	        _this.state = {
	            isActive: false, // whether in search mode
	            keyword: ''
	        };
	        _this.lastSearch = '';
	        _this.listener = _this.exitStatusSearch.bind(_this);
	        _this.doDebouceSearch = debounce(_this.doSearch, props.searchDelay);
	        return _this;
	    }
	
	    _createClass(SearchBar, [{
	        key: 'onChange',
	        value: function onChange(e) {
	            var value = e.target.value.trim();
	            var t = this;
	            this.setState({
	                keyword: value
	            }, function () {
	                if (t.props.instantSearch) {
	                    t.doDebouceSearch('input');
	                }
	            });
	            t.props.onChange && t.props.onChange(value, e);
	        }
	    }, {
	        key: 'onKeyUp',
	        value: function onKeyUp(e) {
	            var value = e.target.value.trim();
	            if (e.keyCode === 13 && value) {
	                this.doSearch('click', value);
	                this.refs.input.blur();
	            }
	        }
	    }, {
	        key: 'doSearch',
	        value: function doSearch(from, keyword) {
	            var t = this;
	            keyword = keyword || t.state.keyword;
	            if (from !== 'input' && t.props.hasHistory) {
	                t.refs.history.addItem(keyword);
	            }
	            if (keyword === t.lastSearch) {
	                return;
	            }
	            t.lastSearch = keyword;
	            t.props.onSearch && t.props.onSearch(keyword);
	        }
	    }, {
	        key: 'clearKeyword',
	        value: function clearKeyword() {
	            var t = this;
	            t.setState({
	                keyword: ''
	            });
	            t.refs.input.focus();
	        }
	    }, {
	        key: 'enterSearch',
	        value: function enterSearch() {
	            var t = this;
	            if (t.props.disabled) {
	                return;
	            }
	            t.setState({
	                isActive: true
	            });
	            t.refs.input.focus();
	            history.pushState(null, '', addUrlParam('SEARCH_BAR', Date.now()));
	            window.addEventListener("popstate", this.listener, false);
	            document.body.style.overflow = 'hidden';
	            t.props.onEnter && t.props.onEnter();
	        }
	    }, {
	        key: 'exitSearch',
	        value: function exitSearch() {
	            history.go(-1);
	        }
	    }, {
	        key: 'exitStatusSearch',
	        value: function exitStatusSearch() {
	            var t = this;
	            t.setState({
	                isActive: false,
	                keyword: ''
	            });
	            t.refs.input.blur();
	            window.removeEventListener("popstate", this.listener, false);
	            document.body.style.overflow = '';
	            t.props.onExit && t.props.onExit();
	        }
	    }, {
	        key: 'onHistorySelect',
	        value: function onHistorySelect(value) {
	            var t = this;
	            t.setState({
	                keyword: value
	            }, function () {
	                t.doSearch('history');
	            });
	        }
	    }, {
	        key: 'renderHistory',
	        value: function renderHistory() {
	            var t = this;
	            if (!t.props.hasHistory) {
	                return null;
	            }
	            return React.createElement(SearchHistory, { ref: 'history',
	                locale: t.props.locale,
	                name: t.props.historyName,
	                className: classnames({ 'active': !t.state.keyword }),
	                onSelect: t.onHistorySelect.bind(t)
	            });
	        }
	    }, {
	        key: 'renderResult',
	        value: function renderResult() {
	            var t = this;
	            return React.createElement(
	                'div',
	                { className: classnames(Context.prefixClass('search-bar-result'), {
	                        'active': t.state.keyword
	                    }) },
	                t.props.children
	            );
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _classnames;
	
	            var t = this;
	            var i18n = locale[t.props.locale];
	            var placeholder = t.props.placeholder;
	            if ((typeof placeholder === 'undefined' ? 'undefined' : _typeof(placeholder)) === 'object' && placeholder !== null) {
	                placeholder = placeholder[t.props.locale];
	            }
	            return React.createElement(
	                'div',
	                { ref: 'root', className: classnames(Context.prefixClass('search-bar'), (_classnames = {}, _defineProperty(_classnames, t.props.className, !!t.props.className), _defineProperty(_classnames, t.props.locale, !!t.props.locale), _defineProperty(_classnames, 'active', t.state.isActive), _classnames)) },
	                React.createElement(
	                    'div',
	                    { className: classnames(Context.prefixClass('search-bar-wrapper'), _defineProperty({}, t.props.className, !!t.props.className)) },
	                    React.createElement(
	                        'div',
	                        { className: Context.prefixClass('search-bar-box') },
	                        t.state.isActive ? null : React.createElement(
	                            'div',
	                            { className: Context.prefixClass('search-bar-holder-wrapper'),
	                                onClick: t.enterSearch.bind(t) },
	                            React.createElement(
	                                'div',
	                                { className: Context.prefixClass('search-bar-holder') },
	                                React.createElement(Icon, { name: 'search', className: Context.prefixClass('search-bar-icon-search'),
	                                    width: this.props.iconWidth, height: this.props.iconHeight,
	                                    fill: this.props.iconColor }),
	                                placeholder
	                            )
	                        ),
	                        React.createElement(Icon, { name: 'search', className: Context.prefixClass('search-bar-icon-search'),
	                            width: this.props.iconWidth, height: this.props.iconHeight, fill: this.props.iconColor }),
	                        React.createElement(
	                            'form',
	                            { action: 'javascript:void(0)' },
	                            React.createElement('input', { ref: 'input', type: 'search',
	                                className: Context.prefixClass('search-bar-input'),
	                                value: t.state.keyword,
	                                onChange: t.onChange.bind(t),
	                                onKeyUp: t.onKeyUp.bind(t),
	                                placeholder: t.state.isActive ? placeholder : '' })
	                        ),
	                        React.createElement(Icon, { name: 'cross-round', onClick: t.clearKeyword.bind(t),
	                            className: classnames(Context.prefixClass('search-bar-icon-cross'), {
	                                'active': t.state.keyword
	                            }),
	                            width: this.props.iconWidth, height: this.props.iconHeight, fill: this.props.iconColor })
	                    ),
	                    React.createElement(
	                        'span',
	                        { className: Context.prefixClass('search-bar-btn'),
	                            onClick: t.exitSearch.bind(t)
	                        },
	                        i18n['cancel']
	                    )
	                ),
	                t.state.isActive ? React.createElement(
	                    'div',
	                    { className: Context.prefixClass('search-bar-list') },
	                    t.renderHistory(),
	                    t.renderResult()
	                ) : null
	            );
	        }
	    }]);
	
	    return SearchBar;
	}(React.Component);
	
	SearchBar.defaultProps = {
	    iconWidth: 20,
	    iconHeight: 20,
	    iconColor: "#bcbcbc",
	    locale: 'zh_CN',
	    placeholder: {
	        'zh_CN': '搜索',
	        'en_US': 'Search'
	    },
	    hasHistory: true,
	    instantSearch: true, // whether trigger search when  input change
	    searchDelay: 350, // debounce time for search action
	    disabled: false
	};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	SearchBar.propTypes = {
	    locale: React.PropTypes.string,
	    placeholder: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.object]),
	    hasHistory: React.PropTypes.bool,
	    historyName: React.PropTypes.string,
	    instantSearch: React.PropTypes.bool,
	    searchDelay: React.PropTypes.number,
	    onChange: React.PropTypes.func,
	    onSearch: React.PropTypes.func,
	    onEnter: React.PropTypes.func,
	    onExit: React.PropTypes.func,
	    disabled: React.PropTypes.bool
	};
	
	SearchBar.displayName = 'SearchBar';
	
	module.exports = SearchBar;
	


/***/ },
/* 207 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames () {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ },
/* 208 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(209),
	    now = __webpack_require__(210),
	    toNumber = __webpack_require__(213);
	
	/** Used as the `TypeError` message for "Functions" methods. */
	var FUNC_ERROR_TEXT = 'Expected a function';
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max,
	    nativeMin = Math.min;
	
	/**
	 * Creates a debounced function that delays invoking `func` until after `wait`
	 * milliseconds have elapsed since the last time the debounced function was
	 * invoked. The debounced function comes with a `cancel` method to cancel
	 * delayed `func` invocations and a `flush` method to immediately invoke them.
	 * Provide `options` to indicate whether `func` should be invoked on the
	 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
	 * with the last arguments provided to the debounced function. Subsequent
	 * calls to the debounced function return the result of the last `func`
	 * invocation.
	 *
	 * **Note:** If `leading` and `trailing` options are `true`, `func` is
	 * invoked on the trailing edge of the timeout only if the debounced function
	 * is invoked more than once during the `wait` timeout.
	 *
	 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
	 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
	 *
	 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
	 * for details over the differences between `_.debounce` and `_.throttle`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Function
	 * @param {Function} func The function to debounce.
	 * @param {number} [wait=0] The number of milliseconds to delay.
	 * @param {Object} [options={}] The options object.
	 * @param {boolean} [options.leading=false]
	 *  Specify invoking on the leading edge of the timeout.
	 * @param {number} [options.maxWait]
	 *  The maximum time `func` is allowed to be delayed before it's invoked.
	 * @param {boolean} [options.trailing=true]
	 *  Specify invoking on the trailing edge of the timeout.
	 * @returns {Function} Returns the new debounced function.
	 * @example
	 *
	 * // Avoid costly calculations while the window size is in flux.
	 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
	 *
	 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
	 * jQuery(element).on('click', _.debounce(sendMail, 300, {
	 *   'leading': true,
	 *   'trailing': false
	 * }));
	 *
	 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
	 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
	 * var source = new EventSource('/stream');
	 * jQuery(source).on('message', debounced);
	 *
	 * // Cancel the trailing debounced invocation.
	 * jQuery(window).on('popstate', debounced.cancel);
	 */
	function debounce(func, wait, options) {
	  var lastArgs,
	      lastThis,
	      maxWait,
	      result,
	      timerId,
	      lastCallTime,
	      lastInvokeTime = 0,
	      leading = false,
	      maxing = false,
	      trailing = true;
	
	  if (typeof func != 'function') {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  wait = toNumber(wait) || 0;
	  if (isObject(options)) {
	    leading = !!options.leading;
	    maxing = 'maxWait' in options;
	    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
	    trailing = 'trailing' in options ? !!options.trailing : trailing;
	  }
	
	  function invokeFunc(time) {
	    var args = lastArgs,
	        thisArg = lastThis;
	
	    lastArgs = lastThis = undefined;
	    lastInvokeTime = time;
	    result = func.apply(thisArg, args);
	    return result;
	  }
	
	  function leadingEdge(time) {
	    // Reset any `maxWait` timer.
	    lastInvokeTime = time;
	    // Start the timer for the trailing edge.
	    timerId = setTimeout(timerExpired, wait);
	    // Invoke the leading edge.
	    return leading ? invokeFunc(time) : result;
	  }
	
	  function remainingWait(time) {
	    var timeSinceLastCall = time - lastCallTime,
	        timeSinceLastInvoke = time - lastInvokeTime,
	        result = wait - timeSinceLastCall;
	
	    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
	  }
	
	  function shouldInvoke(time) {
	    var timeSinceLastCall = time - lastCallTime,
	        timeSinceLastInvoke = time - lastInvokeTime;
	
	    // Either this is the first call, activity has stopped and we're at the
	    // trailing edge, the system time has gone backwards and we're treating
	    // it as the trailing edge, or we've hit the `maxWait` limit.
	    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
	      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
	  }
	
	  function timerExpired() {
	    var time = now();
	    if (shouldInvoke(time)) {
	      return trailingEdge(time);
	    }
	    // Restart the timer.
	    timerId = setTimeout(timerExpired, remainingWait(time));
	  }
	
	  function trailingEdge(time) {
	    timerId = undefined;
	
	    // Only invoke if we have `lastArgs` which means `func` has been
	    // debounced at least once.
	    if (trailing && lastArgs) {
	      return invokeFunc(time);
	    }
	    lastArgs = lastThis = undefined;
	    return result;
	  }
	
	  function cancel() {
	    if (timerId !== undefined) {
	      clearTimeout(timerId);
	    }
	    lastInvokeTime = 0;
	    lastArgs = lastCallTime = lastThis = timerId = undefined;
	  }
	
	  function flush() {
	    return timerId === undefined ? result : trailingEdge(now());
	  }
	
	  function debounced() {
	    var time = now(),
	        isInvoking = shouldInvoke(time);
	
	    lastArgs = arguments;
	    lastThis = this;
	    lastCallTime = time;
	
	    if (isInvoking) {
	      if (timerId === undefined) {
	        return leadingEdge(lastCallTime);
	      }
	      if (maxing) {
	        // Handle invocations in a tight loop.
	        timerId = setTimeout(timerExpired, wait);
	        return invokeFunc(lastCallTime);
	      }
	    }
	    if (timerId === undefined) {
	      timerId = setTimeout(timerExpired, wait);
	    }
	    return result;
	  }
	  debounced.cancel = cancel;
	  debounced.flush = flush;
	  return debounced;
	}
	
	module.exports = debounce;


/***/ },
/* 209 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is the
	 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
	 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(_.noop);
	 * // => true
	 *
	 * _.isObject(null);
	 * // => false
	 */
	function isObject(value) {
	  var type = typeof value;
	  return !!value && (type == 'object' || type == 'function');
	}
	
	module.exports = isObject;


/***/ },
/* 210 */
/***/ function(module, exports, __webpack_require__) {

	var root = __webpack_require__(211);
	
	/**
	 * Gets the timestamp of the number of milliseconds that have elapsed since
	 * the Unix epoch (1 January 1970 00:00:00 UTC).
	 *
	 * @static
	 * @memberOf _
	 * @since 2.4.0
	 * @category Date
	 * @returns {number} Returns the timestamp.
	 * @example
	 *
	 * _.defer(function(stamp) {
	 *   console.log(_.now() - stamp);
	 * }, _.now());
	 * // => Logs the number of milliseconds it took for the deferred invocation.
	 */
	var now = function() {
	  return root.Date.now();
	};
	
	module.exports = now;


/***/ },
/* 211 */
/***/ function(module, exports, __webpack_require__) {

	var freeGlobal = __webpack_require__(212);
	
	/** Detect free variable `self`. */
	var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
	
	/** Used as a reference to the global object. */
	var root = freeGlobal || freeSelf || Function('return this')();
	
	module.exports = root;


/***/ },
/* 212 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
	var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;
	
	module.exports = freeGlobal;
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 213 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(209),
	    isSymbol = __webpack_require__(214);
	
	/** Used as references for various `Number` constants. */
	var NAN = 0 / 0;
	
	/** Used to match leading and trailing whitespace. */
	var reTrim = /^\s+|\s+$/g;
	
	/** Used to detect bad signed hexadecimal string values. */
	var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
	
	/** Used to detect binary string values. */
	var reIsBinary = /^0b[01]+$/i;
	
	/** Used to detect octal string values. */
	var reIsOctal = /^0o[0-7]+$/i;
	
	/** Built-in method references without a dependency on `root`. */
	var freeParseInt = parseInt;
	
	/**
	 * Converts `value` to a number.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to process.
	 * @returns {number} Returns the number.
	 * @example
	 *
	 * _.toNumber(3.2);
	 * // => 3.2
	 *
	 * _.toNumber(Number.MIN_VALUE);
	 * // => 5e-324
	 *
	 * _.toNumber(Infinity);
	 * // => Infinity
	 *
	 * _.toNumber('3.2');
	 * // => 3.2
	 */
	function toNumber(value) {
	  if (typeof value == 'number') {
	    return value;
	  }
	  if (isSymbol(value)) {
	    return NAN;
	  }
	  if (isObject(value)) {
	    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
	    value = isObject(other) ? (other + '') : other;
	  }
	  if (typeof value != 'string') {
	    return value === 0 ? value : +value;
	  }
	  value = value.replace(reTrim, '');
	  var isBinary = reIsBinary.test(value);
	  return (isBinary || reIsOctal.test(value))
	    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
	    : (reIsBadHex.test(value) ? NAN : +value);
	}
	
	module.exports = toNumber;


/***/ },
/* 214 */
/***/ function(module, exports, __webpack_require__) {

	var isObjectLike = __webpack_require__(215);
	
	/** `Object#toString` result references. */
	var symbolTag = '[object Symbol]';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;
	
	/**
	 * Checks if `value` is classified as a `Symbol` primitive or object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
	 * @example
	 *
	 * _.isSymbol(Symbol.iterator);
	 * // => true
	 *
	 * _.isSymbol('abc');
	 * // => false
	 */
	function isSymbol(value) {
	  return typeof value == 'symbol' ||
	    (isObjectLike(value) && objectToString.call(value) == symbolTag);
	}
	
	module.exports = isSymbol;


/***/ },
/* 215 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return !!value && typeof value == 'object';
	}
	
	module.exports = isObjectLike;


/***/ },
/* 216 */
/***/ function(module, exports) {

	'use strict';
	
	var locale = {
	    'zh_CN': {
	        'cancel': '取消',
	        'clear': '清空',
	        'history': '搜索历史'
	    },
	    'en_US': {
	        'cancel': 'Cancel',
	        'clear': 'Clear',
	        'history': 'Search History'
	    }
	};
	
	module.exports = locale;
	


/***/ },
/* 217 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * SearchHistory Component for tingle
	 * @author zhouquan.yezq
	 *
	 * Copyright 2014-2016, Tingle Team.
	 * All rights reserved.
	 */
	var classnames = __webpack_require__(207);
	var debounce = __webpack_require__(208);
	
	var Context = __webpack_require__(116);
	var locale = __webpack_require__(216);
	
	var Storage = {
	
	    _toJSON: function _toJSON(data) {
	        return JSON.stringify(data);
	    },
	
	    _fromJSON: function _fromJSON(data) {
	        try {
	            data = JSON.parse(data);
	        } catch (e) {
	            data = null;
	        }
	        return data;
	    },
	
	    getItem: function getItem(key) {
	        return this._fromJSON(localStorage.getItem(key));
	    },
	
	    setItem: function setItem(key, data) {
	        return localStorage.setItem(key, this._toJSON(data));
	    },
	
	    removeItem: function removeItem(key) {
	        localStorage.removeItem(key);
	    }
	};
	
	var SearchHistory = function (_React$Component) {
	    _inherits(SearchHistory, _React$Component);
	
	    function SearchHistory(props) {
	        _classCallCheck(this, SearchHistory);
	
	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(SearchHistory).call(this, props));
	
	        _this.state = {};
	        _this.HISTORY_KEY = props.name;
	        return _this;
	    }
	
	    _createClass(SearchHistory, [{
	        key: 'getHistory',
	        value: function getHistory() {
	            var list = Storage.getItem(this.HISTORY_KEY) || [];
	            return list.slice(0, this.props.displayCount);
	        }
	    }, {
	        key: 'addItem',
	        value: function addItem(keyword) {
	            // add new history item
	            var t = this;
	            var list = t.getHistory();
	            var index = list.indexOf(keyword);
	            if (index !== -1) {
	                list.splice(index, 1);
	            }
	            list.unshift(keyword);
	            Storage.setItem(t.HISTORY_KEY, list);
	        }
	    }, {
	        key: 'clearHistory',
	        value: function clearHistory() {
	            var t = this;
	            Storage.removeItem(t.HISTORY_KEY);
	            this.setState({
	                historyList: []
	            });
	        }
	    }, {
	        key: 'onSelect',
	        value: function onSelect(keyword) {
	            this.props.onSelect && this.props.onSelect(keyword);
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var t = this;
	            var list = t.getHistory();
	            if (list.length === 0) {
	                return null;
	            }
	            var i18n = locale[t.props.locale];
	            return React.createElement(
	                'div',
	                { className: classnames(Context.prefixClass('search-bar-history'), t.props.className) },
	                React.createElement(
	                    'div',
	                    { className: Context.prefixClass('search-bar-history-header') },
	                    i18n['history'],
	                    React.createElement(
	                        'span',
	                        { className: Context.prefixClass('search-bar-history-action'),
	                            onClick: t.clearHistory.bind(t) },
	                        i18n['clear']
	                    )
	                ),
	                React.createElement(
	                    'ul',
	                    { className: Context.prefixClass('search-bar-history-list') },
	                    list.map(function (item, idx) {
	                        return React.createElement(
	                            'li',
	                            { key: idx },
	                            React.createElement(
	                                'span',
	                                { onClick: t.onSelect.bind(t, item) },
	                                item
	                            )
	                        );
	                    })
	                )
	            );
	        }
	    }]);
	
	    return SearchHistory;
	}(React.Component);
	
	SearchHistory.defaultProps = {
	    name: 'SEARCH_BAR_HISTORY',
	    keyword: '',
	    displayCount: 8
	};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	SearchHistory.propTypes = {
	    onSelect: React.PropTypes.func,
	    name: React.PropTypes.string,
	    keyword: React.PropTypes.string,
	    displayCount: React.PropTypes.number
	};
	
	SearchHistory.displayName = 'SearchHistory';
	
	module.exports = SearchHistory;
	


/***/ },
/* 218 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * SelectField Component Style for tingle
	 * @author caoke.ck
	 *
	 * Copyright 2014-2016, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	module.exports = __webpack_require__(219);
	


/***/ },
/* 219 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * SelectField Component for tingle
	 * @author caoke.ck
	 *
	 * Copyright 2014-2016, Tingle Team.
	 * All rights reserved.
	 */
	var React = __webpack_require__(2);
	var classnames = __webpack_require__(220);
	var Context = __webpack_require__(116);
	var Slot = __webpack_require__(170);
	var Icon = __webpack_require__(158);
	var Field = __webpack_require__(177);
	
	var SelectField = function (_React$Component) {
	    _inherits(SelectField, _React$Component);
	
	    function SelectField(props) {
	        _classCallCheck(this, SelectField);
	
	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(SelectField).call(this, props));
	
	        var t = _this;
	        var value = props.value;
	        t.state = {
	            value: [value],
	            confirmedValue: [value]
	        };
	        return _this;
	    }
	
	    // 外部变更选中值
	
	
	    _createClass(SelectField, [{
	        key: 'componentWillReceiveProps',
	        value: function componentWillReceiveProps(nextProps) {
	            var t = this;
	            var value = nextProps.value;
	            t.setState({
	                value: [value],
	                confirmedValue: [value]
	            });
	        }
	    }, {
	        key: 'handleClick',
	        value: function handleClick() {
	            var t = this;
	            !t.props.readOnly && t.refs.slot.show();
	        }
	    }, {
	        key: 'handleChange',
	        value: function handleChange(value) {
	            this.setState({
	                value: value
	            });
	        }
	    }, {
	        key: 'handleConfirm',
	        value: function handleConfirm(value) {
	            this.props.onSelect(value[0]);
	        }
	    }, {
	        key: 'handleCancel',
	        value: function handleCancel() {
	            var t = this;
	            t.setState({
	                value: t.state.confirmedValue
	            });
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var t = this;
	            return React.createElement(
	                Field,
	                _extends({}, t.props, { icon: {
	                        className: Context.prefixClass('select-field-icon'),
	                        name: 'angle-right',
	                        width: 26,
	                        height: 26,
	                        onClick: t.handleClick.bind(t)
	                    },
	                    className: classnames(Context.prefixClass('select-field'), _defineProperty({}, t.props.className, !!t.props.className)) }),
	                React.createElement(
	                    'div',
	                    { onClick: t.handleClick.bind(t) },
	                    !t.state.confirmedValue[0] ? React.createElement(
	                        'div',
	                        { className: Context.prefixClass('omit select-field-placeholder') },
	                        t.props.placeholder
	                    ) : '',
	                    React.createElement(
	                        'div',
	                        { className: Context.prefixClass('select-field-value FBH FBAC') },
	                        React.createElement(
	                            'span',
	                            { className: classnames(Context.prefixClass('FB1 omit'), _defineProperty({}, Context.prefixClass('select-field-readonly'), !!t.props.readOnly)) },
	                            t.props.formatter(t.state.confirmedValue[0])
	                        )
	                    )
	                ),
	                React.createElement(Slot, { ref: 'slot', title: t.props.label, confirmText: t.props.confirmText, cancelText: t.props.cancelText, data: [t.props.options], value: t.state.value, onChange: t.handleChange.bind(t), onCancel: t.handleCancel.bind(t), onConfirm: t.handleConfirm.bind(t) })
	            );
	        }
	    }]);
	
	    return SelectField;
	}(React.Component);
	
	SelectField.defaultProps = {
	    options: [],
	    formatter: function formatter(value) {
	        return value ? value.text : '';
	    },
	    onSelect: function onSelect() {},
	    readOnly: false,
	    placeholder: ''
	};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	SelectField.propTypes = {
	    className: React.PropTypes.string,
	    label: React.PropTypes.string.isRequired,
	    options: React.PropTypes.array.isRequired,
	    value: React.PropTypes.object,
	    formatter: React.PropTypes.func,
	    onSelect: React.PropTypes.func,
	    readOnly: React.PropTypes.bool,
	    placeholder: React.PropTypes.string
	};
	
	SelectField.displayName = "SelectField";
	
	module.exports = SelectField;
	


/***/ },
/* 220 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames () {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ },
/* 221 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Switch Component Style for tingle
	 * @author ruiyang.dry
	 *
	 * Copyright 2014-2016, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	module.exports = __webpack_require__(222);
	


/***/ },
/* 222 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * Switch Component for tingle
	 * @author ruiyang.dry
	 *
	 * Copyright 2014-2016, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	var classnames = __webpack_require__(223);
	
	var Context = __webpack_require__(116);
	
	var Switch = function (_React$Component) {
	    _inherits(Switch, _React$Component);
	
	    function Switch(props) {
	        _classCallCheck(this, Switch);
	
	        return _possibleConstructorReturn(this, Object.getPrototypeOf(Switch).call(this, props));
	    }
	
	    _createClass(Switch, [{
	        key: 'handleChange',
	        value: function handleChange(event) {
	            var t = this;
	            if (t.props.readOnly) {
	                return;
	            }
	            t.props.onChange(!t.props.on, event);
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var t = this;
	            var classSet = _defineProperty({
	                "active": t.props.on,
	                "readOnly": t.props.readOnly
	            }, t.props.className, !!t.props.className);
	            return React.createElement(
	                'div',
	                {
	                    className: classnames(Context.prefixClass('switch'), classSet),
	                    readOnly: t.props.readOnly,
	                    onClick: t.handleChange.bind(this) },
	                React.createElement(
	                    'div',
	                    { className: Context.prefixClass('switch-back') },
	                    React.createElement('div', { className: Context.prefixClass('switch-radius') })
	                )
	            );
	        }
	    }]);
	
	    return Switch;
	}(React.Component);
	
	Switch.defaultProps = {
	    on: true,
	    onChange: function onChange() {},
	
	    readOnly: false
	};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	Switch.propTypes = {
	    on: React.PropTypes.bool,
	    onChange: React.PropTypes.func,
	    readOnly: React.PropTypes.bool
	};
	
	Switch.displayName = "Switch";
	
	module.exports = Switch;
	


/***/ },
/* 223 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames () {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ },
/* 224 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * SwitchField Component Style for tingle
	 * @author 
	 *
	 * Copyright 2014-2016, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	module.exports = __webpack_require__(225);
	


/***/ },
/* 225 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * SwitchField Component for tingle
	 * @dongrui.yang
	 *
	 * Copyright 2014-2016, Tingle Team.
	 * All rights reserved.
	 */
	var Switch = __webpack_require__(221);
	var Field = __webpack_require__(177);
	var classnames = __webpack_require__(226);
	var Context = __webpack_require__(116);
	
	var SwitchField = function (_React$Component) {
	    _inherits(SwitchField, _React$Component);
	
	    function SwitchField(props) {
	        _classCallCheck(this, SwitchField);
	
	        return _possibleConstructorReturn(this, Object.getPrototypeOf(SwitchField).call(this, props));
	    }
	
	    _createClass(SwitchField, [{
	        key: 'handleChange',
	        value: function handleChange(on) {
	            this.props.onChange(on);
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var t = this;
	            return React.createElement(
	                Field,
	                _extends({}, t.props, { className: classnames(Context.prefixClass('switch-field'), t.props.className, {
	                        'readOnly': t.props.readOnly
	                    }) }),
	                React.createElement(
	                    'div',
	                    { className: 't-FBH' },
	                    React.createElement('div', { className: 't-FB1' }),
	                    React.createElement(Switch, { on: this.props.on, readOnly: t.props.readOnly, onChange: this.handleChange.bind(this) })
	                )
	            );
	        }
	    }]);
	
	    return SwitchField;
	}(React.Component);
	
	SwitchField.defaultProps = {
	    label: '',
	    className: ''
	};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	SwitchField.propTypes = {
	    label: React.PropTypes.string.isRequired,
	    className: React.PropTypes.string
	};
	
	SwitchField.displayName = 'SwitchField';
	
	module.exports = SwitchField;
	


/***/ },
/* 226 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames () {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ },
/* 227 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Tab Component Style for tingle
	 * @author zhangshun@alipay.com
	 *
	 * Copyright 2014-2016, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	module.exports = __webpack_require__(228);
	


/***/ },
/* 228 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * Tab Component for tingle
	 * @author zhangshun@alipay.com
	 *
	 * Copyright 2014-2016, Tingle Team.
	 * All rights reserved.
	 */
	var React = __webpack_require__(2);
	var classnames = __webpack_require__(229);
	var Context = __webpack_require__(116);
	var Scroller = __webpack_require__(173);
	var TabItem = __webpack_require__(230);
	var prefixClass = Context.prefixClass;
	var iScroll = __webpack_require__(176);
	
	var Tab = function (_React$Component) {
	    _inherits(Tab, _React$Component);
	
	    function Tab(props) {
	        _classCallCheck(this, Tab);
	
	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Tab).call(this, props));
	
	        _this.state = {
	            active: props.active
	        };
	        return _this;
	    }
	
	    _createClass(Tab, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            // 计算宽度和滚动
	            var t = this;
	            if (!t.props.showScroll) {
	                return;
	            }
	            var w = 0;
	            var scrollEl = ReactDOM.findDOMNode(t.refs.scroll);
	            var chNodes = scrollEl.childNodes;
	            for (var i = 0, l = chNodes.length; i < l; i++) {
	                w += chNodes[i].offsetWidth + 1;
	            }
	
	            scrollEl.style.width = w + "px";
	            // 实例化滚动
	            t.refs.head.scroller.refresh();
	        }
	    }, {
	        key: 'componentWillReceiveProps',
	        value: function componentWillReceiveProps(nextProps) {
	            var t = this;
	            if (nextProps.active !== t.state.active) {
	                t.setState({
	                    active: nextProps.active
	                });
	            }
	        }
	    }, {
	        key: 'componentDidUpdate',
	        value: function componentDidUpdate(prevProps, prevState) {
	            //fix issue #8
	            if (this.state.active !== prevState.active) {
	                this.setActiveTabItemVisible();
	            }
	        }
	    }, {
	        key: 'setActiveTabItemVisible',
	        value: function setActiveTabItemVisible() {
	            if (!this.props.showScroll) {
	                //没有scroll的时候，active tab必然是可见的
	                return true;
	            }
	
	            var activeTab = this.findActiveTab();
	            if (!this.tabVisible(activeTab)) {
	                this.refs.head.scroller.scrollToElement(activeTab, 'auto', true, true);
	            }
	        }
	    }, {
	        key: 'tabVisible',
	        value: function tabVisible(tab) {
	            var scroller = this.refs.head.scroller;
	            var tabOffset = iScroll.utils.offset(tab);
	            var wrapperWidth = scroller.wrapperWidth;
	
	            //scroll使用的offset像素坐标都是负值，使用的时候做Math.abs处理，方便计算
	            var headOffsetRange = {
	                left: Math.abs(scroller.x),
	                right: Math.abs(scroller.x + -wrapperWidth)
	            };
	
	            var tabLeft = Math.abs(tabOffset.left);
	            var tabRight = Math.abs(tabOffset.right);
	
	            if (tabLeft >= headOffsetRange.left) {
	                return tabLeft < headOffsetRange.right;
	            }
	
	            if (tabRight < headOffsetRange.left) {
	                return tabRight <= headOffsetRange.right;
	            }
	        }
	    }, {
	        key: 'findActiveTab',
	        value: function findActiveTab() {
	            var refKey = 'tab_' + this.state.active;
	            return ReactDOM.findDOMNode(this.refs[refKey]);
	        }
	    }, {
	        key: 'handleChange',
	        value: function handleChange(active, data, e) {
	            var t = this;
	            var preActive = t.state.active;
	            t.setState({
	                active: active
	            });
	            t.props.onChange({
	                active: active,
	                preActive: preActive,
	                data: data,
	                e: e
	            });
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _classnames;
	
	            var t = this;
	            return React.createElement(
	                'div',
	                { ref: 'root', className: classnames((_classnames = {}, _defineProperty(_classnames, prefixClass('tab'), true), _defineProperty(_classnames, t.props.type, true), _defineProperty(_classnames, t.props.className, !!t.props.className), _defineProperty(_classnames, "fixed-top", !!t.props.fixedTop), _defineProperty(_classnames, "fixed-bottom", !t.props.fixedTop && !!t.props.fixedBottom), _classnames)) },
	                t._renderHead(),
	                t._renderBody(),
	                t._renderPendant()
	            );
	        }
	    }, {
	        key: '_renderHead',
	        value: function _renderHead() {
	            var t = this;
	            if (t.props.showScroll) {
	                //添加右边icon
	                return React.createElement(
	                    Scroller,
	                    { className: prefixClass('tab-head'), scrollX: true, scrollY: false, ref: 'head' },
	                    t._renderHeadContent(true, t)
	                );
	            } else {
	                return React.createElement(
	                    'div',
	                    { className: prefixClass('tab-head'), ref: 'head' },
	                    t._renderHeadContent(false, t)
	                );
	            }
	        }
	    }, {
	        key: '_renderHeadContent',
	        value: function _renderHeadContent(scroll, t) {
	            var _classnames2;
	
	            return React.createElement(
	                'div',
	                { className: classnames((_classnames2 = {}, _defineProperty(_classnames2, prefixClass('tab-head-scroll'), scroll), _defineProperty(_classnames2, prefixClass('tab-head-container'), true), _defineProperty(_classnames2, prefixClass('CL'), scroll), _defineProperty(_classnames2, prefixClass('FBH'), !scroll), _classnames2)), ref: 'scroll' },
	                React.Children.map(t.props.children, function (child, active) {
	                    var _classnames3;
	
	                    var _className = classnames((_classnames3 = {}, _defineProperty(_classnames3, prefixClass('tab-head-item'), true), _defineProperty(_classnames3, prefixClass('FAC'), true), _defineProperty(_classnames3, prefixClass('FL'), scroll), _defineProperty(_classnames3, prefixClass('FB1'), !scroll), _defineProperty(_classnames3, 'active', t.state.active == active), _classnames3));
	                    return React.createElement(
	                        'div',
	                        { className: _className, key: active, active: active, ref: 'tab_' + active,
	                            onClick: t.handleChange.bind(t, active, child.props.data) },
	                        React.createElement(
	                            'span',
	                            null,
	                            child.props.title
	                        )
	                    );
	                })
	            );
	        }
	    }, {
	        key: '_renderPendant',
	        value: function _renderPendant() {
	            //渲染右边自定义的小零件
	            var t = this;
	            var pendant = t.props.pendant;
	
	            if (pendant && React.isValidElement(pendant)) {
	                return React.cloneElement(pendant, {
	                    role: "pendant"
	                });
	            }
	        }
	    }, {
	        key: '_renderBody',
	        value: function _renderBody() {
	            var t = this;
	            var activeBody = [];
	
	            React.Children.forEach(t.props.children, function (child, active) {
	                var _classnames4;
	
	                var _className = classnames((_classnames4 = {}, _defineProperty(_classnames4, prefixClass('tab-body-item'), true), _defineProperty(_classnames4, prefixClass('hide'), t.state.active !== active), _classnames4));
	                activeBody.push(React.createElement(
	                    'div',
	                    { className: _className, key: active, active: t.state.active === active },
	                    child
	                ));
	            });
	
	            if (t.props.destroyInactiveTabPane) {
	                activeBody = activeBody.filter(function (body) {
	                    return body.props.active;
	                });
	            }
	
	            return React.createElement(
	                'div',
	                { className: prefixClass('tab-body') },
	                activeBody
	            );
	        }
	    }]);
	
	    return Tab;
	}(React.Component);
	
	Tab.defaultProps = {
	    active: 0,
	    type: '',
	    onChange: Context.noop,
	    showScroll: false,
	    destroyInactiveTabPane: false,
	    //固定顶部
	    fixedTop: false,
	    //固定底部
	    fixedBottom: false
	};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	Tab.propTypes = {
	    active: React.PropTypes.number,
	    type: React.PropTypes.oneOf(['', 'brick']),
	    onChange: React.PropTypes.func,
	    showScroll: React.PropTypes.bool,
	    destroyInactiveTabPane: React.PropTypes.bool,
	    pendant: React.PropTypes.element,
	    fixedTop: React.PropTypes.bool,
	    fixedBottom: React.PropTypes.bool
	};
	
	Tab.Item = TabItem;
	Tab.displayName = 'Tab';
	
	module.exports = Tab;
	


/***/ },
/* 229 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames () {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ },
/* 230 */
/***/ function(module, exports) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * Tab item
	 * author: zhangshun
	 * date: 2015-05-22
	 */
	
	var TabItem = function (_React$Component) {
	    _inherits(TabItem, _React$Component);
	
	    function TabItem(props) {
	        _classCallCheck(this, TabItem);
	
	        return _possibleConstructorReturn(this, Object.getPrototypeOf(TabItem).call(this, props));
	    }
	
	    _createClass(TabItem, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(
	                'div',
	                null,
	                this.props.children
	            );
	        }
	    }]);
	
	    return TabItem;
	}(React.Component);
	
	TabItem.defaultProps = {
	    title: '',
	    data: {}
	};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	TabItem.propTypes = {
	    title: React.PropTypes.string,
	    data: React.PropTypes.object
	};
	
	TabItem.displayName = 'TabItem';
	
	module.exports = TabItem;
	


/***/ },
/* 231 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * TabBar Component Style for tingle
	 * @author zhouwenjie
	 *
	 * Copyright 2014-2016, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	module.exports = __webpack_require__(232);
	


/***/ },
/* 232 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * TabBar Component for tingle
	 * @author zhouwenjie
	 *
	 * Copyright 2014-2016, Tingle Team.
	 * All rights reserved.
	 */
	var React = __webpack_require__(2);
	var classnames = __webpack_require__(233);
	var Context = __webpack_require__(116);
	
	var _require = __webpack_require__(121);
	
	var HBox = _require.HBox;
	
	var TabBarItem = __webpack_require__(234);
	
	var TabBar = function (_React$Component) {
	    _inherits(TabBar, _React$Component);
	
	    function TabBar(props) {
	        _classCallCheck(this, TabBar);
	
	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(TabBar).call(this, props));
	
	        _this.state = {
	            activeIndex: props.activeIndex
	        };
	        return _this;
	    }
	
	    _createClass(TabBar, [{
	        key: 'componentWillReceiveProps',
	        value: function componentWillReceiveProps(nextProps) {
	            var t = this;
	            if (nextProps.activeIndex !== t.state.activeIndex) {
	                t.setState({
	                    activeIndex: nextProps.activeIndex
	                });
	            }
	        }
	    }, {
	        key: 'onItemClick',
	        value: function onItemClick(index) {
	            if (index !== this.state.activeIndex) {
	                this.setState({
	                    activeIndex: index
	                });
	                this.props.onChange && this.props.onChange(index);
	            }
	        }
	    }, {
	        key: 'renderItems',
	        value: function renderItems() {
	            var t = this;
	            return React.createElement(
	                HBox,
	                { className: Context.prefixClass('tab-bar-items'), hAlign: 'center', vAlign: 'center' },
	                React.Children.map(t.props.children, function (child, idx) {
	                    return React.createElement(TabBarItem, { key: idx, item: child,
	                        active: idx === t.state.activeIndex,
	                        onClick: t.onItemClick.bind(t, idx)
	                    });
	                })
	            );
	        }
	    }, {
	        key: 'renderContents',
	        value: function renderContents() {
	            var t = this;
	            return React.createElement(
	                'div',
	                { className: Context.prefixClass('tab-bar-contents') },
	                React.Children.map(t.props.children, function (child, idx) {
	                    return React.createElement(
	                        'div',
	                        { key: idx, className: classnames(Context.prefixClass('tab-bar-content'), {
	                                'active': idx === t.state.activeIndex
	                            }) },
	                        child.props.children
	                    );
	                })
	            );
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var t = this;
	            return React.createElement(
	                'div',
	                { ref: 'root', className: classnames(Context.prefixClass('tab-bar'), _defineProperty({}, t.props.className, !!t.props.className)) },
	                t.renderContents(),
	                t.renderItems()
	            );
	        }
	    }]);
	
	    return TabBar;
	}(React.Component);
	
	TabBar.Item = TabBarItem;
	
	TabBar.defaultProps = {
	    activeIndex: 0
	};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	TabBar.propTypes = {
	    className: React.PropTypes.string,
	    activeIndex: React.PropTypes.number
	};
	
	TabBar.displayName = 'TabBar';
	
	module.exports = TabBar;
	


/***/ },
/* 233 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames () {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ },
/* 234 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * TabBar Component for tingle
	 * @author zhouwenjie
	 *
	 * Copyright 2014-2016, Tingle Team.
	 * All rights reserved.
	 */
	var classnames = __webpack_require__(233);
	
	var Context = __webpack_require__(116);
	
	var _require = __webpack_require__(121);
	
	var Box = _require.Box;
	
	var Icon = __webpack_require__(158);
	
	var TabBarItem = function (_React$Component) {
	    _inherits(TabBarItem, _React$Component);
	
	    function TabBarItem(props) {
	        _classCallCheck(this, TabBarItem);
	
	        return _possibleConstructorReturn(this, Object.getPrototypeOf(TabBarItem).call(this, props));
	    }
	
	    _createClass(TabBarItem, [{
	        key: 'render',
	        value: function render() {
	            var t = this;
	            var item = t.props.item;
	            var title = item.props.title;
	            var icon = item.props.icon;
	            return React.createElement(
	                Box,
	                { className: classnames(Context.prefixClass('tab-bar-item'), {
	                        'active': t.props.active
	                    }), onClick: t.props.onClick, flex: 1 },
	                icon ? React.createElement(Icon, { width: 25, height: 25, className: Context.prefixClass('tab-bar-item-icon'), name: icon }) : '',
	                React.createElement(
	                    'span',
	                    { className: Context.prefixClass('tab-bar-item-label') },
	                    title
	                )
	            );
	        }
	    }]);
	
	    return TabBarItem;
	}(React.Component);
	
	TabBarItem.defaultProps = {};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	TabBarItem.propTypes = {
	    className: React.PropTypes.string
	};
	
	TabBarItem.displayName = 'TabBarItem';
	
	module.exports = TabBarItem;
	


/***/ },
/* 235 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * TextareaField Component Style for tingle
	 * @author zhangshun@alipay.com
	 *
	 * Copyright 2014-2016, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	module.exports = __webpack_require__(236);
	


/***/ },
/* 236 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * TextareaField Component for tingle
	 * @author zhangshun@alipay.com
	 *
	 * Copyright 2014-2016, Tingle Team.
	 * All rights reserved.
	 */
	var React = __webpack_require__(2);
	var classnames = __webpack_require__(237);
	var Context = __webpack_require__(116);
	var calculateHeight = __webpack_require__(238);
	var Field = __webpack_require__(177);
	
	var prefixClass = Context.prefixClass;
	
	var TextareaField = function (_React$Component) {
	    _inherits(TextareaField, _React$Component);
	
	    function TextareaField(props) {
	        _classCallCheck(this, TextareaField);
	
	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(TextareaField).call(this, props));
	
	        _this.state = {
	            height: null
	        };
	        return _this;
	    }
	
	    _createClass(TextareaField, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            this._resize();
	        }
	    }, {
	        key: 'componentWillReceiveProps',
	        value: function componentWillReceiveProps(nextProps) {
	            if ('value' in nextProps) {
	                this._resize();
	            }
	        }
	    }, {
	        key: '_resize',
	        value: function _resize() {
	            this.setState(calculateHeight(ReactDOM.findDOMNode(this.refs.textarea), this.props.minRows || this.props.rows, this.props.maxRows));
	        }
	    }, {
	        key: 'handleChange',
	        value: function handleChange(e) {
	            this._resize();
	            this.props.onChange(e.target.value, e);
	        }
	    }, {
	        key: 'handleFocus',
	        value: function handleFocus(e) {
	            this.props.onFocus(e);
	        }
	    }, {
	        key: 'handleBlur',
	        value: function handleBlur(e) {
	            this.props.onBlur(e);
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _classnames;
	
	            var t = this;
	            var _t$props = t.props;
	            var placeholder = _t$props.placeholder;
	            var label = _t$props.label;
	            var readOnly = _t$props.readOnly;
	
	            var style = {
	                height: t.state.height
	            };
	
	            return React.createElement(
	                Field,
	                _extends({}, t.props, { multiLine: true, className: classnames((_classnames = {}, _defineProperty(_classnames, prefixClass('textarea-field'), true), _defineProperty(_classnames, 'readonly', readOnly), _defineProperty(_classnames, t.props.className, !!t.props.className), _classnames)) }),
	                React.createElement('textarea', { ref: 'textarea',
	                    className: prefixClass('textarea-field-content'),
	                    style: style,
	                    placeholder: placeholder,
	                    value: t.props.value,
	                    readOnly: readOnly,
	                    rows: t.props.minRows,
	                    onChange: t.handleChange.bind(t),
	                    onFocus: t.handleFocus.bind(t),
	                    onBlur: t.handleBlur.bind(t) })
	            );
	        }
	    }]);
	
	    return TextareaField;
	}(React.Component);
	
	;
	
	TextareaField.defaultProps = {
	    placeholder: '',
	    onChange: Context.noop,
	    onFocus: Context.noop,
	    onBlur: Context.noop,
	    readOnly: false,
	    minRows: 1,
	    maxRows: 10,
	    value: ''
	};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	TextareaField.propTypes = {
	    value: React.PropTypes.string,
	    placeholder: React.PropTypes.string,
	    onChange: React.PropTypes.func,
	    onFocus: React.PropTypes.func,
	    onBlur: React.PropTypes.func,
	    readOnly: React.PropTypes.bool,
	    minRows: React.PropTypes.number,
	    maxRows: React.PropTypes.number,
	    className: React.PropTypes.string
	};
	
	TextareaField.displayName = 'TextareaField';
	
	module.exports = TextareaField;
	


/***/ },
/* 237 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames () {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ },
/* 238 */
/***/ function(module, exports) {

	'use strict';
	
	var HIDDEN_TEXTAREA_STYLE = ['height: 0', 'visibility: hidden', 'overflow: hidden', 'position: absolute', 'z-index: -1000', 'top: 0', 'right: 0'];
	
	var STYLES = ['letter-spacing', 'line-height', 'padding-top', 'padding-bottom', 'padding-left', 'padding-right', 'font-family', 'font-weight', 'font-size', 'text-transform', 'width', 'border-width', 'box-sizing'];
	
	var shadowTextarea = null;
	
	function getStyleInfo(textarea) {
	    var computedStyle = window.getComputedStyle(textarea);
	    var boxSizing = getPrefixedStyle(computedStyle, 'box-sizing');
	    var heightAdjust = 0;
	    var padding = getStyleNumber(computedStyle, 'padding-top') + getStyleNumber(computedStyle, 'padding-bottom');
	    var border = getStyleNumber(computedStyle, 'border-bottom-width') + getStyleNumber(computedStyle, 'border-top-width');
	    if (boxSizing === 'border-box') heightAdjust += border;else if (boxSizing === 'content-box') heightAdjust -= padding;
	    return {
	        styles: STYLES.map(function (name) {
	            return name + ':' + computedStyle.getPropertyValue(name);
	        }),
	        padding: padding,
	        border: border,
	        heightAdjust: heightAdjust
	    };
	}
	
	function getPrefixedStyle(computedStyle, name) {
	    var prefix = ['-o-', '-ms-', '-moz-', '-webkit-', ''];
	    var tmp = void 0;
	    for (var i = prefix.length; i--;) {
	        if (tmp = computedStyle.getPropertyValue(prefix[i] + name)) return tmp;
	    }return null;
	}
	
	function getStyleNumber(computedStyle, name) {
	    return parseFloat(computedStyle.getPropertyValue(name));
	}
	
	function getSingleRowHeight(textarea) {
	    var tmp = textarea.value;
	    textarea.value = 'x';
	    var result = textarea.scrollHeight;
	    textarea.value = tmp;
	    return result;
	}
	
	module.exports = function calculateHeight(textarea, minRows, maxRows) {
	    if (!shadowTextarea) document.body.appendChild(shadowTextarea = document.createElement('textarea'));
	    var _styleInfo = getStyleInfo(textarea);
	    var styles = _styleInfo.styles;
	    var heightAdjust = _styleInfo.heightAdjust;
	    var padding = _styleInfo.padding;
	    var border = _styleInfo.border;
	
	    shadowTextarea.setAttribute('style', styles.concat(HIDDEN_TEXTAREA_STYLE).join(';'));
	    shadowTextarea.value = textarea.value;
	    var height = shadowTextarea.scrollHeight + heightAdjust;
	    var minHeight = -Infinity;
	    var maxHeight = Infinity;
	
	    if (minRows !== null || maxRows !== null) {
	        var singleRowHeight = getSingleRowHeight(shadowTextarea) - padding;
	        if (minRows !== null) {
	            minHeight = singleRowHeight * minRows + padding + heightAdjust;
	            height = Math.max(minHeight, height);
	        }
	        if (maxRows !== null) {
	            maxHeight = singleRowHeight * maxRows + padding + heightAdjust;
	            height = Math.min(maxHeight, height);
	        }
	    }
	
	    return {
	        height: height,
	        minHeight: minHeight,
	        maxHeight: maxHeight
	    };
	};
	


/***/ },
/* 239 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * TextField Component Style for tingle
	 * @author jiasong.js
	 *
	 * Copyright 2014-2016, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	module.exports = __webpack_require__(240);
	


/***/ },
/* 240 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * TextField Component for tingle
	 * @author
	 *
	 * Copyright 2014-2016, Tingle Team.
	 * All rights reserved.
	 */
	var classnames = __webpack_require__(241);
	var Context = __webpack_require__(116);
	var Field = __webpack_require__(177);
	
	var prefixClass = Context.prefixClass;
	
	var TextField = function (_React$Component) {
	    _inherits(TextField, _React$Component);
	
	    function TextField(props) {
	        _classCallCheck(this, TextField);
	
	        return _possibleConstructorReturn(this, Object.getPrototypeOf(TextField).call(this, props));
	    }
	
	    _createClass(TextField, [{
	        key: 'handleChange',
	        value: function handleChange(e) {
	            var value = this.props.filter(e.target.value);
	            this.props.onChange(value, e);
	        }
	    }, {
	        key: 'handleFocus',
	        value: function handleFocus(e) {
	            var t = this;
	            t.props.onFocus(t.props.value);
	        }
	    }, {
	        key: 'handleBlur',
	        value: function handleBlur(e) {
	            var t = this;
	            t.props.onBlur(t.props.value, e);
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var t = this;
	
	            return React.createElement(
	                Field,
	                _extends({}, t.props, { className: classnames(prefixClass('text-field'), t.props.className, {
	                        readonly: t.props.readOnly
	                    }) }),
	                React.createElement(
	                    'div',
	                    { ref: 'placeholder', className: classnames(prefixClass('omit text-field-placeholder'), _defineProperty({}, prefixClass('DN'), t.props.value !== '' || t.props.readOnly)) },
	                    t.props.placeholder
	                ),
	                React.createElement('input', { ref: 'input', className: prefixClass('text-field-input'),
	                    type: t.props.type, value: t.props.value, readOnly: t.props.readOnly,
	                    onChange: t.handleChange.bind(t),
	                    onFocus: t.handleFocus.bind(t),
	                    onBlur: t.handleBlur.bind(t) })
	            );
	        }
	    }]);
	
	    return TextField;
	}(React.Component);
	
	TextField.defaultProps = {
	    className: '',
	    filter: function filter(v) {
	        return v;
	    },
	    label: '',
	    onChange: Context.noop,
	    onFocus: Context.noop,
	    onBlur: Context.noop,
	    placeholder: '',
	    readOnly: false,
	    type: 'text',
	    value: ''
	};
	
	TextField.propTypes = {
	    className: React.PropTypes.string,
	    filter: React.PropTypes.func,
	    label: React.PropTypes.string,
	    onChange: React.PropTypes.func,
	    onFocus: React.PropTypes.func,
	    onBlur: React.PropTypes.func,
	    placeholder: React.PropTypes.string,
	    readOnly: React.PropTypes.bool,
	    type: React.PropTypes.string
	};
	
	TextField.displayName = 'TextField';
	
	module.exports = TextField;
	


/***/ },
/* 241 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames () {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ },
/* 242 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Toast Component Style for tingle
	 * @author minjie
	 *
	 * Copyright 2014-2016, Tingle Team, Alinw.
	 * All rights reserved.
	 */
	
	module.exports = __webpack_require__(243);
	


/***/ },
/* 243 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * Toast Component for tingle
	 * @author minjie
	 *
	 * Copyright 2014-2016, Tingle Team.
	 * All rights reserved.
	 */
	/* eslint-disable */
	var React = __webpack_require__(2);
	var classnames = __webpack_require__(244);
	
	var _require = __webpack_require__(121);
	
	var VBox = _require.VBox;
	
	var Layer = __webpack_require__(132);
	var Icon = __webpack_require__(158);
	
	var _require2 = __webpack_require__(116);
	
	var prefixClass = _require2.prefixClass;
	var noop = _require2.noop;
	
	
	var iconNames = {
	    success: 'check-round',
	    error: 'cross-round',
	    fail: 'toast-fail',
	    loading: 'toast-loading'
	};
	
	var Toast = function (_React$Component) {
	    _inherits(Toast, _React$Component);
	
	    function Toast(props) {
	        _classCallCheck(this, Toast);
	
	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Toast).call(this, props));
	
	        _this.state = {
	            visible: props.visible,
	            icon: _this.getIconName(props)
	        };
	        return _this;
	    }
	
	    _createClass(Toast, [{
	        key: 'getIconName',
	        value: function getIconName(props) {
	            return props.icon || iconNames[props.type];
	        }
	    }, {
	        key: 'componentWillReceiveProps',
	        value: function componentWillReceiveProps(nextProps) {
	            console.log('new p');
	            this.setState({
	                visible: nextProps.visible,
	                icon: this.getIconName(nextProps)
	            });
	        }
	    }, {
	        key: 'startCountdown',
	        value: function startCountdown() {
	            var t = this;
	            t.timer = setTimeout(function () {
	                t.setState({
	                    visible: false
	                });
	                clearTimeout(t.timer);
	            }, t.props.duration);
	        }
	    }, {
	        key: 'handleDidHide',
	        value: function handleDidHide() {
	            this.props.onDidHide();
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var t = this;
	            var _t$state = t.state;
	            var visible = _t$state.visible;
	            var icon = _t$state.icon;
	            var _t$props = t.props;
	            var className = _t$props.className;
	            var content = _t$props.content;
	            var autoHide = _t$props.autoHide;
	
	            var other = _objectWithoutProperties(_t$props, ['className', 'content', 'autoHide']);
	
	            // 如果可见 且 可自动关闭 则开始倒计时
	
	
	            visible && autoHide && t.startCountdown();
	
	            return React.createElement(
	                Layer,
	                _extends({ ref: 'root' }, other, { className: classnames(prefixClass('toast'), _defineProperty({}, className, !!className)), visible: visible, onDidHide: t.handleDidHide.bind(t) }),
	                React.createElement(
	                    VBox,
	                    { hAlign: 'center' },
	                    icon && React.createElement(Icon, { className: classnames(prefixClass('toast-icon'), _defineProperty({}, icon, !!icon)), name: icon, fill: '#fff' }),
	                    content && React.createElement(
	                        'div',
	                        { className: prefixClass('toast-content') },
	                        content
	                    )
	                )
	            );
	        }
	    }]);
	
	    return Toast;
	}(React.Component);
	
	Toast.defaultProps = {
	    width: 'auto',
	    height: 'auto',
	    hasMask: false,
	    onDidHide: noop,
	    visible: false,
	    autoHide: true,
	    content: '',
	    icon: '',
	    duration: 1500
	};
	
	// http://facebook.github.io/react/docs/reusable-components.html
	Toast.propTypes = {
	    visible: React.PropTypes.bool,
	    hasMask: React.PropTypes.bool,
	    autoHide: React.PropTypes.bool,
	    onDidHide: React.PropTypes.func,
	    width: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.number]),
	    content: React.PropTypes.string,
	    icon: React.PropTypes.string,
	    duration: React.PropTypes.number
	};
	
	var WRAPPER_ID = '__TingleGlobalToast__';
	var doc = document;
	var wrapper = doc.getElementById(WRAPPER_ID);
	if (!wrapper) {
	    wrapper = doc.createElement('div');
	    wrapper.id = WRAPPER_ID;
	    doc.body.appendChild(wrapper);
	}
	ReactDOM.render(React.createElement(Toast, { visible: false }), wrapper);
	
	Toast.show = function (props) {
	    props.visible = true;
	    ReactDOM.render(React.createElement(Toast, props), wrapper);
	};
	
	Toast.hide = function (fn) {
	    ReactDOM.render(React.createElement(Toast, { visible: false, onDidHide: fn }), wrapper);
	};
	
	Toast.displayName = 'Toast';
	
	module.exports = Toast;
	


/***/ },
/* 244 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames () {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ }
/******/ ])
});
;
//# sourceMappingURL=tingle-ui.js.map