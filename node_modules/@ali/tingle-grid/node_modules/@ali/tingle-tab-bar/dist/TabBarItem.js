'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _tingleContext = require('@ali/tingle-context');

var _tingleContext2 = _interopRequireDefault(_tingleContext);

var _tingleBox = require('@ali/tingle-box');

var _tingleIcon = require('@ali/tingle-icon');

var _tingleIcon2 = _interopRequireDefault(_tingleIcon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * TabBar Component for tingle
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author zhouwenjie
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2014-2016, Tingle Team.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * All rights reserved.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


var isUrl = function isUrl(str) {
    return (/\/\/.+/g.test(str)
    );
};
var isArray = function isArray(obj) {
    return Object.prototype.toString.call(obj) === '[object Array]';
};

var TabBarItem = function (_React$Component) {
    _inherits(TabBarItem, _React$Component);

    function TabBarItem(props) {
        _classCallCheck(this, TabBarItem);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(TabBarItem).call(this, props));
    }

    _createClass(TabBarItem, [{
        key: 'renderImgIcon',
        value: function renderImgIcon(src, title) {
            var className = _tingleContext2.default.prefixClass('tab-bar-item-img-icon');
            return React.createElement('img', { className: className, src: src, alt: title });
        }
    }, {
        key: 'renderTingleIcon',
        value: function renderTingleIcon(name) {
            var className = _tingleContext2.default.prefixClass('tab-bar-item-icon');
            return React.createElement(_tingleIcon2.default, { width: 25, height: 25, className: className, name: name });
        }
    }, {
        key: 'renderIcon',
        value: function renderIcon(icon, title, active) {
            if (typeof icon === 'string') {
                if (isUrl(icon)) {
                    return this.renderImgIcon(icon, title);
                }
                return this.renderTingleIcon(icon);
            }

            if (isArray(icon)) {
                return this.renderImgIcon(active ? icon[1] : icon[0], title);
            }
            return null;
        }
    }, {
        key: 'render',
        value: function render() {
            var t = this;
            var item = t.props.item;
            var _item$props = item.props;
            var title = _item$props.title;
            var icon = _item$props.icon;

            var active = t.props.active;
            return React.createElement(
                _tingleBox.Box,
                { className: (0, _classnames2.default)(_tingleContext2.default.prefixClass('tab-bar-item'), {
                        'active': active
                    }), onClick: t.props.onClick, flex: 1
                },
                t.renderIcon(icon, title, active),
                React.createElement(
                    'span',
                    { className: _tingleContext2.default.prefixClass('tab-bar-item-label') },
                    title
                )
            );
        }
    }]);

    return TabBarItem;
}(React.Component);

TabBarItem.displayName = 'TabBarItem';
TabBarItem.defaultProps = {};
TabBarItem.propTypes = {
    className: React.PropTypes.string,
    item: React.PropTypes.element
};
exports.default = TabBarItem;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRhYkJhckl0ZW0uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFPQTs7OztBQUNBOzs7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQSxJQUFNLFFBQVEsU0FBUixLQUFRLENBQUMsR0FBRCxFQUFRO0FBQ2xCLFdBQU8sV0FBVSxJQUFWLENBQWUsR0FBZjtBQUFQO0FBQ0gsQ0FGRDtBQUdBLElBQU0sVUFBVSxTQUFWLE9BQVUsQ0FBQyxHQUFELEVBQVM7QUFDckIsV0FBTyxPQUFPLFNBQVAsQ0FBaUIsUUFBakIsQ0FBMEIsSUFBMUIsQ0FBK0IsR0FBL0IsTUFBd0MsZ0JBQS9DO0FBQ0gsQ0FGRDs7SUFJcUIsVTs7O0FBUWpCLHdCQUFZLEtBQVosRUFBbUI7QUFBQTs7QUFBQSw2RkFDVCxLQURTO0FBRWxCOzs7O3NDQUVhLEcsRUFBSyxLLEVBQU87QUFDdEIsZ0JBQU0sWUFBWSx3QkFBUSxXQUFSLENBQW9CLHVCQUFwQixDQUFsQjtBQUNBLG1CQUFPLDZCQUFLLFdBQVcsU0FBaEIsRUFBMkIsS0FBSyxHQUFoQyxFQUFxQyxLQUFLLEtBQTFDLEdBQVA7QUFDSDs7O3lDQUVnQixJLEVBQU07QUFDbkIsZ0JBQU0sWUFBWSx3QkFBUSxXQUFSLENBQW9CLG1CQUFwQixDQUFsQjtBQUNBLG1CQUFPLDRDQUFNLE9BQU8sRUFBYixFQUFpQixRQUFRLEVBQXpCLEVBQTZCLFdBQVcsU0FBeEMsRUFBbUQsTUFBTSxJQUF6RCxHQUFQO0FBQ0g7OzttQ0FFVSxJLEVBQU0sSyxFQUFPLE0sRUFBUTtBQUM1QixnQkFBSSxPQUFPLElBQVAsS0FBZ0IsUUFBcEIsRUFBOEI7QUFDMUIsb0JBQUksTUFBTSxJQUFOLENBQUosRUFBaUI7QUFDYiwyQkFBTyxLQUFLLGFBQUwsQ0FBbUIsSUFBbkIsRUFBeUIsS0FBekIsQ0FBUDtBQUNIO0FBQ0QsdUJBQU8sS0FBSyxnQkFBTCxDQUFzQixJQUF0QixDQUFQO0FBQ0g7O0FBRUQsZ0JBQUksUUFBUSxJQUFSLENBQUosRUFBbUI7QUFDZix1QkFBTyxLQUFLLGFBQUwsQ0FBbUIsU0FBUyxLQUFLLENBQUwsQ0FBVCxHQUFtQixLQUFLLENBQUwsQ0FBdEMsRUFBK0MsS0FBL0MsQ0FBUDtBQUNIO0FBQ0QsbUJBQU8sSUFBUDtBQUNIOzs7aUNBRVE7QUFDTCxnQkFBTSxJQUFJLElBQVY7QUFDQSxnQkFBTSxPQUFPLEVBQUUsS0FBRixDQUFRLElBQXJCO0FBRkssOEJBR2lCLEtBQUssS0FIdEI7QUFBQSxnQkFHRSxLQUhGLGVBR0UsS0FIRjtBQUFBLGdCQUdTLElBSFQsZUFHUyxJQUhUOztBQUlMLGdCQUFNLFNBQVMsRUFBRSxLQUFGLENBQVEsTUFBdkI7QUFDQSxtQkFDSTtBQUFBO2dCQUFBLEVBQUssV0FBVywwQkFBVyx3QkFBUSxXQUFSLENBQW9CLGNBQXBCLENBQVgsRUFBZ0Q7QUFDNUQsa0NBQVU7QUFEa0QscUJBQWhELENBQWhCLEVBRUksU0FBUyxFQUFFLEtBQUYsQ0FBUSxPQUZyQixFQUU4QixNQUFNO0FBRnBDO2dCQUlLLEVBQUUsVUFBRixDQUFhLElBQWIsRUFBbUIsS0FBbkIsRUFBMEIsTUFBMUIsQ0FKTDtnQkFLSTtBQUFBO29CQUFBLEVBQU0sV0FBVyx3QkFBUSxXQUFSLENBQW9CLG9CQUFwQixDQUFqQjtvQkFBNkQ7QUFBN0Q7QUFMSixhQURKO0FBU0g7Ozs7RUFsRG1DLE1BQU0sUzs7QUFBekIsVSxDQUNWLFcsR0FBYyxZO0FBREosVSxDQUVWLFksR0FBZSxFO0FBRkwsVSxDQUdWLFMsR0FBWTtBQUNmLGVBQVcsTUFBTSxTQUFOLENBQWdCLE1BRFo7QUFFZixVQUFNLE1BQU0sU0FBTixDQUFnQjtBQUZQLEM7a0JBSEYsVSIsImZpbGUiOiJUYWJCYXJJdGVtLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUYWJCYXIgQ29tcG9uZW50IGZvciB0aW5nbGVcbiAqIEBhdXRob3IgemhvdXdlbmppZVxuICpcbiAqIENvcHlyaWdodCAyMDE0LTIwMTYsIFRpbmdsZSBUZWFtLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqL1xuaW1wb3J0IGNsYXNzbmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgQ29udGV4dCBmcm9tICdAYWxpL3RpbmdsZS1jb250ZXh0JztcbmltcG9ydCB7Qm94fSBmcm9tICdAYWxpL3RpbmdsZS1ib3gnO1xuaW1wb3J0IEljb24gZnJvbSAnQGFsaS90aW5nbGUtaWNvbic7XG5cbmNvbnN0IGlzVXJsID0gKHN0cik9PiB7XG4gICAgcmV0dXJuIC9cXC9cXC8uKy9nLnRlc3Qoc3RyKTtcbn07XG5jb25zdCBpc0FycmF5ID0gKG9iaikgPT4ge1xuICAgIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwob2JqKSA9PT0gJ1tvYmplY3QgQXJyYXldJztcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRhYkJhckl0ZW0gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIHN0YXRpYyBkaXNwbGF5TmFtZSA9ICdUYWJCYXJJdGVtJztcbiAgICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge307XG4gICAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICAgICAgY2xhc3NOYW1lOiBSZWFjdC5Qcm9wVHlwZXMuc3RyaW5nLFxuICAgICAgICBpdGVtOiBSZWFjdC5Qcm9wVHlwZXMuZWxlbWVudCxcbiAgICB9O1xuXG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgIH1cblxuICAgIHJlbmRlckltZ0ljb24oc3JjLCB0aXRsZSkge1xuICAgICAgICBjb25zdCBjbGFzc05hbWUgPSBDb250ZXh0LnByZWZpeENsYXNzKCd0YWItYmFyLWl0ZW0taW1nLWljb24nKTtcbiAgICAgICAgcmV0dXJuIDxpbWcgY2xhc3NOYW1lPXtjbGFzc05hbWV9IHNyYz17c3JjfSBhbHQ9e3RpdGxlfS8+O1xuICAgIH1cblxuICAgIHJlbmRlclRpbmdsZUljb24obmFtZSkge1xuICAgICAgICBjb25zdCBjbGFzc05hbWUgPSBDb250ZXh0LnByZWZpeENsYXNzKCd0YWItYmFyLWl0ZW0taWNvbicpO1xuICAgICAgICByZXR1cm4gPEljb24gd2lkdGg9ezI1fSBoZWlnaHQ9ezI1fSBjbGFzc05hbWU9e2NsYXNzTmFtZX0gbmFtZT17bmFtZX0vPlxuICAgIH1cblxuICAgIHJlbmRlckljb24oaWNvbiwgdGl0bGUsIGFjdGl2ZSkge1xuICAgICAgICBpZiAodHlwZW9mIGljb24gPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICBpZiAoaXNVcmwoaWNvbikpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5yZW5kZXJJbWdJY29uKGljb24sIHRpdGxlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0aGlzLnJlbmRlclRpbmdsZUljb24oaWNvbik7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoaXNBcnJheShpY29uKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMucmVuZGVySW1nSWNvbihhY3RpdmUgPyBpY29uWzFdIDogaWNvblswXSwgdGl0bGUpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgY29uc3QgdCA9IHRoaXM7XG4gICAgICAgIGNvbnN0IGl0ZW0gPSB0LnByb3BzLml0ZW07XG4gICAgICAgIGNvbnN0IHt0aXRsZSwgaWNvbn0gPSBpdGVtLnByb3BzO1xuICAgICAgICBjb25zdCBhY3RpdmUgPSB0LnByb3BzLmFjdGl2ZTtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxCb3ggY2xhc3NOYW1lPXtjbGFzc25hbWVzKENvbnRleHQucHJlZml4Q2xhc3MoJ3RhYi1iYXItaXRlbScpLCB7XG4gICAgICAgICAgICAgICAgJ2FjdGl2ZSc6IGFjdGl2ZVxuICAgICAgICAgICAgfSl9IG9uQ2xpY2s9e3QucHJvcHMub25DbGlja30gZmxleD17MX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICB7dC5yZW5kZXJJY29uKGljb24sIHRpdGxlLCBhY3RpdmUpfVxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT17Q29udGV4dC5wcmVmaXhDbGFzcygndGFiLWJhci1pdGVtLWxhYmVsJyl9Pnt0aXRsZX08L3NwYW4+XG4gICAgICAgICAgICA8L0JveD5cbiAgICAgICAgKTtcbiAgICB9XG59XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
