/**
 * Rate Component for tingle
 * @author quanyun.mqy
 *
 * Copyright 2014-2016, Tingle Team.
 * All rights reserved.
 */
import classnames from 'classnames';
import { unitize } from '@ali/tingle-style';
import Context from '@ali/tingle-context';
import Icon from '@ali/tingle-icon';

class Rate extends React.Component {

    static displayName = 'Rate';

    static defaultProps = {
        totalScore: 5,
        score: 0,
        height: 30,
        gap: 10,
        onChange: () => {},
    };

    // http://facebook.github.io/react/docs/reusable-components.html
    static propTypes = {
        className: React.PropTypes.string,
        totalScore: React.PropTypes.number,
        score: React.PropTypes.number,
        height: React.PropTypes.oneOfType([
            React.PropTypes.number,
            React.PropTypes.string,
        ]),
        gap: React.PropTypes.oneOfType([
            React.PropTypes.number,
            React.PropTypes.string,
        ]),
        onChange: React.PropTypes.func,
    };

    handleItemClick(v) {
        this.props.onChange(v);
    }

    render() {
        const t = this;
        let items = [];
        for (let i = 1; i <= t.props.totalScore; i++) {
            const item = (
                <div className={classnames(Context.prefixClass('rate-item'), {
                    't-DIB': true,
                    't-PR': true,
                    active: i <= t.props.score,
                })} key={i} onClick={t.handleItemClick.bind(t, i)} style={{
                    width: unitize(t.props.height),
                    height: unitize(t.props.height),
                    paddingLeft: unitize(t.props.gap / 2),
                    paddingRight: unitize(t.props.gap / 2),
                }}
                >
                    <Icon name="star" fill="#dbdbdb" className={classnames(Context.prefixClass('rate-icon'))}/>
                </div>
            );
            items.push(item);
        }
        return (
            <div ref="root" className={classnames(Context.prefixClass('rate'), {
                't-FBH': true,
                [t.props.className]: !!t.props.className,
            })}>
                {items}
            </div>
        );
    }
}

export default Rate;
