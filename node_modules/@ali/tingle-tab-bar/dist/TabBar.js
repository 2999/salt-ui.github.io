'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * TabBar Component for tingle
 * @author zhouwenjie
 *
 * Copyright 2014-2016, Tingle Team.
 * All rights reserved.
 */
var React = require('react');
var classnames = require('classnames');
var Context = require('@ali/tingle-context');

var _require = require('@ali/tingle-box'),
    HBox = _require.HBox;

var TabBarItem = require('./TabBarItem');

var TabBar = function (_React$Component) {
  _inherits(TabBar, _React$Component);

  function TabBar(props) {
    _classCallCheck(this, TabBar);

    var _this = _possibleConstructorReturn(this, (TabBar.__proto__ || Object.getPrototypeOf(TabBar)).call(this, props));

    _this.state = {
      activeIndex: props.activeIndex
    };
    return _this;
  }

  _createClass(TabBar, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var t = this;
      var nextActiveIndex = nextProps.activeIndex;
      if (nextActiveIndex !== t.state.activeIndex) {
        t.setActiveIndex(nextActiveIndex);
      }
    }
  }, {
    key: 'onItemClick',
    value: function onItemClick(index) {
      if (index !== this.state.activeIndex) {
        this.setActiveIndex(index);
      }
    }
  }, {
    key: 'setActiveIndex',
    value: function setActiveIndex(index) {
      var t = this;
      t.setState({
        activeIndex: index
      }, function () {
        t.props.onChange(index);
      });
    }
  }, {
    key: 'renderItems',
    value: function renderItems() {
      var t = this;
      return React.createElement(
        HBox,
        {
          className: Context.prefixClass('tab-bar-items'),
          style: t.props.tabBarStyle,
          hAlign: 'center',
          vAlign: 'center'
        },
        React.Children.map(t.props.children, function (child, idx) {
          if (!child) {
            return null;
          }
          return React.createElement(TabBarItem, {
            key: idx,
            item: child,
            active: idx === t.state.activeIndex,
            onClick: t.onItemClick.bind(t, idx)
          });
        })
      );
    }
  }, {
    key: 'renderContents',
    value: function renderContents() {
      var t = this;
      var contents = React.Children.map(t.props.children, function (child, idx) {
        if (!child || !child.props.children) {
          return null;
        }
        var className = classnames(Context.prefixClass('tab-bar-content'), {
          'active': idx === t.state.activeIndex
        });
        return React.createElement(
          'div',
          { key: idx, className: className },
          child.props && child.props.children
        );
      });
      var noContents = !contents || contents.every(function (content) {
        return content == null;
      });
      if (noContents) {
        return null;
      }
      return React.createElement(
        'div',
        { className: Context.prefixClass('tab-bar-contents') },
        contents
      );
    }
  }, {
    key: 'render',
    value: function render() {
      var t = this;
      var className = classnames(Context.prefixClass('tab-bar'), _defineProperty({}, t.props.className, !!t.props.className));
      return React.createElement(
        'div',
        { ref: 'root', className: className },
        t.renderContents(),
        t.renderItems()
      );
    }
  }]);

  return TabBar;
}(React.Component);

TabBar.displayName = 'TabBar';
TabBar.propTypes = {
  className: React.PropTypes.string,
  activeIndex: React.PropTypes.number,
  onChange: React.PropTypes.func,
  tabBarStyle: React.PropTypes.object
};
TabBar.defaultProps = {
  activeIndex: 0,
  onChange: function onChange() {}
};

TabBar.Item = TabBarItem;

module.exports = TabBar;
//# sourceMappingURL=data:application/json;base64,
