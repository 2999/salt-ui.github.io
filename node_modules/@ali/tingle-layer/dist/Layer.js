'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Layer Component, all model tips's base backbone
 * (Dialog, loading...) for tinglejs
 * @author gnosaij
 *
 * Copyright 2014-2016, Tingle Team, Alinw.
 * All rights reserved.
 */
/* eslint-disable */
var React = require('react');
var classnames = require('classnames');

var _require = require('@ali/tingle-context');

var prefixClass = _require.prefixClass;
var noop = _require.noop;

var Mask = require('@ali/tingle-mask');

var Layer = function (_React$Component) {
    _inherits(Layer, _React$Component);

    function Layer(props) {
        _classCallCheck(this, Layer);

        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Layer).call(this, props));

        _this.state = {
            visible: props.visible
        };
        return _this;
    }

    _createClass(Layer, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            var t = this;
            var visible = nextProps.visible;
            if (visible === false && t.props.onWillHide() === false) {
                return;
            }
            this.setState({
                visible: nextProps.visible
            }, visible ? t.props.onDidShow : t.props.onDidHide);
        }
    }, {
        key: 'getStyle',
        value: function getStyle() {
            var t = this;
            var visible = t.state.visible;
            var fullScreen = t.props.fullScreen;


            var hasWidth = 'width' in t.props;
            var hasHeight = 'height' in t.props;
            var hasTop = 'top' in t.props;
            var hasBottom = 'bottom' in t.props;
            var hasLeft = 'left' in t.props;
            var hasRight = 'right' in t.props;

            var style = {
                width: fullScreen || !hasWidth ? '100%' : t.props.width,
                height: fullScreen ? '100%' : hasHeight ? t.props.height : 'auto'
            };

            if (fullScreen) {
                style.top = 0;
                style.left = 0;
            } else {
                if (hasTop) {
                    style.top = t.props.top;
                } else if (hasBottom) {
                    style.bottom = t.props.bottom;
                } else {
                    style.top = '50%';
                    style['WebkitTransform'] = (style['WebkitTransform'] || '') + ' translateY(-50%)';
                    style['transform'] = (style['transform'] || '') + ' translateY(-50%)';
                }

                if (hasLeft) {
                    style.left = t.props.left;
                } else if (hasRight) {
                    style.right = t.props.right;
                } else {
                    style.left = '50%';
                    style['WebkitTransform'] = (style['WebkitTransform'] || '') + ' translateX(-50%)';
                    style['transform'] = (style['transform'] || '') + ' translateX(-50%)';
                }
            }

            style.zIndex = t.props.zIndex;
            style.display = visible ? 'block' : 'none';

            return style;
        }
    }, {
        key: 'handleMaskClick',
        value: function handleMaskClick() {
            var t = this;

            // 如果禁止了点击Mask关闭Layer, 则Mask的onWillHide必须返回false
            if (t.props.maskCloseable === false || t.props.onWillHide() === false) {
                return false;
            }
            t.setState({
                visible: false
            }, function () {
                t.props.onDidHide();
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var t = this;
            var _t$props = t.props;
            var className = _t$props.className;
            var style = _t$props.style;

            var other = _objectWithoutProperties(_t$props, ['className', 'style']);

            return React.createElement(
                'div',
                null,
                React.createElement(
                    'div',
                    _extends({}, other, { className: classnames(prefixClass('layer'), _defineProperty({}, className, !!className)), style: t.getStyle() }),
                    t.props.children
                ),
                this.props.hasMask && React.createElement(Mask, { zIndex: this.props.zIndex - 1,
                    onWillHide: (t.props.onMaskClick || t.handleMaskClick).bind(t),
                    closeable: true, visible: t.state.visible, opacity: 0.6 })
            );
        }
    }]);

    return Layer;
}(React.Component);

//zIndex no defalut value, we use auto generate way to handle it


Layer.defaultProps = {
    onDidShow: noop,
    onWillHide: noop,
    onDidHide: noop,
    maskOpacity: 0.6,
    maskCloseable: false,
    hasMask: true,
    visible: false,
    zIndex: 1000,
    fullScreen: false
};

// http://facebook.github.io/react/docs/reusable-components.html
Layer.propTypes = {
    onDidShow: React.PropTypes.func,
    onWillHide: React.PropTypes.func,
    onMaskClick: React.PropTypes.func,
    onDidHide: React.PropTypes.func,
    maskOpacity: React.PropTypes.number,
    maskCloseable: React.PropTypes.bool,
    hasMask: React.PropTypes.bool,
    visible: React.PropTypes.bool,
    zIndex: React.PropTypes.number,
    fullScreen: React.PropTypes.bool
    // more: top, left, bottom, right, width, height
};

Layer.displayName = "Layer";

module.exports = Layer;
//# sourceMappingURL=data:application/json;base64,
