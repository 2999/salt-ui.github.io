'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
* Button Component for tingle
* @author cm
*
* Copyright 2014-2016, Tingle Team, Alinw.
* All rights reserved.
*/
var React = require('react');
var classnames = require('classnames');
var Context = require('@ali/tingle-context');

var prefixClass = function prefixClass(name) {
    return Context.prefixClass ? Context.prefixClass(name) : 't-' + name;
};

var Button = function (_React$Component) {
    _inherits(Button, _React$Component);

    function Button(props) {
        _classCallCheck(this, Button);

        return _possibleConstructorReturn(this, (Button.__proto__ || Object.getPrototypeOf(Button)).call(this, props));
    }

    _createClass(Button, [{
        key: 'handleClick',
        value: function handleClick(evt) {
            if (!this.props.disabled) {
                this.props.onClick(evt);
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _classSet;

            var size = this.props.size;

            var type = this.props.type;
            var primary = type === 'primary';
            var secondary = type === 'secondary';
            var danger = type === 'danger';
            var text = type === 'text';
            var minor = type === 'minor';

            var disabled = !!this.props.disabled;
            var classSet = (_classSet = {}, _defineProperty(_classSet, '' + prefixClass('FBH FBAC FBJC'), true), _defineProperty(_classSet, this.props.className, !!this.props.className), _defineProperty(_classSet, '' + prefixClass('button'), true), _defineProperty(_classSet, 'disabled', disabled), _defineProperty(_classSet, '' + prefixClass('button-small'), size === 'small'), _defineProperty(_classSet, '' + prefixClass('button-large'), size === 'large'), _defineProperty(_classSet, '' + prefixClass('button-primary'), primary && !disabled), _defineProperty(_classSet, '' + prefixClass('button-secondary'), secondary && !disabled), _defineProperty(_classSet, '' + prefixClass('button-minor'), minor && !disabled), _defineProperty(_classSet, '' + prefixClass('button-danger'), danger && !disabled), _defineProperty(_classSet, '' + prefixClass('button-text'), text), _classSet);

            var style = this.props.style;

            return React.createElement(
                'div',
                { className: classnames(classSet),
                    disabled: disabled,
                    style: style,
                    onClick: this.handleClick.bind(this) },
                this.props.children
            );
        }
    }]);

    return Button;
}(React.Component);

Button.defaultProps = {
    size: 'medium',
    type: 'primary',
    disabled: false,
    style: {},
    onClick: function onClick() {}
};

// http://facebook.github.io/react/docs/reusable-components.html
Button.propTypes = {
    size: React.PropTypes.oneOf(['medium', 'large', 'small']),
    type: React.PropTypes.oneOf(['primary', 'secondary', 'minor', 'danger', 'text']),
    disabled: React.PropTypes.bool,
    style: React.PropTypes.object,
    onClick: React.PropTypes.func
};

Button.displayName = 'Button';

module.exports = Button;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkJ1dHRvbi5qcyJdLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJjbGFzc25hbWVzIiwiQ29udGV4dCIsInByZWZpeENsYXNzIiwibmFtZSIsIkJ1dHRvbiIsInByb3BzIiwiZXZ0IiwiZGlzYWJsZWQiLCJvbkNsaWNrIiwic2l6ZSIsInR5cGUiLCJwcmltYXJ5Iiwic2Vjb25kYXJ5IiwiZGFuZ2VyIiwidGV4dCIsIm1pbm9yIiwiY2xhc3NTZXQiLCJjbGFzc05hbWUiLCJzdHlsZSIsImhhbmRsZUNsaWNrIiwiYmluZCIsImNoaWxkcmVuIiwiQ29tcG9uZW50IiwiZGVmYXVsdFByb3BzIiwicHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwib25lT2YiLCJib29sIiwib2JqZWN0IiwiZnVuYyIsImRpc3BsYXlOYW1lIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7Ozs7Ozs7QUFPQSxJQUFNQSxRQUFRQyxRQUFRLE9BQVIsQ0FBZDtBQUNBLElBQU1DLGFBQWFELFFBQVEsWUFBUixDQUFuQjtBQUNBLElBQU1FLFVBQVVGLFFBQVEscUJBQVIsQ0FBaEI7O0FBRUEsSUFBSUcsY0FBYyxTQUFkQSxXQUFjLENBQVNDLElBQVQsRUFBZTtBQUM3QixXQUFPRixRQUFRQyxXQUFSLEdBQXNCRCxRQUFRQyxXQUFSLENBQW9CQyxJQUFwQixDQUF0QixHQUFrRCxPQUFPQSxJQUFoRTtBQUNILENBRkQ7O0lBSU1DLE07OztBQUVGLG9CQUFZQyxLQUFaLEVBQW1CO0FBQUE7O0FBQUEsK0dBQ1RBLEtBRFM7QUFFbEI7Ozs7b0NBRVdDLEcsRUFBSztBQUNiLGdCQUFJLENBQUMsS0FBS0QsS0FBTCxDQUFXRSxRQUFoQixFQUEwQjtBQUN0QixxQkFBS0YsS0FBTCxDQUFXRyxPQUFYLENBQW1CRixHQUFuQjtBQUNIO0FBQ0o7OztpQ0FFUTtBQUFBOztBQUNMLGdCQUFJRyxPQUFPLEtBQUtKLEtBQUwsQ0FBV0ksSUFBdEI7O0FBRUEsZ0JBQUlDLE9BQU8sS0FBS0wsS0FBTCxDQUFXSyxJQUF0QjtBQUNBLGdCQUFJQyxVQUFVRCxTQUFTLFNBQXZCO0FBQ0EsZ0JBQUlFLFlBQVlGLFNBQVMsV0FBekI7QUFDQSxnQkFBSUcsU0FBU0gsU0FBUyxRQUF0QjtBQUNBLGdCQUFJSSxPQUFPSixTQUFTLE1BQXBCO0FBQ0EsZ0JBQUlLLFFBQVFMLFNBQVMsT0FBckI7O0FBRUEsZ0JBQUlILFdBQVcsQ0FBQyxDQUFDLEtBQUtGLEtBQUwsQ0FBV0UsUUFBNUI7QUFDQSxnQkFBSVMsNERBQ0lkLFlBQVksZUFBWixDQURKLEVBQ3FDLElBRHJDLDhCQUVDLEtBQUtHLEtBQUwsQ0FBV1ksU0FGWixFQUV3QixDQUFDLENBQUMsS0FBS1osS0FBTCxDQUFXWSxTQUZyQyxtQ0FHSWYsWUFBWSxRQUFaLENBSEosRUFHOEIsSUFIOUIsOEJBSUEsVUFKQSxFQUlZSyxRQUpaLG1DQUtJTCxZQUFZLGNBQVosQ0FMSixFQUtvQ08sU0FBUyxPQUw3QyxtQ0FNSVAsWUFBWSxjQUFaLENBTkosRUFNb0NPLFNBQVMsT0FON0MsbUNBT0lQLFlBQVksZ0JBQVosQ0FQSixFQU9zQ1MsV0FBVyxDQUFDSixRQVBsRCxtQ0FRSUwsWUFBWSxrQkFBWixDQVJKLEVBUXdDVSxhQUFhLENBQUNMLFFBUnRELG1DQVNJTCxZQUFZLGNBQVosQ0FUSixFQVNvQ2EsU0FBUyxDQUFDUixRQVQ5QyxtQ0FVSUwsWUFBWSxlQUFaLENBVkosRUFVcUNXLFVBQVUsQ0FBQ04sUUFWaEQsbUNBV0lMLFlBQVksYUFBWixDQVhKLEVBV21DWSxJQVhuQyxhQUFKOztBQWNBLGdCQUFJSSxRQUFRLEtBQUtiLEtBQUwsQ0FBV2EsS0FBdkI7O0FBRUEsbUJBQ0k7QUFBQTtBQUFBLGtCQUFLLFdBQVdsQixXQUFXZ0IsUUFBWCxDQUFoQjtBQUNJLDhCQUFVVCxRQURkO0FBRUksMkJBQU9XLEtBRlg7QUFHSSw2QkFBUyxLQUFLQyxXQUFMLENBQWlCQyxJQUFqQixDQUFzQixJQUF0QixDQUhiO0FBSUsscUJBQUtmLEtBQUwsQ0FBV2dCO0FBSmhCLGFBREo7QUFRSDs7OztFQS9DZ0J2QixNQUFNd0IsUzs7QUFrRDNCbEIsT0FBT21CLFlBQVAsR0FBc0I7QUFDbEJkLFVBQU0sUUFEWTtBQUVsQkMsVUFBTSxTQUZZO0FBR2xCSCxjQUFVLEtBSFE7QUFJbEJXLFdBQU8sRUFKVztBQUtsQlYsV0FMa0IscUJBS1IsQ0FBRTtBQUxNLENBQXRCOztBQVFBO0FBQ0FKLE9BQU9vQixTQUFQLEdBQW1CO0FBQ2ZmLFVBQU1YLE1BQU0yQixTQUFOLENBQWdCQyxLQUFoQixDQUFzQixDQUFDLFFBQUQsRUFBVyxPQUFYLEVBQW9CLE9BQXBCLENBQXRCLENBRFM7QUFFZmhCLFVBQU1aLE1BQU0yQixTQUFOLENBQWdCQyxLQUFoQixDQUFzQixDQUFDLFNBQUQsRUFBWSxXQUFaLEVBQXlCLE9BQXpCLEVBQWtDLFFBQWxDLEVBQTRDLE1BQTVDLENBQXRCLENBRlM7QUFHZm5CLGNBQVVULE1BQU0yQixTQUFOLENBQWdCRSxJQUhYO0FBSWZULFdBQU9wQixNQUFNMkIsU0FBTixDQUFnQkcsTUFKUjtBQUtmcEIsYUFBU1YsTUFBTTJCLFNBQU4sQ0FBZ0JJO0FBTFYsQ0FBbkI7O0FBUUF6QixPQUFPMEIsV0FBUCxHQUFxQixRQUFyQjs7QUFFQUMsT0FBT0MsT0FBUCxHQUFpQjVCLE1BQWpCIiwiZmlsZSI6IkJ1dHRvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuKiBCdXR0b24gQ29tcG9uZW50IGZvciB0aW5nbGVcbiogQGF1dGhvciBjbVxuKlxuKiBDb3B5cmlnaHQgMjAxNC0yMDE2LCBUaW5nbGUgVGVhbSwgQWxpbncuXG4qIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4qL1xuY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuY29uc3QgY2xhc3NuYW1lcyA9IHJlcXVpcmUoJ2NsYXNzbmFtZXMnKTtcbmNvbnN0IENvbnRleHQgPSByZXF1aXJlKCdAYWxpL3RpbmdsZS1jb250ZXh0Jyk7XG5cbmxldCBwcmVmaXhDbGFzcyA9IGZ1bmN0aW9uKG5hbWUpIHtcbiAgICByZXR1cm4gQ29udGV4dC5wcmVmaXhDbGFzcyA/IENvbnRleHQucHJlZml4Q2xhc3MobmFtZSkgOiAndC0nICsgbmFtZVxufVxuXG5jbGFzcyBCdXR0b24gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuXG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgIH1cblxuICAgIGhhbmRsZUNsaWNrKGV2dCkge1xuICAgICAgICBpZiAoIXRoaXMucHJvcHMuZGlzYWJsZWQpIHtcbiAgICAgICAgICAgIHRoaXMucHJvcHMub25DbGljayhldnQpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICBsZXQgc2l6ZSA9IHRoaXMucHJvcHMuc2l6ZVxuXG4gICAgICAgIGxldCB0eXBlID0gdGhpcy5wcm9wcy50eXBlXG4gICAgICAgIGxldCBwcmltYXJ5ID0gdHlwZSA9PT0gJ3ByaW1hcnknXG4gICAgICAgIGxldCBzZWNvbmRhcnkgPSB0eXBlID09PSAnc2Vjb25kYXJ5J1xuICAgICAgICBsZXQgZGFuZ2VyID0gdHlwZSA9PT0gJ2RhbmdlcidcbiAgICAgICAgbGV0IHRleHQgPSB0eXBlID09PSAndGV4dCdcbiAgICAgICAgbGV0IG1pbm9yID0gdHlwZSA9PT0gJ21pbm9yJ1xuXG4gICAgICAgIGxldCBkaXNhYmxlZCA9ICEhdGhpcy5wcm9wcy5kaXNhYmxlZFxuICAgICAgICBsZXQgY2xhc3NTZXQgPSB7XG4gICAgICAgICAgICBbYCR7cHJlZml4Q2xhc3MoJ0ZCSCBGQkFDIEZCSkMnKX1gXTogdHJ1ZSxcbiAgICAgICAgICAgIFt0aGlzLnByb3BzLmNsYXNzTmFtZV06ICEhdGhpcy5wcm9wcy5jbGFzc05hbWUsXG4gICAgICAgICAgICBbYCR7cHJlZml4Q2xhc3MoJ2J1dHRvbicpfWBdOiB0cnVlLFxuICAgICAgICAgICAgJ2Rpc2FibGVkJzogZGlzYWJsZWQsXG4gICAgICAgICAgICBbYCR7cHJlZml4Q2xhc3MoJ2J1dHRvbi1zbWFsbCcpfWBdOiBzaXplID09PSAnc21hbGwnLFxuICAgICAgICAgICAgW2Ake3ByZWZpeENsYXNzKCdidXR0b24tbGFyZ2UnKX1gXTogc2l6ZSA9PT0gJ2xhcmdlJyxcbiAgICAgICAgICAgIFtgJHtwcmVmaXhDbGFzcygnYnV0dG9uLXByaW1hcnknKX1gXTogcHJpbWFyeSAmJiAhZGlzYWJsZWQsXG4gICAgICAgICAgICBbYCR7cHJlZml4Q2xhc3MoJ2J1dHRvbi1zZWNvbmRhcnknKX1gXTogc2Vjb25kYXJ5ICYmICFkaXNhYmxlZCxcbiAgICAgICAgICAgIFtgJHtwcmVmaXhDbGFzcygnYnV0dG9uLW1pbm9yJyl9YF06IG1pbm9yICYmICFkaXNhYmxlZCxcbiAgICAgICAgICAgIFtgJHtwcmVmaXhDbGFzcygnYnV0dG9uLWRhbmdlcicpfWBdOiBkYW5nZXIgJiYgIWRpc2FibGVkLFxuICAgICAgICAgICAgW2Ake3ByZWZpeENsYXNzKCdidXR0b24tdGV4dCcpfWBdOiB0ZXh0XG4gICAgICAgIH1cblxuICAgICAgICBsZXQgc3R5bGUgPSB0aGlzLnByb3BzLnN0eWxlO1xuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Y2xhc3NuYW1lcyhjbGFzc1NldCl9XG4gICAgICAgICAgICAgICAgZGlzYWJsZWQ9e2Rpc2FibGVkfVxuICAgICAgICAgICAgICAgIHN0eWxlPXtzdHlsZX1cbiAgICAgICAgICAgICAgICBvbkNsaWNrPXt0aGlzLmhhbmRsZUNsaWNrLmJpbmQodGhpcyl9PlxuICAgICAgICAgICAgICAgIHt0aGlzLnByb3BzLmNoaWxkcmVufVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIClcbiAgICB9XG59XG5cbkJ1dHRvbi5kZWZhdWx0UHJvcHMgPSB7XG4gICAgc2l6ZTogJ21lZGl1bScsXG4gICAgdHlwZTogJ3ByaW1hcnknLFxuICAgIGRpc2FibGVkOiBmYWxzZSxcbiAgICBzdHlsZToge30sXG4gICAgb25DbGljaygpIHt9XG59XG5cbi8vIGh0dHA6Ly9mYWNlYm9vay5naXRodWIuaW8vcmVhY3QvZG9jcy9yZXVzYWJsZS1jb21wb25lbnRzLmh0bWxcbkJ1dHRvbi5wcm9wVHlwZXMgPSB7XG4gICAgc2l6ZTogUmVhY3QuUHJvcFR5cGVzLm9uZU9mKFsnbWVkaXVtJywgJ2xhcmdlJywgJ3NtYWxsJ10pLFxuICAgIHR5cGU6IFJlYWN0LlByb3BUeXBlcy5vbmVPZihbJ3ByaW1hcnknLCAnc2Vjb25kYXJ5JywgJ21pbm9yJywgJ2RhbmdlcicsICd0ZXh0J10pLFxuICAgIGRpc2FibGVkOiBSZWFjdC5Qcm9wVHlwZXMuYm9vbCxcbiAgICBzdHlsZTogUmVhY3QuUHJvcFR5cGVzLm9iamVjdCxcbiAgICBvbkNsaWNrOiBSZWFjdC5Qcm9wVHlwZXMuZnVuY1xufTtcblxuQnV0dG9uLmRpc3BsYXlOYW1lID0gJ0J1dHRvbic7XG5cbm1vZHVsZS5leHBvcnRzID0gQnV0dG9uO1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
